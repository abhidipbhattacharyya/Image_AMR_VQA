# ::id train2014~COCO_train2014_000000435451
# ::doc_file train2014~COCO_train2014_000000435451
# ::tok A man is riding a brown horse down a street . <next_sent> The horse is pulling a cart with a man in a white hat riding in it . <next_sent> Another man is riding a brown horse behind the cart . <next_sent> There are also two trucks on the street , one behind the cart and the other behind the horses .
(d / document
   :snt1 (s1.r / ride-01
               :ARG0 (s1.m / man)
               :ARG1 (s1.h / horse
                           :mod (s1.b / brown))
               :direction (s1.d / down)
               :op1 (s1.s / street))
   :snt2 (s2.p / pull-01
               :ARG0 (s2.h2 / horse
                            :same-as s1.h)
               :ARG1 (s2.c / cart)
               :accompanier (s2.r / ride-01
                                  :ARG0 (s2.m / man
                                              :mod (s2.h / hat
                                                         :ARG1-of (s2.w / white-03)))
                                  :ARG1 s2.c))
   :snt3 (s3.r / ride-01
               :ARG0 (s3.m / man
                           :mod (s3.a / another))
               :ARG1 (s3.h / horse
                           :ARG1-of (s3.b2 / brown-01))
               :location (s3.b / behind
                               :op1 (s3.c / cart
                                          :same-as s2.r)))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.t / truck
                           :domain (s4.a2 / and
                                          :op1 (s4.b2 / behind
                                                      :op1 (s4.c / cart
                                                                 :same-as s2.r))
                                          :op2 (s4.t2 / truck
                                                      :location (s4.b3 / behind
                                                                       :op1 (s4.h / horse))
                                                      :mod (s4.o / other)))
                           :mod (s4.a / also)
                           :op1 s4.b2
                           :quant "1"
                           :quant "2")
               :ARG2 (s4.s / street
                           :same-as s1.s)))