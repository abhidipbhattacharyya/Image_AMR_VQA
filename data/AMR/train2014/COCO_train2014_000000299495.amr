# ::id train2014~COCO_train2014_000000299495
# ::doc_file train2014~COCO_train2014_000000299495
# ::tok A large brown bear is sitting on a rock , looking down . <next_sent> Another bear is sitting on a rock behind him , looking up . <next_sent> The first bear is on the left side of the image , while the second bear is on the right side .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.s / sit-01
                          :ARG1 (s1.b / bear
                                      :mod (s1.b2 / brown)
                                      :mod (s1.l / large))
                          :ARG2 (s1.r / rock))
               :op2 (s1.l2 / look-01
                           :ARG0 s1.b
                           :ARG1 (s1.d / down)))
   :snt2 (s2.a / and
               :op1 (s2.s / sit-01
                          :ARG1 (s2.b / bear
                                      :mod (s2.a2 / another))
                          :ARG2 (s2.r / rock
                                      :location (s2.b2 / behind
                                                       :op1 (s2.h / he
                                                                  :same-as s1.b))))
               :op2 (s2.l / look-01
                          :ARG0 s2.b
                          :ARG1 (s2.u / up)))
   :snt3 (s3.c / contrast-01
               :ARG1 (s3.b / be-located-at-91
                           :ARG1 (s3.b3 / bear
                                        :ord (s3.o / ordinal-entity
                                                   :value "1")
                                        :same-as s1.b)
                           :ARG2 (s3.s / side
                                       :ARG1-of (s3.l / left-20)
                                       :part-of (s3.i / image)))
               :ARG2 (s3.b2 / be-located-at-91
                            :ARG1 (s3.b4 / bear
                                         :ord (s3.o2 / ordinal-entity
                                                     :value "2")
                                         :same-as s2.b)
                            :ARG2 s3.s
                            :ARG3 (s3.s2 / side
                                         :ARG1-of (s3.r / right-04)))))