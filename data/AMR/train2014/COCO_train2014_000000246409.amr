# ::id train2014~COCO_train2014_000000246409
# ::doc_file train2014~COCO_train2014_000000246409
# ::tok A bottle of champagne is placed on a toaster oven , with the cork sticking out . <next_sent> The toaster oven is white and is located on a counter . <next_sent> There are also two cups on the counter , one near the toaster oven and the other further away .
(d / document
   :snt1 (s1.p / place-01
               :ARG1 (s1.b / bottle
                           :consist-of (s1.c / champagne))
               :ARG2 (s1.o / oven
                           :mod (s1.t / toaster))
               :manner (s1.s / stick-out-02
                             :ARG1 (s1.c2 / cork)))
   :snt2 (s2.a / and
               :op1 (s2.w / white-03
                          :ARG1 (s2.o / oven
                                      :mod (s2.t / toaster)
                                      :same-as s1.o))
               :op2 (s2.b / be-located-at-91
                          :ARG1 s2.o
                          :ARG2 (s2.c / counter)))
   :snt3 (s3.a2 / and
                :op1 (s3.b / be-located-at-91
                           :ARG1 (s3.c2 / cup
                                        :ARG1-of (s3.n / near-02
                                                       :ARG2 (s3.o / oven
                                                                   :mod (s3.t / toaster)
                                                                   :same-as s1.o))
                                        :ARG2-of (s3.i / include-91)
                                        :ARG1-of s3.i
                                        :ARG2-of (s3.i2 / include-91
                                                        :ARG1 (s3.c3 / cup)
                                                        :ARG2 (s3.f / far
                                                                    :ARG2-of (s3.h / have-degree-91
                                                                                   :ARG1 s3.c3
                                                                                   :ARG3 (s3.m / more))
                                                                    :location (s3.a3 / away)))
                                        :mod (s3.a / also)
                                        :quant "2")
                           :ARG2 (s3.c / counter
                                       :same-as s2.c))))