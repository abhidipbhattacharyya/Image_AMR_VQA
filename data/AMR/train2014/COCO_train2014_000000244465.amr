# ::id train2014~COCO_train2014_000000244465
# ::doc_file train2014~COCO_train2014_000000244465
# ::tok A large pepperoni pizza is sitting in a box on a table . <next_sent> The pizza is cut into slices and has a plastic pizza server on top . <next_sent> The pizza is placed on a white table and is surrounded by a few other items . <next_sent> There is a microwave on the left side of the table and a sink on the right side . <next_sent> A knife is also visible on the table .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.p2 / pizza
                            :mod (s1.p / pepperoni)
                            :mod (s1.l / large))
               :ARG2 (s1.b / box
                           :location (s1.t / table)))
   :snt2 (s2.a / and
               :op1 (s2.c / cut-01
                          :ARG1 (s2.p / pizza
                                      :same-as s1.p2)
                          :ARG2 (s2.s2 / slice))
               :op2 (s2.h / have-03
                          :ARG0 s2.p
                          :ARG1 (s2.s / server
                                      :location (s2.t / top)
                                      :mod (s2.p2 / plastic)
                                      :mod s2.p)))
   :snt3 (s3.a / and
               :op1 (s3.p2 / place-01
                           :ARG1 (s3.p / pizza
                                       :same-as s1.p2)
                           :ARG2 (s3.t / table
                                       :ARG1-of (s3.w / white-03)
                                       :same-as s1.t))
               :op2 (s3.s / surround-01
                          :ARG1 (s3.i / item
                                      :quant (s3.f / few)
                                      :mod (s3.o / other))
                          :ARG2 s3.p))
   :snt4 (s4.a / and
               :op1 (s4.m / microwave
                          :location (s4.s / side
                                          :ARG1-of (s4.l / left-20)
                                          :part-of (s4.t / table
                                                         :part (s4.s2 / side
                                                                      :ARG1-of (s4.r / right-04))
                                                         :same-as s1.t)))
               :op2 (s4.s3 / sink
                           :location s4.s2))
   :snt5 (s5.p / possible-01
               :ARG1 (s5.s / see-01
                           :ARG1 (s5.k / knife)
                           :location (s5.t / table
                                           :same-as s1.t))
               :mod (s5.a / also)))