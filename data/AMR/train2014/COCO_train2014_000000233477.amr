# ::id train2014~COCO_train2014_000000233477
# ::doc_file train2014~COCO_train2014_000000233477
# ::tok A red double decker bus is driving down a street , passing cars and a truck . <next_sent> The bus is in the middle of the street , and the cars are behind it . <next_sent> There are two cars on the left side of the bus and one on the right side . <next_sent> A truck is also visible on the left side of the bus .
(d / document
   :snt1 (s1.d3 / drive-01
                :ARG0 (s1.b / bus
                            :ARG1-of (s1.r / red-02)
                            :mod (s1.d / double-decker))
                :ARG1 (s1.s / street)
                :direction (s1.d2 / down)
                :time-of (s1.p / pass-03
                               :ARG1 (s1.a / and
                                           :op1 (s1.c / car)
                                           :op2 (s1.t / truck))))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.b4 / bus
                                       :same-as s1.b)
                          :ARG2 (s2.m / middle
                                      :part-of (s2.s / street
                                                     :same-as s1.s)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.c / car
                                       :same-as s1.c)
                           :ARG2 (s2.b3 / behind
                                        :op1 s2.b4)))
   :snt3 (s3.a / and
               :op1 (s3.c / car
                          :location (s3.s / side
                                          :ARG1-of (s3.l / left-20)
                                          :part-of (s3.b / bus
                                                         :same-as s1.b))
                          :quant "2")
               :op2 (s3.c2 / car
                           :location (s3.s2 / side
                                            :ARG1-of (s3.r / right-04))
                           :quant "1"))
   :snt4 (s4.p / possible-01
               :ARG1 (s4.s / see-01
                           :ARG1 (s4.t / truck
                                       :same-as s1.t)
                           :location (s4.s2 / side
                                            :ARG1-of (s4.l / left-20)
                                            :part-of (s4.b / bus
                                                           :same-as s1.b)
                                            :same-as s3.s))
               :mod (s4.a / also)))