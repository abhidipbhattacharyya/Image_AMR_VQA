# ::id train2014~COCO_train2014_000000264663
# ::doc_file train2014~COCO_train2014_000000264663
# ::tok A kitchen counter with a sink and a window above it . <next_sent> The sink is made of stainless steel and is next to a dishwasher . <next_sent> The counter has a bunch of fruits on it , including bananas and apples . <next_sent> There are also a few bottles and a bowl on the counter .
(d / document
   :snt1 (s1.c / counter
               :ARG0-of (s1.h / have-03
                              :ARG1 (s1.a2 / and
                                           :op1 (s1.s / sink)
                                           :op2 (s1.w / window
                                                      :location (s1.a / above))))
               :location (s1.k / kitchen)
               :op1-of s1.a)
   :snt2 (s2.a / and
               :op1 (s2.m / make-01
                          :ARG1 (s2.s / sink
                                      :same-as s1.s)
                          :ARG2 (s2.s3 / steel
                                       :mod (s2.s2 / stainless)))
               :op2 (s2.b / be-located-at-91
                          :ARG1 s2.s
                          :ARG2 (s2.n / next-to
                                      :op1 (s2.p / person
                                                 :ARG0-of (s2.w / wash-01)))))
   :snt3 (s3.b2 / be-located-at-91
                :ARG1 (s3.f / fruit
                            :quant (s3.b3 / bunch)
                            :ARG2-of (s3.i / include-01
                                           :ARG1 (s3.a / and
                                                       :op1 (s3.b / banana)
                                                       :op2 (s3.a2 / apple))))
                :ARG2 (s3.c / counter
                            :same-as s1.s))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.a2 / and
                            :op1 (s4.f / few
                                       :op1 (s4.v / volume-quantity
                                                  :unit (s4.b2 / bottle)
                                                  :quant "1"))
                            :op2 (s4.b3 / bowl))
               :ARG2 (s4.c / counter
                           :same-as s1.s)
               :mod (s4.a / also)))