# ::id train2014~COCO_train2014_000000035551
# ::doc_file train2014~COCO_train2014_000000035551
# ::tok A train is traveling down the tracks with several cars behind it . <next_sent> The train is blue and black and is pulling several cars behind it . <next_sent> The cars are red , blue , and green . <next_sent> The train is on the left side of the image and the cars are on the right side .
(d / document
   :snt1 (s1.t3 / travel-01
                :ARG0 (s1.t2 / train)
                :accompanier (s1.c / car
                                   :quant (s1.s / several)
                                   :location (s1.b / behind
                                                   :op1 s1.t2))
                :direction (s1.d / down)
                :path (s1.t / track))
   :snt2 (s2.a2 / and
                :op1 (s2.a / and
                           :domain (s2.t / train
                                         :same-as s1.t2)
                           :op1 (s2.b3 / blue)
                           :op2 (s2.b2 / black-04))
                :op2 (s2.p / pull-01
                           :ARG0 s2.t
                           :ARG1 (s2.c / car
                                       :quant (s2.s / several))
                           :ARG2 (s2.b / behind
                                       :op1 s2.t)))
   :snt3 (s3.a / and
               :op1 (s3.c / car
                          :ARG1-of (s3.r / red-02)
                          :same-as s2.c)
               :op2 (s3.c2 / car
                           :mod (s3.b / blue))
               :op3 (s3.c3 / car
                           :ARG1-of (s3.g / green-02)))
   :snt4 (s4.a / and
               :op1 (s4.b / be-located-at-91
                          :ARG1 (s4.t / train
                                      :same-as s1.t2)
                          :ARG2 (s4.s / side
                                      :ARG1-of (s4.l / left-20)
                                      :part-of (s4.i / image)))
               :op2 (s4.b2 / be-located-at-91
                           :ARG1 (s4.c / car
                                       :same-as s2.c)
                           :ARG2 s4.s
                           :ARG3 (s4.s2 / side
                                        :ARG1-of (s4.r / right-04)))))