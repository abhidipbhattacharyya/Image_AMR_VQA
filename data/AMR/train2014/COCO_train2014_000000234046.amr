# ::id train2014~COCO_train2014_000000234046
# ::doc_file train2014~COCO_train2014_000000234046
# ::tok A group of three motorcycles are riding down a road . <next_sent> The motorcycles are in a line , with the first one being the closest to the camera , the second one in the middle , and the third one further back . <next_sent> The motorcycles are traveling down a street with trees on the side .
(d / document
   :snt1 (s1.r / ride-01
               :ARG0 (s1.g / group
                           :consist-of (s1.m / motorcycle
                                             :quant "3"))
               :ARG1 (s1.r2 / road)
               :direction (s1.d / down))
   :snt2 (s2.l / line
               :domain (s2.m3 / motorcycle
                              :ARG1-of (s2.h / have-degree-91
                                             :ARG2 (s2.c2 / close-10
                                                          :ARG1 s2.m3
                                                          :ARG2 (s2.c / camera))
                                             :ARG3 (s2.m2 / most)))
               :example (s2.a / and
                              :op1 (s2.m4 / motorcycle
                                          :location (s2.m / middle)
                                          :ord (s2.o / ordinal-entity
                                                     :value "1")
                                          :op2-of s2.a
                                          :value "2"
                                          :same-as s1.g)
                              :op3 (s2.m5 / motorcycle
                                          :location (s2.b / back
                                                          :extent (s2.f / further))
                                          :ord (s2.o2 / ordinal-entity
                                                      :value "3"))))
   :snt3 (s3.t / travel-01
               :ARG0 (s3.m / motorcycle
                           :same-as s1.g)
               :ARG1 (s3.s2 / street
                            :ARG0-of (s3.h / have-03
                                           :ARG1 (s3.t2 / tree
                                                        :location (s3.s / side)))
                            :same-as s1.r2)
               :direction (s3.d / down)))