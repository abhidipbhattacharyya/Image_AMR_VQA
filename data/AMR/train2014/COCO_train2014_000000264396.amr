# ::id train2014~COCO_train2014_000000264396
# ::doc_file train2014~COCO_train2014_000000264396
# ::tok A train is traveling on a bridge over a body of water . <next_sent> The train is blue and white and is moving across the bridge . <next_sent> The water is calm and the bridge is gray . <next_sent> There are also a few cars on the bridge , one near the center and two others closer to the right side .
(d / document
   :snt1 (s1.t2 / travel-01
                :ARG0 (s1.t / train)
                :ARG1 (s1.b2 / bridge
                             :location (s1.o / over
                                             :op1 (s1.b / body
                                                        :consist-of (s1.w / water)))))
   :snt2 (s2.a3 / and
                :op1 (s2.a2 / and
                            :domain (s2.t / train
                                          :same-as s1.t)
                            :op1 (s2.b / blue)
                            :op2 (s2.w / white-03))
                :op2 (s2.m / move-01
                           :ARG1 s2.t
                           :ARG2 (s2.a / across
                                       :op1 (s2.b2 / bridge
                                                   :same-as s1.b2))))
   :snt3 (s3.a / and
               :op1 (s3.c / calm-03
                          :ARG1 (s3.w / water
                                      :same-as s1.b))
               :op2 (s3.g / gray-02
                          :ARG1 (s3.b / bridge
                                      :same-as s1.b2)))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.c / car
                           :quant (s4.f / few)
                           :example (s4.a2 / and
                                           :op1 (s4.c2 / car
                                                       :ARG1-of (s4.n / near-02
                                                                      :ARG2 (s4.c4 / center))
                                                       :quant "1")
                                           :op2 (s4.c3 / car
                                                       :ARG1-of (s4.h / have-degree-91
                                                                      :ARG2 (s4.c5 / close-10
                                                                                   :ARG1 s4.c2
                                                                                   :ARG2 (s4.s / side
                                                                                               :ARG1-of (s4.r / right-04)))
                                                                      :ARG3 (s4.m / more))
                                                       :mod (s4.o / other)
                                                       :quant "2"))
                           :mod (s4.a / also))
               :ARG2 (s4.b2 / bridge
                            :same-as s1.b2)))