# ::id train2014~COCO_train2014_000000468852
# ::doc_file train2014~COCO_train2014_000000468852
# ::tok A table with a tray of food on it . <next_sent> The tray has a cake and a fork on it . <next_sent> There are two people sitting at the table , one on the left and one on the right . <next_sent> There are also two wine glasses on the table , one on the left and one on the right .
(d / document
   :snt1 (s1.t / table
               :ARG2-of (s1.b / be-located-at-91
                              :ARG1 (s1.t2 / tray
                                           :consist-of (s1.f / food))))
   :snt2 (s2.h / have-03
               :ARG0 (s2.t / tray
                           :same-as s1.b)
               :ARG1 (s2.a / and
                           :op1 (s2.c / cake)
                           :op2 (s2.f / fork)))
   :snt3 (s3.s / sit-01
               :ARG1 (s3.p / person
                           :ARG1-of (s3.m / mean-01
                                          :ARG2 (s3.a / and
                                                      :op1 s3.p
                                                      :op1 (s3.p2 / person
                                                                  :ARG1-of (s3.l / left-19)
                                                                  :quant "1")
                                                      :op2 (s3.r / right-08)))
                           :quant "2")
               :ARG2 (s3.t / table
                           :same-as s1.t))
   :snt4 (s4.a2 / and
                :op1 (s4.g / glass
                           :location (s4.t / table
                                           :same-as s1.t)
                           :mod (s4.w / wine)
                           :mod (s4.a / also)
                           :quant "2")
                :op2 (s4.g3 / glass
                            :location (s4.r / right-08)
                            :quant "1")
                :rel (s4.g2 / glass
                            :ARG1-of (s4.l / left-19
                                           :same-as s3.l)
                            :quant "1")))