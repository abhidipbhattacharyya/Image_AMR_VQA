# ::id train2014~COCO_train2014_000000493601
# ::doc_file train2014~COCO_train2014_000000493601
# ::tok A wooden table holds a total of 6 slices of bread . <next_sent> Each slice has a dollop of cream cheese spread on top . <next_sent> The slices are arranged in a way that they are all visible , with some overlapping . <next_sent> A spoon is placed on the table , next to one of the slices .
(d / document
   :snt1 (s1.h / hold-01
               :ARG0 (s1.t / table
                           :consist-of (s1.w / wood))
               :ARG1 (s1.s / slice
                           :ARG2-of (s1.t2 / total-01)
                           :consist-of (s1.b / bread)
                           :quant "6"))
   :snt2 (s2.h / have-03
               :ARG0 (s2.s / slice
                           :mod (s2.e / each))
               :ARG1 (s2.t / thing
                           :ARG2-of (s2.s2 / spread-03
                                           :ARG1 (s2.c / cheese
                                                       :quant (s2.d / dollop)
                                                       :mod (s2.c2 / cream))
                                           :location (s2.t2 / top))))
   :snt3 (s3.a2 / arrange-01
                :ARG1 (s3.s2 / slice
                             :mod (s3.a / all)
                             :same-as s1.b)
                :manner (s3.p / possible-01
                              :ARG1 (s3.s / see-01
                                          :ARG1 (s3.s3 / slice
                                                       :quant (s3.s4 / some)
                                                       :ARG1-of (s3.o / overlap-01)))))
   :snt4 (s4.p / place-01
               :ARG1 (s4.s3 / spoon)
               :ARG2 (s4.t / table
                           :location-of (s4.n / next-to
                                              :op1 (s4.s / slice
                                                         :ARG1-of (s4.i / include-91
                                                                        :ARG2 (s4.s2 / slice
                                                                                     :same-as s1.b))
                                                         :quant "1"))
                           :same-as s1.t)))