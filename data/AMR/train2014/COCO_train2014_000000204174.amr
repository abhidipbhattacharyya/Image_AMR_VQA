# ::id train2014~COCO_train2014_000000204174
# ::doc_file train2014~COCO_train2014_000000204174
# ::tok A bunch of apples and oranges are arranged on a counter . <next_sent> The apples are red and yellow , and are placed next to each other . <next_sent> The oranges are green and are positioned behind the apples . <next_sent> There are also a couple of cups on the counter , one near the left edge and the other near the top left corner .
(d / document
   :snt1 (s1.a3 / arrange-01
                :ARG1 (s1.a / and
                            :quant (s1.b / bunch)
                            :op1 (s1.a2 / apple)
                            :op2 (s1.o / orange))
                :ARG2 (s1.c / counter))
   :snt2 (s2.a2 / and
                :op1 (s2.a / and
                           :op1 (s2.a3 / apple
                                       :ARG1-of (s2.r / red-02)
                                       :same-as s1.a2)
                           :op2 (s2.a4 / apple
                                       :ARG1-of (s2.y / yellow-02)))
                :op2 (s2.p / place-01
                           :ARG1 s2.a
                           :ARG2 (s2.n / next-to
                                       :op1 (s2.o / other
                                                  :mod (s2.e / each)))))
   :snt3 (s3.a / and
               :op1 (s3.g / green-02
                          :ARG1 (s3.o / orange
                                      :same-as s1.o))
               :op2 (s3.p / position-01
                          :ARG1 s3.o
                          :ARG2 (s3.b / behind
                                      :op1 (s3.a2 / apple
                                                  :same-as s1.a2))))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.c4 / cup
                            :quant (s4.c3 / couple)
                            :example (s4.a2 / and
                                            :op2 (s4.c5 / cup
                                                        :ARG1-of (s4.n / near-02
                                                                       :ARG2 (s4.e / edge
                                                                                   :ARG1-of (s4.l / left-20)))
                                                        :ARG1-of (s4.n2 / near-02
                                                                        :ARG2 (s4.c / corner
                                                                                    :ARG1-of (s4.l2 / left-20)
                                                                                    :mod (s4.t / top)))
                                                        :quant "1"))
                            :op1-of s4.a2
                            :mod (s4.a / also))
               :ARG2 (s4.c2 / counter
                            :same-as s1.c)))