# ::id train2014~COCO_train2014_000000133837
# ::doc_file train2014~COCO_train2014_000000133837
# ::tok A sheep is standing in the grass behind a wire fence . <next_sent> The fence is made of wire and is attached to a post . <next_sent> The sheep is looking over the fence and appears to be curious about its surroundings . <next_sent> There are other sheep in the background , but they are not as close to the fence as the main sheep .
(d / document
   :snt1 (s1.s2 / stand-01
                :ARG1 (s1.s / sheep)
                :ARG2 (s1.g / grass
                            :location (s1.b / behind
                                            :op1 (s1.f / fence
                                                       :mod (s1.w / wire)))))
   :snt2 (s2.a / and
               :op1 (s2.m / make-01
                          :ARG1 (s2.f / fence
                                      :same-as s1.f)
                          :ARG2 (s2.w / wire))
               :op2 (s2.a2 / attach-01
                           :ARG1 s2.f
                           :ARG2 (s2.p / post)))
   :snt3 (s3.a / and
               :op1 (s3.l / look-01
                          :ARG0 (s3.s / sheep
                                      :same-as s1.s)
                          :ARG1 (s3.o / over
                                      :op1 (s3.f / fence
                                                 :same-as s1.f)))
               :op2 (s3.a2 / appear-02
                           :ARG1 (s3.c / curious-01
                                       :ARG0 (s3.t / thing
                                                   :ARG1-of (s3.s2 / surround-01
                                                                   :ARG2 s3.s))
                                       :ARG1 s3.s)))
   :snt4 (s4.h / have-concession-91
               :ARG1 (s4.s / sheep
                           :location (s4.b / background)
                           :mod (s4.o / other))
               :ARG2 (s4.h2 / have-degree-91
                            :ARG1 s4.s
                            :ARG2 (s4.c / close-10
                                        :ARG1 s4.s
                                        :ARG2 (s4.f / fence
                                                    :same-as s1.f))
                            :ARG3 (s4.e / equal)
                            :ARG4 (s4.s2 / sheep
                                         :mod (s4.m / main)
                                         :same-as s1.s)
                            :polarity "-")))