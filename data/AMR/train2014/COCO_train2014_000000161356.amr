# ::id train2014~COCO_train2014_000000161356
# ::doc_file train2014~COCO_train2014_000000161356
# ::tok A display case filled with a variety of pastries including donuts , cakes , and pies . <next_sent> The donuts are in different shapes and sizes , with some having sprinkles on top . <next_sent> The cakes are of different shapes and sizes , with some having frosting and others being plain . <next_sent> The pies are also of various sizes and shapes , with some having a crust . <next_sent> The display case is filled with a wide assortment of baked goods , making it a tempting sight for anyone with a sweet tooth .
(d / document
   :snt1 (s1.c2 / case
                :ARG1-of (s1.d / display-01)
                :ARG1-of (s1.f / fill-01
                               :ARG2 (s1.a / absolute
                                           :ARG2-of (s1.i / include-01
                                                          :ARG1 (s1.a2 / and
                                                                       :op1 (s1.d2 / donut)
                                                                       :op2 (s1.c / cake)
                                                                       :op3 (s1.a3 / apple)))
                                           :mod (s1.v / variety))))
   :snt2 (s2.a / and
               :ARG1-of (s2.d / differ-02)
               :example (s2.h / have-03
                              :ARG0 (s2.s3 / some)
                              :ARG1 (s2.s4 / sprinkle-01
                                           :location (s2.t / top)))
               :op1 (s2.s / shape-01
                          :ARG1 (s2.d2 / donut
                                       :same-as s1.d2))
               :op2 (s2.s2 / size
                           :poss s2.d2))
   :snt3 (s3.a / and
               :op1 (s3.s / shape-01
                          :ARG1 (s3.c / cake))
               :op2 (s3.d / differ-02)
               :op3 (s3.s2 / size
                           :poss (s3.c2 / cake
                                        :quant (s3.s3 / some)
                                        :ARG0-of (s3.h / have-03
                                                       :ARG1 (s3.a2 / and
                                                                    :op1 (s3.p / plain
                                                                               :domain s3.c2)
                                                                    :op2 (s3.i / ice)))
                                        :mod (s3.o / other))))
   :snt4 (s4.a3 / and
                :op1 (s4.a2 / and
                            :mod (s4.v / various)
                            :mod (s4.a / also)
                            :op1 (s4.s2 / size
                                        :poss (s4.a4 / apple))
                            :op2 (s4.s / shape-01
                                       :ARG1 (s4.f / food-dish
                                                   :mod (s4.s3 / some))))
                :op2 (s4.h / have-03
                           :ARG0 s4.f
                           :ARG1 (s4.c / crust)))
   :snt5 (s5.f / fill-01
               :ARG0-of (s5.m / make-02
                              :ARG1 (s5.s / sight
                                          :ARG0-of (s5.t / tempt-01
                                                         :ARG1 (s5.a / anyone
                                                                     :ARG0-of (s5.h / have-03
                                                                                    :ARG1 (s5.t2 / tooth
                                                                                                 :ARG1-of (s5.s2 / sweet-05)))))
                                          :domain (s5.c / case
                                                        :ARG2-of (s5.d / display-01)
                                                        :ARG1-of s5.f
                                                        :same-as s1.c2)))
               :ARG2 (s5.a2 / assortment
                            :ARG1-of (s5.w / wide-02)
                            :consist-of (s5.g / good
                                              :ARG1-of (s5.b / bake-01)))))