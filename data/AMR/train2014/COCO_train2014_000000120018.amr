# ::id train2014~COCO_train2014_000000120018
# ::doc_file train2014~COCO_train2014_000000120018
# ::tok The refrigerator is full of food and drinks . <next_sent> There are several bottles , a couple of oranges , and a carton of almond milk . <next_sent> The refrigerator is stocked with a variety of items , including a few bottles of juice , a carton of almond milk , and a few oranges .
(d / document
   :snt1 (s1.f / fill-01
               :ARG1 (s1.r / refrigerator)
               :ARG2 (s1.a / and
                           :op1 (s1.f2 / food)
                           :op2 (s1.t / thing
                                      :ARG1-of (s1.d / drink-01))))
   :snt2 (s2.a2 / and
                :op1 (s2.b / bottle
                           :quant (s2.s / several))
                :op2 (s2.o / orange
                           :quant (s2.c2 / couple))
                :op3 (s2.c / carton
                           :consist-of (s2.m / milk
                                             :mod (s2.a / almond))
                           :quant "1"))
   :snt3 (s3.s / stock-01
               :ARG1 (s3.r / refrigerator
                           :same-as s1.r)
               :ARG2 (s3.i2 / item
                            :ARG2-of (s3.i / include-91
                                           :ARG1 (s3.a2 / and
                                                        :op1 (s3.j / juice
                                                                   :quant (s3.b / bottle
                                                                                :quant (s3.f / few)))
                                                        :op2 (s3.c / carton
                                                                   :ARG0-of (s3.c2 / contain-01
                                                                                   :ARG1 (s3.m / milk
                                                                                               :mod (s3.a / almond)))
                                                                   :same-as s2.c)
                                                        :op3 (s3.o / orange
                                                                   :quant (s3.f2 / few))))
                            :mod (s3.v / variety))))