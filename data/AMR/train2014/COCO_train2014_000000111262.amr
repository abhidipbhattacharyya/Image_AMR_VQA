# ::id train2014~COCO_train2014_000000111262
# ::doc_file train2014~COCO_train2014_000000111262
# ::tok Two men are wearing blue aprons and working in a kitchen . <next_sent> One man is pouring a blue substance into a bowl , while the other man is preparing food on the counter . <next_sent> There are two bowls , one containing the blue substance and another containing food . <next_sent> A spoon is also visible on the counter .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.w / wear-01
                          :ARG0 (s1.m / man
                                      :ARG0-of (s1.g / govern-01)
                                      :quant "2")
                          :ARG1 (s1.s / suit
                                      :mod (s1.b / blue)))
               :op2 (s1.w2 / work-01
                           :ARG0 s1.m
                           :ARG1 (s1.k / kitchen)))
   :snt2 (s2.a / and
               :op1 (s2.p / pour-01
                          :ARG0 (s2.m / man
                                      :mod (s2.o / one))
                          :ARG1 (s2.s / substance
                                      :mod (s2.b / blue))
                          :ARG2 (s2.b2 / bowl))
               :op2 (s2.p2 / prepare-01
                           :ARG0 (s2.m2 / man
                                        :mod (s2.o2 / other))
                           :ARG1 (s2.f / food)
                           :location (s2.c / counter)))
   :snt3 (s3.a / and
               :op1 (s3.p / pound
                          :quant "2")
               :op2 (s3.p2 / pound
                           :ARG0-of (s3.c2 / contain-01
                                           :ARG1 (s3.f / food))
                           :mod (s3.a2 / another)
                           :part (s3.o / one
                                       :ARG0-of (s3.c / contain-01
                                                      :ARG1 (s3.s / substance
                                                                  :mod (s3.b / blue)
                                                                  :same-as s2.s)))))
   :snt4 (s4.p / possible-01
               :ARG1 (s4.s / see-01
                           :ARG1 (s4.s2 / spoon)
                           :location (s4.c / counter
                                           :same-as s2.c))
               :mod (s4.a / also)))