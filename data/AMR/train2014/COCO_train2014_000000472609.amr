# ::id train2014~COCO_train2014_000000472609
# ::doc_file train2014~COCO_train2014_000000472609
# ::tok A large sandwich with meat and lettuce is served on a white plate . <next_sent> Two toothpicks are stuck in the sandwich . <next_sent> The plate is placed on a dining table . <next_sent> There are also two cups on the table , one near the top right corner and the other near the top left corner .
(d / document
   :snt1 (s1.s2 / serve-02
                :ARG1 (s1.s / sandwich
                            :ARG0-of (s1.h / have-03
                                           :ARG1 (s1.a / and
                                                       :op1 (s1.m / meat)
                                                       :op2 (s1.l2 / lettuce)))
                            :mod (s1.l / large))
                :location (s1.p / plate
                                :ARG1-of (s1.w / white-03)))
   :snt2 (s2.s2 / stick-01
                :ARG1 (s2.t / tooth
                            :quant "2")
                :ARG2 (s2.s / sandwich
                            :same-as s1.s))
   :snt3 (s3.p / place-01
               :ARG1 (s3.p2 / plate
                            :same-as s1.p)
               :ARG2 (s3.t / table
                           :mod (s3.d / dine-01)))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.c3 / cup
                            :ARG2-of (s4.i / include-91
                                           :ARG1 (s4.a2 / and
                                                        :op1 (s4.n / near-02
                                                                   :ARG1 (s4.c4 / cup
                                                                                :mod (s4.o / other
                                                                                           :op2 (s4.n2 / near-02
                                                                                                       :ARG1 s4.c4
                                                                                                       :ARG2 (s4.c2 / corner
                                                                                                                    :ARG1-of (s4.l / left-20)
                                                                                                                    :mod (s4.t3 / top)))))
                                                                   :ARG2 (s4.c / corner
                                                                               :ARG1-of (s4.r / right-04)
                                                                               :mod (s4.t2 / top)))))
                            :mod (s4.a / also)
                            :quant "1"
                            :quant "2")
               :ARG2 (s4.t / table
                           :same-as s3.t)))