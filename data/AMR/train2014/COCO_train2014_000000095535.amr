# ::id train2014~COCO_train2014_000000095535
# ::doc_file train2014~COCO_train2014_000000095535
# ::tok Two men are sitting at a counter in a restaurant . <next_sent> They are both wearing ties . <next_sent> One man is wearing a white shirt and the other is wearing a black shirt . <next_sent> The men are sitting next to each other and facing each other . <next_sent> There are multiple cups on the counter , one near the left man and another near the right man . <next_sent> A bottle is also visible on the counter .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.m / man
                           :quant "2")
               :ARG2 (s1.c / counter
                           :location (s1.r / restaurant)))
   :snt2 (s2.w / wear-01
               :ARG0 (s2.t / they
                           :mod (s2.b / both)
                           :same-as s1.m)
               :ARG1 (s2.t2 / tie-01))
   :snt3 (s3.a / and
               :op1 (s3.w / wear-01
                          :ARG0 (s3.m / man
                                      :mod (s3.o / one))
                          :ARG1 (s3.s / shirt
                                      :ARG1-of (s3.w3 / white-03)))
               :op2 (s3.w2 / wear-01
                           :ARG0 (s3.m2 / man
                                        :mod (s3.o2 / other))
                           :ARG1 (s3.s2 / shirt
                                        :ARG1-of (s3.b / black-04))))
   :snt4 (s4.a / and
               :op1 (s4.s / sit-01
                          :ARG1 (s4.m / man
                                      :same-as s1.m)
                          :ARG2 (s4.n / next-to))
               :op2 (s4.f / face-01
                          :ARG0 s4.m
                          :ARG1 s4.m))
   :snt5 (s5.b / be-located-at-91
               :ARG1 (s5.c2 / cup
                            :quant (s5.m3 / multiple)
                            :ARG2-of (s5.i / include-91
                                           :ARG1 (s5.a / and
                                                       :op1 (s5.n / near-02
                                                                  :ARG1 (s5.c3 / cup
                                                                               :mod (s5.a2 / another
                                                                                           :op2 (s5.n2 / near-02
                                                                                                       :ARG1 s5.c3
                                                                                                       :ARG2 (s5.m2 / man
                                                                                                                    :ARG1-of (s5.r / right-03)
                                                                                                                    :same-as s3.o2)))
                                                                               :quant "1")
                                                                  :ARG2 (s5.m / man
                                                                              :ARG1-of (s5.l / left-19)
                                                                              :same-as s3.m)))))
               :ARG2 (s5.c / counter
                           :same-as s1.c))
   :snt6 (s6.p / possible-01
               :ARG1 (s6.s / see-01
                           :ARG1 (s6.b / bottle)
                           :location (s6.c / counter
                                           :same-as s1.c))
               :mod (s6.a / also)))