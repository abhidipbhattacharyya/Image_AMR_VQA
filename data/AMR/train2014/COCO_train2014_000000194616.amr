# ::id train2014~COCO_train2014_000000194616
# ::doc_file train2014~COCO_train2014_000000194616
# ::tok The refrigerator is filled with various food items and drinks . <next_sent> There are several bottles , some of which are placed on the top shelf . <next_sent> A few bottles are also on the middle shelf , and a few more are on the bottom shelf . <next_sent> There are also a few cups and a bowl in the refrigerator . <next_sent> The refrigerator is open , revealing the food and drinks inside .
(d / document
   :snt1 (s1.f / fill-01
               :ARG1 (s1.r / refrigerator)
               :ARG2 (s1.a / and
                           :mod (s1.v / various)
                           :op1 (s1.i / item
                                      :mod (s1.f2 / food))
                           :op2 (s1.t / thing
                                      :ARG1-of (s1.d / drink-01))))
   :snt2 (s2.p / place-01
               :ARG1 (s2.b / bottle
                           :quant (s2.s / several)
                           :ARG2-of (s2.i / include-91
                                          :ARG1 (s2.b2 / bottle
                                                       :mod (s2.s3 / some))))
               :ARG2 (s2.s2 / shelf
                            :mod (s2.t / top)))
   :snt3 (s3.a2 / and
                :op1 (s3.b / be-located-at-91
                           :ARG1 (s3.b3 / bottle
                                        :quant (s3.f / few))
                           :ARG2 (s3.s / shelf
                                       :mod (s3.m / middle))
                           :mod (s3.a / also))
                :op2 (s3.b2 / be-located-at-91
                            :ARG1 (s3.b4 / bottle
                                         :quant (s3.f2 / few)
                                         :mod (s3.m2 / more))
                            :ARG2 (s3.s2 / shelf
                                         :mod (s3.b5 / bottom))))
   :snt4 (s4.a2 / and
                :location (s4.r / refrigerator
                                :same-as s1.r)
                :mod (s4.a / also)
                :op1 (s4.c / cup
                           :quant (s4.f / few))
                :op2 (s4.b / bowl))
   :snt5 (s5.o / open-01
               :ARG0-of (s5.r2 / reveal-01
                               :ARG1 (s5.a / and
                                           :location (s5.r / refrigerator
                                                           :same-as s1.r)
                                           :op1 (s5.f / food)
                                           :op2 (s5.t / thing
                                                      :ARG1-of (s5.d / drink-01))))
               :ARG1 s5.r))