# ::id train2014~COCO_train2014_000000113700
# ::doc_file train2014~COCO_train2014_000000113700
# ::tok A man is sitting at a table with three pizzas in front of him . <next_sent> The pizzas are placed on wooden boards and are topped with pepperoni and cheese . <next_sent> The table is set with various utensils , including forks , knives , and spoons . <next_sent> There are also several bottles and cups on the table . <next_sent> The man appears to be looking at the pizzas , possibly deciding which one to eat first .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.m / man)
               :ARG2 (s1.t / table)
               :manner (s1.i / in-front-of
                             :location-of (s1.p / pizzeria
                                                :quant "3")
                             :op1 s1.m))
   :snt2 (s2.a / and
               :op1 (s2.p3 / place-01
                           :ARG1 (s2.p2 / pizzeria
                                        :same-as s1.p)
                           :ARG2 (s2.b / board
                                       :consist-of (s2.w / wood)))
               :op2 (s2.t / top-01
                          :ARG1 s2.p2
                          :ARG2 (s2.a2 / and
                                       :op1 (s2.p / pepperoni)
                                       :op2 (s2.c / cheese))))
   :snt3 (s3.s / set-01
               :ARG1 (s3.t / table
                           :same-as s1.t)
               :ARG2 (s3.a / and
                           :ARG1-of (s3.i / include-91)
                           :op1 (s3.c / continent
                                      :name (s3.n / name
                                                  :op1 "Peninsula"))
                           :op2 (s3.p / peninsula)
                           :op3 (s3.k / knife)
                           :op4 (s3.s2 / spoon))
               :rel (s3.v / various)
               :mode "expressive")
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.a2 / and
                            :quant (s4.s / several)
                            :op1 (s4.b2 / bottle)
                            :op2 (s4.c / cup))
               :ARG2 (s4.t / table
                           :same-as s1.t)
               :mod (s4.a / also))
   :snt5 (s5.a3 / appear-02
                :ARG1 (s5.a2 / and
                             :op1 (s5.l / look-01
                                        :ARG0 (s5.m / man
                                                    :same-as s1.m)
                                        :ARG1 (s5.p / pizzeria
                                                    :same-as s1.p))
                             :op2 (s5.d / decide-01
                                        :ARG0 s5.m
                                        :ARG1 (s5.a / amr-choice
                                                    :ARG1-of (s5.e / eat-01
                                                                   :ARG0 s5.m
                                                                   :ord (s5.o / ordinal-entity
                                                                              :value "1")))
                                        :ARG1-of (s5.p2 / possible-01)))))