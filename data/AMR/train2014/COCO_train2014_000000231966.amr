# ::id train2014~COCO_train2014_000000231966
# ::doc_file train2014~COCO_train2014_000000231966
# ::tok A large white airplane with a yellow stripe on the tail is flying in the sky . <next_sent> The plane has two engines , one on the left wing and one on the right wing . <next_sent> The plane is flying high in the sky , and the tail of the plane is visible .
(d / document
   :snt1 (s1.f / fly-01
               :ARG2 (s1.a / airplane
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.s2 / stripe
                                                       :ARG1-of (s1.y / yellow-02)
                                                       :location (s1.t / tail)))
                           :ARG1-of (s1.w / white-03)
                           :mod (s1.l / large)
                           :part s1.t)
               :location (s1.s / sky))
   :snt2 (s2.h / have-03
               :ARG0 (s2.p / plane
                           :same-as s1.a)
               :ARG1 (s2.e / engine
                           :domain (s2.a / and
                                         :op1 (s2.e2 / engine
                                                     :location (s2.w / wing
                                                                     :ARG1-of (s2.l / left-20))
                                                     :quant "1")
                                         :op2 (s2.e3 / engine
                                                     :location (s2.w2 / wing
                                                                      :ARG1-of (s2.r / right-08))
                                                     :quant "1"))
                           :quant "2"))
   :snt3 (s3.a / and
               :op1 (s3.f / fly-01
                          :ARG1-of (s3.h / high-02
                                         :ARG2 (s3.s2 / sky
                                                      :same-as s1.s))
                          :ARG2 (s3.p / plane
                                      :part (s3.t / tail)
                                      :same-as s1.a))
               :op2 (s3.p2 / possible-01
                           :ARG1 (s3.s / see-01
                                       :ARG1 s3.t))))