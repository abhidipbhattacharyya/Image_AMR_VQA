# ::id train2014~COCO_train2014_000000443373
# ::doc_file train2014~COCO_train2014_000000443373
# ::tok A plate of food is on a table with eggs , hash browns , and a biscuit . <next_sent> The eggs are fried and have a yellow yolk . <next_sent> The hash browns are on the side of the plate and the biscuit is on the other side . <next_sent> There are also two cups on the table , one near the top left corner and the other near the top right corner .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.p / plate
                           :accompanier (s1.a / and
                                              :op1 (s1.e / egg)
                                              :op2 (s1.c / cookie
                                                         :mod (s1.h / hash))
                                              :op3 (s1.b2 / biscuit))
                           :consist-of (s1.f / food))
               :ARG2 (s1.t / table))
   :snt2 (s2.a / and
               :op1 (s2.f / fry-01
                          :ARG1 (s2.e / egg
                                      :same-as s1.e))
               :op2 (s2.h / have-03
                          :ARG0 s2.e
                          :ARG1 (s2.y2 / yolk
                                       :ARG1-of (s2.y / yellow-02))))
   :snt3 (s3.a / and
               :op1 (s3.b / be-located-at-91
                          :ARG1 (s3.r / Brown
                                      :mod (s3.h / hash)
                                      :same-as s1.c)
                          :ARG2 (s3.s / side
                                      :part-of (s3.p / plate
                                                     :same-as s1.f)))
               :op2 (s3.b2 / be-located-at-91
                           :ARG1 (s3.b3 / biscuit
                                        :same-as s1.b2)
                           :ARG2 (s3.s2 / side
                                        :mod (s3.o / other))))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.c3 / cup
                            :ARG2-of (s4.i / include-91
                                           :ARG1 (s4.a2 / and
                                                        :op1 (s4.n / near-02
                                                                   :ARG1 (s4.c4 / cup
                                                                                :mod (s4.o / other
                                                                                           :op2 (s4.n2 / near-02
                                                                                                       :ARG1 s4.c4
                                                                                                       :ARG2 (s4.c2 / corner
                                                                                                                    :ARG1-of (s4.r / right-04)
                                                                                                                    :mod (s4.t3 / top)))))
                                                                   :ARG2 (s4.c / corner
                                                                               :ARG1-of (s4.l / left-20)
                                                                               :mod (s4.t2 / top)))))
                            :mod (s4.a / also)
                            :quant "1"
                            :quant "2")
               :ARG2 (s4.t / table
                           :same-as s1.t)))