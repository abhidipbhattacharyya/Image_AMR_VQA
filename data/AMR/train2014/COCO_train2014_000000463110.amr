# ::id train2014~COCO_train2014_000000463110
# ::doc_file train2014~COCO_train2014_000000463110
# ::tok Two bowls of fruit are on a wooden table . <next_sent> One bowl contains bananas and apples , while the other has only apples . <next_sent> The apples in the bowls are red . <next_sent> A fork and a knife are also present on the table , with the fork on the right side and the knife on the left .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.p / pound
                           :consist-of (s1.f / fruit)
                           :quant "2")
               :ARG2 (s1.t / table
                           :consist-of (s1.w / wood)))
   :snt2 (s2.c2 / contrast-01
                :ARG1 (s2.c / contain-01
                            :ARG0 (s2.b2 / bowl
                                         :quant (s2.o / one))
                            :ARG1 (s2.a / and
                                        :op1 (s2.b / banana)
                                        :op2 (s2.a2 / apple)))
                :ARG2 (s2.h / have-03
                            :ARG0 (s2.b3 / bowl
                                         :mod (s2.o3 / other))
                            :ARG1 (s2.a3 / apple
                                         :mod (s2.o2 / only))))
   :snt3 (s3.r / red-02
               :ARG1 (s3.a / apple
                           :location (s3.b / bowl-01
                                           :same-as s1.p)
                           :same-as s2.a3))
   :snt4 (s4.p / present-02
               :ARG1 (s4.a2 / and
                            :example (s4.a3 / and
                                            :op1 (s4.b / be-located-at-91
                                                       :ARG1 (s4.f / fork)
                                                       :ARG2 (s4.s / side
                                                                   :ARG1-of (s4.r / right-04)))
                                            :op2 (s4.b2 / be-located-at-91
                                                        :ARG1 s4.a2
                                                        :ARG2 (s4.s2 / side
                                                                     :ARG1-of (s4.l / left-19))
                                                        :ARG2 (s4.k / knife)
                                                        :op2 s4.k))
                            :op1 s4.f)
               :ARG2 (s4.t / table
                           :same-as s1.t)
               :mod (s4.a / also)))