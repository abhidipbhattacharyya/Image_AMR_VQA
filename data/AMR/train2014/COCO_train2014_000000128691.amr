# ::id train2014~COCO_train2014_000000128691
# ::doc_file train2014~COCO_train2014_000000128691
# ::tok A table with a pizza and two glasses of beer . <next_sent> The pizza is placed in the center of the table , and the glasses are on either side of the pizza . <next_sent> There are also two forks on the table , one near the pizza and the other near the glasses .
(d / document
   :snt1 (s1.t / table
               :ARG0-of (s1.h / have-03
                              :ARG1 (s1.a / and
                                          :op1 (s1.p / pizza)
                                          :op2 (s1.b / beer
                                                     :quant (s1.v / volume-quantity
                                                                  :unit (s1.g / glasses)
                                                                  :quant "2")))))
   :snt2 (s2.a / and
               :op1 (s2.p2 / place-01
                           :ARG1 (s2.p / pizza
                                       :part (s2.s / side
                                                   :mod (s2.e / either))
                                       :same-as s1.p)
                           :ARG2 (s2.c / center
                                       :part-of (s2.t / table
                                                      :same-as s1.t)))
               :op2 (s2.b / be-located-at-91
                          :ARG1 (s2.g / glasses
                                      :same-as s1.b)
                          :ARG2 s2.s))
   :snt3 (s3.a2 / and
                :op1 (s3.f / fork-out-02
                           :ARG1-of (s3.n / near-02
                                          :ARG2 (s3.p / pizza
                                                      :same-as s1.p))
                           :mod (s3.a / also)
                           :quant "1"
                           :quant "2")
                :op2 (s3.f2 / fork-out-02
                            :ARG1-of (s3.n2 / near-02
                                            :ARG2 (s3.g / glasses
                                                        :same-as s1.b))
                            :location (s3.t / table
                                            :same-as s1.t)
                            :mod s3.a
                            :mod (s3.o / other))))