# ::id train2014~COCO_train2014_000000366972
# ::doc_file train2014~COCO_train2014_000000366972
# ::tok A plate of pancakes and eggs is on a table . <next_sent> The plate is red and has two pancakes and a cup of butter on it . <next_sent> The table is made of wood and has a knife and a fork on it . <next_sent> A person is sitting at the table , and another person is sitting at the table with a blue plate .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.p / plate
                           :consist-of (s1.a / and
                                             :op1 (s1.e / egg)
                                             :op2 (s1.e2 / egg)))
               :ARG2 (s1.t / table))
   :snt2 (s2.a / and
               :op1 (s2.r / red-02
                          :ARG1 (s2.p / plate
                                      :same-as s1.p))
               :op2 (s2.h / have-03
                          :ARG0 s2.p
                          :ARG1 (s2.a2 / and
                                       :op1 (s2.e2 / enzyme
                                                   :ARG0-of (s2.c / cook-01
                                                                  :ARG1 (s2.e / egg))
                                                   :quant "2")
                                       :op2 (s2.b / butter
                                                  :quant (s2.v / volume-quantity
                                                               :unit (s2.c2 / cup)
                                                               :quant "1")))))
   :snt3 (s3.a / and
               :op1 (s3.m / make-01
                          :ARG1 (s3.t / table
                                      :same-as s1.t)
                          :ARG2 (s3.w / wood))
               :op2 (s3.h / have-03
                          :ARG0 s3.t
                          :ARG1 (s3.a2 / and
                                       :location s3.t
                                       :op1 (s3.k / knife)
                                       :op2 (s3.f / fork))))
   :snt4 (s4.a / and
               :op1 (s4.s / sit-01
                          :ARG1 (s4.p / person)
                          :ARG2 (s4.t / table
                                      :same-as s1.t))
               :op2 (s4.s2 / sit-01
                           :ARG1 (s4.p2 / person
                                        :ARG0-of (s4.h / have-03
                                                       :ARG1 (s4.p3 / plate
                                                                    :mod (s4.b / blue)))
                                        :mod (s4.a2 / another))
                           :ARG2 s4.t)))