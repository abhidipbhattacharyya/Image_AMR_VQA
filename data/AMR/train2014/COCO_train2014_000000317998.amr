# ::id train2014~COCO_train2014_000000317998
# ::doc_file train2014~COCO_train2014_000000317998
# ::tok A person is holding a green tray with a carton of juice on it . <next_sent> The tray is filled with a variety of fruits and vegetables , including tomatoes , strawberries , and apples . <next_sent> The fruits and vegetables are arranged in several trays , with some placed on a red table . <next_sent> The person is standing in front of a red table with a tray of food on it .
(d / document
   :snt1 (s1.h / hold-01
               :ARG0 (s1.p / person)
               :ARG1 (s1.t / tray
                           :ARG1-of (s1.g / green-02)
                           :part (s1.c / carton
                                       :consist-of (s1.j / juice))))
   :snt2 (s2.f / fill-01
               :ARG1 (s2.t2 / tray
                            :same-as s1.t)
               :ARG2 (s2.a / and
                           :ARG2-of (s2.i / include-91
                                          :ARG1 (s2.a2 / and
                                                       :op1 (s2.t / tomato)
                                                       :op2 (s2.o / orange)
                                                       :op3 (s2.a3 / apple)))
                           :mod (s2.v / variety)
                           :op1 (s2.f2 / fruit)
                           :op2 (s2.v2 / vegetable)))
   :snt3 (s3.a2 / arrange-01
                :ARG1 (s3.a / and
                            :op1 (s3.f / fruit)
                            :op2 (s3.v / vegetable)
                            :same-as s2.a)
                :ARG2 (s3.r / Trayvon
                            :quant (s3.s / several)
                            :example (s3.p / place-01
                                           :ARG1 (s3.s2 / some)
                                           :ARG2 (s3.t / table
                                                       :ARG1-of (s3.r2 / red-02)))))
   :snt4 (s4.s / stand-01
               :ARG1 (s4.p / person
                           :same-as s1.p)
               :ARG2 (s4.i / in-front-of
                           :op1 (s4.t / table
                                      :ARG0-of (s4.h / have-03
                                                     :ARG1 (s4.t2 / tray
                                                                  :consist-of (s4.f / food)
                                                                  :location s4.t))
                                      :ARG1-of (s4.r / red-02)
                                      :same-as s3.t))))