# ::id train2014~COCO_train2014_000000304483
# ::doc_file train2014~COCO_train2014_000000304483
# ::tok A plate of food is on a table . <next_sent> The plate contains a sandwich , a salad , and a beer . <next_sent> The sandwich is cut in half and has lettuce and tomato . <next_sent> The salad is on the side of the plate . <next_sent> The beer is in a bottle next to the plate . <next_sent> There are also two forks on the table , one near the plate and the other further away .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.f / food
                           :quant (s1.p / plate))
               :ARG2 (s1.t / table))
   :snt2 (s2.c / contain-01
               :ARG0 (s2.p / plate
                           :same-as s1.f)
               :ARG1 (s2.a / and
                           :op1 (s2.s2 / sandwich)
                           :op2 (s2.s / salad)
                           :op3 (s2.b / beer)))
   :snt3 (s3.a / and
               :op1 (s3.c / cut-01
                          :ARG1 (s3.s / sandwich
                                      :same-as s2.s2)
                          :manner (s3.h / half))
               :op2 (s3.h2 / have-03
                           :ARG0 s3.s
                           :ARG1 (s3.a2 / and
                                        :op1 (s3.l / lettuce)
                                        :op2 (s3.t / tomato))))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.s / salad
                           :same-as s2.s)
               :ARG2 (s4.s2 / side
                            :part-of (s4.p / plate
                                           :same-as s1.f)))
   :snt5 (s5.b / be-located-at-91
               :ARG1 (s5.b2 / beer
                            :same-as s2.b)
               :ARG2 (s5.b3 / bottle
                            :location (s5.n / next-to
                                            :op1 (s5.p / plate
                                                       :same-as s1.f))))
   :snt6 (s6.a2 / and
                :mod (s6.a / also)
                :op1 (s6.f2 / fork-out-02
                            :ARG1-of (s6.n / near-02
                                           :ARG2 (s6.p / plate
                                                       :same-as s1.f)
                                           :quant "1")
                            :location (s6.t / table
                                            :same-as s1.t)
                            :mod s6.a)
                :op2 (s6.f3 / fork-out-02
                            :location (s6.a3 / away
                                             :extent (s6.f / far
                                                           :mod (s6.m / more))))
                :rel "2"))