# ::id train2014~COCO_train2014_000000040138
# ::doc_file train2014~COCO_train2014_000000040138
# ::tok A boat is traveling down a river next to a yellow and blue train . <next_sent> The boat is black and white and is in front of the train . <next_sent> The train is blue and yellow and is behind the boat . <next_sent> There are several people on the boat and on the train , enjoying the view of the city .
(d / document
   :snt1 (s1.t3 / travel-01
                :ARG0 (s1.b2 / boat)
                :ARG1 (s1.r / river)
                :direction (s1.d / down)
                :location (s1.n / next-to
                                :op1 (s1.a / and
                                           :op1 (s1.t / train
                                                      :ARG1-of (s1.y / yellow-02))
                                           :op2 (s1.t2 / train
                                                       :mod (s1.b / blue)))))
   :snt2 (s2.a / and
               :op1 (s2.b2 / black-and-white
                           :domain (s2.b3 / boat
                                          :same-as s1.b2))
               :op2 (s2.b / be-located-at-91
                          :ARG1 s2.b3
                          :ARG2 (s2.i / in-front-of
                                      :op1 (s2.t / train
                                                 :same-as s1.a))))
   :snt3 (s3.a2 / and
                :op1 (s3.a / and
                           :domain (s3.t / train
                                         :same-as s1.a)
                           :op1 (s3.b3 / blue)
                           :op2 (s3.y / yellow))
                :op2 (s3.b / be-located-at-91
                           :ARG1 s3.t
                           :ARG2 (s3.b2 / behind
                                        :op1 (s3.b4 / boat
                                                    :same-as s1.b2))))
   :snt4 (s4.a / and
               :domain (s4.p / person
                             :quant (s4.s / several)
                             :ARG0-of (s4.e / enjoy-01
                                            :ARG1 (s4.v / view-01
                                                        :ARG0 s4.p
                                                        :ARG1 (s4.c / city))))
               :op1 (s4.b / boat
                          :same-as s1.b2)
               :op2 (s4.t / train
                          :same-as s1.a)))