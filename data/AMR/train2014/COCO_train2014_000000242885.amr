# ::id train2014~COCO_train2014_000000242885
# ::doc_file train2014~COCO_train2014_000000242885
# ::tok The refrigerator is open and full of food . <next_sent> There are several bottles , including one on the top shelf , one on the middle shelf , and one on the bottom shelf . <next_sent> There are also several bowls , including one on the middle shelf , one on the bottom shelf , and one on the top shelf . <next_sent> The refrigerator is also filled with several bottles of water .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.o / open-01
                          :ARG1 (s1.r / refrigerator))
               :op2 (s1.f / fill-01
                          :ARG1 s1.r
                          :ARG2 (s1.f2 / food)))
   :snt2 (s2.i / include-01
               :ARG1 (s2.a / and
                           :op1 (s2.b2 / bottle
                                       :location (s2.s2 / shelf
                                                        :mod (s2.t / top))
                                       :quant "1")
                           :op2 (s2.b3 / bottle
                                       :location (s2.s3 / shelf
                                                        :mod (s2.m / middle))
                                       :location (s2.s4 / shelf
                                                        :location (s2.b4 / bottom))
                                       :quant "1"))
               :ARG2 (s2.b / bottle
                           :quant (s2.s / several)))
   :snt3 (s3.i / include-91
               :ARG1 (s3.a2 / and
                            :op1 (s3.p2 / pound
                                        :location (s3.s2 / shelf
                                                         :mod (s3.m / middle)
                                                         :same-as s2.s3))
                            :op2 (s3.p3 / pound
                                        :location (s3.s3 / shelf
                                                         :mod (s3.b / bottom)
                                                         :same-as s2.s4)
                                        :location (s3.s4 / shelf
                                                         :location (s3.t / top)
                                                         :same-as s2.s2)
                                        :quant "1"))
               :ARG2 (s3.p / pound
                           :quant (s3.s / several)
                           :mod (s3.a / also)))
   :snt4 (s4.f / fill-01
               :ARG1 (s4.r / refrigerator
                           :same-as s1.r)
               :ARG2 (s4.w / water
                           :quant (s4.s / several
                                        :op1 (s4.v / volume-quantity
                                                   :unit (s4.b / bottle)
                                                   :quant "1")))
               :mod (s4.a / also)))