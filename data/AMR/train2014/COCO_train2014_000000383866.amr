# ::id train2014~COCO_train2014_000000383866
# ::doc_file train2014~COCO_train2014_000000383866
# ::tok A silver car with a flat tire is parked in a parking lot . <next_sent> The tire is on the back of the car , and the car is parked in a parking space . <next_sent> There are several other cars in the parking lot , including one parked behind the silver car .
(d / document
   :snt1 (s1.p / park-01
               :ARG1 (s1.c / car
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.t / tire
                                                      :ARG1-of (s1.f / flat-06)))
                           :mod (s1.s / silver))
               :ARG2 (s1.l / lot
                           :purpose (s1.p2 / park-01)))
   :snt2 (s2.a / and
               :op1 (s2.t / tire
                          :location (s2.b / back
                                          :part-of (s2.c / car
                                                         :same-as s1.c))
                          :same-as s1.t)
               :op2 (s2.p / park-01
                          :ARG1 s2.c
                          :ARG2 (s2.s / space
                                      :purpose (s2.p2 / park-01
                                                      :ARG1 s2.c))))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.c / car
                           :quant (s3.s / several)
                           :ARG2-of (s3.i / include-91
                                          :ARG1 (s3.c2 / car
                                                       :ARG1-of (s3.p2 / park-01
                                                                       :ARG2 (s3.b2 / behind
                                                                                    :op1 (s3.c3 / car
                                                                                                :mod (s3.s2 / silver)
                                                                                                :same-as s1.c)))
                                                       :quant "1"))
                           :mod (s3.o / other))
               :ARG2 (s3.l / lot
                           :ARG2-of (s3.p / park-01)
                           :same-as s1.l)))