# ::id train2014~COCO_train2014_000000271641
# ::doc_file train2014~COCO_train2014_000000271641
# ::tok Three people are standing on a snowy path , each wearing skis . <next_sent> One person is on the left , another in the middle , and the third on the right . <next_sent> The skis are visible on the ground , with one set of skis on the left , another in the middle , and the third set on the right . <next_sent> The people are wearing backpacks , with one on the left , another in the middle , and the third on the right .
(d / document
   :snt1 (s1.s3 / stand-01
                :ARG1 (s1.p2 / person
                             :ARG0-of (s1.w / wear-01
                                            :ARG1 (s1.s / ski-01))
                             :mod (s1.e / each)
                             :quant "3")
                :ARG2 (s1.p / path
                            :ARG1-of (s1.s2 / snowy-02)))
   :snt2 (s2.a / and
               :op1 (s2.p / person
                          :ARG1-of (s2.l / left-19)
                          :quant "1")
               :op2 (s2.p3 / person
                           :location (s2.r / right-08)
                           :ord (s2.o / ordinal-entity
                                      :value "3"))
               :rel (s2.p2 / person
                           :location (s2.m / middle)
                           :mod (s2.a2 / another)))
   :snt3 (s3.p / possible-01
               :ARG1 (s3.s / see-01
                           :ARG1 (s3.s5 / ski-01
                                        :ARG0-of (s3.h / have-03
                                                       :ARG1 (s3.a / and
                                                                   :op1 (s3.s2 / set
                                                                               :ARG1-of (s3.l / left-20
                                                                                              :same-as s2.l)
                                                                               :consist-of (s3.s6 / ski-01)
                                                                               :quant "1")
                                                                   :op2 (s3.s3 / set
                                                                               :consist-of (s3.s7 / ski-01)
                                                                               :location (s3.m / middle
                                                                                               :same-as s2.m)
                                                                               :mod (s3.a2 / another))
                                                                   :op3 (s3.s4 / set
                                                                               :ARG1-of (s3.r / right-04
                                                                                              :same-as s2.r)
                                                                               :ord (s3.o / ordinal-entity
                                                                                          :value "3"))))
                                        :same-as s1.s)
                           :location (s3.g / ground)))
   :snt4 (s4.w / wear-01
               :ARG0 (s4.p / person)
               :ARG1 (s4.s / suitcase
                           :example (s4.a / and
                                          :op1 (s4.p2 / pocket
                                                      :ARG1-of (s4.l / left-19
                                                                     :same-as s2.l)
                                                      :mod (s4.a2 / another))
                                          :op2 (s4.b2 / back
                                                      :location (s4.m / middle
                                                                      :same-as s2.m)
                                                      :location (s4.r / right-08
                                                                      :same-as s2.r)
                                                      :ord (s4.o / ordinal-entity
                                                                 :value "3"
                                                                 :same-as s2.o)))
                           :mod (s4.b / back))))