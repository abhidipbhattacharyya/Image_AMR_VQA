# ::id train2014~COCO_train2014_000000468652
# ::doc_file train2014~COCO_train2014_000000468652
# ::tok A black truck is parked in a parking lot . <next_sent> The truck has its hood open , and the passenger door is open . <next_sent> The truck is parked next to a fence and a tent . <next_sent> There are several cars in the parking lot , including one behind the truck and another one on the right side .
(d / document
   :snt1 (s1.p / park-01
               :ARG1 (s1.t / truck
                           :ARG1-of (s1.b / black-04))
               :location (s1.l / lot
                               :ARG2-of (s1.p2 / park-01)))
   :snt2 (s2.a / and
               :op1 (s2.o / open-01
                          :ARG1 (s2.t / truck
                                      :part (s2.h / hood)
                                      :part (s2.d / door
                                                  :part-of (s2.p / passenger))
                                      :same-as s1.t))
               :op2 (s2.o2 / open-01
                           :ARG1 s2.d))
   :snt3 (s3.p / park-01
               :ARG1 (s3.t2 / truck
                            :same-as s1.t)
               :location (s3.n / next-to
                               :op1 (s3.a / and
                                          :op1 (s3.f / fence)
                                          :op2 (s3.t / tent))))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.c / car
                           :quant (s4.s / several)
                           :ARG2-of (s4.i / include-91
                                          :ARG1 (s4.a / and
                                                      :op1 (s4.c2 / car
                                                                  :location (s4.b2 / behind
                                                                                   :op1 (s4.t / truck
                                                                                              :same-as s1.t))
                                                                  :location (s4.s2 / side
                                                                                   :ARG1-of (s4.r / right-04))
                                                                  :mod (s4.a2 / another)
                                                                  :op2-of s4.a
                                                                  :quant "1"))))
               :ARG2 (s4.l / lot
                           :purpose (s4.p / park-01)
                           :same-as s1.l)))