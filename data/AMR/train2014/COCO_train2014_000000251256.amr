# ::id train2014~COCO_train2014_000000251256
# ::doc_file train2014~COCO_train2014_000000251256
# ::tok A large Air Canada jet is parked on the tarmac . <next_sent> The plane is surrounded by several trucks and a few people . <next_sent> The trucks are parked in front of the plane , and some are located behind it . <next_sent> There are also a few people standing around the plane , possibly attending to it or waiting for it to be loaded .
(d / document
   :snt1 (s1.p / park-01
               :ARG1 (s1.j / jet
                           :mod (s1.c / company
                                      :name (s1.n / name
                                                  :op1 "Air"
                                                  :op2 "Canada"))
                           :mod (s1.l / large))
               :ARG2 (s1.t / tarmac))
   :snt2 (s2.s2 / surround-01
                :ARG1 (s2.a / and
                            :op1 (s2.t / truck
                                       :quant (s2.s / several))
                            :op2 (s2.p / person
                                       :quant (s2.f / few)))
                :ARG2 (s2.p2 / plane
                             :same-as s1.j))
   :snt3 (s3.a / and
               :op1 (s3.p / park-01
                          :ARG1 (s3.t / truck
                                      :same-as s2.t)
                          :ARG2 (s3.i / in-front-of
                                      :op1 (s3.p2 / plane
                                                  :same-as s1.j)))
               :op2 (s3.l / locate-01
                          :ARG1 (s3.t2 / truck
                                       :quant (s3.s / some))
                          :location (s3.b / behind
                                          :op1 s3.p2)))
   :snt4 (s4.s / stand-01
               :ARG1 (s4.p / person
                           :purpose (s4.o / or
                                          :op1 (s4.a3 / attend-01
                                                      :ARG0 s4.p
                                                      :ARG1 (s4.p2 / plane
                                                                   :same-as s1.j)
                                                      :ARG1-of (s4.p3 / possible-01))
                                          :op2 (s4.w / wait-01
                                                     :ARG1 s4.p
                                                     :ARG2 (s4.l / load-01
                                                                 :ARG1 s4.p2)))
                           :quant (s4.f / few))
               :ARG2 (s4.a2 / around
                            :op1 s4.p2)
               :mod (s4.a / also)))