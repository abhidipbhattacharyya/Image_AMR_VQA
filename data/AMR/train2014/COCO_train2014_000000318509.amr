# ::id train2014~COCO_train2014_000000318509
# ::doc_file train2014~COCO_train2014_000000318509
# ::tok A man in a military uniform is cutting a cake on a dining table . <next_sent> The table has two plates of cake , one in front of the man and another on the right side . <next_sent> There are also two bottles on the table , one near the left edge and the other near the center . <next_sent> A cell phone is placed on the table , closer to the left side .
(d / document
   :snt1 (s1.c2 / cut-01
                :ARG0 (s1.m / man
                            :ARG1-of (s1.u / uniform-01
                                           :ARG2 (s1.m2 / military)))
                :ARG1 (s1.c / cake)
                :location (s1.t / table
                                :mod (s1.d / dine-01)))
   :snt2 (s2.h / have-03
               :ARG0 (s2.t / table
                           :same-as s1.t)
               :ARG1 (s2.p / plate
                           :ARG2-of (s2.i2 / include-91
                                           :location (s2.i / in-front-of
                                                           :op1 (s2.m / man
                                                                      :same-as s1.m)))
                           :consist-of (s2.c / cake)
                           :example (s2.a / and
                                          :op2 (s2.p2 / plate
                                                      :location (s2.s / side
                                                                      :ARG1-of (s2.r / right-04))))
                           :op1-of s2.a
                           :quant "1"
                           :quant "2"))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.b2 / bottle
                            :ARG1-of (s3.n / near-02
                                           :ARG2 (s3.e / edge
                                                       :ARG1-of (s3.l / left-20)))
                            :mod (s3.a / also)
                            :quant "1"
                            :quant "2")
               :ARG2 (s3.t / table
                           :same-as s1.t)
               :rel (s3.a2 / and
                           :op1 s3.b2
                           :op2 (s3.b3 / bottle
                                       :ARG1-of (s3.n2 / near-02
                                                       :ARG2 (s3.c / center-02))
                                       :mod (s3.o / other))))
   :snt4 (s4.p2 / place-01
                :ARG1 (s4.p / phone
                            :mod (s4.c / cell))
                :ARG2 (s4.t / table
                            :ARG1-of (s4.h / have-degree-91
                                           :ARG2 (s4.c2 / close-10
                                                        :ARG1 s4.t
                                                        :ARG2 (s4.s / side
                                                                    :ARG1-of (s4.l / left-20)
                                                                    :same-as s2.s))
                                           :ARG3 (s4.m / more))
                            :same-as s1.t)))