# ::id train2014~COCO_train2014_000000393867
# ::doc_file train2014~COCO_train2014_000000393867
# ::tok A plate of sandwiches and biscuits is on a table . <next_sent> The sandwiches are cut into triangles and are placed on a white plate . <next_sent> There are also a couple of biscuits on the plate . <next_sent> A fork and a knife are also present on the table , with the fork on the right side and the knife on the left .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.p / plate
                           :consist-of (s1.a / and
                                             :op1 (s1.s / sandwich)
                                             :op2 (s1.b2 / biscuit)))
               :ARG2 (s1.t / table))
   :snt2 (s2.a / and
               :op1 (s2.c / cut-01
                          :ARG1 (s2.s / sandwich
                                      :same-as s1.s)
                          :ARG2 (s2.m / mountain))
               :op2 (s2.p / place-01
                          :ARG1 s2.s
                          :ARG2 (s2.p2 / plate
                                       :ARG1-of (s2.w / white-03)
                                       :same-as s1.p)))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.b2 / biscuit
                            :quant (s3.c / couple))
               :ARG2 (s3.p / plate
                           :same-as s1.p)
               :mod (s3.a / also))
   :snt4 (s4.p / present-02
               :ARG1 (s4.a2 / and
                            :example (s4.a3 / and
                                            :op1 (s4.b / be-located-at-91
                                                       :ARG1 (s4.f / fork)
                                                       :ARG2 (s4.s / side
                                                                   :ARG1-of (s4.r / right-04)))
                                            :op2 (s4.b2 / be-located-at-91
                                                        :ARG1 s4.a2
                                                        :ARG2 (s4.s2 / side
                                                                     :ARG1-of (s4.l / left-19))
                                                        :ARG2 (s4.k / knife)
                                                        :op2 s4.k))
                            :op1 s4.f)
               :ARG2 (s4.t / table
                           :same-as s1.t)
               :mod (s4.a / also)))