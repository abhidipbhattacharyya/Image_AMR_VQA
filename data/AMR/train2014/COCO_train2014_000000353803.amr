# ::id train2014~COCO_train2014_000000353803
# ::doc_file train2014~COCO_train2014_000000353803
# ::tok The image shows a dining table with a variety of food items . <next_sent> There are two plates of food , one with a sandwich and the other with a fried egg . <next_sent> There are also two bowls , one containing a salad and the other containing beans . <next_sent> Additionally , there are two cups , one containing coffee and the other containing a beverage . <next_sent> There are two forks and two knives on the table , as well as a spoon . <next_sent> The table is set for a meal , with the food items arranged neatly .
(d / document
   :snt1 (s1.s / show-01
               :ARG0 (s1.i / image)
               :ARG1 (s1.t / table
                           :purpose (s1.d / dine-01)
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.i2 / item
                                                       :mod (s1.f / food)
                                                       :mod (s1.v / variety)))))
   :snt2 (s2.a / and
               :op1 (s2.p / plate
                          :consist-of (s2.f / food)
                          :quant "2")
               :op2 (s2.p2 / plate
                           :mod (s2.o2 / other))
               :rel (s2.o / one
                          :part (s2.s / sandwich
                                      :ARG0-of (s2.h / have-03
                                                     :ARG1 (s2.e / egg
                                                                 :ARG1-of (s2.f2 / fry-01))))))
   :snt3 (s3.a2 / and
                :op1 (s3.p / pound
                           :mod (s3.a / also)
                           :quant "2")
                :op2 (s3.b2 / bowl-01
                            :ARG0-of (s3.c2 / contain-01
                                            :ARG1 (s3.b / bean))
                            :mod (s3.o / other))
                :rel (s3.d / dish
                           :ARG0-of (s3.c / contain-01
                                          :ARG1 (s3.s / salad))
                           :quant "1"))
   :snt4 (s4.a2 / and
                :op1 (s4.c4 / cup
                            :ARG2-of (s4.i / include-91)
                            :ARG1-of s4.i
                            :ARG2-of (s4.i2 / include-91
                                            :ARG1 (s4.c5 / cup
                                                         :ARG0-of (s4.c2 / contain-01
                                                                         :ARG1 (s4.c / coffee))
                                                         :ARG0-of (s4.c3 / contain-01
                                                                         :ARG1 (s4.b / beverage))
                                                         :mod (s4.o / other)))
                            :mod (s4.a / additional)
                            :quant "2")
                :op2 s4.c5)
   :snt5 (s5.a / and
               :location (s5.t / table
                               :same-as s1.t)
               :op1 (s5.a2 / and
                           :op1 (s5.c / continent
                                      :quant "2")
                           :op2 (s5.c2 / continent
                                       :quant "2")
                           :op2 (s5.k / knife
                                      :mod s5.c2))
               :op2 (s5.s / spoon))
   :snt6 (s6.s / set-01
               :ARG1 (s6.t / table
                           :same-as s1.t)
               :ARG2 (s6.m / meal)
               :example (s6.a / arrange-01
                              :ARG1 (s6.i / item
                                          :mod (s6.f / food))
                              :manner (s6.n / neat))))