# ::id train2014~COCO_train2014_000000218558
# ::doc_file train2014~COCO_train2014_000000218558
# ::tok A table with a plate of food on it , including a gyro and a side of fries . <next_sent> There are two plates of food on the table , one with a gyro and the other with fries . <next_sent> There are also two bottles of ketchup on the table , one on the left and one on the right . <next_sent> The table is surrounded by chairs , with one on the left , one on the right , and one at the far end .
(d / document
   :snt1 (s1.t / table
               :ARG1-of (s1.i / include-01
                              :ARG2 (s1.f / food
                                          :quant (s1.p / plate)
                                          :ARG2-of (s1.i2 / include-91
                                                          :ARG1 (s1.a / and
                                                                      :op1 (s1.g / gyro)
                                                                      :op2 (s1.s / side
                                                                                 :consist-of (s1.f2 / fry-01)))))))
   :snt2 (s2.a / and
               :op1 (s2.p / plate
                          :ARG0-of (s2.h / have-03
                                         :ARG1 (s2.g / gyro
                                                     :same-as s1.g))
                          :consist-of (s2.f / food)
                          :location (s2.t / table
                                          :same-as s1.t)
                          :quant "1"
                          :quant "2")
               :op2 (s2.p2 / plate
                           :ARG0-of (s2.h2 / have-03
                                           :ARG1 (s2.f2 / fry-01))
                           :mod (s2.o / other)))
   :snt3 (s3.a2 / and
                :op1 (s3.b / bottle
                           :ARG0-of (s3.c / contain-01
                                          :ARG0 (s3.b2 / bottle
                                                       :ARG1-of (s3.l / left-19)
                                                       :ARG1-of (s3.r / right-08)
                                                       :quant "1")
                                          :ARG1 (s3.k / ketchup))
                           :location (s3.t / table
                                           :same-as s1.t)
                           :mod (s3.a / also)
                           :quant "2")
                :op2 s3.b2)
   :snt4 (s4.s / surround-01
               :ARG1 (s4.c / chair
                           :example (s4.a / and
                                          :op1 (s4.o / one
                                                     :ARG1-of (s4.l / left-19
                                                                    :same-as s3.l))
                                          :op2 (s4.o2 / one
                                                      :ARG1-of (s4.r / right-04)
                                                      :location (s4.e / end
                                                                      :mod (s4.f / far)))))
               :ARG2 (s4.t / table
                           :same-as s1.t)))