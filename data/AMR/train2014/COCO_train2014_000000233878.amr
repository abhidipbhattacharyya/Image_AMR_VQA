# ::id train2014~COCO_train2014_000000233878
# ::doc_file train2014~COCO_train2014_000000233878
# ::tok A table with two bowls of food , one containing macaroni and the other containing carrots . <next_sent> The macaroni is in a glass bowl and the carrots are in a clear bowl . <next_sent> There are also two bottles on the table , one near the top left corner and the other near the top right corner .
(d / document
   :snt1 (s1.t / table
               :ARG0-of (s1.h / have-03
                              :ARG1 (s1.p / pound
                                          :ARG2-of (s1.i / include-91
                                                         :ARG1 (s1.d / dish
                                                                     :ARG0-of (s1.c2 / contain-01
                                                                                     :ARG1 (s1.m / macaroni))))
                                          :ARG2-of (s1.i2 / include-91
                                                          :ARG1 (s1.b / bowl-01
                                                                      :ARG1 (s1.f / food))
                                                          :ARG1 (s1.c / carrot))
                                          :quant "2")))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.m / macaroni
                                      :same-as s1.m)
                          :ARG2 (s2.b3 / bowl
                                       :consist-of (s2.g / glass)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.c / carrot)
                           :ARG2 (s2.b4 / bowl
                                        :ARG1-of (s2.c2 / clear-08))))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.b2 / bottle
                            :ARG2-of (s3.i / include-91
                                           :ARG1 (s3.a2 / and
                                                        :op2 (s3.b3 / bottle
                                                                    :ARG1-of (s3.n / near-02
                                                                                   :ARG2 (s3.c / corner
                                                                                               :ARG1-of (s3.l / left-20)
                                                                                               :mod (s3.t2 / top)))
                                                                    :ARG1-of (s3.n2 / near-02
                                                                                    :ARG2 (s3.c2 / corner
                                                                                                 :ARG1-of (s3.r / right-04)
                                                                                                 :mod (s3.t3 / top)))
                                                                    :quant "1"))
                                           :op1-of s3.a2)
                            :ARG1-of s3.i
                            :mod (s3.a / also)
                            :quant "2")
               :ARG2 (s3.t / table)))