# ::id train2014~COCO_train2014_000000322768
# ::doc_file train2014~COCO_train2014_000000322768
# ::tok A kitchen counter with a sink and a window above it . <next_sent> The counter is cluttered with various items such as a knife set , a spoon , a bowl , a cup , and a bottle . <next_sent> The items are scattered across the counter , with some near the sink and others closer to the window .
(d / document
   :snt1 (s1.c / counter
               :ARG0-of (s1.h / have-03
                              :ARG1 (s1.a2 / and
                                           :op1 (s1.s / sink)
                                           :op2 (s1.w / window
                                                      :location (s1.a / above))))
               :location (s1.k / kitchen)
               :op1-of s1.a)
   :snt2 (s2.c / cause-01
               :ARG0 (s2.c2 / counter
                            :same-as s1.s)
               :ARG1 (s2.i / item
                           :example (s2.a / and
                                          :op1 (s2.s / set
                                                     :mod (s2.k / knife))
                                          :op2 (s2.s2 / spoon)
                                          :op3 (s2.b2 / bowl)
                                          :op4 (s2.c3 / cup)
                                          :op5 (s2.b / bottle))
                           :mod (s2.v / various))
               :mode "literal")
   :snt3 (s3.s / scatter-01
               :ARG1 (s3.i / item
                           :same-as s2.i)
               :ARG2 (s3.a / across
                           :op1 (s3.c2 / counter
                                       :same-as s1.s))
               :example (s3.a2 / and
                               :op1 (s3.n / near-02
                                          :ARG1 (s3.s3 / some)
                                          :ARG2 (s3.s2 / sink
                                                       :same-as s1.s))
                               :op2 (s3.c / close-10
                                          :ARG1 (s3.i2 / item
                                                       :quant s3.s3
                                                       :mod (s3.o / other))
                                          :ARG2 (s3.w / window)
                                          :ARG2-of (s3.h / have-degree-91
                                                         :ARG1 s3.i2
                                                         :ARG3 (s3.m / more))))))