# ::id train2014~COCO_train2014_000000217700
# ::doc_file train2014~COCO_train2014_000000217700
# ::tok A man in an orange apron is making a pizza in a kitchen . <next_sent> There are two pizzas on the counter , one with cheese and the other with pepperoni . <next_sent> The man is wearing an apron and a white shirt . <next_sent> A woman is standing behind him , also wearing an apron . <next_sent> There are several bottles on the counter , and a knife is visible on the counter as well .
(d / document
   :snt1 (s1.m / make-01
               :ARG0 (s1.m2 / man
                            :ARG0-of (s1.w / wear-01
                                           :ARG1 (s1.a / apron
                                                       :mod (s1.o / orange))))
               :ARG1 (s1.p / pizza)
               :location (s1.k / kitchen))
   :snt2 (s2.b / be-located-at-91
               :ARG1 (s2.p2 / pizzeria
                            :quant "2")
               :ARG2 (s2.c2 / counter)
               :rel (s2.a / and
                          :op1 (s2.p3 / pizzeria
                                      :mod (s2.o / other)
                                      :part (s2.c / cheese)
                                      :part (s2.p / pepperoni)
                                      :op2-of s2.a
                                      :quant "1")))
   :snt3 (s3.w / wear-01
               :ARG0 (s3.m / man
                           :same-as s1.m2)
               :ARG1 (s3.a / and
                           :op1 (s3.a2 / apron
                                       :same-as s1.a)
                           :op2 (s3.s / shirt
                                      :ARG1-of (s3.w2 / white-03))))
   :snt4 (s4.s / stand-01
               :ARG1 (s4.w2 / woman
                            :ARG0-of (s4.w / wear-01
                                           :ARG1 (s4.a2 / apron)
                                           :mod (s4.a / also)))
               :ARG2 (s4.b / behind
                           :op1 (s4.h / he
                                      :same-as s1.m2)))
   :snt5 (s5.a / and
               :op1 (s5.b / be-located-at-91
                          :ARG1 (s5.b3 / bottle
                                       :quant (s5.s2 / several))
                          :ARG2 (s5.c / counter
                                      :same-as s2.c2))
               :op2 (s5.p / possible-01
                          :ARG1 (s5.s / see-01
                                      :ARG1 (s5.k / knife))
                          :ARG1 (s5.b2 / be-located-at-91
                                       :ARG2 s5.c
                                       :mod (s5.a2 / as-well)))
               :rel "1"))