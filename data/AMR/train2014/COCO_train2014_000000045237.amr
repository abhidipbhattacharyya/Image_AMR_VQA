# ::id train2014~COCO_train2014_000000045237
# ::doc_file train2014~COCO_train2014_000000045237
# ::tok A plate of food is on a table , including fish , potatoes , and carrots . <next_sent> The fish is on the left side of the plate , with the carrots on the right . <next_sent> The plate is white , and there are a few carrots scattered around the plate . <next_sent> A fork and a knife are also present on the table , with the fork on the left and the knife on the right .
(d / document
   :snt1 (s1.i / include-01
               :ARG1 (s1.a / and
                           :op1 (s1.f / fish)
                           :op2 (s1.p2 / potato)
                           :op3 (s1.c / carrot))
               :ARG2 (s1.p / plate
                           :consist-of (s1.f2 / food)
                           :location (s1.t / table)))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.f / fish
                                      :same-as s1.f)
                          :ARG2 (s2.s / side
                                      :ARG1-of (s2.l / left-20)
                                      :part-of (s2.p / plate
                                                     :part (s2.s2 / side
                                                                  :ARG1-of (s2.r / right-04))
                                                     :same-as s1.f2)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.c / carrot)
                           :ARG2 s2.s2))
   :snt3 (s3.a / and
               :op1 (s3.w / white-03
                          :ARG1 (s3.p / plate
                                      :same-as s1.f2))
               :op2 (s3.s / scatter-01
                          :ARG1 (s3.c / carrot
                                      :quant (s3.f / few))
                          :ARG2 (s3.a2 / around
                                       :op1 s3.p)))
   :snt4 (s4.p / present-02
               :ARG1 (s4.a2 / and
                            :ARG1-of (s4.m / mean-01
                                           :ARG2 (s4.a3 / and
                                                        :op1 (s4.f / fork
                                                                   :ARG1-of (s4.l / left-19))
                                                        :op2 (s4.k / knife
                                                                   :ARG1-of (s4.r / right-08))))
                            :op1 s4.f
                            :op2 s4.k)
               :ARG2 (s4.t / table
                           :same-as s1.t)
               :mod (s4.a / also)))