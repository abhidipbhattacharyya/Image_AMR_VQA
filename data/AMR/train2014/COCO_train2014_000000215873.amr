# ::id train2014~COCO_train2014_000000215873
# ::doc_file train2014~COCO_train2014_000000215873
# ::tok A bunch of bananas hang from a tree , with some of them appearing to be overripe . <next_sent> The bananas are in various stages of ripeness , with some being green and others being yellow . <next_sent> The bananas are hanging from a wire fence , and there are a few other banana bunches in the background .
(d / document
   :snt1 (s1.h / hang-01
               :ARG1 (s1.b / banana
                           :quant (s1.b3 / bunch)
                           :ARG1-of (s1.a / appear-02
                                          :ARG2 (s1.o / overripe)))
               :ARG2 (s1.t / tree)
               :rel (s1.b2 / banana
                           :ARG1-of (s1.i / include-91
                                          :ARG2 s1.b
                                          :mod (s1.s / some))))
   :snt2 (s2.r / rip-01
               :ARG1 (s2.b / banana
                           :same-as s1.b3)
               :example (s2.a / and
                              :op1 (s2.g / green-02
                                         :ARG1 (s2.b2 / banana
                                                      :quant (s2.s / some)
                                                      :mod (s2.o / other)))
                              :op2 (s2.y / yellow-02
                                         :ARG1 s2.b2))
               :mod (s2.s2 / stage
                           :mod (s2.v / various)))
   :snt3 (s3.a / and
               :op1 (s3.h / hanging-07
                          :ARG1 (s3.b2 / banana
                                       :consist (s3.l / load
                                                      :quant (s3.f2 / few)
                                                      :location (s3.b / background)
                                                      :mod (s3.o / other))
                                       :same-as s1.b3)
                          :ARG2 (s3.f / fence
                                      :consist-of (s3.w / wire)))
               :op2 s3.l))