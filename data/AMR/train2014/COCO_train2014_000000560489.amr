# ::id train2014~COCO_train2014_000000560489
# ::doc_file train2014~COCO_train2014_000000560489
# ::tok A kitchen sink with a silver faucet and a black counter top . <next_sent> The sink is empty and has a silver faucet . <next_sent> The counter top is black and has a few potted plants on it . <next_sent> The potted plants are green and are placed on the counter . <next_sent> There are also a few knives on the counter .
(d / document
   :snt1 (s1.s2 / sink
                :location (s1.k / kitchen)
                :part (s1.a / and
                            :op1 (s1.f / faucet
                                       :mod (s1.s / silver))
                            :op2 (s1.t / top
                                       :ARG1-of (s1.b / black-04)
                                       :mod (s1.c / counter))))
   :snt2 (s2.a / and
               :op1 (s2.e / empty-02
                          :ARG1 (s2.s2 / sink
                                       :same-as s1.s2))
               :op2 (s2.h / have-03
                          :ARG0 s2.s2
                          :ARG1 (s2.f / faucet
                                      :mod (s2.s / silver)
                                      :same-as s1.f)))
   :snt3 (s3.a / and
               :op1 (s3.b / black-04
                          :ARG1 (s3.t / top
                                      :mod (s3.c / counter)
                                      :same-as s1.t))
               :op2 (s3.h / have-03
                          :ARG0 s3.t
                          :ARG1 (s3.p / plant
                                      :quant (s3.f / few)
                                      :ARG1-of (s3.g / grow-03))))
   :snt4 (s4.a / and
               :op1 (s4.g / green-02
                          :ARG1 (s4.p2 / plant
                                       :ARG1-of (s4.j / join-04)
                                       :same-as s3.p))
               :op2 (s4.p / place-01
                          :ARG1 s4.p2
                          :ARG2 (s4.c / counter
                                      :same-as s1.t)))
   :snt5 (s5.k / knife
               :quant (s5.f / few)
               :location (s5.c / counter
                               :same-as s1.t)
               :mod (s5.a / also)))