# ::id train2014~COCO_train2014_000000536317
# ::doc_file train2014~COCO_train2014_000000536317
# ::tok A pizza with cheese and tomato sauce on top is sitting on a plate . <next_sent> The pizza is on a white plate , which is on a table . <next_sent> A fork and a knife are also on the table , with the fork on the left side of the plate and the knife on the right .
(d / document
   :snt1 (s1.s2 / sit-01
                :ARG1 (s1.p / pizza
                            :ARG0-of (s1.h / have-03
                                           :ARG1 (s1.a / and
                                                       :location (s1.t2 / top)
                                                       :op1 (s1.c / cheese)
                                                       :op2 (s1.s / sauce
                                                                  :mod (s1.t / tomato)))))
                :ARG2 (s1.p2 / plate))
   :snt2 (s2.b / be-located-at-91
               :ARG1 (s2.p / pizza
                           :same-as s1.p)
               :ARG2 (s2.p2 / plate
                            :ARG1-of (s2.w / white-03)
                            :location (s2.t / table)
                            :same-as s1.p2))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.a2 / and
                            :op1 (s3.f / fork))
               :ARG1-of (s3.m / mean-01
                              :ARG2 (s3.a3 / and
                                           :op1 (s3.b2 / be-located-at-91
                                                       :ARG1 s3.f
                                                       :ARG2 (s3.s / side
                                                                   :ARG1-of (s3.l / left-20)))
                                           :op2 (s3.b3 / be-located-at-91
                                                       :ARG1 s3.a2
                                                       :ARG2 (s3.s2 / side
                                                                    :ARG1-of (s3.r / right-04)
                                                                    :part-of (s3.p / plate
                                                                                   :same-as s1.p2))
                                                       :ARG2 (s3.k / knife)
                                                       :op2 s3.k)))
               :ARG2 (s3.t / table
                           :same-as s2.t)
               :mod (s3.a / also)))