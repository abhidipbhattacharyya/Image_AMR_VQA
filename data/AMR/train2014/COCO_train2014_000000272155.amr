# ::id train2014~COCO_train2014_000000272155
# ::doc_file train2014~COCO_train2014_000000272155
# ::tok A man is sitting at a desk with two laptops in front of him . <next_sent> One laptop is on the desk in front of him , and the other is on his lap . <next_sent> There are also two keyboards on the desk , one in front of the man and the other to his right . <next_sent> A mouse is located on the right side of the desk . <next_sent> There are two chairs in the room , one behind the man and the other to his left . <next_sent> A TV is mounted on the wall above the man . <next_sent> There are also two books on the desk , one in front of the man and the other to his right .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.m / man)
               :ARG2 (s1.d / desk
                           :mod (s1.c / country
                                      :name (s1.n / name)))
               :rel (s1.l / laptop
                          :location (s1.i / in-front-of
                                          :op1 s1.m)
                          :quant "2"))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.l2 / laptop
                                       :mod (s2.o / one))
                          :ARG2 (s2.d / desk
                                      :location (s2.i / in-front-of
                                                      :op1 (s2.h / he
                                                                 :part (s2.l / lap)
                                                                 :same-as s1.m))
                                      :same-as s1.d))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.l3 / laptop
                                        :mod (s2.o2 / other))
                           :ARG2 s2.l))
   :snt3 (s3.a2 / and
                :op1 (s3.k / keyboard
                           :ARG2-of (s3.i2 / include-91
                                           :location (s3.i / in-front-of
                                                           :op1 (s3.m / man
                                                                      :same-as s1.m)))
                           :ARG1-of s3.i2
                           :ARG2-of (s3.i3 / include-91
                                           :ARG1 (s3.k2 / keyboard
                                                        :ARG1-of (s3.r / right-04
                                                                       :ARG2 s3.m)))
                           :location (s3.d / desk
                                           :same-as s1.d)
                           :mod (s3.a / also)
                           :quant "2")
                :op2 s3.k2)
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.m / mouse)
               :ARG2 (s4.s / side
                           :ARG1-of (s4.r / right-04
                                          :part-of (s4.d / desk
                                                         :same-as s1.d))))
   :snt5 (s5.a / and
               :op1 (s5.c / chair
                          :location (s5.r / room)
                          :location (s5.b / behind
                                          :op1 (s5.m / man
                                                     :same-as s1.m))
                          :quant "1"
                          :quant "2")
               :op2 (s5.c2 / chair
                           :location (s5.l / left-20
                                           :ARG2 s5.m)
                           :mod (s5.o / other)))
   :snt6 (s6.m2 / mount-03
                :ARG1 (s6.t / television)
                :location (s6.w / wall
                                :location (s6.a / above
                                                :op1 (s6.m / man
                                                           :same-as s1.m))))
   :snt7 (s7.b / be-located-at-91
               :ARG1 (s7.b2 / book
                            :ARG2-of (s7.i2 / include-91
                                            :location (s7.i / in-front-of
                                                            :op1 (s7.m / man
                                                                       :same-as s1.m)))
                            :example (s7.a2 / and
                                            :op2 (s7.b3 / book
                                                        :ARG1-of (s7.r / right-04
                                                                       :ARG2 s7.m)))
                            :op1-of s7.a2
                            :mod (s7.a / also)
                            :quant "1"
                            :quant "2")
               :ARG2 (s7.d / desk
                           :same-as s1.d)))