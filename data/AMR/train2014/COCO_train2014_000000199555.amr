# ::id train2014~COCO_train2014_000000199555
# ::doc_file train2014~COCO_train2014_000000199555
# ::tok A man is walking on a sidewalk , wearing a black jacket and blue jeans . <next_sent> He is talking on his cell phone . <next_sent> The sidewalk is lined with trees and benches . <next_sent> There are three benches , one on the left side , one in the middle , and one on the right side of the man . <next_sent> The trees are bare and have no leaves .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.w / walk-01
                          :ARG0 (s1.m / man)
                          :ARG2 (s1.s / sidewalk))
               :op2 (s1.w2 / wear-01
                           :ARG0 s1.m
                           :ARG1 (s1.a2 / and
                                        :op1 (s1.j / jacket
                                                   :ARG1-of (s1.b / black-04))
                                        :op2 (s1.j2 / jeans
                                                    :mod (s1.b2 / blue)))))
   :snt2 (s2.t / talk-01
               :ARG0 (s2.h / he
                           :same-as s1.m)
               :instrument (s2.p / phone
                                 :mod (s2.c / cell)
                                 :poss s2.h))
   :snt3 (s3.l / line-01
               :ARG1 (s3.s / sidewalk
                           :same-as s1.s)
               :ARG2 (s3.a / and
                           :op1 (s3.t / tree)
                           :op2 (s3.b / bench)))
   :snt4 (s4.b / bench
               :domain (s4.a / and
                             :location (s4.s2 / side
                                              :ARG1-of (s4.r / right-04)
                                              :part-of (s4.m / man
                                                             :same-as s1.m))
                             :op1 (s4.o / one
                                        :location (s4.s / side
                                                        :ARG1-of (s4.l / left-20)))
                             :op2 (s4.o2 / one
                                         :location (s4.m2 / middle)))
               :quant "3")
   :snt5 (s5.a / and
               :op1 (s5.b / bare-02
                          :ARG1 (s5.t / tree))
               :op2 (s5.h / have-03
                          :ARG0 s5.t
                          :ARG1 (s5.l / leaf
                                      :polarity "-"))))