# ::id train2014~COCO_train2014_000000092274
# ::doc_file train2014~COCO_train2014_000000092274
# ::tok A young boy is standing in front of a glass window , watching a black bear in its enclosure . <next_sent> The boy is wearing a green shirt and blue jeans . <next_sent> The bear is standing on the other side of the glass , looking at the boy . <next_sent> The enclosure has a pond and some rocks .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.s / stand-01
                          :ARG1 (s1.b3 / boy
                                       :mod (s1.y / young))
                          :ARG2 (s1.i / in-front-of
                                      :op1 (s1.w2 / window
                                                  :consist-of (s1.g / glass))))
               :op2 (s1.w / watch-01
                          :ARG0 s1.b3
                          :ARG1 (s1.b / bear
                                      :ARG1-of (s1.b2 / black-04)
                                      :location (s1.e / enclosure)
                                      :poss-of s1.e)))
   :snt2 (s2.w / wear-01
               :ARG0 (s2.b2 / boy
                            :same-as s1.b3)
               :ARG1 (s2.a / and
                           :op1 (s2.s / shirt
                                      :ARG1-of (s2.g / green-02))
                           :op2 (s2.j / jeans
                                      :mod (s2.b / blue))))
   :snt3 (s3.a / and
               :op1 (s3.s2 / stand-01
                           :ARG1 (s3.b / bear
                                       :same-as s1.b2)
                           :ARG2 (s3.s / side
                                       :mod (s3.o / other)
                                       :mod (s3.g / glass
                                                  :same-as s1.w2)))
               :op2 (s3.l / look-01
                          :ARG0 s3.b
                          :ARG1 (s3.b2 / boy
                                       :same-as s1.b3)))
   :snt4 (s4.h / have-03
               :ARG0 (s4.e / enclosure
                           :same-as s1.e)
               :ARG1 (s4.a / and
                           :op1 (s4.p / pond)
                           :op2 (s4.r / rock
                                      :quant (s4.s / some)))))