# ::id train2014~COCO_train2014_000000545844
# ::doc_file train2014~COCO_train2014_000000545844
# ::tok A large pizza with various toppings is placed on a white plate on a dining table . <next_sent> The pizza is topped with clams , mussels , and shrimp . <next_sent> There are several other plates of food on the table , including a pizza with a different topping . <next_sent> A person is sitting at the table , and there are multiple forks and knives on the table as well .
(d / document
   :snt1 (s1.p2 / place-01
                :ARG1 (s1.p / pizza
                            :ARG0-of (s1.h / have-03
                                           :ARG1 (s1.p4 / portion
                                                        :mod (s1.v / various)))
                            :mod (s1.l / large))
                :ARG2 (s1.p3 / plate
                             :ARG1-of (s1.w / white-03)
                             :location (s1.t / table
                                             :purpose (s1.d / dine-01))))
   :snt2 (s2.t / top-01
               :ARG1 (s2.p / pizza
                           :same-as s1.p)
               :ARG2 (s2.a / and
                           :op1 (s2.c / crab)
                           :op2 (s2.c2 / crab)
                           :op3 (s2.s / shrimp)))
   :snt3 (s3.i / include-01
               :ARG1 (s3.p / pizza
                           :ARG0-of (s3.h / have-03
                                          :ARG1 (s3.t2 / thing
                                                       :ARG1-of (s3.d / differ-02)
                                                       :ARG2-of (s3.t3 / top-01))))
               :ARG2 (s3.p2 / plate
                            :quant (s3.s / several)
                            :consist-of (s3.f / food)
                            :location (s3.t / table
                                            :same-as s1.t)
                            :mod (s3.o / other)))
   :snt4 (s4.a / and
               :op1 (s4.s / sit-01
                          :ARG1 (s4.p / person)
                          :ARG2 (s4.t / table
                                      :same-as s1.t))
               :op2 (s4.a2 / and
                           :quant (s4.m / multiple)
                           :location s4.t
                           :mod (s4.a3 / as-well)
                           :op1 (s4.p2 / pitchfork)
                           :op2 (s4.k / knife))))