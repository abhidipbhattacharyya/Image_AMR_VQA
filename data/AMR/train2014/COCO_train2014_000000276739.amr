# ::id train2014~COCO_train2014_000000276739
# ::doc_file train2014~COCO_train2014_000000276739
# ::tok A row of motorcycles are on display , with one motorcycle in the center and the others lined up behind it . <next_sent> The motorcycles are silver and black in color . <next_sent> The motorcycles are on a black platform , and there are ropes around them to keep people from getting too close . <next_sent> The motorcycles are arranged in a way that they appear to be in a line .
(d / document
   :snt1 (s1.d / display-01
               :ARG1 (s1.r / row
                           :consist-of (s1.m / motorcycle))
               :example (s1.a / and
                              :op1 (s1.b / be-located-at-91
                                         :ARG1 (s1.m2 / motorcycle
                                                      :quant "1")
                                         :ARG2 (s1.c / center))
                              :op2 (s1.l / line-up-02
                                         :ARG1 (s1.m3 / motorcycle
                                                      :mod (s1.o / other))
                                         :location (s1.b2 / behind
                                                          :op1 s1.m2))))
   :snt2 (s2.a / and
               :ARG2-of (s2.c / color-01)
               :domain (s2.m / motorcycle
                             :same-as s1.m)
               :op1 (s2.s / silver)
               :op2 (s2.b / black-04))
   :snt3 (s3.a / and
               :op1 (s3.m / motorcycle
                          :location (s3.p2 / platform
                                           :ARG1-of (s3.b / black-04))
                          :same-as s1.m)
               :op2 (s3.s / string
                          :ARG0-of (s3.k / keep-04
                                         :ARG1 (s3.p / person)
                                         :ARG2 (s3.g / get-05
                                                     :ARG1 s3.p
                                                     :ARG2 (s3.c / close-06
                                                                 :ARG1 s3.p
                                                                 :ARG2-of (s3.h / have-degree-91
                                                                                :ARG1 s3.p
                                                                                :ARG3 (s3.t2 / too)))))
                          :ARG3-of (s3.t / tie-01)
                          :location (s3.a2 / around
                                           :op1 s3.m)))
   :snt4 (s4.a2 / arrange-01
                :ARG1 (s4.m / motorcycle
                            :same-as s1.m)
                :manner (s4.a / appear-02
                              :ARG1 (s4.l / line
                                          :domain s4.m))))