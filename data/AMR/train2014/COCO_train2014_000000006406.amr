# ::id train2014~COCO_train2014_000000006406
# ::doc_file train2014~COCO_train2014_000000006406
# ::tok A pair of scissors with black handles are laying on a table . <next_sent> The scissors are next to a glass jar with a black handle . <next_sent> There are several other glass jars and bottles on the table , some with black handles . <next_sent> The table is filled with various items , creating a cluttered appearance .
(d / document
   :snt1 (s1.l / lay-01
               :ARG1 (s1.s / scissors
                           :quant (s1.p / pair)
                           :ARG0-of (s1.h / handle-01))
               :ARG2 (s1.t / table)
               :rel (s1.b / black-04
                          :ARG1 (s1.h2 / handle-01
                                       :ARG0 s1.s)))
   :snt2 (s2.b / be-located-at-91
               :ARG1 (s2.s / scissors
                           :same-as s1.b)
               :ARG2 (s2.n / next-to
                           :op1 (s2.j / jar
                                      :ARG0-of (s2.h2 / have-03
                                                      :ARG1 (s2.h / handle
                                                                  :ARG1-of (s2.b2 / black-04)))
                                      :consist-of (s2.g / glass))))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.a / and
                           :quant (s3.s / several)
                           :ARG2-of (s3.i / include-91
                                          :ARG1 (s3.s2 / some
                                                       :ARG0-of (s3.h / handle-01
                                                                      :ARG1 s3.a)
                                                       :ARG0-of (s3.h2 / handle-01
                                                                       :ARG1 s3.a
                                                                       :ARG1-of (s3.b2 / black-04))))
                           :mod (s3.o / other)
                           :op1 (s3.b3 / bottle
                                       :consist-of (s3.g / glass
                                                         :consist (s3.b4 / bottle)))
                           :op2 s3.b4)
               :ARG2 (s3.t / table
                           :same-as s1.t))
   :snt4 (s4.f / fill-01
               :ARG0-of (s4.c / create-01
                              :ARG1 (s4.a / appearance
                                          :mod (s4.l / literal)))
               :ARG1 (s4.t / table
                           :same-as s1.t)
               :ARG2 (s4.i / item
                           :mod (s4.v / various))))