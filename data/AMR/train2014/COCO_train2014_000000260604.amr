# ::id train2014~COCO_train2014_000000260604
# ::doc_file train2014~COCO_train2014_000000260604
# ::tok A row of red double decker buses are parked on a gravel lot . <next_sent> There are three buses in total , with one on the left side , one in the middle , and one on the right side . <next_sent> The buses are parked in a straight line , with the first bus being the furthest to the left , and the third bus being the furthest to the right .
(d / document
   :snt1 (s1.p / park-01
               :ARG1 (s1.b / bus
                           :quant (s1.r2 / row)
                           :ARG1-of (s1.r / red-02)
                           :mod (s1.d / decker
                                      :mod (s1.d2 / double)))
               :ARG2 (s1.l / lot
                           :consist-of (s1.g / gravel)))
   :snt2 (s2.b / bus
               :ARG2-of (s2.t / total-01)
               :consist-of (s2.a / and
                                 :op1 (s2.b2 / bus
                                             :location (s2.s / side
                                                             :ARG1-of (s2.l / left-20)))
                                 :op2 (s2.b3 / bus
                                             :location (s2.m / middle)
                                             :location (s2.s2 / side
                                                              :ARG1-of (s2.r / right-04))))
               :quant "3")
   :snt3 (s3.p / park-01
               :ARG1 (s3.b / bus
                           :ARG0-of (s3.h / have-03
                                          :ARG1 (s3.a / and
                                                      :op1 (s3.h2 / have-degree-91
                                                                  :ARG1 (s3.b2 / bus
                                                                               :ord (s3.o / ordinal-entity
                                                                                          :value "1"))
                                                                  :ARG2 (s3.f / far)
                                                                  :ARG3 (s3.m / most))
                                                      :op2 (s3.m2 / most
                                                                  :ord (s3.o2 / ordinal-entity
                                                                              :value "3"))
                                                      :domain-of s3.m2
                                                      :op3 (s3.h3 / have-degree-91
                                                                  :ARG1 (s3.b3 / bus
                                                                               :ord s3.o2)
                                                                  :ARG2 (s3.f2 / far
                                                                               :ARG1-of (s3.r / right-04))
                                                                  :ARG3 (s3.m3 / most))))
                           :same-as s1.b)
               :manner (s3.l2 / line
                              :ARG1-of (s3.s / straight-04))
               :rel (s3.l / left-20)))