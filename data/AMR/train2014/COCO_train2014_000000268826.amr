# ::id train2014~COCO_train2014_000000268826
# ::doc_file train2014~COCO_train2014_000000268826
# ::tok A pizza with various toppings is cut into slices and placed on a metal tray . <next_sent> The pizza is topped with cheese , nuts , and chocolate . <next_sent> There are several slices of pizza on the tray , some of which are placed on top of each other . <next_sent> The pizza slices are arranged in a way that allows for easy access to each slice .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.c2 / cut-01
                           :ARG1 (s1.p / pizza
                                       :ARG0-of (s1.h / have-03
                                                      :ARG1 (s1.c / continent
                                                                  :name (s1.n / name
                                                                              :op2 "Health")
                                                                  :mod (s1.v / various))))
                           :ARG2 (s1.s / slice))
               :op2 (s1.p2 / place-01
                           :ARG1 s1.p
                           :ARG2 (s1.t / tray
                                       :consist-of (s1.m / metal))))
   :snt2 (s2.t / top-01
               :ARG1 (s2.p / pizza
                           :same-as s1.p)
               :ARG2 (s2.a / and
                           :op1 (s2.c / cheese)
                           :op2 (s2.n / nut)
                           :op3 (s2.c2 / chocolate)))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.s2 / slice
                            :quant (s3.s / several)
                            :ARG2-of (s3.i / include-91
                                           :ARG1 (s3.s3 / slice
                                                        :ARG1-of (s3.p3 / place-01
                                                                        :ARG2 (s3.t / top
                                                                                    :op1 (s3.o / other
                                                                                               :mod (s3.e / each))))
                                                        :mod (s3.s4 / some)))
                            :mod (s3.p / pizza))
               :ARG2 (s3.t2 / tray
                            :same-as s1.t)
               :rel (s3.p2 / pizza))
   :snt4 (s4.a3 / arrange-01
                :ARG0-of (s4.a2 / allow-01
                                :ARG1 (s4.a / access-01
                                            :ARG1 (s4.s2 / slice
                                                         :mod (s4.e / each))
                                            :ARG1-of (s4.e2 / easy-05)))
                :ARG1 (s4.s / slice
                            :mod (s4.p / pizza)
                            :same-as s3.p2)))