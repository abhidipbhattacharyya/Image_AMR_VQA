# ::id train2014~COCO_train2014_000000118974
# ::doc_file train2014~COCO_train2014_000000118974
# ::tok A small white dog is sitting on the sidewalk outside a restaurant . <next_sent> The dog is wearing a collar and is looking at the camera . <next_sent> The restaurant has several chairs and dining tables , and a few people are sitting at the tables . <next_sent> There are also a couple of potted plants in the restaurant , one near the left side and the other near the right side .
(d / document
   :snt1 (s1.s2 / sit-01
                :ARG1 (s1.d / dog
                            :ARG1-of (s1.w / white-03)
                            :mod (s1.s3 / small))
                :ARG2 (s1.s / sidewalk
                            :location (s1.o / outside
                                            :op1 (s1.r / restaurant))))
   :snt2 (s2.a / and
               :op1 (s2.w / wear-01
                          :ARG0 (s2.d / dog
                                      :same-as s1.d)
                          :ARG1 (s2.c2 / collar))
               :op2 (s2.l / look-01
                          :ARG0 s2.d
                          :ARG1 (s2.c / camera)))
   :snt3 (s3.a2 / and
                :op1 (s3.h / have-03
                           :ARG0 (s3.r / restaurant
                                       :same-as s1.r)
                           :ARG1 (s3.a / and
                                       :op1 (s3.c / chair
                                                  :quant (s3.s / several))
                                       :op2 (s3.t / table
                                                  :mod (s3.d / dine-01))))
                :op2 (s3.s2 / sit-01
                            :ARG1 (s3.p / person
                                        :quant (s3.f / few))
                            :ARG2 s3.a))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.p / plant
                           :quant (s4.c / couple)
                           :ARG1-of (s4.p3 / poison-02)
                           :domain (s4.a2 / and
                                          :op2 (s4.p2 / plant
                                                      :ARG1-of (s4.n / near-02
                                                                     :ARG2 (s4.s / side
                                                                                 :ARG1-of (s4.l / left-20)))
                                                      :ARG1-of (s4.n2 / near-02
                                                                      :ARG2 (s4.s2 / side
                                                                                   :ARG1-of (s4.r2 / right-04)))
                                                      :mod (s4.o / other)
                                                      :quant "1"))
                           :op1-of s4.a2
                           :mod (s4.a / also))
               :ARG2 (s4.r / restaurant
                           :same-as s1.r)))