# ::id train2014~COCO_train2014_000000074082
# ::doc_file train2014~COCO_train2014_000000074082
# ::tok The image features a refrigerator with its door open , revealing a variety of food items . <next_sent> The refrigerator is filled with several bottles , some of which are placed on the middle shelf , while others are on the top and bottom shelves . <next_sent> There are also a few boxes of food , including one on the top shelf and two on the bottom shelf . <next_sent> The refrigerator is open , allowing the viewer to see the contents inside .
(d / document
   :snt1 (s1.f / feature-01
               :ARG0 (s1.i / image)
               :ARG1 (s1.r / refrigerator
                           :ARG0-of (s1.r2 / reveal-01
                                           :ARG1 (s1.i2 / item
                                                        :mod (s1.f2 / food)
                                                        :mod (s1.v / variety)))
                           :manner (s1.o / open-09
                                         :ARG1 (s1.d / door))
                           :part s1.d))
   :snt2 (s2.f / fill-01
               :ARG1 (s2.r / refrigerator
                           :same-as s1.r)
               :ARG2 (s2.b / bottle
                           :quant (s2.s / several)
                           :ARG2-of (s2.i / include-91
                                          :ARG1 (s2.b2 / bottle
                                                       :ARG1-of (s2.p / place-01
                                                                      :ARG1-of (s2.c / contrast-01
                                                                                     :ARG2 (s2.p2 / place-01
                                                                                                  :ARG1 s2.b2
                                                                                                  :ARG2 (s2.s3 / shelf
                                                                                                               :ARG2 (s2.a / and
                                                                                                                           :op1 (s2.s4 / shelf
                                                                                                                                       :mod (s2.t / top))
                                                                                                                           :op2 (s2.s5 / shelf
                                                                                                                                       :location (s2.b3 / bottom)))
                                                                                                               :op1-of s2.a)))
                                                                      :ARG2 (s2.s2 / shelf
                                                                                   :mod (s2.m / middle)))
                                                       :mod (s2.s6 / some)
                                                       :mod (s2.o / other)))))
   :snt3 (s3.i / include-01
               :ARG1 (s3.a2 / and
                            :op1 (s3.b3 / box
                                        :location (s3.s / shelf
                                                        :mod (s3.t / top))
                                        :quant "1")
                            :op2 (s3.b4 / box
                                        :location (s3.s2 / shelf
                                                         :location (s3.b / bottom))
                                        :quant "2"))
               :ARG2 (s3.b2 / box
                            :quant (s3.f / few)
                            :consist-of (s3.f2 / food)
                            :mod (s3.a / also)))
   :snt4 (s4.o / open-01
               :ARG0-of (s4.a / allow-01
                              :ARG1 (s4.s / see-01
                                          :ARG0 (s4.p / person
                                                      :ARG0-of (s4.v / view-01))
                                          :ARG1 (s4.t / thing
                                                      :ARG1-of (s4.c / contain-01)
                                                      :location (s4.r / refrigerator
                                                                      :same-as s1.r))))
               :ARG1 s4.r))