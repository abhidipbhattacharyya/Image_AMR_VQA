# ::id train2014~COCO_train2014_000000512275
# ::doc_file train2014~COCO_train2014_000000512275
# ::tok A bunch of bananas are hanging from a tree . <next_sent> The bananas are green and unripe , and they are attached to the tree by a stem . <next_sent> The bananas are in various stages of ripeness , with some appearing more green than others . <next_sent> The bananas are hanging in a bunch , with some overlapping each other .
(d / document
   :snt1 (s1.h / hanging-07
               :ARG1 (s1.b / banana
                           :quant (s1.b2 / bunch))
               :ARG2 (s1.t / tree))
   :snt2 (s2.a2 / and
                :op1 (s2.a / and
                           :op1 (s2.g / green-02
                                      :ARG1 (s2.b / banana
                                                  :same-as s1.b))
                           :op2 (s2.u / unripe
                                      :domain s2.b
                                      :polarity "-"))
                :op2 (s2.a3 / attach-01
                            :ARG1 s2.b
                            :ARG2 (s2.t / tree
                                        :same-as s1.t)
                            :instrument (s2.s / stem)))
   :snt3 (s3.r / rip-01
               :ARG1 (s3.b / banana
                           :example (s3.a / appear-02
                                          :ARG1 (s3.h / have-degree-91
                                                      :ARG1 (s3.b2 / banana
                                                                   :quant (s3.s / some))
                                                      :ARG2 (s3.g / green-02
                                                                  :ARG1 s3.b2)
                                                      :ARG3 (s3.m / more)
                                                      :ARG4 (s3.o / other)))
                           :same-as s1.b)
               :mod (s3.s2 / stage
                           :mod (s3.v / various)))
   :snt4 (s4.h / hang-01
               :quant (s4.b3 / bunch)
               :ARG1 (s4.b / banana
                           :ARG0-of (s4.o / overlap-01
                                          :ARG1 (s4.b2 / banana
                                                       :quant (s4.s / some)
                                                       :ARG1-of (s4.i / include-91
                                                                      :ARG2 s4.b)))
                           :same-as s1.b)))