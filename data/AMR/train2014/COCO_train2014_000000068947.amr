# ::id train2014~COCO_train2014_000000068947
# ::doc_file train2014~COCO_train2014_000000068947
# ::tok A pizza with cheese and meat toppings is on a plate . <next_sent> The pizza is sliced into four pieces . <next_sent> There are two cups on the table , one near the top right corner and the other near the top left corner . <next_sent> A fork is also present on the table , located near the right side of the pizza .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.p / pizza
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.p3 / portion
                                                       :consist-of (s1.a / and
                                                                         :op1 (s1.c / cheese)
                                                                         :op2 (s1.m / meat)))))
               :ARG2 (s1.p2 / plate))
   :snt2 (s2.s / slice-01
               :ARG1 (s2.p2 / pizza
                            :same-as s1.p)
               :ARG2 (s2.p / piece
                           :quant "4"))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.c3 / cup
                            :ARG2-of (s3.i / include-91
                                           :ARG1 (s3.a / and
                                                       :op1 (s3.n / near-02
                                                                  :ARG1 (s3.c4 / cup
                                                                               :mod (s3.o / other
                                                                                          :op2 (s3.n2 / near-02
                                                                                                      :ARG1 s3.c4
                                                                                                      :ARG2 (s3.c2 / corner
                                                                                                                   :ARG1-of (s3.l / left-20)
                                                                                                                   :mod (s3.t3 / top)))))
                                                                  :ARG2 (s3.c / corner
                                                                              :ARG1-of (s3.r / right-04)
                                                                              :mod (s3.t2 / top)))))
                            :quant "1"
                            :quant "2")
               :ARG2 (s3.t / table))
   :snt4 (s4.p2 / present-02
                :ARG1 (s4.f / fork)
                :ARG2 (s4.t / table
                            :ARG1-of (s4.n / near-02
                                           :ARG2 (s4.s / side
                                                       :ARG1-of (s4.r / right-04)
                                                       :part-of (s4.p / pizza
                                                                      :same-as s1.p)))
                            :same-as s3.t)
                :mod (s4.a / also)))