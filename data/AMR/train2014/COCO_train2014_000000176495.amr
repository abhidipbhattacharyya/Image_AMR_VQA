# ::id train2014~COCO_train2014_000000176495
# ::doc_file train2014~COCO_train2014_000000176495
# ::tok A red double decker bus is driving down a street with a group of people on the top . <next_sent> The bus is in the middle of the street and has a license plate that reads LF 145 . <next_sent> The people on the top of the bus are looking out at the city , enjoying the view .
(d / document
   :snt1 (s1.d3 / drive-01
                :ARG0 (s1.b / bus
                            :ARG1-of (s1.r / red-02)
                            :mod (s1.d / double-decker)
                            :part (s1.t / top)
                            :prep-with (s1.g / group
                                             :consist-of (s1.p / person
                                                               :location s1.t)))
                :ARG1 (s1.s / street)
                :direction (s1.d2 / down))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.b2 / bus
                                       :same-as s1.d)
                          :ARG2 (s2.m / middle
                                      :part-of (s2.s / street
                                                     :same-as s1.s)))
               :op2 (s2.h / have-03
                          :ARG0 s2.b2
                          :ARG1 (s2.p / plate
                                      :ARG1-of (s2.r / read-01
                                                     :ARG3 (s2.p2 / product
                                                                  :name (s2.n / name
                                                                              :op1 "LF"
                                                                              :op2 "145")))
                                      :mod (s2.l / license-01
                                                 :ARG1 s2.b2))))
   :snt3 (s3.a / and
               :op1 (s3.l / look-01
                          :ARG0 (s3.p / person
                                      :location (s3.t / top
                                                      :part-of (s3.b / bus
                                                                     :same-as s1.d))
                                      :same-as s1.t)
                          :ARG1 (s3.c / city))
               :op2 (s3.e / enjoy-01
                          :ARG0 s3.p
                          :ARG1 (s3.v / view-01
                                      :ARG0 s3.p
                                      :ARG1 s3.c))))