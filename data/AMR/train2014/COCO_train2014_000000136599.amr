# ::id train2014~COCO_train2014_000000136599
# ::doc_file train2014~COCO_train2014_000000136599
# ::tok A bunch of bananas are hanging from strings in a market . <next_sent> There are three bunches of bananas , with one bunch hanging from the left side , another from the right side , and the third bunch hanging from the center . <next_sent> The bananas are yellow and ripe , and they are hanging in a way that they are easily accessible to customers .
(d / document
   :snt1 (s1.h / hanging-07
               :ARG1 (s1.b / banana
                           :quant (s1.b2 / bunch))
               :ARG2 (s1.s / string)
               :location (s1.m / market))
   :snt2 (s2.m / multi-sentence
               :snt1 (s2.l2 / load
                            :ARG0-of (s2.h4 / have-03
                                            :ARG1 (s2.a / and
                                                        :op1 (s2.h / hanging-07
                                                                   :ARG1 (s2.b2 / bunch
                                                                                :quant (s2.o / one))
                                                                   :ARG2 (s2.s / side
                                                                               :ARG1-of (s2.l / left-20)))
                                                        :op2 (s2.h2 / hanging-07
                                                                    :ARG1 (s2.b3 / bunch
                                                                                 :mod (s2.a2 / another))
                                                                    :ARG2 (s2.s2 / side
                                                                                 :ARG1-of (s2.r / right-04)))
                                                        :op3 (s2.h3 / hanging-07
                                                                    :ARG1 (s2.b4 / bunch
                                                                                 :ord (s2.o2 / ordinal-entity
                                                                                             :value "3"))
                                                                    :ARG2 (s2.c / center-02))))
                            :consist-of (s2.b / banana)
                            :quant "3"
                            :same-as s1.b)
               :snt2 s2.h4)
   :snt3 (s3.a2 / and
                :op1 (s3.y / yellow-02
                           :ARG1 (s3.b / banana
                                       :same-as s1.b))
                :op2 (s3.r / ripe-02
                           :ARG1 s3.b)
                :op3 (s3.h / hang-01
                           :ARG1 s3.b
                           :manner (s3.a / access-01
                                         :ARG0 (s3.c / customer)
                                         :ARG1 s3.b
                                         :ARG1-of (s3.e / easy-05)))))