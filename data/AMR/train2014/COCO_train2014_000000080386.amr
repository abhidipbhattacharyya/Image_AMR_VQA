# ::id train2014~COCO_train2014_000000080386
# ::doc_file train2014~COCO_train2014_000000080386
# ::tok A donut factory is shown with a conveyor belt of donuts . <next_sent> There are at least 12 donuts visible on the conveyor belt , some of which are glazed . <next_sent> The donuts are in various stages of production , and the conveyor belt is moving them along . <next_sent> The scene also includes a person working in the factory , possibly overseeing the production process .
(d / document
   :snt1 (s1.s / show-01
               :ARG1 (s1.f / factory
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.b / belt
                                                      :consist-of (s1.d / donut)
                                                      :mod (s1.c / conveyor)))
                           :mod s1.d))
   :snt2 (s2.s / see-01
               :ARG1 (s2.d / donut
                           :quant (s2.a / at-least
                                        :op1 "12")
                           :ARG2-of (s2.i / include-91
                                          :ARG1 (s2.d2 / donut
                                                       :quant (s2.s2 / some)
                                                       :ARG1-of (s2.g / glaze-01))))
               :location (s2.b / belt
                               :mod (s2.c / conveyor)
                               :same-as s1.b))
   :snt3 (s3.a2 / and
                :op1 (s3.p / produce-01
                           :ARG1 (s3.d / donut
                                       :same-as s2.a)
                           :mod (s3.s / stage
                                      :mod (s3.v / various)))
                :op2 (s3.m / move-01
                           :ARG0 (s3.b / belt
                                       :mod (s3.c / conveyor)
                                       :same-as s1.b)
                           :ARG1 s3.d
                           :ARG2 (s3.a / along)))
   :snt4 (s4.i / include-01
               :ARG1 (s4.p / person
                           :ARG0-of (s4.w / work-01
                                          :location (s4.f / factory
                                                          :same-as s1.d))
                           :ARG0-of (s4.o / oversee-01
                                          :ARG1 (s4.p3 / process-02
                                                       :ARG1 (s4.p4 / produce-01))
                                          :ARG1-of (s4.p2 / possible-01)))
               :ARG2 (s4.s / scene)
               :mod (s4.a / also)))