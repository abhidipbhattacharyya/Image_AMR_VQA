# ::id train2014~COCO_train2014_000000532397
# ::doc_file train2014~COCO_train2014_000000532397
# ::tok A table with two plates of food , one plate has a sandwich and the other has potatoes . <next_sent> There are also two glasses of orange juice on the table . <next_sent> The table is set with silverware , including forks and knives , and a bowl of fruit .
(d / document
   :snt1 (s1.h / have-03
               :ARG0 (s1.t / table)
               :ARG1 (s1.p / plate
                           :consist-of (s1.f / food)
                           :example (s1.a / and
                                          :op1 (s1.h2 / have-03
                                                      :ARG0 (s1.p2 / plate
                                                                   :mod (s1.o / one))
                                                      :ARG1 (s1.s / sandwich))
                                          :op2 (s1.h3 / have-03
                                                      :ARG0 (s1.p3 / plate
                                                                   :mod (s1.o2 / other))
                                                      :ARG1 (s1.p4 / potato)))
                           :quant "2"))
   :snt2 (s2.b / be-located-at-91
               :ARG1 (s2.j / juice
                           :quant (s2.v / volume-quantity
                                        :unit (s2.g / glasses)
                                        :quant "2")
                           :source (s2.o / orange))
               :ARG2 (s2.t / table
                           :same-as s1.t)
               :mod (s2.a / also))
   :snt3 (s3.s / set-01
               :ARG1 (s3.t / table
                           :same-as s1.t)
               :ARG2 (s3.a2 / and
                            :op1 (s3.s2 / silverware
                                        :ARG2-of (s3.i / include-01)
                                        :mod (s3.c / continent))
                            :op2 (s3.b / bowl
                                       :consist-of (s3.f2 / fruit)))
               :accompanier (s3.a / and
                                  :op1 s3.s2
                                  :op2 (s3.k / knife
                                             :ARG1-of (s3.f / fork-out-02)))))