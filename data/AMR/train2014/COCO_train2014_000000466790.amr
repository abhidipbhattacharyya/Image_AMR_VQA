# ::id train2014~COCO_train2014_000000466790
# ::doc_file train2014~COCO_train2014_000000466790
# ::tok Two giraffes are standing in a grassy area near a tree . <next_sent> One giraffe is standing to the left of the tree , while the other is standing to the right . <next_sent> The giraffes are both looking up , possibly at the tree or the sky . <next_sent> The tree is tall and has a few branches , providing shade for the giraffes .
(d / document
   :snt1 (s1.s / stand-01
               :ARG1 (s1.g / giraffe
                           :quant "2")
               :ARG2 (s1.a / area
                           :ARG1-of (s1.n / near-02
                                          :ARG2 (s1.t / tree))
                           :consist-of (s1.g2 / grass)))
   :snt2 (s2.c / contrast-01
               :ARG1 (s2.s / stand-01
                           :ARG1 (s2.g / giraffe
                                       :quant "1")
                           :ARG2 (s2.r / relative-position
                                       :direction (s2.l / left-20)
                                       :op1 (s2.t / tree
                                                  :same-as s1.t)))
               :ARG2 (s2.s2 / stand-01
                            :ARG1 (s2.g2 / giraffe
                                         :mod (s2.o / other))
                            :direction (s2.r2 / right-04
                                              :ARG2 s2.t)))
   :snt3 (s3.l / look-01
               :ARG0 (s3.g / giraffe
                           :mod (s3.b / both)
                           :same-as s1.g)
               :ARG2 (s3.o / or
                           :ARG1-of (s3.p / possible-01)
                           :op1 (s3.t / tree
                                      :same-as s1.t)
                           :op2 (s3.s / sky))
               :direction (s3.u / up))
   :snt4 (s4.a / and
               :ARG0-of (s4.p / provide-01
                              :ARG1 (s4.s / shade-01
                                          :ARG1 (s4.g / giraffe
                                                      :same-as s1.g)))
               :op1 (s4.t / tall
                          :domain (s4.t2 / tree
                                         :same-as s1.t))
               :op2 (s4.h / have-03
                          :ARG0 s4.t2
                          :ARG1 (s4.b / branch
                                      :quant (s4.f / few)))))