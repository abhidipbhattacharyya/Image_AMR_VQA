# ::id train2014~COCO_train2014_000000531190
# ::doc_file train2014~COCO_train2014_000000531190
# ::tok A pizza is on a wooden platter with a pizza cutter on top . <next_sent> The pizza has a few slices missing , and a knife is also present on the platter . <next_sent> The pizza is placed on a dining table , and there are two cups , one near the top left corner and the other near the top right corner .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.p / pizza)
               :ARG2 (s1.p2 / platter
                            :consist-of (s1.w / wood)
                            :part (s1.t2 / top)
                            :prep-with (s1.t / thing
                                             :ARG0-of (s1.c / cut-01
                                                            :ARG1 s1.p)
                                             :location s1.t2)))
   :snt2 (s2.a2 / and
                :op1 (s2.m / miss-01
                           :ARG0 (s2.p / pizza
                                       :same-as s1.p)
                           :ARG1 (s2.s / slice
                                       :quant (s2.f / few)))
                :op2 (s2.p3 / present-02
                            :ARG1 (s2.k / knife)
                            :ARG2 (s2.p2 / platter
                                         :same-as s1.p2)
                            :mod (s2.a / also)))
   :snt3 (s3.a / and
               :op1 (s3.p2 / place-01
                           :ARG1 (s3.p / pizza
                                       :same-as s1.p)
                           :ARG2 (s3.t / table
                                       :mod (s3.d / dine-01)))
               :op2 (s3.c3 / cup
                           :domain (s3.a2 / and
                                          :op1 (s3.c4 / cup
                                                      :ARG1-of (s3.n / near-02
                                                                     :ARG2 (s3.c / corner
                                                                                 :ARG1-of (s3.l / left-20)
                                                                                 :mod (s3.t2 / top)))
                                                      :quant "1")
                                          :op2 (s3.c5 / cup
                                                      :ARG1-of (s3.n2 / near-02
                                                                      :ARG2 (s3.c2 / corner
                                                                                   :ARG1-of (s3.r / right-04)
                                                                                   :mod (s3.t3 / top)))
                                                      :mod (s3.o / other)))
                           :quant "2")))