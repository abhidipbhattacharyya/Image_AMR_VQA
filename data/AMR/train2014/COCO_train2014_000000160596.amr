# ::id train2014~COCO_train2014_000000160596
# ::doc_file train2014~COCO_train2014_000000160596
# ::tok A man is sitting on a park bench with a bicycle parked next to him . <next_sent> The bench is green and the man is wearing an orange jacket . <next_sent> The park is filled with various objects , including a swing set , a slide , and a tricycle . <next_sent> There are also two bicycles in the park , one near the man and another further away .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.s / sit-01
                          :ARG1 (s1.m / man)
                          :ARG2 (s1.b / bench
                                      :location (s1.p / park)))
               :op2 (s1.p2 / park-01
                           :ARG1 (s1.b2 / bicycle)
                           :ARG2 (s1.n / next-to
                                       :op1 s1.m)))
   :snt2 (s2.a / and
               :op1 (s2.b / bench
                          :ARG1-of (s2.g / green-02)
                          :same-as s1.b)
               :op2 (s2.w / wear-01
                          :ARG0 (s2.m / man
                                      :same-as s1.m)
                          :ARG1 (s2.j / jacket
                                      :mod (s2.o / orange))))
   :snt3 (s3.f / fill-01
               :ARG1 (s3.p / park)
               :ARG2 (s3.o / object
                           :ARG2-of (s3.i / include-91
                                          :ARG1 (s3.a / and
                                                      :op1 (s3.s / set
                                                                 :mod (s3.s3 / swing))
                                                      :op2 (s3.s2 / slide)
                                                      :op3 (s3.t / tricycle)))
                           :mod (s3.v / various)))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.b2 / bicycle
                            :ARG1-of (s4.n / near-02
                                           :ARG2 (s4.m / man
                                                       :same-as s1.m))
                            :mod (s4.a / also)
                            :quant "1"
                            :quant "2")
               :ARG2 (s4.p / park
                           :same-as s3.p)
               :rel (s4.b3 / bicycle
                           :ARG1-of (s4.n2 / near-02)
                           :ARG2 (s4.a2 / away
                                        :op1 (s4.f / further)))))