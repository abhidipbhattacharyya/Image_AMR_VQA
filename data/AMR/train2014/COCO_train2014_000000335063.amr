# ::id train2014~COCO_train2014_000000335063
# ::doc_file train2014~COCO_train2014_000000335063
# ::tok A man wearing a helmet and knee pads is riding a skateboard down a street . <next_sent> He is wearing a white shirt and khaki shorts . <next_sent> There are two orange traffic cones on the street , one on the left and one on the right . <next_sent> The man is riding past the cones , possibly navigating around them .
(d / document
   :snt1 (s1.r / ride-01
               :ARG0 (s1.m / man
                           :ARG0-of (s1.w / wear-01
                                          :ARG1 (s1.a / and
                                                      :op1 (s1.h / helmet)
                                                      :op2 (s1.p / pad
                                                                 :purpose (s1.k / knee)))))
               :ARG1 (s1.s / skateboard)
               :direction (s1.d / down
                                :op1 (s1.s2 / street)))
   :snt2 (s2.w / wear-01
               :ARG0 (s2.h / he
                           :same-as s1.m)
               :ARG1 (s2.a / and
                           :op1 (s2.s / shirt
                                      :ARG1-of (s2.w2 / white-03))
                           :op2 (s2.s2 / shorts
                                       :mod (s2.k / khaki))))
   :snt3 (s3.a / and
               :op1 (s3.c / cone
                          :purpose (s3.t / traffic)
                          :location (s3.s / street
                                          :same-as s1.s2)
                          :mod (s3.o / orange)
                          :quant "2")
               :op2 (s3.c2 / cone
                           :ARG1-of (s3.l / left-19)
                           :ARG1-of (s3.r / right-04)
                           :mod s3.t))
   :snt4 (s4.a / and
               :op1 (s4.r / ride-01
                          :ARG0 (s4.m / man
                                      :same-as s1.m)
                          :ARG1 (s4.p / past
                                      :op1 (s4.c / cone)))
               :op2 (s4.n / navigate-01
                          :ARG0 s4.m
                          :ARG1-of (s4.p2 / possible-01)
                          :ARG2 (s4.a2 / around
                                       :op1 s4.c))))