# ::id train2014~COCO_train2014_000000370362
# ::doc_file train2014~COCO_train2014_000000370362
# ::tok A display of various pastries and desserts is arranged on a table . <next_sent> There are two cakes , one with a cupcake on top and another with a donut on top . <next_sent> There are also two trays of cupcakes , one with a donut on top and the other with a cupcake on top . <next_sent> A coffee maker is also present on the table .
(d / document
   :snt1 (s1.a2 / arrange-01
                :ARG1 (s1.d2 / display-01
                             :ARG1 (s1.a / and
                                         :op1 (s1.c / cookie
                                                    :mod (s1.v / various))
                                         :op2 (s1.d / dessert
                                                    :mod s1.v)))
                :ARG2 (s1.t / table))
   :snt2 (s2.a / and
               :op1 (s2.c / cake
                          :quant "2")
               :op2 (s2.c2 / cake
                           :ARG0-of (s2.h / have-03
                                          :ARG1 (s2.c3 / cupcake
                                                       :location (s2.t / top)))
                           :ARG0-of (s2.h2 / have-03
                                           :ARG1 (s2.d / donut
                                                       :location (s2.t2 / top)))
                           :mod (s2.a2 / another)
                           :quant "1"))
   :snt3 (s3.a2 / and
                :op1 (s3.r / Trayvon
                           :consist-of (s3.c / cup)
                           :mod (s3.a / also)
                           :quant "2")
                :op2 (s3.r2 / Trayvon
                            :mod (s3.o2 / other
                                        :ARG0-of (s3.h2 / have-03
                                                        :ARG1 (s3.c2 / cupcake
                                                                     :location (s3.t2 / top)))))
                :rel (s3.o / one
                           :ARG0-of (s3.h / have-03
                                          :ARG1 (s3.d / donut
                                                      :location (s3.t / top)))))
   :snt4 (s4.p2 / present-02
                :ARG1 (s4.p / person
                            :ARG0-of (s4.m / make-01
                                           :ARG1 (s4.c / coffee)))
                :ARG2 (s4.t / table
                            :same-as s1.t)
                :mod (s4.a / also)))