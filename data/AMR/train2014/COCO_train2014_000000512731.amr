# ::id train2014~COCO_train2014_000000512731
# ::doc_file train2014~COCO_train2014_000000512731
# ::tok A toy car show is set up on a parking lot with various cars and trucks . <next_sent> There are several cars parked in a row , including a red car , a yellow car , and a black car . <next_sent> A truck is also parked in the lot . <next_sent> The cars are arranged in a way that they are parked in front of a building . <next_sent> There are also a few potted plants placed around the lot , adding a touch of greenery to the scene .
(d / document
   :snt1 (s1.s / set-up-03
               :ARG1 (s1.s2 / show-04
                            :ARG1 (s1.c / car
                                        :mod (s1.t / toy)))
               :consist-of (s1.a / and
                                 :mod (s1.v / various)
                                 :op1 (s1.c2 / car)
                                 :op2 (s1.t2 / truck))
               :location (s1.l / lot
                               :purpose (s1.p / park-01)))
   :snt2 (s2.p / park-01
               :ARG1 (s2.c / car
                           :quant (s2.s / several)
                           :ARG2-of (s2.i / include-91
                                          :ARG1 (s2.a / and
                                                      :op1 (s2.c2 / car
                                                                  :ARG1-of (s2.r / red-02))
                                                      :op2 (s2.c3 / car
                                                                  :ARG1-of (s2.y / yellow-02))
                                                      :op3 (s2.c4 / car
                                                                  :ARG1-of (s2.b / black-04)))))
               :ARG2 (s2.r2 / row))
   :snt3 (s3.p / park-01
               :ARG1 (s3.t / truck)
               :ARG2 (s3.l / lot
                           :same-as s1.a)
               :mod (s3.a / also))
   :snt4 (s4.a / arrange-01
               :ARG1 (s4.c / car
                           :same-as s2.p)
               :manner (s4.w / way
                             :manner-of (s4.p / park-01
                                              :ARG1 s4.c
                                              :ARG2 (s4.i / in-front-of
                                                          :op1 (s4.b / building)))))
   :snt5 (s5.p / place-01
               :ARG0-of (s5.a / add-02
                              :ARG1 (s5.t / touch
                                          :quant-of (s5.g / greenery))
                              :ARG2 (s5.s / scene))
               :ARG1 (s5.p2 / plant
                            :quant (s5.f / few)
                            :ARG1-of (s5.g2 / grow-03))
               :ARG2 (s5.a3 / around
                            :op1 (s5.l / lot
                                       :same-as s1.a))
               :mod (s5.a2 / also)))