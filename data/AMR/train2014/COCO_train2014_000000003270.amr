# ::id train2014~COCO_train2014_000000003270
# ::doc_file train2014~COCO_train2014_000000003270
# ::tok A tray of various colored donuts sits on a table . <next_sent> The donuts are arranged on a tray with a white background . <next_sent> There are at least 13 donuts in the tray , each with different colors and toppings . <next_sent> The donuts are placed in a way that they are easily visible and accessible . <next_sent> The tray is placed on a table , which is the main surface for the donuts .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.t2 / tray
                            :consist-of (s1.d / donut
                                              :ARG1-of (s1.c / color-01)
                                              :mod (s1.v / various)))
               :ARG2 (s1.t / table))
   :snt2 (s2.a / arrange-01
               :ARG1 (s2.d / donut
                           :same-as s1.d)
               :location (s2.t / tray
                               :ARG0-of (s2.h / have-03
                                              :ARG1 (s2.b / background
                                                          :ARG1-of (s2.w / white-03)))
                               :same-as s1.t2))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.d2 / donut
                            :quant (s3.a2 / at-least
                                          :op1 "13")
                            :accompanier (s3.a / and
                                               :op1 (s3.c2 / color
                                                           :ARG1-of (s3.d / differ-02))
                                               :op2 (s3.c / chip
                                                          :ARG2-of (s3.t / top-01)))
                            :mod (s3.e / each))
               :ARG2 (s3.t2 / tray
                            :same-as s1.t2))
   :snt4 (s4.p / place-01
               :ARG1 (s4.d / donut
                           :same-as s1.d)
               :manner (s4.a2 / and
                              :op1 (s4.s / see-01
                                         :ARG1 s4.d
                                         :ARG1-of (s4.e / easy-05))
                              :op2 (s4.a / access-01
                                         :ARG1 s4.d
                                         :ARG1-of (s4.e2 / easy-05))))
   :snt5 (s5.p / place-01
               :ARG1 (s5.t2 / tray
                            :same-as s1.t2)
               :ARG2 (s5.t / table
                           :mod (s5.s / surface
                                      :purpose (s5.d / donut
                                                     :same-as s1.d)
                                      :mod (s5.m / main))
                           :same-as s1.t)))