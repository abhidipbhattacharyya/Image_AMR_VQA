# ::id train2014~COCO_train2014_000000287105
# ::doc_file train2014~COCO_train2014_000000287105
# ::tok A giraffe is standing in front of a brick building , with its head peeking out from behind the door . <next_sent> The building has two arched openings , one on the left and one on the right . <next_sent> The giraffe is positioned between the two openings , with one door slightly ajar and the other fully open .
(d / document
   :snt1 (s1.s / stand-01
               :ARG1 (s1.g / giraffe
                           :part (s1.h / head))
               :ARG2 (s1.i / in-front-of
                           :op1 (s1.b3 / building
                                       :consist-of (s1.b2 / brick)))
               :manner (s1.p / peek-01
                             :ARG0 s1.h
                             :source (s1.b / behind
                                           :op1 (s1.d / door))))
   :snt2 (s2.h / have-03
               :ARG0 (s2.b / building
                           :same-as s1.b3)
               :ARG1 (s2.o / open-01
                           :ARG1 s2.b
                           :ARG2 (s2.a / and
                                       :op1 (s2.o2 / open-01
                                                   :location (s2.l / left-20)
                                                   :quant "1")
                                       :op2 (s2.o3 / open-01
                                                   :location (s2.r2 / right-04)
                                                   :quant "1"))
                           :mod (s2.r / Arabia)
                           :quant "2"))
   :snt3 (s3.p / position-01
               :ARG1 (s3.g / giraffe
                           :ARG0-of (s3.h / have-03
                                          :ARG1 (s3.a / and
                                                      :op1 (s3.o3 / open-09
                                                                  :ARG1 (s3.d / door)
                                                                  :degree (s3.s / slight))
                                                      :op2 (s3.o2 / open-01
                                                                  :ARG1 (s3.d2 / door
                                                                               :mod (s3.o4 / other))
                                                                  :ARG1-of (s3.f / full-09))))
                           :same-as s1.g)
               :ARG2 (s3.b / between
                           :op1 (s3.t / thing
                                      :ARG1-of (s3.o / open-01)
                                      :quant "2"
                                      :same-as s2.o))))