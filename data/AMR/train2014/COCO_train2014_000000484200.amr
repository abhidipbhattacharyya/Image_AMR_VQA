# ::id train2014~COCO_train2014_000000484200
# ::doc_file train2014~COCO_train2014_000000484200
# ::tok A large pepperoni pizza is sitting on a table with a white plate . <next_sent> The pizza is placed on a wooden table and is surrounded by a few other items . <next_sent> There are two cups , one on the left side of the table and the other on the right side . <next_sent> A fork is also present on the right side of the table .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.p2 / pizza
                            :mod (s1.p / pepperoni)
                            :mod (s1.l / large))
               :ARG2 (s1.t / table
                           :prep-with (s1.p3 / plate
                                             :ARG1-of (s1.w / white-03))))
   :snt2 (s2.a / and
               :op1 (s2.p2 / place-01
                           :ARG1 (s2.p / pizza
                                       :same-as s1.p2)
                           :ARG2 (s2.t / table
                                       :consist-of (s2.w / wood)
                                       :same-as s1.t))
               :op2 (s2.s / surround-01
                          :ARG1 (s2.i / item
                                      :quant (s2.f / few)
                                      :mod (s2.o / other))
                          :ARG2 s2.p))
   :snt3 (s3.a / and
               :op1 (s3.b / be-located-at-91
                          :ARG1 (s3.o / one)
                          :ARG2 (s3.s / side
                                      :ARG1-of (s3.l / left-20)
                                      :part-of (s3.t / table
                                                     :same-as s1.t)))
               :op2 (s3.c2 / cup
                           :location (s3.s2 / side
                                            :ARG1-of (s3.r / right-04))
                           :mod (s3.o2 / other))
               :rel (s3.c / cup
                          :quant s3.o
                          :quant "2"))
   :snt4 (s4.p / present-02
               :ARG1 (s4.f / fork)
               :ARG2 (s4.s / side
                           :ARG1-of (s4.r / right-04
                                          :ARG2 (s4.t / table
                                                      :same-as s1.t))
                           :same-as s3.s2)
               :mod (s4.a / also)))