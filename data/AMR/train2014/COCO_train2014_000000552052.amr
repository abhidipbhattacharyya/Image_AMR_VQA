# ::id train2014~COCO_train2014_000000552052
# ::doc_file train2014~COCO_train2014_000000552052
# ::tok Two women are playing tennis on a court . <next_sent> One woman is holding a tennis racket and the other is holding a tennis ball . <next_sent> The tennis racket is red and white , and the ball is yellow . <next_sent> The women are both wearing shorts , and one of them is wearing a green and black dress .
(d / document
   :snt1 (s1.p / play-01
               :ARG0 (s1.w / woman
                           :quant "2")
               :ARG1 (s1.t / tennis)
               :location (s1.c / court))
   :snt2 (s2.a / and
               :op1 (s2.h / hold-01
                          :ARG0 (s2.w / woman
                                      :quant (s2.o / one))
                          :ARG1 (s2.r / racket
                                      :mod (s2.t / tennis)))
               :op2 (s2.h2 / hold-01
                           :ARG0 (s2.w2 / woman
                                        :mod (s2.o2 / other))
                           :ARG1 (s2.b / ball
                                       :mod (s2.t2 / tennis))))
   :snt3 (s3.a / and
               :op1 (s3.r / racket
                          :ARG1-of (s3.r2 / red-02)
                          :ARG1-of (s3.w / white-03)
                          :mod (s3.t / tennis
                                     :same-as s2.r))
               :op2 (s3.b / ball
                          :ARG1-of (s3.y / yellow-02)
                          :same-as s2.b))
   :snt4 (s4.a / and
               :op1 (s4.w / wear-01
                          :ARG0 (s4.w3 / woman
                                       :mod (s4.b2 / both))
                          :ARG1 (s4.s / shorts))
               :op2 (s4.w2 / wear-01
                           :ARG0 (s4.w4 / woman
                                        :ARG1-of (s4.i / include-91
                                                       :ARG2 s4.w3
                                                       :same-as s2.w)
                                        :quant "1"
                                        :same-as s1.w)
                           :ARG1 (s4.a2 / and
                                        :op1 (s4.d / dress
                                                   :ARG1-of (s4.g / green-02))
                                        :op2 (s4.d2 / dress
                                                    :ARG1-of (s4.b / black-04))))))