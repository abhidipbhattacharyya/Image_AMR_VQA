# ::id train2014~COCO_train2014_000000488032
# ::doc_file train2014~COCO_train2014_000000488032
# ::tok A tennis player is swinging his racket at a tennis ball on a clay court . <next_sent> The ball is in the air , and the player is wearing a white shirt and white shorts . <next_sent> There are two other people on the court , one of them holding a tennis racket .
(d / document
   :snt1 (s1.s / swing-02
               :ARG0 (s1.p / person
                           :ARG0-of (s1.p2 / play-01
                                           :ARG1 (s1.t / tennis)))
               :ARG1 (s1.r / racket
                           :poss s1.p)
               :ARG2 (s1.b / ball
                           :mod s1.t)
               :location (s1.c2 / court
                                :mod (s1.c / clay)))
   :snt2 (s2.a2 / and
                :op1 (s2.b2 / be-located-at-91
                            :ARG1 (s2.b / ball
                                        :same-as s1.b)
                            :ARG2 (s2.a / air))
                :op2 (s2.w / wear-01
                           :ARG0 (s2.p / person
                                       :ARG0-of (s2.p2 / play-01)
                                       :same-as s1.t)
                           :ARG1 (s2.a3 / and
                                        :op1 (s2.s / shirt
                                                   :ARG1-of (s2.w2 / white-03))
                                        :op2 (s2.s2 / shorts
                                                    :ARG1-of (s2.w3 / white-03)))))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.p / person
                           :ARG2-of (s3.i / include-91
                                          :ARG1 (s3.a / 1
                                                      :ARG0-of (s3.h / hold-01
                                                                     :ARG1 (s3.r / racket
                                                                                 :mod (s3.t / tennis)))))
                           :mod (s3.o / other)
                           :quant "2")
               :ARG2 (s3.c / court
                           :same-as s1.c2)))