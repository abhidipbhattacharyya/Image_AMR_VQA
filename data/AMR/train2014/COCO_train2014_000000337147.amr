# ::id train2014~COCO_train2014_000000337147
# ::doc_file train2014~COCO_train2014_000000337147
# ::tok A table is set with plates of food , including pancakes and bananas . <next_sent> There are two plates of pancakes , one with bananas and the other with syrup . <next_sent> There are also two plates of eggs and hash browns . <next_sent> A person is sitting at the table , and there are two cups on the table , one with a spoon in it .
(d / document
   :snt1 (s1.s / set-01
               :ARG1 (s1.t / table)
               :ARG2 (s1.p / plate
                           :consist-of (s1.f / food
                                             :ARG2-of (s1.i / include-01
                                                            :ARG1 (s1.a / and
                                                                        :op1 (s1.b2 / breakfast-01)
                                                                        :op2 (s1.b / banana))))))
   :snt2 (s2.a2 / and
                :op1 (s2.p / plate
                           :consist-of (s2.e / enzyme
                                             :ARG1-of (s2.t / tax-01))
                           :quant "1"
                           :quant "2")
                :op2 (s2.a / and
                           :op1 s2.p
                           :op2 (s2.e2 / enzyme
                                       :part (s2.s / syrup)))
                :rel (s2.p2 / plate
                            :mod (s2.o / other)
                            :part (s2.b / banana)))
   :snt3 (s3.a2 / and
                :consist-of (s3.p / plate
                                  :mod (s3.a / also)
                                  :quant "2")
                :op1 (s3.e / egg)
                :op2 (s3.r / Brown
                           :mod (s3.h / hash)))
   :snt4 (s4.a / and
               :op1 (s4.s / sit-01
                          :ARG1 (s4.p / person)
                          :ARG2 (s4.t / table
                                      :same-as s1.t))
               :op2 (s4.c2 / cup
                           :ARG2-of (s4.i / include-91
                                          :ARG1 (s4.c3 / cup
                                                       :ARG1-of (s4.c / cause-01
                                                                      :ARG0 (s4.s2 / spoon))
                                                       :part s4.s2
                                                       :quant "1"))
                           :quant "2")
               :op3 (s4.b / be-located-at-91
                          :ARG1 s4.c3
                          :ARG2 s4.t)))