# ::id train2014~COCO_train2014_000000100128
# ::doc_file train2014~COCO_train2014_000000100128
# ::tok A display case in a pizza shop features a variety of pizzas . <next_sent> There are three pizzas in total , with one being a vegetable pizza , another a meat pizza , and the third one being a cheese pizza . <next_sent> The pizzas are placed on metal trays , and the display case is filled with glass .
(d / document
   :snt1 (s1.f / feature-01
               :ARG0 (s1.c / case
                           :ARG2-of (s1.d / display-01)
                           :location (s1.s / shop
                                           :mod (s1.p / pizza)))
               :ARG1 (s1.p2 / pizzeria
                            :mod (s1.v / variety)))
   :snt2 (s2.t / total-01
               :ARG1 (s2.p4 / pizzeria
                            :consist-of (s2.a / and
                                              :op1 (s2.p / pizza
                                                         :domain (s2.o / one)
                                                         :mod (s2.v / vegetable))
                                              :op2 (s2.p2 / pizza
                                                          :domain s2.p4
                                                          :mod (s2.m / meat)
                                                          :mod (s2.a2 / another))
                                              :op3 (s2.p3 / pizza
                                                          :domain s2.p4
                                                          :mod (s2.c / cheese)
                                                          :ord (s2.o2 / ordinal-entity
                                                                      :value "3")))
                            :quant "3"))
   :snt3 (s3.a / and
               :op1 (s3.p2 / place-01
                           :ARG1 (s3.p / pizzeria)
                           :ARG2 (s3.b / box
                                       :consist-of (s3.m / metal)))
               :op2 (s3.f / fill-01
                          :ARG1 (s3.c / case
                                      :ARG2-of (s3.d / display-01)
                                      :same-as s1.c)
                          :ARG2 (s3.g / glass))))