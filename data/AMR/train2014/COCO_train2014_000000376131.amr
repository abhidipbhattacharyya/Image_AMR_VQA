# ::id train2014~COCO_train2014_000000376131
# ::doc_file train2014~COCO_train2014_000000376131
# ::tok A laptop computer is sitting on a desk next to a stack of papers . <next_sent> The laptop is open and has a keyboard and a mouse on the desk . <next_sent> There are several books and papers scattered around the desk , including a book on the left side of the laptop and a stack of papers on the right side . <next_sent> Additionally , there is a cup placed on the desk .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.c / computer
                           :mod (s1.l / laptop))
               :ARG2 (s1.d / desk)
               :location (s1.n / next-to
                               :op1 (s1.s2 / stack
                                           :consist-of (s1.p / paper))))
   :snt2 (s2.a / and
               :op1 (s2.o / open-01
                          :ARG1 (s2.l / laptop
                                      :same-as s1.c))
               :op2 (s2.h / have-03
                          :ARG0 s2.l
                          :ARG1 (s2.a2 / and
                                       :location (s2.d / desk
                                                       :same-as s1.d)
                                       :op1 (s2.k / keyboard)
                                       :op2 (s2.m / mouse))))
   :snt3 (s3.s / scatter-01
               :ARG1 (s3.a / and
                           :quant (s3.s2 / several)
                           :ARG2-of (s3.i / include-91
                                          :ARG1 (s3.a2 / and
                                                       :op1 (s3.b2 / book
                                                                   :location (s3.s3 / side
                                                                                    :ARG1-of (s3.l2 / left-20)
                                                                                    :part-of (s3.l / laptop
                                                                                                   :part (s3.s4 / side
                                                                                                                :ARG1-of (s3.r / right-04))
                                                                                                   :same-as s1.c)))
                                                       :op2 (s3.s5 / stack
                                                                   :consist-of (s3.p2 / paper)
                                                                   :location s3.s4)))
                           :op1 (s3.b / book)
                           :op2 (s3.p / paper))
               :ARG2 (s3.a3 / around
                            :op1 (s3.d / desk
                                       :same-as s1.d)))
   :snt4 (s4.p / place-01
               :ARG1 (s4.c / cup)
               :ARG2 (s4.d / desk
                           :same-as s1.d)
               :mod (s4.a / additional)))