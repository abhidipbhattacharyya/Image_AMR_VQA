# ::id train2014~COCO_train2014_000000203034
# ::doc_file train2014~COCO_train2014_000000203034
# ::tok A small kitchen with a white refrigerator , a stove top oven , and a microwave . <next_sent> The refrigerator is covered in various items such as bottles , cups , and a bowl . <next_sent> The oven is located next to the refrigerator and the microwave is above the oven . <next_sent> The kitchen also has a sink and a counter .
(d / document
   :snt1 (s1.k / kitchen
               :ARG0-of (s1.h / have-03
                              :ARG1 (s1.a / and
                                          :op1 (s1.r / refrigerator
                                                     :ARG1-of (s1.w / white-03))
                                          :op2 (s1.o / oven
                                                     :ARG2-of (s1.t / top-01))
                                          :op3 (s1.m / microwave)))
               :mod (s1.s / small))
   :snt2 (s2.c / cover-02
               :ARG1 (s2.r / refrigerator
                           :same-as s1.r)
               :ARG2 (s2.i / item
                           :example (s2.a / and
                                          :op1 (s2.b / bottle)
                                          :op2 (s2.c2 / cup)
                                          :op3 (s2.b2 / bowl))
                           :mod (s2.v / various)))
   :snt3 (s3.a2 / and
                :op1 (s3.b / be-located-at-91
                           :ARG1 (s3.o / oven
                                       :same-as s1.o)
                           :ARG2 (s3.n / next-to
                                       :op1 (s3.r / refrigerator
                                                  :same-as s1.r)))
                :op2 (s3.b2 / be-located-at-91
                            :ARG1 (s3.m / microwave
                                        :same-as s1.m)
                            :ARG2 (s3.a / above
                                        :op1 s3.o)))
   :snt4 (s4.h / have-03
               :ARG0 (s4.k / kitchen
                           :same-as s1.k)
               :ARG1 (s4.a2 / and
                            :op1 (s4.s / sink)
                            :op2 (s4.c / counter))
               :mod (s4.a / also)))