# ::id train2014~COCO_train2014_000000345880
# ::doc_file train2014~COCO_train2014_000000345880
# ::tok A highway sign is shown with a green background and white text . <next_sent> The sign is pointing to the right and the left . <next_sent> The right sign is pointing to Baltimore and the left sign is pointing to Silver Spring . <next_sent> The sign is hanging from a metal pole . <next_sent> The sky is blue and there are no clouds . <next_sent> The traffic is light with a few cars on the road .
(d / document
   :snt1 (s1.s / show-01
               :ARG1 (s1.s2 / sign
                            :mod (s1.h / highway)
                            :prep-with (s1.a / and
                                             :op1 (s1.b / background
                                                        :ARG1-of (s1.g / green-02))
                                             :op2 (s1.t / text
                                                        :ARG1-of (s1.w / white-03)))))
   :snt2 (s2.p / point-01
               :ARG0 (s2.s / sign
                           :same-as s1.h)
               :ARG2 (s2.a / and
                           :op1 (s2.r / right-08)
                           :op2 (s2.l / left-19)))
   :snt3 (s3.a / and
               :op1 (s3.p / point-01
                          :ARG0 (s3.s / sign
                                      :ARG1-of (s3.r / right-08))
                          :ARG2 (s3.c / city
                                      :name (s3.n / name
                                                  :op1 "Baltimore")))
               :op2 (s3.p2 / point-01
                           :ARG0 (s3.s2 / sign
                                        :ARG1-of (s3.l / left-19))
                           :ARG2 (s3.c2 / city
                                        :name (s3.n2 / name
                                                     :op1 "Silver"
                                                     :op2 "Spring"))))
   :snt4 (s4.h / hanging-07
               :ARG1 (s4.s / sign
                           :same-as s1.h)
               :ARG2 (s4.p / pole
                           :consist-of (s4.m / metal)))
   :snt5 (s5.a / and
               :op1 (s5.s / sky
                          :mod (s5.b / blue))
               :op2 (s5.c / cloud
                          :polarity "-"))
   :snt6 (s6.l / light-06
               :ARG1 (s6.t / traffic)
               :ARG1-of (s6.c2 / cause-01
                               :ARG0 (s6.r / road))
               :rel (s6.c / car
                          :quant (s6.f / few))))