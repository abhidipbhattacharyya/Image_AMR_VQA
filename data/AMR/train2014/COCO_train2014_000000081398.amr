# ::id train2014~COCO_train2014_000000081398
# ::doc_file train2014~COCO_train2014_000000081398
# ::tok A plate of cake with white frosting and chocolate drizzle sits on a table with a fork and spoon . <next_sent> The fork is on the plate and the spoon is on the table . <next_sent> There are also two cups on the table , one near the left edge and the other near the right edge .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.p / plate
                           :consist-of (s1.c / cake
                                             :part (s1.a / and
                                                         :op1 (s1.i / ice
                                                                    :ARG1-of (s1.w / white-03))
                                                         :op2 (s1.d / drizzle
                                                                    :mod (s1.c2 / chocolate)))))
               :ARG2 (s1.t / table)
               :instrument (s1.a2 / and
                                  :op1 (s1.f / fork)
                                  :op2 (s1.s2 / spoon)))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.f / fork
                                      :same-as s1.f)
                          :ARG2 (s2.p / plate
                                      :same-as s1.p))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.s / spoon)
                           :ARG2 (s2.t / table
                                       :same-as s1.t)))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.c / cup
                           :ARG1-of (s3.n / near-02
                                          :ARG2 (s3.e / edge
                                                      :ARG1-of (s3.l / left-20)))
                           :mod (s3.a / also)
                           :quant "1"
                           :quant "2")
               :ARG2 (s3.t / table
                           :same-as s1.t)
               :rel (s3.a2 / and
                           :op1 s3.c
                           :op2 (s3.c2 / cup
                                       :ARG1-of (s3.n2 / near-02
                                                       :ARG2 (s3.e2 / edge
                                                                    :ARG1-of (s3.r / right-04)))
                                       :mod (s3.o / other)))))