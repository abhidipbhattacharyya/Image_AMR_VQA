# ::id train2014~COCO_train2014_000000024782
# ::doc_file train2014~COCO_train2014_000000024782
# ::tok A double decker bus is driving down a busy street , with several people on the top deck . <next_sent> The bus is red and white , and it is surrounded by cars and traffic lights . <next_sent> There are at least 13 people visible on the bus , and 10 cars on the street . <next_sent> The traffic lights are positioned at various points along the street , with one on the left side , one on the right side , and two in the middle .
(d / document
   :snt1 (s1.d4 / drive-01
                :ARG0 (s1.b / bus
                            :mod (s1.d2 / double-decker)
                            :part (s1.d / deck
                                        :mod (s1.t / top)))
                :direction (s1.d3 / down)
                :location-of (s1.p / person
                                   :quant (s1.s / several)
                                   :location s1.d)
                :path (s1.s2 / street
                             :ARG1-of (s1.b2 / busy-02)))
   :snt2 (s2.a2 / and
                :op1 (s2.a / and
                           :domain (s2.b / bus
                                         :same-as s1.b)
                           :op1 (s2.r / red-02)
                           :op2 (s2.w / white-03))
                :op2 (s2.s / surround-01
                           :ARG1 (s2.a3 / and
                                        :op1 (s2.c / car)
                                        :op2 (s2.l / light
                                                   :mod (s2.t / traffic)))
                           :ARG2 s2.b))
   :snt3 (s3.s / see-01
               :ARG1 (s3.a / and
                           :op1 (s3.b / bus
                                      :same-as s1.b)
                           :op2 (s3.p / person
                                      :quant (s3.a2 / at-least
                                                    :op1 "13"))
                           :op3 (s3.c / car
                                      :location (s3.s2 / street
                                                       :same-as s1.s2)
                                      :quant "10")))
   :snt4 (s4.p2 / position-01
                :ARG1 (s4.l2 / light
                             :mod (s4.t / traffic)
                             :same-as s2.l)
                :ARG2 (s4.p / point
                            :location (s4.a / along
                                            :op1 (s4.s3 / street
                                                        :same-as s1.s2))
                            :mod (s4.v / various))
                :consist-of (s4.a2 / and
                                   :op1 (s4.l3 / light
                                               :location (s4.s / side
                                                               :ARG1-of (s4.l / left-20))
                                               :location (s4.s2 / side
                                                                :ARG1-of (s4.r / right-04))
                                               :quant "1")
                                   :op2 (s4.l4 / light
                                               :location (s4.m / middle)
                                               :quant "2"))))