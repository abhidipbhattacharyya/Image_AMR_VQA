# ::id train2014~COCO_train2014_000000559830
# ::doc_file train2014~COCO_train2014_000000559830
# ::tok An elephant is standing on a street , wearing a blue and white harness . <next_sent> There are two people standing next to the elephant , one on the left and one on the right . <next_sent> There are also two cars parked on the street , one behind the elephant and the other on the right side .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.s / stand-01
                          :ARG1 (s1.e / elephant)
                          :ARG2 (s1.s2 / street))
               :op2 (s1.w / wear-01
                          :ARG0 s1.e
                          :ARG1 (s1.a2 / and
                                       :op1 (s1.h / harness
                                                  :mod (s1.b / blue))
                                       :op2 (s1.h2 / harness
                                                   :ARG1-of (s1.w2 / white-03)))))
   :snt2 (s2.s / stand-01
               :ARG1 (s2.p / person
                           :consist-of (s2.a / and
                                             :op1 (s2.o / one
                                                        :ARG1-of (s2.l / left-19))
                                             :op2 (s2.o2 / one
                                                         :ARG1-of (s2.r / right-08)))
                           :quant "2")
               :ARG2 (s2.n / next-to
                           :op1 (s2.e / elephant
                                      :same-as s1.e)))
   :snt3 (s3.p / park-01
               :ARG1 (s3.c / car
                           :domain (s3.a2 / and
                                          :op2 (s3.c2 / car
                                                      :location (s3.s / side
                                                                      :ARG1-of (s3.r / right-04))))
                           :op1-of s3.a2
                           :location (s3.b / behind
                                           :op1 (s3.e / elephant
                                                      :same-as s1.e))
                           :mod (s3.a / also)
                           :quant "1"
                           :quant "2")
               :ARG2 (s3.s2 / street
                            :same-as s1.s2)))