# ::id train2014~COCO_train2014_000000440334
# ::doc_file train2014~COCO_train2014_000000440334
# ::tok A large pile of bananas are displayed in a store . <next_sent> The bananas are yellow and are arranged in bunches . <next_sent> There are at least 13 bunches of bananas in the pile , with some bunches being closer to the front and others towards the back . <next_sent> The bananas are placed on a shelf , creating an eye - catching display for customers .
(d / document
   :snt1 (s1.d / display-01
               :ARG1 (s1.p / pile-01
                           :ARG1 (s1.b / banana)
                           :mod (s1.l / large))
               :ARG2 (s1.s / store))
   :snt2 (s2.a / and
               :op1 (s2.y / yellow-02
                          :ARG1 (s2.b / banana
                                      :same-as s1.b))
               :op2 (s2.a2 / arrange-01
                           :ARG1 s2.b
                           :ARG2 (s2.b2 / bunch)))
   :snt3 (s3.b3 / be-located-at-91
                :ARG1 (s3.l / load
                            :quant (s3.a2 / at-least
                                          :op1 "13")
                            :consist-of (s3.b2 / banana)
                            :example (s3.a / and
                                           :op1 (s3.c / close-10
                                                      :ARG1 (s3.l2 / load
                                                                   :mod (s3.s / some))
                                                      :ARG2 (s3.f / front)
                                                      :ARG2-of (s3.h / have-degree-91
                                                                     :ARG1 s3.l2
                                                                     :ARG3 (s3.m / more)))
                                           :op2 (s3.h2 / have-degree-91
                                                       :ARG2 (s3.c2 / close-10
                                                                    :ARG1 (s3.l3 / load
                                                                                 :mod (s3.o / other))
                                                                    :ARG2 (s3.b / back))
                                                       :ARG1 s3.l3
                                                       :ARG3 (s3.m2 / more))))
                :ARG2 (s3.p / pile
                            :same-as s1.p))
   :snt4 (s4.p / place-01
               :ARG0-of (s4.c2 / create-01
                               :ARG1 (s4.d / display-01
                                           :ARG0-of (s4.c / catch-01
                                                          :ARG1 (s4.e / eye))
                                           :ARG2 (s4.c3 / customer)))
               :ARG1 (s4.b / banana
                           :same-as s1.b)
               :ARG2 (s4.s / shelf)))