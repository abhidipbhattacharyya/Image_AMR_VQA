# ::id train2014~COCO_train2014_000000227982
# ::doc_file train2014~COCO_train2014_000000227982
# ::tok A red and white train is traveling down the tracks . <next_sent> The train has a conductor on the front and a passenger on the back . <next_sent> There are two people visible in the image , one on the front of the train and one on the back . <next_sent> The train is traveling on a track near a forest .
(d / document
   :snt1 (s1.t4 / travel-01
                :ARG0 (s1.a / and
                            :op1 (s1.t2 / train
                                        :ARG1-of (s1.r / red-02))
                            :op2 (s1.t3 / train
                                        :ARG1-of (s1.w / white-03)))
                :ARG1 (s1.t / track)
                :direction (s1.d / down))
   :snt2 (s2.h / have-03
               :ARG0 (s2.t / train
                           :same-as s1.a)
               :ARG1 (s2.a / and
                           :op1 (s2.p2 / person
                                       :ARG0-of (s2.h2 / have-org-role-91
                                                       :ARG1 s2.t
                                                       :ARG2 (s2.c / conductor))
                                       :location (s2.f / front))
                           :op2 (s2.p / passenger
                                      :location (s2.b / back))))
   :snt3 (s3.s / see-01
               :ARG0 (s3.i / image)
               :ARG1 (s3.p / person
                           :ARG2-of (s3.i2 / include-91
                                           :ARG1 (s3.t / train
                                                       :part (s3.f / front
                                                                   :same-as s2.f)
                                                       :quant "1")
                                           :ARG1 (s3.a / and
                                                       :op2 (s3.o / one)
                                                       :op1 "1"))
                           :ARG2-of (s3.i3 / include-91
                                           :ARG1 (s3.t2 / train
                                                        :location (s3.b / back
                                                                        :same-as s2.b)
                                                        :op1-of s3.b
                                                        :same-as s1.a))
                           :quant "2"))
   :snt4 (s4.t3 / travel-01
                :ARG0 (s4.t2 / train
                             :same-as s1.a)
                :ARG1 (s4.t / track
                            :ARG1-of (s4.n / near-02
                                           :ARG2 (s4.f / forest)))))