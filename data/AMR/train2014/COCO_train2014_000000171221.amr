# ::id train2014~COCO_train2014_000000171221
# ::doc_file train2014~COCO_train2014_000000171221
# ::tok A giraffe stands in a grassy field with its head turned to the side . <next_sent> The giraffe is looking at the camera , and its long neck is bent to the side . <next_sent> In the background , there is a small elephant , and a fence can be seen in the distance . <next_sent> The scene is set in a zoo , where the giraffe and elephant are kept in separate enclosures .
(d / document
   :snt1 (s1.s2 / stand-01
                :ARG1 (s1.g / giraffe
                            :part (s1.h / head))
                :ARG2 (s1.f / field
                            :consist-of (s1.g2 / grass))
                :manner (s1.t / turn-01
                              :ARG1 s1.h
                              :direction (s1.s / side)))
   :snt2 (s2.a / and
               :op1 (s2.l2 / look-01
                           :ARG0 (s2.g / giraffe
                                       :part (s2.n / neck
                                                   :ARG1-of (s2.l / long-03))
                                       :same-as s1.g)
                           :ARG1 (s2.c / camera))
               :op2 (s2.b / bend-01
                          :ARG1 s2.n
                          :direction (s2.s / side)))
   :snt3 (s3.a / and
               :location (s3.b / background)
               :op1 (s3.e / elephant
                          :mod (s3.s2 / small))
               :op2 (s3.p / possible-01
                          :ARG1 (s3.s / see-01
                                      :ARG1 (s3.f / fence)
                                      :location (s3.d / distance))))
   :snt4 (s4.s3 / set-01
                :ARG1 (s4.s / scene)
                :ARG2 (s4.z / zoo
                            :location-of (s4.k / keep-01
                                               :ARG1 (s4.a / and
                                                           :op1 (s4.g / giraffe)
                                                           :op2 (s4.e / elephant
                                                                      :same-as s3.e))
                                               :location (s4.t / thing
                                                               :ARG1-of (s4.s2 / separate-02)
                                                               :ARG1-of (s4.c / confine-01
                                                                              :ARG2 s4.a))))))