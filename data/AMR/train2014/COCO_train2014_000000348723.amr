# ::id train2014~COCO_train2014_000000348723
# ::doc_file train2014~COCO_train2014_000000348723
# ::tok A zebra stands in a field of tall grass and trees . <next_sent> The zebra is facing the camera and appears to be looking at it . <next_sent> The zebra is surrounded by yellow and orange leaves , which add a vibrant touch to the scene . <next_sent> The zebra is standing in the middle of the field , with trees and grass all around it .
(d / document
   :snt1 (s1.s / stand-01
               :ARG1 (s1.z / zebra)
               :location (s1.f / field
                               :consist-of (s1.a / and
                                                 :op1 (s1.g / grass
                                                            :mod (s1.t / tall))
                                                 :op2 (s1.t2 / tree))))
   :snt2 (s2.a / and
               :op1 (s2.f / face-01
                          :ARG0 (s2.z / zebra
                                      :same-as s1.z)
                          :ARG1 (s2.c / camera))
               :op2 (s2.a2 / appear-02
                           :ARG1 (s2.l / look-01
                                       :ARG0 s2.z
                                       :ARG1 s2.c)))
   :snt3 (s3.s2 / surround-01
                :ARG1 (s3.a2 / and
                             :ARG0-of (s3.a / add-02
                                            :ARG1 (s3.t / touch-01
                                                        :ARG2 (s3.s / scene)
                                                        :mod (s3.v / vibrant)))
                             :op1 (s3.l / leaf
                                        :ARG1-of (s3.y / yellow-02))
                             :op2 (s3.l2 / leaf
                                         :mod (s3.o / orange)))
                :ARG2 (s3.z / zebra
                            :same-as s1.z))
   :snt4 (s4.s / stand-01
               :ARG1 (s4.z / zebra
                           :same-as s1.z)
               :ARG2 (s4.m / middle
                           :location-of (s4.a3 / around
                                               :domain (s4.a2 / and
                                                              :op1 (s4.t / tree)
                                                              :op2 (s4.g / grass))
                                               :mod (s4.a / all))
                           :part-of (s4.f / field
                                          :same-as s1.f))))