# ::id train2014~COCO_train2014_000000490118
# ::doc_file train2014~COCO_train2014_000000490118
# ::tok A dish of food with a fork and a spoon on top of it . <next_sent> The fork is on the left side and the spoon is on the right side . <next_sent> The food consists of broccoli , cauliflower , and sausage . <next_sent> The broccoli is in the middle of the dish , with the cauliflower on the left and the sausage on the right .
(d / document
   :snt1 (s1.d / dish
               :consist-of (s1.f / food)
               :op1-of (s1.t / top
                             :location-of (s1.a / and
                                                :op1 (s1.f2 / fork)
                                                :op2 (s1.s / spoon))))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.f / fork
                                      :same-as s1.f2)
                          :ARG2 (s2.s / side
                                      :ARG1-of (s2.l / left-20)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.s3 / spoon
                                        :same-as s1.s)
                           :ARG2 (s2.s2 / side
                                        :ARG1-of (s2.r / right-04))))
   :snt3 (s3.c2 / consist-01
                :ARG1 (s3.f / food
                            :same-as s1.d)
                :ARG2 (s3.a / and
                            :op1 (s3.b / broccoli)
                            :op2 (s3.c / cauliflower)
                            :op3 (s3.s / sausage)))
   :snt4 (s4.h / have-03
               :ARG0 (s4.b / broccoli
                           :location (s4.m / middle
                                           :part-of (s4.d / dish
                                                          :same-as s1.d))
                           :same-as s3.b)
               :ARG1 (s4.a / and
                           :op1 (s4.c / cauliflower
                                      :ARG1-of (s4.l / left-19))
                           :op2 (s4.s / sausage
                                      :ARG1-of (s4.r / right-08)
                                      :same-as s3.s))))