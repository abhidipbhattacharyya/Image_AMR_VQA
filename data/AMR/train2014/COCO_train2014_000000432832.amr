# ::id train2014~COCO_train2014_000000432832
# ::doc_file train2014~COCO_train2014_000000432832
# ::tok Four pizza boxes are sitting on a table , each with a different pizza inside . <next_sent> The boxes are green and white , and the pizzas are red and white . <next_sent> The boxes are arranged in a square , with one box on the left , one on the right , one in the middle , and one on the top .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.b / box
                           :mod (s1.p / pizza)
                           :quant "4")
               :ARG2 (s1.t / table)
               :rel (s1.h / have-03
                          :ARG1 (s1.p2 / pizza
                                       :ARG1-of (s1.d / differ-02)
                                       :location (s1.b2 / box
                                                        :mod (s1.e / each)))
                          :ARG0 s1.b2))
   :snt2 (s2.a2 / and
                :op1 (s2.a / and
                           :op1 (s2.b / box
                                      :ARG1-of (s2.g / green-02)
                                      :same-as s1.b)
                           :op2 (s2.b2 / box
                                       :ARG1-of (s2.w / white-03)))
                :op2 (s2.a3 / and
                            :op1 (s2.p / pizzeria
                                       :ARG1-of (s2.r / red-02))
                            :op2 (s2.w2 / white-03
                                        :ARG1 s2.b2)))
   :snt3 (s3.a2 / arrange-01
                :ARG1 (s3.b / box
                            :same-as s1.b)
                :example (s3.a / and
                               :op1 (s3.b2 / box
                                           :ARG1-of (s3.l / left-20))
                               :op2 (s3.b3 / box
                                           :ARG1-of (s3.r / right-04))
                               :op3 (s3.b4 / box
                                           :location (s3.m / middle)
                                           :location (s3.t / top)))
                :manner (s3.s / square)))