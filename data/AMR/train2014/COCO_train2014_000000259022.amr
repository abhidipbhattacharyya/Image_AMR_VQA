# ::id train2014~COCO_train2014_000000259022
# ::doc_file train2014~COCO_train2014_000000259022
# ::tok A police officer on a motorcycle is stopped in a parking lot . <next_sent> The officer is wearing a neon green jacket and a helmet . <next_sent> The motorcycle is parked in front of a cone . <next_sent> There are two other motorcycles in the background , one on the right side and another on the left side of the parking lot .
(d / document
   :snt1 (s1.s / stop-01
               :ARG1 (s1.p2 / person
                            :ARG0-of (s1.h / have-org-role-91
                                           :ARG1 (s1.p3 / police)
                                           :ARG2 (s1.o / officer))
                            :poss-of (s1.m / motorcycle))
               :location (s1.l / lot
                               :purpose (s1.p / park-01)))
   :snt2 (s2.w / wear-01
               :ARG0 (s2.o / officer
                           :same-as s1.p2)
               :ARG1 (s2.a / and
                           :op1 (s2.j / jacket
                                      :ARG1-of (s2.g / green-02
                                                     :mod (s2.n / neon)))
                           :op2 (s2.h / helmet)))
   :snt3 (s3.p / park-01
               :ARG1 (s3.m / motorcycle
                           :same-as s1.m)
               :ARG2 (s3.i / in-front-of
                           :op1 (s3.c / cone)))
   :snt4 (s4.b / background
               :location-of (s4.m / motorcycle
                                  :domain (s4.a / and
                                                :op2 (s4.m2 / motorcycle
                                                            :location (s4.s2 / side
                                                                             :ARG1-of (s4.l / left-20)
                                                                             :part-of (s4.l2 / lot
                                                                                             :purpose (s4.p / park-01)
                                                                                             :same-as s1.l))))
                                  :op1-of s4.a
                                  :location (s4.s / side
                                                  :ARG1-of (s4.r / right-04))
                                  :mod (s4.o / other)
                                  :quant "1"
                                  :quant "2")))