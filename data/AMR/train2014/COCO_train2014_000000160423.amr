# ::id train2014~COCO_train2014_000000160423
# ::doc_file train2014~COCO_train2014_000000160423
# ::tok A red double decker bus is parked on a wooden platform . <next_sent> The bus is open , and there are two people inside , one on the left side and the other on the right side . <next_sent> The bus is parked in front of a building , and there are two benches nearby , one on the left side and the other on the right side .
(d / document
   :snt1 (s1.p / park-01
               :ARG1 (s1.b / bus
                           :ARG1-of (s1.r / red-02)
                           :mod (s1.d / decker
                                      :mod (s1.d2 / double)))
               :ARG2 (s1.p2 / platform
                            :consist-of (s1.w / wood)))
   :snt2 (s2.a / and
               :op1 (s2.o / open-09
                          :ARG1 (s2.b2 / bus
                                       :same-as s1.b))
               :op2 (s2.p / person
                          :ARG2-of (s2.b / be-located-at-91
                                         :location (s2.i / inside))
                          :ARG1-of s2.b
                          :domain (s2.a2 / and
                                         :op1 (s2.p2 / person
                                                     :quant "1")
                                         :op2 s2.p2)
                          :location s2.b2
                          :location (s2.s / side
                                          :ARG1-of (s2.l / left-20))
                          :quant "2")
               :rel (s2.s2 / side
                           :ARG1-of (s2.r / right-04)))
   :snt3 (s3.a / and
               :op1 (s3.p / park-01
                          :ARG1 (s3.b4 / bus
                                       :same-as s1.b)
                          :ARG2 (s3.i / in-front-of
                                      :op1 (s3.b3 / building)))
               :op2 (s3.b / bench
                          :domain (s3.a2 / and
                                         :op2 (s3.b2 / bench))
                          :op1-of s3.a2
                          :location (s3.n / nearby)
                          :location (s3.s / side
                                          :ARG1-of (s3.l / left-20)
                                          :same-as s2.s)
                          :quant "1"
                          :quant "2")
               :rel (s3.s2 / side
                           :ARG1-of (s3.r / right-04
                                          :same-as s2.r))))