# ::id train2014~COCO_train2014_000000192642
# ::doc_file train2014~COCO_train2014_000000192642
# ::tok A group of cows are grazing in a field . <next_sent> There are three cows in total , with one being brown and white , another being black and white , and the third being brown . <next_sent> The cows are spread out across the field , with one cow standing closer to the left side , another in the middle , and the third cow on the right side of the field .
(d / document
   :snt1 (s1.g / graze-01
               :ARG0 (s1.c / cow
                           :quant (s1.g2 / group))
               :ARG1 (s1.f / field))
   :snt2 (s2.t / total-01
               :ARG1 (s2.c / cow
                           :consist-of (s2.a / and
                                             :op1 (s2.c2 / cow
                                                         :ARG1-of (s2.w / white-03))
                                             :op2 (s2.c3 / cow
                                                         :ARG1-of (s2.b / black-04)
                                                         :mod (s2.a2 / another)
                                                         :mod (s2.b2 / brown)
                                                         :ord (s2.o / ordinal-entity
                                                                    :value "3")))
                           :quant "3")
               :ARG2 s2.c)
   :snt3 (s3.s3 / spread-out-04
                :ARG1 (s3.c2 / cow
                             :same-as s1.c)
                :ARG2 (s3.f / field
                            :example (s3.a / and
                                           :op1 (s3.s4 / stand-01
                                                       :ARG1 (s3.c3 / cow
                                                                    :quant "1")
                                                       :ARG2 (s3.c / close-10
                                                                   :ARG1 s3.c3
                                                                   :ARG2 (s3.s / side
                                                                               :ARG1-of (s3.l / left-20))
                                                                   :ARG2-of (s3.h / have-degree-91
                                                                                  :ARG1 (s3.c4 / cow
                                                                                               :mod (s3.a2 / another))
                                                                                  :ARG3 (s3.m2 / more))))
                                           :op2 (s3.s5 / stand-01
                                                       :ARG1 s3.c4
                                                       :ARG2 (s3.m / middle))
                                           :op3 (s3.c5 / cow
                                                       :location (s3.s2 / side
                                                                        :ARG1-of (s3.r / right-04))
                                                       :ord (s3.o / ordinal-entity
                                                                  :value "3")
                                                       :same-as s2.o))
                            :part s3.s2
                            :same-as s1.f)))