# ::id train2014~COCO_train2014_000000388020
# ::doc_file train2014~COCO_train2014_000000388020
# ::tok A group of sheep are in a barn , with one of them eating from a red feeder . <next_sent> There are two people standing by the barn , one closer to the left and the other closer to the right . <next_sent> The sheep are scattered throughout the barn , with one on the left side , one in the middle , and two on the right side . <next_sent> The barn has a window on the left side and a door on the right side .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.b2 / be-located-at-91
                           :ARG1 (s1.g / group
                                       :consist-of (s1.s / sheep))
                           :ARG2 (s1.b / barn))
               :op2 (s1.e / eat-01
                          :ARG0 (s1.o / one
                                      :ARG1-of (s1.i / include-91
                                                     :ARG2 s1.s))
                          :source (s1.t / thing
                                        :ARG1-of (s1.r / red-02)
                                        :ARG2-of (s1.f / feed-01))))
   :snt2 (s2.s / stand-01
               :ARG1 (s2.p / person
                           :ARG1-of (s2.h / have-degree-91
                                          :ARG2 (s2.c / close-10
                                                      :ARG1 s2.p
                                                      :ARG2 (s2.l / left-19
                                                                  :ARG1 s2.p))
                                          :ARG3 (s2.m / more))
                           :quant "2")
               :ARG2 (s2.b2 / by
                            :op1 (s2.b / barn
                                       :same-as s1.b))
               :rel (s2.h2 / have-degree-91
                           :ARG2 (s2.c2 / close-10
                                        :ARG1 (s2.p2 / person
                                                     :mod (s2.o / other))
                                        :ARG2 (s2.r / right-04
                                                    :ARG1 s2.p2))
                           :ARG1 s2.p2
                           :ARG3 (s2.m2 / more)))
   :snt3 (s3.s / scatter-01
               :ARG1 (s3.s2 / sheep
                            :consist-of (s3.a / and
                                              :op1 (s3.o / one
                                                         :location (s3.s3 / side
                                                                          :ARG1-of (s3.l / left-20)))
                                              :op2 (s3.o2 / one
                                                          :location (s3.m / middle))
                                              :op3 (s3.t / thing
                                                         :location (s3.s4 / side
                                                                          :ARG1-of (s3.r / right-04))
                                                         :quant "2"))
                            :same-as s1.g)
               :ARG2 (s3.b / barn
                           :same-as s1.b))
   :snt4 (s4.h / have-03
               :ARG0 (s4.b / barn
                           :same-as s1.b)
               :ARG1 (s4.a / and
                           :op1 (s4.w / window
                                      :location (s4.s / side
                                                      :ARG1-of (s4.l / left-20)
                                                      :same-as s3.s3))
                           :op2 (s4.d / door
                                      :location (s4.s2 / side
                                                       :ARG1-of (s4.r / right-04)
                                                       :same-as s3.s4)))))