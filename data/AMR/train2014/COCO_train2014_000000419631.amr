# ::id train2014~COCO_train2014_000000419631
# ::doc_file train2014~COCO_train2014_000000419631
# ::tok A plate of food is on a table , with a fork and a knife beside it . <next_sent> The plate has a slice of cake , a piece of bread , and a fork . <next_sent> There are two cups on the table , one near the top and one near the bottom . <next_sent> A person is sitting at the table , and a cell phone is on the table as well .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.p / plate
                           :consist-of (s1.f / food))
               :ARG2 (s1.t / table
                           :ARG2-of (s1.b2 / be-located-at-91
                                           :ARG1 (s1.a / and
                                                       :op1 (s1.f2 / fork)
                                                       :op2 (s1.k / knife))
                                           :ARG2 (s1.b3 / beside
                                                        :op1 s1.t))))
   :snt2 (s2.h / have-03
               :ARG0 (s2.p2 / plate
                            :same-as s1.p)
               :ARG1 (s2.a / and
                           :op1 (s2.s / slice
                                      :consist-of (s2.c / cake))
                           :op2 (s2.p / piece
                                      :consist-of (s2.b / bread))
                           :op3 (s2.f / fork)))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.c / cup
                           :consist-of (s3.a / and
                                             :op1 (s3.c2 / cup
                                                         :ARG1-of (s3.n / near-02
                                                                        :ARG2 (s3.t2 / top))
                                                         :quant "1")
                                             :op2 (s3.c3 / cup
                                                         :ARG1-of (s3.n2 / near-02
                                                                         :ARG2 (s3.b2 / bottom))
                                                         :quant "1"))
                           :quant "2")
               :ARG2 (s3.t / table
                           :same-as s1.t))
   :snt4 (s4.a / and
               :op1 (s4.s / sit-01
                          :ARG1 (s4.p / person)
                          :ARG2 (s4.t / table
                                      :same-as s1.t))
               :op2 (s4.b / be-located-at-91
                          :ARG1 (s4.p2 / phone
                                       :mod (s4.c / cell))
                          :ARG2 s4.t
                          :mod (s4.a2 / as-well))))