# ::id train2014~COCO_train2014_000000102704
# ::doc_file train2014~COCO_train2014_000000102704
# ::tok A bus is driving down a rain - soaked street , with a motorcycle following behind . <next_sent> The bus is white and red , and has the words " Cebuana Lite " on the side . <next_sent> There are also several other cars on the street , including one behind the bus and another in front of it .
(d / document
   :snt1 (s1.d2 / drive-01
                :ARG0 (s1.b2 / bus)
                :direction (s1.d / down)
                :op1 (s1.s2 / street
                            :ARG1-of (s1.s / soak-01
                                           :ARG0 (s1.r / rain-01)))
                :time-of (s1.f / follow-01
                               :ARG1 (s1.m / motorcycle)
                               :ARG2 (s1.b / behind
                                           :op1 s1.b2)))
   :snt2 (s2.a2 / and
                :op1 (s2.a / and
                           :op1 (s2.w / white-03
                                      :ARG1 (s2.b2 / bus
                                                   :same-as s1.b2))
                           :op2 (s2.r / red-02
                                      :ARG1 s2.b2))
                :op2 (s2.b / be-located-at-91
                           :ARG1 (s2.w2 / word-01
                                        :ARG1 (s2.s2 / string-entity
                                                     :value "Cebuana"
                                                     :value "Lite"))
                           :ARG2 (s2.s / side)))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.c / car
                           :quant (s3.s / several)
                           :ARG2-of (s3.i2 / include-91
                                           :ARG1 (s3.a2 / and
                                                        :op1 (s3.c2 / car
                                                                    :location (s3.b2 / behind
                                                                                     :op1 (s3.b3 / bus
                                                                                                 :same-as s1.b2))
                                                                    :quant "1")
                                                        :op2 (s3.c3 / car
                                                                    :location (s3.i / in-front-of
                                                                                    :op1 s3.b3)
                                                                    :mod (s3.a3 / another))))
                           :mod (s3.o / other))
               :ARG2 (s3.s2 / street
                            :same-as s1.s2)
               :mod (s3.a / also)))