# ::id train2014~COCO_train2014_000000083260
# ::doc_file train2014~COCO_train2014_000000083260
# ::tok A silver pickup truck is driving down a highway with a car behind it . <next_sent> The truck has a black tinted rear window and a red and white license plate . <next_sent> The car behind the truck is white . <next_sent> There are also other cars on the highway , including one in front of the truck and another behind it .
(d / document
   :snt1 (s1.d2 / drive-01
                :ARG0 (s1.t / truck
                            :mod (s1.p / pickup)
                            :mod (s1.s / silver))
                :ARG1 (s1.h / highway)
                :direction (s1.d / down)
                :prep-with (s1.c / car
                                 :location (s1.b / behind
                                                 :op1 s1.t)))
   :snt2 (s2.h / have-03
               :ARG0 (s2.t2 / truck
                            :same-as s1.t)
               :ARG1 (s2.a / and
                           :op1 (s2.w2 / window
                                       :ARG1-of (s2.t / tint-01
                                                      :ARG1-of (s2.b / black-04))
                                       :mod (s2.r / rear))
                           :op2 (s2.p / plate
                                      :mod (s2.l / license-01
                                                 :ARG0 s2.t2)
                                      :mod (s2.a2 / and
                                                  :op1 (s2.r2 / red-02)
                                                  :op2 (s2.w / white-03)))))
   :snt3 (s3.w / white-03
               :ARG1 (s3.c / car
                           :location (s3.b / behind
                                           :op1 (s3.t / truck
                                                      :same-as s1.t))
                           :same-as s1.c))
   :snt4 (s4.i2 / include-91
                :ARG1 (s4.a2 / and
                             :op1 (s4.c2 / car
                                         :location (s4.i / in-front-of
                                                         :op1 (s4.t / truck
                                                                    :same-as s1.t))
                                         :location (s4.b / behind
                                                         :op1 s4.t)
                                         :mod (s4.a3 / another)
                                         :op2-of s4.a2
                                         :quant "1"))
                :ARG2 (s4.c / car
                            :location (s4.h / highway
                                            :same-as s1.h)
                            :mod (s4.o / other)
                            :mod (s4.a / also))))