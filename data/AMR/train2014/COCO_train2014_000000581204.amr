# ::id train2014~COCO_train2014_000000581204
# ::doc_file train2014~COCO_train2014_000000581204
# ::tok A pizza with pepperoni and cheese sits on a table next to a salad . <next_sent> The pizza is placed on a pan and the salad is on a plate . <next_sent> There are two cups on the table , one near the pizza and the other near the salad . <next_sent> The table is made of marble and has a wooden floor .
(d / document
   :snt1 (s1.s2 / sit-01
                :ARG1 (s1.p2 / pizza
                             :ARG0-of (s1.h / have-03
                                            :ARG1 (s1.a / and
                                                        :op1 (s1.p / pepperoni)
                                                        :op2 (s1.c / cheese))))
                :ARG2 (s1.t / table
                            :location-of (s1.n / next-to
                                               :op1 (s1.s / salad))))
   :snt2 (s2.a / and
               :op1 (s2.p3 / place-01
                           :ARG1 (s2.p2 / pizza
                                        :same-as s1.p2)
                           :ARG2 (s2.p / pan))
               :op2 (s2.b / be-located-at-91
                          :ARG1 (s2.s / salad
                                      :same-as s1.s)
                          :ARG2 (s2.p4 / plate)))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.c / cup
                           :ARG1-of (s3.n / near-02
                                          :ARG2 (s3.p / pizza
                                                      :same-as s1.p2))
                           :quant "1"
                           :quant "2")
               :ARG2 (s3.t / table
                           :same-as s1.t)
               :rel (s3.a / and
                          :op1 s3.c
                          :op2 (s3.c2 / cup
                                      :ARG1-of (s3.n2 / near-02
                                                      :ARG2 (s3.s / salad
                                                                  :same-as s1.s)))))
   :snt4 (s4.a / and
               :op1 (s4.m / make-01
                          :ARG1 (s4.t / table
                                      :same-as s1.t)
                          :ARG2 (s4.m2 / marble))
               :op2 (s4.h / have-03
                          :ARG0 s4.t
                          :ARG1 (s4.f / floor
                                      :mod (s4.w / wood)))))