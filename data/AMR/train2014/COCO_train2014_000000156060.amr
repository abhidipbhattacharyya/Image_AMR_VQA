# ::id train2014~COCO_train2014_000000156060
# ::doc_file train2014~COCO_train2014_000000156060
# ::tok A small black and white panda bear is sitting on top of a stack of boxes . <next_sent> The boxes are stacked on a table and the panda bear is sitting on top of a blue cup . <next_sent> There are also two other cups on the table , one near the panda bear and the other further away .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.b / bear
                           :ARG1-of (s1.w / white-03)
                           :ARG1-of (s1.b2 / black-04)
                           :mod (s1.p / panda)
                           :mod (s1.s2 / small))
               :ARG2 (s1.t / top
                           :part-of (s1.s3 / stack
                                           :consist-of (s1.b3 / box))))
   :snt2 (s2.a / and
               :op1 (s2.s2 / stack-01
                           :ARG1 (s2.b3 / box
                                        :same-as s1.s3)
                           :ARG2 (s2.t / table))
               :op2 (s2.s / sit-01
                          :ARG1 (s2.b / bear
                                      :mod (s2.p / panda)
                                      :same-as s1.b)
                          :ARG2 (s2.t2 / top
                                       :part-of (s2.c / cup
                                                      :mod (s2.b2 / blue)))))
   :snt3 (s3.a2 / and
                :op1 (s3.c / cup
                           :ARG1-of (s3.n / near-02
                                          :ARG2 (s3.b / bear
                                                      :mod (s3.p / panda)
                                                      :same-as s1.b))
                           :location (s3.t / table
                                           :same-as s2.t)
                           :mod (s3.o / other)
                           :mod (s3.a / also)
                           :quant "1"
                           :quant "2")
                :op2 (s3.c2 / cup
                            :location (s3.f / far
                                            :ARG2-of (s3.h / have-degree-91
                                                           :ARG1 s3.c2
                                                           :ARG3 (s3.m / more))
                                            :location (s3.a3 / away)))))