# ::id train2014~COCO_train2014_000000467262
# ::doc_file train2014~COCO_train2014_000000467262
# ::tok A brightly colored ATM machine is located next to a soda machine . <next_sent> The ATM is painted in yellow and green , while the soda machine is red and white . <next_sent> The soda machine is stocked with several bottles of soda , while the ATM has a few coins in it .
(d / document
   :snt1 (s1.l / locate-01
               :ARG1 (s1.m / machine
                           :ARG0-of (s1.a / automate-01
                                          :ARG1 (s1.b / bank-teller))
                           :ARG1-of (s1.c / color-01
                                          :ARG1-of (s1.b2 / bright-02)))
               :location (s1.n / next-to
                               :op1 (s1.m2 / machine
                                           :purpose (s1.s / soda))))
   :snt2 (s2.c / contrast-01
               :ARG1 (s2.p / paint-01
                           :ARG1 (s2.a3 / automate-01
                                        :ARG1 (s2.b / bank-teller)
                                        :same-as s1.m)
                           :ARG2 (s2.a / and
                                       :op1 (s2.y / yellow)
                                       :op2 (s2.g / green-02)))
               :ARG2 (s2.p2 / paint-01
                            :ARG1 (s2.m / machine
                                        :mod (s2.s / soda)
                                        :same-as s1.m2)
                            :ARG2 (s2.a2 / and
                                         :op1 (s2.r / red-02)
                                         :op2 (s2.w / white-03))))
   :snt3 (s3.c2 / contrast-01
                :ARG1 (s3.s4 / stock-01
                             :ARG1 (s3.m / machine
                                         :mod (s3.s2 / soda)
                                         :same-as s1.m2)
                             :ARG2 (s3.s3 / soda
                                          :quant (s3.s / several
                                                       :op1 (s3.v / volume-quantity
                                                                  :unit (s3.b2 / bottle
                                                                               :quant s3.s)))))
                :ARG2 (s3.h / have-03
                            :ARG0 (s3.m2 / machine
                                         :ARG1-of (s3.a / automate-01
                                                        :ARG0 (s3.b / bank-teller))
                                         :same-as s1.m)
                            :ARG1 (s3.c / coin
                                        :quant (s3.f / few)))))