# ::id train2014~COCO_train2014_000000273814
# ::doc_file train2014~COCO_train2014_000000273814
# ::tok Two people are walking down a path , one on a skateboard and the other on a bicycle . <next_sent> The skateboarder is wearing a black shirt and the bicyclist is wearing a gray shirt . <next_sent> They are both holding their hands out , possibly for balance . <next_sent> The path is surrounded by trees and grass .
(d / document
   :snt1 (s1.w / walk-01
               :ARG0 (s1.p2 / person
                            :ARG1-of (s1.m / mean-01
                                           :ARG2 (s1.a / and
                                                       :op1 (s1.s / skate-01
                                                                  :ARG0 s1.p2
                                                                  :quant "1")
                                                       :op2 (s1.o / other)))
                            :quant "2")
               :ARG1-of (s1.c / cause-01
                              :ARG0 (s1.b / bicycle
                                          :ARG0 s1.o))
               :ARG2 (s1.p / path)
               :direction (s1.d / down))
   :snt2 (s2.a / and
               :op1 (s2.w / wear-01
                          :ARG0 (s2.p / person
                                      :ARG0-of (s2.b3 / board-05)
                                      :same-as s1.s)
                          :ARG1 (s2.s / shirt
                                      :ARG1-of (s2.b2 / black-04)))
               :op2 (s2.w2 / wear-01
                           :ARG0 (s2.b / bicyclist
                                       :same-as s1.o)
                           :ARG1 (s2.s2 / shirt
                                        :ARG1-of (s2.g / gray-02))))
   :snt3 (s3.h2 / hold-01
                :purpose (s3.b / balance
                               :ARG1-of (s3.p / possible-01))
                :ARG0 (s3.t / they
                            :mod (s3.b2 / both)
                            :part (s3.h / hand))
                :ARG1 s3.h
                :direction (s3.o / out))
   :snt4 (s4.s / surround-01
               :ARG1 (s4.a / and
                           :op1 (s4.t / tree)
                           :op2 (s4.g / grass))
               :ARG2 (s4.p / path
                           :same-as s1.p)))