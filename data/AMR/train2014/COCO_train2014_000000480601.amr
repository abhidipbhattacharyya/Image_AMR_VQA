# ::id train2014~COCO_train2014_000000480601
# ::doc_file train2014~COCO_train2014_000000480601
# ::tok A person is skiing down a snowy slope , wearing a blue jacket . <next_sent> The skier is in the middle of the slope , surrounded by trees . <next_sent> There are several trees in the background , with some closer to the skier and others further away . <next_sent> The skier is holding two ski poles , one in each hand .
(d / document
   :snt1 (s1.s / ski-01
               :ARG0 (s1.p / person
                           :ARG0-of (s1.w / wear-01
                                          :ARG1 (s1.j / jacket
                                                      :mod (s1.b / blue))))
               :direction (s1.d / down
                                :op1 (s1.s2 / slope
                                            :ARG1-of (s1.s3 / snowy-02))))
   :snt2 (s2.b / be-located-at-91
               :ARG1 (s2.p / person
                           :ARG0-of (s2.s / ski-01)
                           :same-as s1.p)
               :ARG2 (s2.m / middle
                           :ARG2-of (s2.s3 / surround-01
                                           :ARG1 (s2.t / tree))
                           :part-of (s2.s2 / slope
                                           :same-as s1.s2)))
   :snt3 (s3.a / and
               :op1 (s3.t / tree
                          :quant (s3.s / several)
                          :location (s3.b / background))
               :op2 (s3.a2 / and
                           :op1 (s3.c / close-10
                                      :ARG1 (s3.t2 / tree
                                                   :quant (s3.s3 / some)
                                                   :location (s3.f / far
                                                                   :direction (s3.a3 / away))
                                                   :mod (s3.o / other))
                                      :ARG2 (s3.p / person
                                                  :ARG0-of (s3.s2 / ski-01)
                                                  :same-as s1.p)
                                      :ARG2-of (s3.h / have-degree-91
                                                     :ARG1 s3.t2
                                                     :ARG3 (s3.m / more)))
                           :op2 s3.t2))
   :snt4 (s4.h2 / hold-01
                :ARG0 (s4.p / person
                            :ARG0-of (s4.s / ski-01)
                            :same-as s1.p)
                :ARG1 (s4.p2 / pole
                             :ARG2-of (s4.i / include-91
                                            :ARG1 (s4.p3 / pole
                                                         :ARG1-of (s4.m / mean-01)
                                                         :location (s4.h / hand
                                                                         :mod (s4.e / each))
                                                         :quant "1"))
                             :mod (s4.s2 / ski-01)
                             :quant "2")))