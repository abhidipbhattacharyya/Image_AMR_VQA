# ::id train2014~COCO_train2014_000000343418
# ::doc_file train2014~COCO_train2014_000000343418
# ::tok A table with a sign that says " Hot + Spicy " and a glass of wine . <next_sent> There are two bottles of wine on the table , one of which is a bottle of red wine . <next_sent> The table also has a bowl of grapes and a plate of chocolates .
(d / document
   :snt1 (s1.t / table
               :ARG0-of (s1.h / have-03
                              :ARG1 (s1.s2 / sign
                                           :ARG0-of (s1.s / say-01
                                                          :ARG1 (s1.s3 / sum-of
                                                                       :op1 (s1.h2 / hot-05)
                                                                       :op2 (s1.h3 / hot-05)))))
               :op3 (s1.w / wine
                          :quant (s1.v / volume-quantity
                                       :unit (s1.g / glass)
                                       :quant "1")))
   :snt2 (s2.b / be-located-at-91
               :ARG1 (s2.w / wine
                           :quant (s2.b2 / bottle
                                         :ARG2-of (s2.i / include-91
                                                        :ARG1 (s2.b3 / bottle
                                                                     :consist-of (s2.w2 / wine
                                                                                        :ARG1-of (s2.r / red-02))
                                                                     :unit (s2.b4 / bottle)
                                                                     :quant "1"))
                                         :quant "2"))
               :ARG2 (s2.t / table
                           :same-as s1.t))
   :snt3 (s3.h / have-03
               :ARG0 (s3.t / table
                           :same-as s1.t)
               :ARG1 (s3.a2 / and
                            :op1 (s3.o / orange
                                       :quant (s3.b / bowl))
                            :op2 (s3.t2 / truffle
                                        :quant (s3.p / plate)))
               :mod (s3.a / also)))