# ::id train2014~COCO_train2014_000000001224
# ::doc_file train2014~COCO_train2014_000000001224
# ::tok Two giraffes are eating from a feeder . <next_sent> One giraffe is on the left side of the feeder , and the other is on the right side . <next_sent> The feeder is filled with hay , and the giraffes are eating from it . <next_sent> The giraffes are standing next to each other , and they are both facing the same direction .
(d / document
   :snt1 (s1.e / eat-01
               :ARG0 (s1.g / giraffe
                           :quant "2")
               :source (s1.t / thing
                             :ARG0-of (s1.f / feed-01)))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.g / giraffe
                                      :mod (s2.o / one))
                          :ARG2 (s2.s / side
                                      :ARG1-of (s2.l / left-20)
                                      :part-of (s2.t / thing
                                                     :ARG0-of (s2.f / feed-01)
                                                     :same-as s1.t)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.g2 / giraffe
                                        :mod (s2.o2 / other))
                           :ARG2 (s2.s2 / side
                                        :ARG1-of (s2.r / right-04))))
   :snt3 (s3.a / and
               :op1 (s3.f2 / fill-01
                           :ARG1 (s3.t / thing
                                       :ARG0-of (s3.f / feed-01)
                                       :same-as s1.t)
                           :ARG2 (s3.h / hay))
               :op2 (s3.e / eat-01
                          :ARG0 (s3.g / giraffe
                                      :same-as s1.g)
                          :instrument s3.t))
   :snt4 (s4.a / and
               :op1 (s4.s2 / stand-01
                           :ARG1 (s4.g / giraffe
                                       :mod (s4.b / both)
                                       :same-as s1.g)
                           :ARG2 (s4.n / next-to
                                       :op1 (s4.e / each
                                                  :mod (s4.o / other))))
               :op2 (s4.f / face-01
                          :ARG0 s4.g
                          :ARG1 (s4.d / direction
                                      :ARG1-of (s4.s / same-01)))))