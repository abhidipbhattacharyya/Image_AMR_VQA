# ::id train2014~COCO_train2014_000000030462
# ::doc_file train2014~COCO_train2014_000000030462
# ::tok A white plate with a slice of pizza on it sits on a brown table . <next_sent> The pizza has olives and cheese on it . <next_sent> There are two other pizzas on the table , one on the left and one on the right . <next_sent> A fork and a knife are also on the table , with the fork on the left side and the knife on the right side . <next_sent> There are two cups on the table , one on the left side and one on the right side .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.p2 / plate
                            :ARG0-of (s1.h / have-03
                                           :ARG1 (s1.s2 / slice
                                                        :mod (s1.p / pizza)))
                            :ARG1-of (s1.w / white-03))
               :ARG2 (s1.t / table
                           :ARG1-of (s1.b / brown-01)))
   :snt2 (s2.h / have-03
               :ARG0 (s2.p / pizza
                           :same-as s1.s2)
               :ARG1 (s2.a / and
                           :op1 (s2.l / Olive)
                           :op2 (s2.c / cheese)))
   :snt3 (s3.t / table-01
               :ARG1 (s3.p / pizzeria
                           :mod (s3.o / other)
                           :quant "2")
               :domain (s3.a / and
                             :op1 (s3.p2 / pizzeria
                                         :ARG1-of (s3.l / left-19)
                                         :quant "1")
                             :op2 (s3.c / city-district
                                        :ARG1-of (s3.r / right-08)
                                        :quant "1"))
               :same-as s1.t)
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.a2 / and
                            :accompanier (s4.a3 / and
                                                :op1 (s4.b2 / be-located-at-91
                                                            :ARG1 (s4.f / fork)
                                                            :ARG2 (s4.s / side
                                                                        :ARG1-of (s4.l / left-20)))
                                                :op2 (s4.k / knife
                                                           :location (s4.s2 / side
                                                                            :ARG1-of (s4.r / right-04))))
                            :op1 s4.f
                            :op2 s4.k)
               :ARG2 (s4.t / table
                           :same-as s1.t)
               :mod (s4.a / also))
   :snt5 (s5.b / be-located-at-91
               :ARG1 (s5.c / cup
                           :domain (s5.a / and
                                         :op1 (s5.c2 / cup
                                                     :location (s5.s / side
                                                                     :ARG1-of (s5.l / left-20))
                                                     :quant "1")
                                         :op2 (s5.c3 / cup
                                                     :location (s5.s2 / side
                                                                      :ARG1-of (s5.r / right-04))
                                                     :quant "1"))
                           :quant "2")
               :ARG2 (s5.t / table
                           :same-as s1.t)))