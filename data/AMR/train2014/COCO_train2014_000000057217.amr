# ::id train2014~COCO_train2014_000000057217
# ::doc_file train2014~COCO_train2014_000000057217
# ::tok A group of people are sitting at a table in a restaurant . <next_sent> There are three people sitting at the table , and two more people are sitting at another table nearby . <next_sent> The tables are surrounded by chairs . <next_sent> A laptop is open on one of the tables , and a cell phone is also visible on the table . <next_sent> The restaurant has a piano in the background , and a potted plant is placed on one of the tables .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.g / group
                           :consist-of (s1.p / person))
               :ARG2 (s1.t / table
                           :location (s1.r / restaurant)))
   :snt2 (s2.a / and
               :op1 (s2.s / sit-01
                          :ARG1 (s2.p / person
                                      :quant "3")
                          :ARG2 (s2.t / table
                                      :same-as s1.t))
               :op2 (s2.s2 / sit-01
                           :ARG1 (s2.p2 / person
                                        :mod (s2.m / more
                                                   :quant "2"))
                           :ARG2 (s2.t2 / table
                                        :location (s2.n / nearby)
                                        :mod (s2.a2 / another))))
   :snt3 (s3.s / surround-01
               :ARG1 (s3.c / chair)
               :ARG2 (s3.t / table))
   :snt4 (s4.a2 / and
                :op1 (s4.o2 / open-01
                            :ARG1 (s4.l / laptop))
                :op2 (s4.s / see-01
                           :ARG1 (s4.p / phone
                                       :mod (s4.c / cell))
                           :location (s4.t2 / table
                                            :same-as s3.t)
                           :mod (s4.a / also))
                :rel (s4.o / one
                           :location (s4.t / table
                                           :ARG1-of (s4.i / include-91
                                                          :ARG2 s4.t2))))
   :snt5 (s5.a / and
               :op1 (s5.h / have-03
                          :ARG0 (s5.r / restaurant
                                      :same-as s1.r)
                          :ARG1 (s5.p / piano
                                      :location (s5.b / background)))
               :op2 (s5.p2 / place-01
                           :ARG1 (s5.p3 / plant
                                        :ARG1-of (s5.p4 / plant-01))
                           :ARG2 (s5.t / table
                                       :ARG1-of (s5.i / include-91
                                                      :ARG2 (s5.t2 / table
                                                                   :same-as s3.t))
                                       :quant "1"))))