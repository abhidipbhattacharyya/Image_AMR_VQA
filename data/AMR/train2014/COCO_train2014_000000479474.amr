# ::id train2014~COCO_train2014_000000479474
# ::doc_file train2014~COCO_train2014_000000479474
# ::tok A snowboarder is standing on a snow - covered slope , wearing a black jacket and black pants . <next_sent> The snowboard is positioned horizontally on the slope , with the snowboarder standing on top of it . <next_sent> The scene is set against a blue sky , creating a picturesque winter landscape .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.s4 / stand-01
                           :ARG1 (s1.p2 / person
                                        :ARG0-of (s1.b3 / board-05
                                                        :ARG1 (s1.s2 / snow)))
                           :ARG2 (s1.s / slope
                                       :ARG1-of (s1.c / cover-02
                                                      :ARG2 (s1.s3 / snow))))
               :op2 (s1.w / wear-01
                          :ARG0 s1.p2
                          :ARG1 (s1.a2 / and
                                       :op1 (s1.j / jacket
                                                  :ARG1-of (s1.b / black-04))
                                       :op2 (s1.p / pants
                                                  :ARG1-of (s1.b2 / black-04)))))
   :snt2 (s2.p2 / position-01
                :ARG1 (s2.s2 / snowboard)
                :ARG2 (s2.u / upward)
                :manner (s2.s3 / stand-01
                               :ARG1 (s2.p / person
                                           :ARG0-of (s2.b / board-05
                                                          :ARG1 s2.s2)
                                           :same-as s1.p2)
                               :ARG2 (s2.t / top
                                           :op1 s2.s2))
                :op1 (s2.s / slope
                           :same-as s1.s))
   :snt3 (s3.s2 / set-01
                :ARG0-of (s3.c / create-01
                               :ARG1 (s3.l / landscape
                                           :mod (s3.p / picturesque)
                                           :time (s3.d / date-entity
                                                       :season (s3.w / winter))))
                :ARG1 (s3.s / scene)
                :ARG2 (s3.a / against
                            :op1 (s3.s3 / sky
                                        :mod (s3.b / blue)))))