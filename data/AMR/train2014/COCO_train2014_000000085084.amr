# ::id train2014~COCO_train2014_000000085084
# ::doc_file train2014~COCO_train2014_000000085084
# ::tok A herd of sheep is grazing in a fenced - in field . <next_sent> There are at least 13 sheep in the field , some of them are eating grass while others are standing . <next_sent> The sheep are scattered throughout the field , with some closer to the fence and others further away . <next_sent> The field is a mix of grass and dirt , providing a suitable environment for the sheep to graze .
(d / document
   :snt1 (s1.g / graze-01
               :ARG0 (s1.h / herd
                           :consist-of (s1.s / sheep))
               :location (s1.f / field
                               :ARG1-of (s1.c / chain-01)))
   :snt2 (s2.b / be-located-at-91
               :ARG1 (s2.s / sheep
                           :quant (s2.a / at-least
                                        :op1 "13"))
               :ARG2 (s2.f / field
                           :same-as s1.f)
               :rel (s2.s2 / sheep
                           :quant (s2.s3 / some)
                           :ARG0-of (s2.e / eat-01
                                          :ARG1 (s2.g / grass)
                                          :ARG1-of (s2.c / contrast-01
                                                         :ARG2 (s2.s4 / stand-01
                                                                      :ARG1 (s2.o / other))))
                           :ARG1-of (s2.i / include-91
                                          :ARG2 s2.s)))
   :snt3 (s3.s / scatter-01
               :ARG1 (s3.s2 / sheep
                            :same-as s2.s)
               :ARG2 (s3.f3 / field
                            :same-as s1.f)
               :example (s3.a / and
                              :op1 (s3.c / close-10
                                         :ARG1 s3.s2
                                         :ARG2 (s3.f2 / fence)
                                         :ARG2-of (s3.h / have-degree-91
                                                        :ARG1 (s3.s3 / sheep
                                                                     :quant (s3.s4 / some)
                                                                     :location (s3.a2 / away
                                                                                      :extent (s3.f / far))
                                                                     :mod (s3.o / other))
                                                        :ARG3 (s3.m / more)))))
   :snt4 (s4.m / mix-01
               :ARG0-of (s4.p / provide-01
                              :ARG1 (s4.e / environment
                                          :ARG1-of (s4.s2 / suitable-04
                                                          :ARG2 (s4.g2 / graze-01
                                                                       :ARG0 (s4.s / sheep
                                                                                   :same-as s2.s)))))
               :ARG1 (s4.f / field
                           :same-as s1.f)
               :ARG2 (s4.a / and
                           :op1 (s4.g / grass)
                           :op2 (s4.d / dirt))))