# ::id train2014~COCO_train2014_000000341040
# ::doc_file train2014~COCO_train2014_000000341040
# ::tok A kitchen with a stainless steel refrigerator , a microwave , and a coffee maker . <next_sent> The microwave is above the refrigerator , and the coffee maker is on the counter . <next_sent> There are two cups on the counter , one near the coffee maker and the other near the microwave . <next_sent> A bag is also visible on the counter .
(d / document
   :snt1 (s1.k / kitchen
               :ARG0-of (s1.h / have-03
                              :ARG1 (s1.a / and
                                          :op1 (s1.r / refrigerator
                                                     :mod (s1.s2 / steel
                                                                 :mod (s1.s / stainless)))
                                          :op2 (s1.m2 / microwave)
                                          :op3 (s1.t / thing
                                                     :ARG0-of (s1.m / make-01
                                                                    :ARG1 (s1.c / coffee))))))
   :snt2 (s2.a2 / and
                :op1 (s2.a / above
                           :location-of (s2.m2 / microwave
                                               :same-as s1.m2)
                           :op1 (s2.r / refrigerator
                                      :same-as s1.r))
                :op2 (s2.b / be-located-at-91
                           :ARG1 (s2.t / thing
                                       :ARG0-of (s2.m / make-01
                                                      :ARG1 (s2.c / coffee))
                                       :same-as s1.t)
                           :ARG2 (s2.c2 / counter)))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.c3 / cup
                            :ARG1-of (s3.n / near-02
                                           :ARG2 (s3.t / thing
                                                       :ARG0-of (s3.m / make-01
                                                                      :ARG1 (s3.c / coffee))
                                                       :same-as s1.t))
                            :quant "1"
                            :quant "2")
               :ARG2 (s3.c2 / counter
                            :same-as s2.c2)
               :rel (s3.c4 / cup
                           :ARG1-of (s3.n2 / near-02
                                           :ARG2 (s3.m2 / microwave
                                                        :same-as s1.m2))
                           :mod (s3.o / other)))
   :snt4 (s4.p / possible-01
               :ARG1 (s4.s / see-01
                           :ARG1 (s4.b / bag)
                           :location (s4.c / counter
                                           :same-as s2.c2))
               :mod (s4.a / also)))