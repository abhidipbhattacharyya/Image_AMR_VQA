# ::id train2014~COCO_train2014_000000351719
# ::doc_file train2014~COCO_train2014_000000351719
# ::tok A table with two cakes , one is white and red and the other is brown and red . <next_sent> The white and red cake is on the left side of the table and the brown and red cake is on the right side . <next_sent> A person is cutting the white and red cake .
(d / document
   :snt1 (s1.h / have-03
               :ARG0 (s1.t / table)
               :ARG1 (s1.c / cake
                           :domain (s1.c2 / cake
                                          :ARG1-of (s1.w / white-03)
                                          :ARG1-of (s1.r2 / red-02))
                           :example (s1.a / and
                                          :op1 s1.c2
                                          :op2 (s1.c3 / cake
                                                      :mod (s1.r / Brown)))
                           :quant "2"))
   :snt2 (s2.a2 / and
                :op1 (s2.b / be-located-at-91
                           :ARG1 (s2.a / and
                                       :op1 (s2.c / cake
                                                  :ARG1-of (s2.w / white-03))
                                       :op2 (s2.c2 / cake
                                                   :ARG1-of (s2.r2 / red-02)))
                           :ARG2 (s2.s / side
                                       :ARG1-of (s2.l / left-20)
                                       :part-of (s2.t / table
                                                      :same-as s1.h)))
                :op2 (s2.b2 / be-located-at-91
                            :ARG1 (s2.a3 / and
                                         :op1 (s2.r / Brown)
                                         :op2 (s2.c3 / cake
                                                     :mod s2.r))
                            :ARG2 s2.s
                            :ARG3 (s2.s2 / side
                                         :ARG1-of (s2.r3 / right-04))))
   :snt3 (s3.c3 / cut-01
                :ARG0 (s3.p / person)
                :ARG1 (s3.a / and
                            :op1 (s3.c / cake
                                       :ARG1-of (s3.w / white-03))
                            :op2 (s3.c2 / cake
                                        :ARG1-of (s3.r / red-02))
                            :same-as s2.a)))