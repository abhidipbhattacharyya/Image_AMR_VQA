# ::id train2014~COCO_train2014_000000531444
# ::doc_file train2014~COCO_train2014_000000531444
# ::tok A pan of pepperoni pizza slices is on a table . <next_sent> The pizza is cut into squares and has pepperoni and cheese on top . <next_sent> There are two bowls on the table , one with sauce and the other with cheese . <next_sent> The pizza slices are arranged in a square pattern on the pan .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.p / pan
                           :consist-of (s1.s / slice
                                             :mod (s1.p3 / pizza
                                                         :mod (s1.p2 / pepperoni))))
               :ARG2 (s1.t / table))
   :snt2 (s2.a / and
               :op1 (s2.c2 / cut-01
                           :ARG1 (s2.p2 / pizza
                                        :same-as s1.s)
                           :ARG2 (s2.s / square))
               :op2 (s2.h / have-03
                          :ARG0 s2.p2
                          :ARG1 (s2.a2 / and
                                       :op1 (s2.p / pepperoni)
                                       :op2 (s2.c / cheese))
                          :location (s2.t / top)))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.a / and
                           :op1 (s3.p / pound
                                      :ARG0-of (s3.h / have-03
                                                     :ARG1 (s3.s / sauce))
                                      :quant "1")
                           :op2 (s3.b2 / bowl-01
                                       :ARG1 (s3.c / cheese)
                                       :mod (s3.o / other))
                           :quant "2")
               :ARG2 (s3.t / table
                           :same-as s1.t))
   :snt4 (s4.a / arrange-01
               :ARG1 (s4.s / slice
                           :mod (s4.p3 / pizza)
                           :same-as s1.s)
               :location (s4.p / pan
                               :same-as s1.p)
               :manner (s4.p2 / pattern
                              :mod (s4.s2 / square))))