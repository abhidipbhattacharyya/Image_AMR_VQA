# ::id train2014~COCO_train2014_000000353204
# ::doc_file train2014~COCO_train2014_000000353204
# ::tok A glass dish filled with cheesy food is sitting on a table in front of an oven . <next_sent> The oven has several casserole dishes in it , including one with a cake and one with a pie . <next_sent> The dishes are placed in various positions within the oven , with some closer to the front and others further back . <next_sent> The table is brown and the dish is placed on it .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.d / dish
                           :ARG1-of (s1.f / fill-01
                                          :ARG2 (s1.f2 / food
                                                       :mod (s1.c / cheesy)))
                           :consist-of (s1.g / glass))
               :ARG2 (s1.t / table
                           :location (s1.i / in-front-of
                                           :op1 (s1.o / oven))))
   :snt2 (s2.h / have-03
               :ARG0 (s2.o2 / oven
                            :same-as s1.o)
               :ARG1 (s2.d / dish
                           :quant (s2.s / several)
                           :ARG2-of (s2.i / include-01)
                           :mod (s2.c2 / casserole))
               :rel (s2.a / and
                          :op1 (s2.o / one
                                     :ARG0-of (s2.h2 / have-03
                                                     :ARG1 (s2.c / cake))
                                     :ARG2-of (s2.i2 / include-01
                                                     :ARG1 s2.c
                                                     :ARG1 s2.a))
                          :op2 (s2.p / pie)))
   :snt3 (s3.p / place-01
               :ARG1 (s3.d / dish
                           :ARG2-of (s3.i / include-91
                                          :ARG1 (s3.a / and
                                                      :op1 (s3.c / close-10
                                                                 :ARG1 (s3.d2 / dish
                                                                              :quant (s3.s / some)
                                                                              :ARG2 (s3.b / back
                                                                                          :mod (s3.f2 / further))
                                                                              :mod (s3.o / other))
                                                                 :ARG2 (s3.f / front)
                                                                 :ARG2-of (s3.h / have-degree-91
                                                                                :ARG1 s3.d2
                                                                                :ARG3 (s3.m / more)))))
                           :same-as s2.a)
               :ARG2 (s3.p2 / position
                            :location (s3.o2 / oven
                                             :same-as s1.o)
                            :mod (s3.v / various)))
   :snt4 (s4.a / and
               :op1 (s4.r / Brown
                          :domain (s4.t / table))
               :op2 (s4.p / place-01
                          :ARG1 (s4.d / dish
                                      :same-as s1.d)
                          :ARG2 s4.t)))