# ::id train2014~COCO_train2014_000000123389
# ::doc_file train2014~COCO_train2014_000000123389
# ::tok A pizza on a pan with a slice missing . <next_sent> The pizza is topped with pepperoni , mushrooms , and tomatoes . <next_sent> There are two beer bottles on the table , one is blue and the other is brown . <next_sent> There are also two cups on the table , one is filled with a yellow liquid and the other is empty . <next_sent> A slice of pizza is on a plate next to the pan .
(d / document
   :snt1 (s1.p2 / pizza
                :ARG0-of (s1.m / miss-01
                               :ARG1 (s1.s / slice))
                :location (s1.p / pan))
   :snt2 (s2.t2 / top-01
                :ARG1 (s2.p2 / pizza
                             :same-as s1.p2)
                :ARG2 (s2.a / and
                            :op1 (s2.p / pepperoni)
                            :op2 (s2.m / mushroom)
                            :op3 (s2.t / tomato)))
   :snt3 (s3.a / and
               :op1 (s3.b3 / bottle
                           :ARG2-of (s3.i / include-91)
                           :ARG1-of s3.i
                           :ARG2-of (s3.i2 / include-91
                                           :ARG1 (s3.b5 / bottle
                                                        :mod (s3.b6 / brown)))
                           :location (s3.t / table)
                           :mod (s3.b / beer)
                           :quant "2")
               :op2 s3.b5
               :rel (s3.b4 / bottle
                           :mod (s3.b2 / blue)))
   :snt4 (s4.a2 / and
                :op1 (s4.c / cup
                           :ARG2-of (s4.i / include-91)
                           :ARG1-of s4.i
                           :ARG2-of (s4.i2 / include-91
                                           :ARG1 (s4.c2 / cup
                                                        :ARG1-of (s4.f / fill-01
                                                                       :ARG2 (s4.l / liquid
                                                                                   :ARG1-of (s4.y / yellow-02)))
                                                        :ARG1-of (s4.e / empty-02)
                                                        :quant "1"))
                           :location (s4.t / table
                                           :same-as s3.t)
                           :mod (s4.a / also)
                           :quant "2")
                :op2 s4.i2)
   :snt5 (s5.b / be-located-at-91
               :ARG1 (s5.s / slice
                           :part-of (s5.p2 / pizza))
               :ARG2 (s5.p3 / plate
                            :location-of (s5.n / next-to
                                               :op1 (s5.p / pan
                                                          :same-as s1.p)))))