# ::id train2014~COCO_train2014_000000329035
# ::doc_file train2014~COCO_train2014_000000329035
# ::tok Three people are sitting at a table , each using a laptop . <next_sent> The table is white and surrounded by chairs . <next_sent> There are two cups on the table , one near the left edge and the other near the right edge . <next_sent> A donut is also present on the table , closer to the left side .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.p / person
                           :ARG0-of (s1.u / use-01
                                          :ARG1 (s1.l / laptop)
                                          :mod (s1.e / each))
                           :quant "3")
               :ARG2 (s1.t / table))
   :snt2 (s2.a / and
               :op1 (s2.w / white-03
                          :ARG1 (s2.t / table
                                      :same-as s1.t))
               :op2 (s2.s / surround-01
                          :ARG1 (s2.c / chair)
                          :ARG2 s2.t))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.c / cup
                           :ARG1-of (s3.n / near-02
                                          :ARG2 (s3.e / edge
                                                      :ARG1-of (s3.l / left-20)))
                           :quant "1"
                           :quant "2")
               :ARG2 (s3.t / table
                           :same-as s1.t)
               :rel (s3.a / and
                          :op1 s3.c
                          :op2 (s3.c2 / cup
                                      :ARG1-of (s3.n2 / near-02
                                                      :ARG2 (s3.e2 / edge
                                                                   :ARG1-of (s3.r / right-04)))
                                      :mod (s3.o / other))))
   :snt4 (s4.p / present-02
               :ARG1 (s4.d / donut)
               :ARG2 (s4.t / table
                           :ARG1-of (s4.h / have-degree-91
                                          :ARG2 (s4.c / close-10
                                                      :ARG1 s4.t
                                                      :ARG2 (s4.s / side
                                                                  :ARG1-of (s4.l / left-20)))
                                          :ARG3 (s4.m / more))
                           :same-as s1.t)
               :mod (s4.a / also)))