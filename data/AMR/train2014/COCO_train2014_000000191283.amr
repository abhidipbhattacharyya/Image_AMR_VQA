# ::id train2014~COCO_train2014_000000191283
# ::doc_file train2014~COCO_train2014_000000191283
# ::tok A display case in a bakery showcases a variety of donuts , including green and brown ones . <next_sent> The donuts are arranged in rows , with some placed on the top and others on the bottom . <next_sent> There are at least 12 donuts visible in the display case , each with different colors and flavors .
(d / document
   :snt1 (s1.s / showcase-01
               :ARG0 (s1.c / case
                           :ARG0-of (s1.d / display-01)
                           :location (s1.b / bakery))
               :ARG1 (s1.d2 / donut
                            :ARG2-of (s1.i / include-01
                                           :ARG1 (s1.a / and
                                                       :op1 (s1.d3 / donut
                                                                   :ARG1-of (s1.g / green-02))
                                                       :op2 (s1.d4 / donut
                                                                   :mod (s1.b2 / brown))))
                            :mod (s1.v / variety)))
   :snt2 (s2.a2 / arrange-01
                :ARG1 (s2.d / donut
                            :same-as s1.d2)
                :ARG2 (s2.r / row)
                :example (s2.a / and
                               :op1 (s2.p / place-01
                                          :ARG1 (s2.s / some)
                                          :ARG2 (s2.t / top))
                               :op2 (s2.p2 / place-01
                                           :ARG1 s2.d
                                           :ARG2 (s2.o / other)
                                           :ARG2 (s2.b / bottom))))
   :snt3 (s3.p / possible-01
               :ARG1 (s3.s / see-01
                           :ARG1 (s3.d3 / donut
                                        :quant (s3.a2 / at-least
                                                      :op1 "12")
                                        :mod (s3.e / each)
                                        :prep-with (s3.a / and
                                                         :ARG1-of (s3.d / differ-02)
                                                         :op1 (s3.c2 / color)
                                                         :op2 (s3.c3 / color)))
                           :location (s3.c / case
                                           :ARG2-of (s3.d2 / display-01)
                                           :same-as s1.c))))