# ::id train2014~COCO_train2014_000000244425
# ::doc_file train2014~COCO_train2014_000000244425
# ::tok A plate of food sits on a table next to a glass of water . <next_sent> The plate contains a slice of pizza and a salad . <next_sent> The salad is in a bowl and has a variety of vegetables . <next_sent> There are also two cups on the table , one near the water glass and the other near the plate .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.p / plate
                           :consist-of (s1.f / food))
               :ARG2 (s1.t / table
                           :location-of (s1.n / next-to
                                              :op1 (s1.w / water
                                                         :quant (s1.v / volume-quantity
                                                                      :unit (s1.g / glass)
                                                                      :quant "1")))))
   :snt2 (s2.c / contain-01
               :ARG0 (s2.p2 / plate
                            :same-as s1.p)
               :ARG1 (s2.a / and
                           :op1 (s2.s2 / slice
                                       :consist-of (s2.p / pizza))
                           :op2 (s2.s / salad)))
   :snt3 (s3.a / and
               :op1 (s3.b / be-located-at-91
                          :ARG1 (s3.s / salad
                                      :same-as s2.s)
                          :ARG2 (s3.b2 / bowl))
               :op2 (s3.h / have-03
                          :ARG0 s3.s
                          :ARG1 (s3.v2 / vegetable
                                       :mod (s3.v / variety))))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.c / cup
                           :ARG1-of (s4.n / near-02
                                          :ARG2 (s4.g / glass
                                                      :mod (s4.w / water)
                                                      :same-as s1.w))
                           :mod (s4.a / also)
                           :quant "1"
                           :quant "2")
               :ARG2 (s4.t / table
                           :same-as s1.t)
               :rel (s4.a2 / and
                           :op1 s4.c
                           :op2 (s4.c2 / cup
                                       :ARG1-of (s4.n2 / near-02
                                                       :ARG2 (s4.p / plate
                                                                   :same-as s1.p))))))