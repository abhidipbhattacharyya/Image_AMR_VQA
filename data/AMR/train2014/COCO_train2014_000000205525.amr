# ::id train2014~COCO_train2014_000000205525
# ::doc_file train2014~COCO_train2014_000000205525
# ::tok A bathroom sink with two faucets and a mirror above it . <next_sent> The sink is white and the faucets are silver . <next_sent> There are two bottles , one on the right side of the sink and the other on the left . <next_sent> There are also two cups , one on the right side of the sink and the other on the left .
(d / document
   :snt1 (s1.s / sink
               :ARG0-of (s1.h / have-03
                              :ARG1 (s1.a2 / and
                                           :op1 (s1.m / medicine
                                                      :ARG0-of (s1.s2 / sink-01)
                                                      :quant "2")
                                           :op2 (s1.m2 / mirror
                                                       :location (s1.a / above))))
               :location (s1.b / bathroom)
               :op1-of s1.a)
   :snt2 (s2.a / and
               :op1 (s2.w / white-03
                          :ARG1 (s2.s2 / sink
                                       :same-as s1.m))
               :op2 (s2.s / silver
                          :domain (s2.m / medicine
                                        :same-as s1.m)))
   :snt3 (s3.a / and
               :op1 (s3.b / be-located-at-91
                          :ARG1 (s3.o / one)
                          :ARG2 (s3.s / side
                                      :ARG1-of (s3.r / right-04)))
               :op2 (s3.b2 / be-located-at-91
                           :ARG1 (s3.b4 / bottle
                                        :quant s3.o
                                        :mod (s3.o2 / other))
                           :ARG2 (s3.s2 / side
                                        :ARG1-of (s3.l / left-19)
                                        :part-of (s3.s3 / sink
                                                        :same-as s1.m)))
               :rel (s3.b3 / bottle
                           :quant "2"))
   :snt4 (s4.a2 / and
                :op1 (s4.b / be-located-at-91
                           :ARG1 (s4.c / cup
                                       :mod (s4.a / also)
                                       :quant "1"
                                       :quant "2")
                           :ARG2 (s4.s / side
                                       :ARG1-of (s4.r / right-04)
                                       :same-as s3.s))
                :op2 (s4.b2 / be-located-at-91
                            :ARG1 (s4.c2 / cup
                                         :mod (s4.o / other))
                            :ARG2 (s4.s2 / side
                                         :ARG1-of (s4.l / left-19)
                                         :part-of (s4.s3 / sink
                                                         :same-as s1.m)))))