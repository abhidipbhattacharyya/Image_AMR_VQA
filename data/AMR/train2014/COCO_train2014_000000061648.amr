# ::id train2014~COCO_train2014_000000061648
# ::doc_file train2014~COCO_train2014_000000061648
# ::tok A pizza is sitting on a table with a red tablecloth . <next_sent> The pizza is in a box and has a lot of toppings . <next_sent> There are several cups on the table , one near the pizza , and others scattered around . <next_sent> A person is sitting at the table , and a knife is also visible on the table .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.p / pizza)
               :ARG2 (s1.t / table
                           :part (s1.t2 / tablecloth
                                        :ARG1-of (s1.r / red-02))))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.p / pizza
                                      :same-as s1.p)
                          :ARG2 (s2.b2 / box))
               :op2 (s2.h / have-03
                          :ARG0 s2.p
                          :ARG1 (s2.e / Health
                                      :mod s2.p)
                          :ARG1 (s2.t / thing
                                      :mod (s2.c / continent
                                                 :name (s2.n / name))))
               :rel (s2.l / lot))
   :snt3 (s3.a / and
               :op1 (s3.b / be-located-at-91
                          :ARG1 (s3.c / cup
                                      :quant (s3.s2 / several))
                          :ARG2 (s3.t / table
                                      :same-as s1.t))
               :op2 (s3.s / scatter-01
                          :ARG1 (s3.c3 / cup
                                       :mod (s3.o / other))
                          :ARG2 (s3.a2 / around))
               :rel (s3.c2 / cup
                           :ARG1-of (s3.n / near-02
                                          :ARG2 (s3.p / pizza
                                                      :same-as s1.p))
                           :quant "1"))
   :snt4 (s4.a2 / and
                :op1 (s4.s2 / sit-01
                            :ARG1 (s4.p / person)
                            :ARG2 (s4.t / table
                                        :same-as s1.t))
                :op2 (s4.s / see-01
                           :ARG1 (s4.k / knife)
                           :location s4.t
                           :mod (s4.a / also))))