# ::id train2014~COCO_train2014_000000434943
# ::doc_file train2014~COCO_train2014_000000434943
# ::tok A train with several cars is on the tracks . <next_sent> The train is brown and black and has a total of 12 cars . <next_sent> The cars are arranged in a row and are positioned in a way that they are all visible . <next_sent> The train is on the tracks and is moving .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.t2 / train
                            :ARG0-of (s1.h / have-03
                                           :ARG1 (s1.c / car
                                                       :quant (s1.s / several))))
               :ARG2 (s1.t / track))
   :snt2 (s2.a2 / and
                :op1 (s2.a / and
                           :domain (s2.t2 / train
                                          :same-as s1.t2)
                           :op1 (s2.r / Brown)
                           :op2 (s2.b / black-04))
                :op2 (s2.h / have-03
                           :ARG0 s2.t2
                           :ARG1 (s2.c / car
                                       :ARG2-of (s2.t / total-01)
                                       :quant "12")))
   :snt3 (s3.a2 / and
                :op1 (s3.a3 / arrange-01
                            :ARG1 (s3.c / car
                                        :same-as s1.c)
                            :ARG4 (s3.r / row))
                :op2 (s3.p / position-01
                           :ARG1 (s3.c2 / car
                                        :mod (s3.a / all))
                           :manner (s3.w / way
                                         :manner-of (s3.p2 / possible-01
                                                           :ARG1 (s3.s / see-01
                                                                       :ARG1 s3.c2)))))
   :snt4 (s4.a / and
               :op1 (s4.b / be-located-at-91
                          :ARG1 (s4.t2 / train
                                       :same-as s1.t2)
                          :ARG2 (s4.t / track
                                      :same-as s1.t))
               :op2 (s4.m / move-01
                          :ARG1 s4.t2)))