# ::id train2014~COCO_train2014_000000103125
# ::doc_file train2014~COCO_train2014_000000103125
# ::tok A young man is skateboarding at a skate park , performing a trick on a ramp . <next_sent> He is wearing green shorts and no shirt . <next_sent> The skateboard is positioned under his feet , and he is leaning to the side . <next_sent> The park has a cement surface , and there are a few potted plants scattered around the area .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.s / skate-01
                          :ARG0 (s1.m / man
                                      :mod (s1.y / young))
                          :location (s1.p / park
                                          :mod (s1.s2 / skate-01)))
               :op2 (s1.p2 / perform-01
                           :ARG0 s1.m
                           :ARG1 (s1.t / trick-01
                                       :ARG0 s1.m
                                       :location (s1.r / ramp))))
   :snt2 (s2.w / wear-01
               :ARG0 (s2.h / he
                           :same-as s1.m)
               :ARG1 (s2.a / and
                           :op1 (s2.s2 / shorts
                                       :ARG1-of (s2.g / green-02))
                           :op2 (s2.s / shirt
                                      :polarity "-")))
   :snt3 (s3.a / and
               :op1 (s3.p / position-01
                          :ARG1 (s3.s2 / skateboard)
                          :ARG2 (s3.u / under
                                      :op1 (s3.f / foot
                                                 :part-of (s3.h / he
                                                                :same-as s1.m))))
               :op2 (s3.l / lean-01
                          :ARG1 s3.h
                          :ARG2 (s3.s / side)))
   :snt4 (s4.a / and
               :op1 (s4.h / have-03
                          :ARG0 (s4.p / park
                                      :same-as s1.p)
                          :ARG1 (s4.s2 / surface
                                       :consist-of (s4.c / cement)))
               :op2 (s4.s / scatter-01
                          :ARG1 (s4.p2 / plant
                                       :quant (s4.f / few)
                                       :ARG1-of (s4.p3 / poison-02))
                          :ARG2 (s4.a3 / around
                                       :op1 (s4.a2 / area)))))