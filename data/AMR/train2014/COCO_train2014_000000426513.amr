# ::id train2014~COCO_train2014_000000426513
# ::doc_file train2014~COCO_train2014_000000426513
# ::tok A table with a pizza on it and several bottles of beer . <next_sent> There are four bottles of beer , one on the left , one on the right , one in the middle , and one at the top . <next_sent> There are also four cups on the table , one on the left , one on the right , one in the middle , and one at the top . <next_sent> The table is black and white checkered .
(d / document
   :snt1 (s1.t / table
               :ARG0-of (s1.h / have-03
                              :ARG1 (s1.a / and
                                          :op1 (s1.p / pizza)
                                          :op2 (s1.b / beer
                                                     :quant (s1.s / several
                                                                  :op1 (s1.v / volume-quantity
                                                                             :unit (s1.b2 / bottle)
                                                                             :quant "1"))))))
   :snt2 (s2.a / and
               :op1 (s2.b / beer
                          :quant (s2.v / volume-quantity
                                       :unit (s2.b2 / bottle)
                                       :quant "4"))
               :op2 (s2.a2 / and
                           :op1 (s2.o / one
                                      :ARG1-of (s2.l / left-19))
                           :op2 (s2.o2 / one
                                       :ARG1-of (s2.r / right-04)
                                       :location (s2.m / middle))
                           :op3 s2.m
                           :op4 (s2.o3 / one
                                       :location (s2.t / top))))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.c / cup
                           :consist-of (s3.a2 / and
                                              :op1 (s3.c2 / cup
                                                          :ARG1-of (s3.l / left-19
                                                                         :same-as s2.l))
                                              :op2 (s3.c3 / cup
                                                          :ARG1-of (s3.r / right-04
                                                                         :same-as s2.r)
                                                          :location (s3.m / middle
                                                                          :same-as s2.m)
                                                          :location (s3.t2 / top
                                                                           :same-as s2.t))
                                              :op3 s3.m)
                           :mod (s3.a / also)
                           :quant "4")
               :ARG2 (s3.t / table))
   :snt4 (s4.p / pattern
               :ARG1-of (s4.w / white-03)
               :ARG1-of (s4.b / black-04)
               :domain (s4.t / table
                             :same-as s3.t)))