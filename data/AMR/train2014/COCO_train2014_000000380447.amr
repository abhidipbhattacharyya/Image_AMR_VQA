# ::id train2014~COCO_train2014_000000380447
# ::doc_file train2014~COCO_train2014_000000380447
# ::tok A man on a bike is wearing a red jacket and a red and white hat . <next_sent> He is holding a red box , possibly a pizza box , while riding down the street . <next_sent> There are several bicycles in the scene , including one with a man on it and another one parked on the sidewalk . <next_sent> A car is also visible in the scene , parked on the street .
(d / document
   :snt1 (s1.w / wear-01
               :ARG0 (s1.m / man
                           :mod (s1.b / bike))
               :ARG1 (s1.a / and
                           :op1 (s1.j / jacket
                                      :ARG1-of (s1.r / red-02))
                           :op2 (s1.h / hat
                                      :consist-of (s1.a2 / and
                                                         :op1 (s1.r2 / red-02)
                                                         :op2 (s1.w2 / white-03)))))
   :snt2 (s2.h2 / hold-01
                :ARG0 (s2.h / he
                            :same-as s1.m)
                :ARG1 (s2.b / box
                            :ARG1-of (s2.r / red-02)
                            :mod (s2.b2 / box
                                        :ARG1-of (s2.p2 / possible-01)
                                        :mod (s2.p / pizza)))
                :time (s2.r2 / ride-01
                             :ARG0 s2.h
                             :ARG1 (s2.s / street)
                             :direction (s2.d / down)))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.b2 / bicycle
                            :quant (s3.s2 / several)
                            :ARG2-of (s3.i / include-91
                                           :ARG1 (s3.a / and
                                                       :op1 (s3.b3 / bicycle
                                                                   :ARG0-of (s3.h / have-03
                                                                                  :ARG1 (s3.m / man
                                                                                              :location s3.b3))
                                                                   :quant "1")
                                                       :op2 (s3.b4 / bicycle
                                                                   :ARG1-of (s3.p / park-01
                                                                                  :ARG2 (s3.s3 / sidewalk))
                                                                   :mod (s3.a2 / another)))))
               :ARG2 (s3.s / scene))
   :snt4 (s4.p2 / possible-01
                :ARG1 (s4.s2 / see-01
                             :ARG1 (s4.c / car
                                         :ARG1-of (s4.p / park-01
                                                        :ARG2 (s4.s3 / street
                                                                     :same-as s2.s)))
                             :location (s4.s / scene
                                             :same-as s3.s))
                :mod (s4.a / also)))