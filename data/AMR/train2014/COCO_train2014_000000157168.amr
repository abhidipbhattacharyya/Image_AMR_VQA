# ::id train2014~COCO_train2014_000000157168
# ::doc_file train2014~COCO_train2014_000000157168
# ::tok Three giraffes are standing in a fenced area , with one giraffe eating leaves from a tree . <next_sent> The giraffes are standing next to each other , with one on the left , one in the middle , and one on the right . <next_sent> The tree has a few leaves on it , and the giraffes are enjoying their time together .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.s / stand-01
                          :ARG1 (s1.g / giraffe
                                      :quant "3")
                          :ARG2 (s1.a2 / area
                                       :ARG1-of (s1.c / chain-01)))
               :op2 (s1.e / eat-01
                          :ARG0 (s1.g2 / giraffe
                                       :quant "1")
                          :ARG1 (s1.l / leaf
                                      :source (s1.t / tree))))
   :snt2 (s2.s / stand-01
               :ARG1 (s2.g / giraffe
                           :consist-of (s2.a / and
                                             :op1 (s2.o / one
                                                        :ARG1-of (s2.l / left-19))
                                             :op2 (s2.o2 / one
                                                         :ARG1-of (s2.r / right-04)
                                                         :location (s2.m / middle)))
                           :part s2.o
                           :same-as s1.g)
               :ARG2 (s2.n / next-to
                           :op1 (s2.e / each
                                      :mod (s2.o3 / other))))
   :snt3 (s3.a / and
               :op1 (s3.h / have-03
                          :ARG0 (s3.t3 / tree
                                       :same-as s1.t)
                          :ARG1 (s3.l / leaf
                                      :quant (s3.f / few)
                                      :location s3.t3))
               :op2 (s3.e / enjoy-01
                          :ARG0 (s3.g / giraffe
                                      :same-as s1.g)
                          :ARG1 (s3.t / time
                                      :mod (s3.t2 / together)
                                      :poss s3.g))))