# ::id train2014~COCO_train2014_000000044488
# ::doc_file train2014~COCO_train2014_000000044488
# ::tok A man is bending over a table full of bananas , picking one up . <next_sent> The bananas are arranged in several bunches , with some closer to the man and others further away . <next_sent> The man is wearing a red jacket and a hat .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.b2 / bend-01
                           :ARG0 (s1.m / man)
                           :direction (s1.o / over
                                            :op1 (s1.t / table
                                                       :ARG1-of (s1.f / full-09
                                                                      :ARG2 (s1.b / banana)))))
               :op2 (s1.p / pick-up-04
                          :ARG0 s1.m
                          :ARG1 s1.b))
   :snt2 (s2.a2 / arrange-01
                :ARG1 (s2.b / banana
                            :same-as s1.b)
                :ARG2 (s2.l / load
                            :quant (s2.s / several)
                            :example (s2.a / and
                                           :op1 (s2.c / close-10
                                                      :ARG1 (s2.s2 / some)
                                                      :ARG2 (s2.m / man
                                                                  :same-as s1.m)
                                                      :ARG2-of (s2.h / have-degree-91
                                                                     :ARG1 s2.s2
                                                                     :ARG3 (s2.m2 / more)))
                                           :op2 (s2.b2 / be-located-at-91
                                                       :ARG1 (s2.o / other)
                                                       :ARG2 (s2.a3 / away
                                                                    :extent (s2.f / far))))))
   :snt3 (s3.w / wear-01
               :ARG0 (s3.m / man
                           :same-as s1.m)
               :ARG1 (s3.a / and
                           :op1 (s3.j / jacket
                                      :ARG1-of (s3.r / red-02))
                           :op2 (s3.h / hat))))