# ::id train2014~COCO_train2014_000000211384
# ::doc_file train2014~COCO_train2014_000000211384
# ::tok A train is being pulled by a truck down a road . <next_sent> The train is green and white and has the letter M on the front . <next_sent> The truck is orange and is pulling the train . <next_sent> There are two people in the scene , one on the left side and one on the right side of the train .
(d / document
   :snt1 (s1.p / pull-01
               :ARG0 (s1.t2 / truck)
               :ARG1 (s1.t / train)
               :direction (s1.d / down
                                :op1 (s1.r / road)))
   :snt2 (s2.a2 / and
                :op1 (s2.a / and
                           :domain (s2.t / train
                                         :part (s2.f / front)
                                         :same-as s1.t)
                           :op1 (s2.g / green-02)
                           :op2 (s2.w / white-03))
                :op2 (s2.h / have-03
                           :ARG0 s2.t
                           :ARG1 (s2.l / letter
                                       :name (s2.n / name
                                                   :op1 "M"))
                           :location s2.f))
   :snt3 (s3.a / and
               :op1 (s3.o / orange
                          :domain (s3.t2 / truck
                                         :same-as s1.t2))
               :op2 (s3.p / pull-01
                          :ARG0 s3.t2
                          :ARG1 (s3.t / train
                                      :same-as s1.t)))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.p / person
                           :ARG2-of (s4.i / include-91
                                          :ARG1 (s4.a2 / and
                                                       :op1 (s4.a / 1
                                                                  :location (s4.s2 / side
                                                                                   :ARG1-of (s4.l / left-20)
                                                                                   :part-of (s4.t / train
                                                                                                  :part (s4.s4 / side
                                                                                                               :ARG1-of (s4.r / right-04
                                                                                                                              :ARG1 s4.s3))
                                                                                                  :same-as s1.t)))
                                                       :op2 (s4.s3 / side
                                                                   :quant "1")))
                           :quant "2")
               :ARG2 (s4.s / scene)
               :rel (s4.i2 / include-91
                           :ARG2 s4.p
                           :ARG3 s4.s4)))