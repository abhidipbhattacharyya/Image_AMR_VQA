# ::id train2014~COCO_train2014_000000202783
# ::doc_file train2014~COCO_train2014_000000202783
# ::tok A stove top oven is open and has a pan on the top rack . <next_sent> A silver pot is on the stove top and another pot is on the counter . <next_sent> There are two pans on the stove top , one is silver and the other is black . <next_sent> A drawer is open under the stove top .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.o / open-01
                          :ARG1 (s1.o2 / oven
                                       :mod (s1.t / top)))
               :op2 (s1.h / have-03
                          :ARG0 s1.o2
                          :ARG1 (s1.p / pan
                                      :location (s1.r / rack
                                                      :mod (s1.t2 / top)))))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.p / pot
                                      :mod (s2.s / silver))
                          :ARG2 (s2.t / top
                                      :mod (s2.s2 / stove)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.p2 / pot
                                        :mod (s2.a2 / another))
                           :ARG2 (s2.c / counter)))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.a / Pan
                           :ARG2-of (s3.i / include-91
                                          :ARG1 (s3.a3 / and
                                                       :op1 (s3.a2 / Pan
                                                                   :ARG1-of (s3.b2 / black-04)
                                                                   :mod (s3.s / silver)
                                                                   :op2-of s3.a3
                                                                   :quant "1")))
                           :quant "2")
               :ARG2 (s3.t / top
                           :mod (s3.s2 / stove)
                           :same-as s2.t))
   :snt4 (s4.o / open-01
               :ARG1 (s4.d / drawer
                           :location (s4.u / under
                                           :op1 (s4.t / top
                                                      :part-of (s4.s / stove)
                                                      :same-as s2.t)))))