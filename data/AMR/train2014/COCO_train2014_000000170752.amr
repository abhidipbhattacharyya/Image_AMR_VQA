# ::id train2014~COCO_train2014_000000170752
# ::doc_file train2014~COCO_train2014_000000170752
# ::tok Three cows are standing in a grassy field . <next_sent> The first cow is on the left side of the field , the second cow is in the middle , and the third cow is on the right side of the field . <next_sent> The cows are standing close to a fence , with the first cow being closest to the fence .
(d / document
   :snt1 (s1.s / stand-01
               :ARG1 (s1.c / cow
                           :quant "3")
               :ARG2 (s1.f / field
                           :consist-of (s1.g / grass)))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.c / cow
                                      :ord (s2.o / ordinal-entity
                                                 :value "1"))
                          :ARG2 (s2.s / side
                                      :ARG1-of (s2.l / left-20)
                                      :part-of (s2.f / field
                                                     :part (s2.s2 / side
                                                                  :ARG1-of (s2.r / right-04))
                                                     :same-as s1.f)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.c2 / cow
                                        :li "2")
                           :ARG2 (s2.m / middle))
               :op3 (s2.b3 / be-located-at-91
                           :ARG1 (s2.c3 / cow
                                        :ord (s2.o2 / ordinal-entity
                                                    :value "3"))
                           :ARG2 s2.s2))
   :snt3 (s3.a / and
               :op1 (s3.s / stand-01
                          :ARG1 (s3.c3 / cow
                                       :same-as s1.c)
                          :ARG2 (s3.c / close-10
                                      :ARG1 s3.c3
                                      :ARG2 (s3.f / fence)))
               :op2 (s3.h / have-degree-91
                          :ARG1 (s3.c4 / cow
                                       :ord (s3.o / ordinal-entity
                                                  :value "1"))
                          :ARG2 (s3.c2 / close-10
                                       :ARG1 s3.c4
                                       :ARG2 s3.f)
                          :ARG3 (s3.m / most))))