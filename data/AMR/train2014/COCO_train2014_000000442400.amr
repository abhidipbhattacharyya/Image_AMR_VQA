# ::id train2014~COCO_train2014_000000442400
# ::doc_file train2014~COCO_train2014_000000442400
# ::tok A laptop computer is sitting on top of a white plastic container on a red desk . <next_sent> The container is divided into three sections , with one section holding a mouse and two others holding papers . <next_sent> There are also two bottles on the desk , one near the left edge and the other near the right edge .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.c / computer
                           :mod (s1.l / laptop))
               :ARG2 (s1.t / top
                           :part-of (s1.c2 / container
                                           :ARG1-of (s1.w / white-03)
                                           :consist-of (s1.p / plastic)
                                           :location (s1.d / desk
                                                           :ARG1-of (s1.r / red-02)))))
   :snt2 (s2.d / divide-02
               :ARG1 (s2.c / container
                           :same-as s1.w)
               :ARG2 (s2.s / section
                           :part (s2.a / and
                                       :op1 (s2.h / hold-01
                                                  :ARG0 (s2.s2 / section
                                                               :quant "1")
                                                  :ARG1 (s2.m / mouse))
                                       :op2 (s2.h2 / hold-01
                                                   :ARG0 (s2.s3 / section
                                                                :mod (s2.o / other)
                                                                :quant "2")
                                                   :ARG1 (s2.p / paper)))
                           :quant "3"))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.b2 / bottle
                            :ARG1-of (s3.n / near-02
                                           :ARG2 (s3.e / edge
                                                       :ARG1-of (s3.l / left-20)))
                            :mod (s3.a / also)
                            :quant "1"
                            :quant "2")
               :ARG2 (s3.d / desk
                           :same-as s1.d)
               :rel (s3.a2 / and
                           :op1 s3.b2
                           :op2 (s3.b3 / bottle
                                       :ARG1-of (s3.n2 / near-02
                                                       :ARG2 (s3.e2 / edge
                                                                    :ARG1-of (s3.r / right-04)))
                                       :mod (s3.o / other)))))