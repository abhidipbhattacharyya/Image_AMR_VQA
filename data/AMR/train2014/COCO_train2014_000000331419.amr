# ::id train2014~COCO_train2014_000000331419
# ::doc_file train2014~COCO_train2014_000000331419
# ::tok A group of dogs are sitting in the back of a car , looking out the window . <next_sent> There are five dogs in total , with one dog sitting in the middle of the group , and the other four dogs are positioned around it . <next_sent> The dogs are all looking out the window , possibly enjoying the ride or observing their surroundings .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.s / sit-01
                          :ARG1 (s1.g / group
                                      :consist-of (s1.d / dog))
                          :ARG2 (s1.b / back
                                      :part-of (s1.c / car
                                                     :part (s1.w / window))))
               :op2 (s1.l / look-01
                          :ARG0 s1.g
                          :ARG1 s1.w))
   :snt2 (s2.d / dog
               :ARG2-of (s2.t / total-01)
               :consist-of (s2.a / and
                                 :op1 (s2.s / sit-01
                                            :ARG1 (s2.d2 / dog
                                                         :quant "1")
                                            :ARG2 (s2.m / middle
                                                        :part-of (s2.g / group
                                                                       :same-as s1.g)))
                                 :op2 (s2.p / position-01
                                            :ARG1 (s2.d3 / dog
                                                         :mod (s2.o / other)
                                                         :quant "4")
                                            :ARG2 (s2.a2 / around
                                                         :op1 s2.m)))
               :quant "5")
   :snt3 (s3.a2 / and
                :op1 (s3.l / look-01
                           :ARG0 (s3.d / dog
                                       :mod (s3.a / all)
                                       :same-as s1.g)
                           :ARG1 (s3.w / window))
                :op2 (s3.o2 / or
                            :op1 (s3.p / possible-01
                                       :ARG1 (s3.e / enjoy-01
                                                   :ARG0 s3.d
                                                   :ARG1 (s3.r / ride-01
                                                               :ARG0 s3.d)))
                            :op2 (s3.o / observe-01
                                       :ARG0 s3.d
                                       :ARG1 (s3.t / thing
                                                   :ARG1-of (s3.s / surround-01
                                                                  :ARG2 s3.d))))))