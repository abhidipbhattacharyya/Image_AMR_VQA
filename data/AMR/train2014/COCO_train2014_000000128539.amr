# ::id train2014~COCO_train2014_000000128539
# ::doc_file train2014~COCO_train2014_000000128539
# ::tok A woman and two children are sitting around a dining table with a birthday cake . <next_sent> The woman is smiling and leaning over the child in front of her . <next_sent> The child is wearing a party hat and the other child is wearing a different party hat . <next_sent> The table is set with a fork and a knife .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.a / and
                           :op1 (s1.w / woman)
                           :op2 (s1.c2 / child
                                       :quant "2")
                           :poss (s1.c / cake
                                       :mod (s1.b / birthday)))
               :ARG2 (s1.a2 / around
                            :op1 (s1.t / table
                                       :mod (s1.d / dine-01))))
   :snt2 (s2.a / and
               :op1 (s2.s / smile-01
                          :ARG0 (s2.w / woman
                                      :same-as s1.w))
               :op2 (s2.l / lean-01
                          :ARG1 s2.w
                          :ARG2 (s2.o / over
                                      :op1 (s2.c / child
                                                 :location (s2.i / in-front-of
                                                                 :op1 s2.w)))))
   :snt3 (s3.a / and
               :op1 (s3.w / wear-01
                          :ARG0 (s3.c / child
                                      :same-as s2.c)
                          :ARG1 (s3.h / hat
                                      :mod (s3.p / party)))
               :op2 (s3.w2 / wear-01
                           :ARG0 (s3.c2 / child
                                        :mod (s3.o / other))
                           :ARG1 (s3.h2 / hat
                                        :ARG1-of (s3.d / differ-02)
                                        :mod (s3.p2 / party))))
   :snt4 (s4.s / set-01
               :ARG1 (s4.t / table
                           :same-as s1.t)
               :manner (s4.a / and
                             :op1 (s4.f / fork)
                             :op2 (s4.k / knife))))