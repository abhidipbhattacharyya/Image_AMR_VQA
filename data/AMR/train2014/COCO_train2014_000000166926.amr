# ::id train2014~COCO_train2014_000000166926
# ::doc_file train2014~COCO_train2014_000000166926
# ::tok Three people are working in a kitchen , preparing food . <next_sent> They are standing at a counter with various items on it , including a knife , a spoon , a bowl , and a cell phone . <next_sent> The kitchen is equipped with an oven , a sink , and a refrigerator . <next_sent> There are also several bottles and a cup on the counter .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.w / work-01
                          :ARG0 (s1.p / person
                                      :quant "3")
                          :location (s1.k / kitchen))
               :op2 (s1.p2 / prepare-01
                           :ARG0 s1.p
                           :ARG1 (s1.f / food)))
   :snt2 (s2.s2 / stand-01
                :ARG1 (s2.t / they
                            :same-as s1.p)
                :ARG2 (s2.c2 / counter)
                :prep-with (s2.i2 / item
                                  :ARG2-of (s2.i / include-91
                                                 :ARG1 (s2.a / and
                                                             :op1 (s2.k / knife)
                                                             :op2 (s2.s / spoon)
                                                             :op3 (s2.b / bowl)
                                                             :op4 (s2.p / phone
                                                                        :mod (s2.c / cell))))
                                  :location s2.c2
                                  :mod (s2.v / various)))
   :snt3 (s3.e / equip-01
               :ARG1 (s3.k / kitchen
                           :same-as s1.k)
               :ARG2 (s3.a / and
                           :op1 (s3.o / oven)
                           :op2 (s3.s / sink)
                           :op3 (s3.r / refrigerator)))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.a2 / and
                            :op1 (s4.s / several
                                       :op1 (s4.v / volume-quantity
                                                  :unit (s4.b2 / bottle)
                                                  :quant "1"))
                            :op2 (s4.c2 / cup))
               :ARG2 (s4.c / counter
                           :same-as s2.v)
               :mod (s4.a / also)))