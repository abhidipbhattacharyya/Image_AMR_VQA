# ::id train2014~COCO_train2014_000000095349
# ::doc_file train2014~COCO_train2014_000000095349
# ::tok Two pizzas are sitting on a table , one on a black tray and the other on a pan . <next_sent> The pizzas are topped with cheese and vegetables . <next_sent> There are also two bowls on the table , one containing sauce and the other containing a side dish . <next_sent> A knife is placed next to the bowls .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.b / be-located-at-91
                          :ARG1 (s1.p2 / pizzeria
                                       :quant "2")
                          :ARG2 (s1.t2 / tray
                                       :ARG1-of (s1.b3 / black-04)))
               :op2 (s1.a2 / and
                           :op1 s1.b
                           :op2 (s1.b2 / be-located-at-91
                                       :ARG1 (s1.p3 / pizzeria)
                                       :ARG2 (s1.p / pan)))
               :rel (s1.s / sit-01
                          :ARG1 s1.p2
                          :ARG2 (s1.t / table)))
   :snt2 (s2.t / top-01
               :ARG1 (s2.p / pizzeria
                           :same-as s1.p2)
               :ARG2 (s2.a / and
                           :op1 (s2.c / cheese)
                           :op2 (s2.v / vegetable)))
   :snt3 (s3.a2 / and
                :op1 (s3.p / pound
                           :ARG2-of (s3.i / include-91
                                          :ARG1 (s3.d / dish
                                                      :ARG0-of (s3.c / contain-01
                                                                     :ARG1 (s3.s / sauce))))
                           :ARG2-of (s3.i2 / include-91
                                           :ARG1 (s3.b / bowl-01
                                                       :ARG0-of (s3.c2 / contain-01
                                                                       :ARG1 (s3.d2 / dish
                                                                                    :mod (s3.s2 / side)))
                                                       :location (s3.t / table
                                                                       :same-as s1.t)
                                                       :mod (s3.o / other)))
                           :mod (s3.a / also)
                           :quant "2")
                :op2 s3.i2)
   :snt4 (s4.p / place-01
               :ARG1 (s4.k / knife)
               :ARG2 (s4.n / next-to
                           :op1 (s4.p2 / pound))))