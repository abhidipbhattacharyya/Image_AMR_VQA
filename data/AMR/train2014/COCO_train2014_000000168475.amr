# ::id train2014~COCO_train2014_000000168475
# ::doc_file train2014~COCO_train2014_000000168475
# ::tok A snowy runway with three airplanes . <next_sent> The first plane is on the left side of the runway , the second plane is in the middle , and the third plane is on the right side . <next_sent> The first plane is white and blue , the second plane is white and red , and the third plane is white and blue .
(d / document
   :snt1 (s1.r / runway
               :ARG0-of (s1.h / have-03
                              :ARG1 (s1.a / airplane
                                          :quant "3"))
               :ARG1-of (s1.s / snowy-02))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.p / plane
                                      :ord (s2.o / ordinal-entity
                                                 :value "1"))
                          :ARG2 (s2.s / side
                                      :ARG1-of (s2.l / left-20)
                                      :part-of (s2.r2 / runway
                                                      :same-as s1.r)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.p2 / plane
                                        :li "2")
                           :ARG2 (s2.m / middle))
               :op3 (s2.b3 / be-located-at-91
                           :ARG1 (s2.p3 / plane
                                        :ord (s2.o2 / ordinal-entity
                                                    :value "3"))
                           :ARG2 (s2.s2 / side
                                        :ARG1-of (s2.r / right-04))))
   :snt3 (s3.a3 / and
                :op1 (s3.a / and
                           :domain (s3.p / plane
                                         :li "1"
                                         :same-as s2.p)
                           :op1 (s3.w / white-03)
                           :op2 (s3.b / blue))
                :op2 (s3.a2 / and
                            :domain (s3.p2 / plane
                                           :li "2"
                                           :same-as s2.p2)
                            :op1 (s3.w2 / white-03)
                            :op2 (s3.r / red-02))
                :op3 (s3.p3 / plane
                            :ord (s3.o / ordinal-entity
                                       :value "2")
                            :same-as s2.p3)))