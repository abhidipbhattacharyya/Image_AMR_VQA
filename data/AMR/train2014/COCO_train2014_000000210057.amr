# ::id train2014~COCO_train2014_000000210057
# ::doc_file train2014~COCO_train2014_000000210057
# ::tok A yellow and black train is traveling down the tracks . <next_sent> The train is passing by a building with a red brick facade . <next_sent> There are two traffic lights in the scene , one on the left side and the other on the right side of the train . <next_sent> A stop sign is also visible on the right side of the train .
(d / document
   :snt1 (s1.t4 / travel-01
                :ARG0 (s1.a / and
                            :op1 (s1.t2 / train
                                        :ARG1-of (s1.y / yellow-02))
                            :op2 (s1.t3 / train
                                        :ARG1-of (s1.b / black-04)))
                :ARG1 (s1.t / track)
                :direction (s1.d / down))
   :snt2 (s2.p / pass-by-17
               :ARG0 (s2.t / train
                           :same-as s1.a)
               :ARG1 (s2.b2 / building
                            :part (s2.f / facade
                                        :consist-of (s2.b / brick
                                                          :ARG1-of (s2.r / red-02)))))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.l2 / light
                            :location (s3.s2 / side
                                             :ARG1-of (s3.l / left-20))
                            :mod (s3.t / traffic)
                            :quant "2")
               :ARG2 (s3.s / scene)
               :ARG2 (s3.a / and
                           :op1 (s3.l3 / light
                                       :quant "1")
                           :op2 (s3.l4 / light
                                       :location (s3.s3 / side
                                                        :ARG1-of (s3.r / right-04)
                                                        :part-of (s3.t2 / train
                                                                        :same-as s1.a))
                                       :mod (s3.o / other))))
   :snt4 (s4.p / possible-01
               :ARG1 (s4.s / see-01
                           :ARG1 (s4.s3 / sign
                                        :purpose (s4.s4 / stop-01))
                           :location (s4.s2 / side
                                            :ARG1-of (s4.r / right-04
                                                           :ARG2 (s4.t / train
                                                                       :same-as s1.a))
                                            :same-as s3.s3))
               :mod (s4.a / also)))