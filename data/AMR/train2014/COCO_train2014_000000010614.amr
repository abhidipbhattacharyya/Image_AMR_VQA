# ::id train2014~COCO_train2014_000000010614
# ::doc_file train2014~COCO_train2014_000000010614
# ::tok A white plate with a slice of pizza on it sits on a table . <next_sent> The table also has a glass of orange juice , a glass of water , and a bottle of ketchup . <next_sent> There is another plate with two slices of pizza on it . <next_sent> A person is sitting at the table , and a cell phone is placed on the table as well .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.p2 / plate
                            :ARG0-of (s1.h / have-03
                                           :ARG1 (s1.s2 / slice
                                                        :mod (s1.p / pizza)))
                            :ARG1-of (s1.w / white-03))
               :ARG2 (s1.t / table))
   :snt2 (s2.h / have-03
               :ARG0 (s2.t / table
                           :same-as s1.t)
               :ARG1 (s2.a2 / and
                            :op1 (s2.j / juice
                                       :quant (s2.v / volume-quantity
                                                    :unit (s2.g / glass)
                                                    :quant "1")
                                       :source (s2.o / orange))
                            :op2 (s2.w / water
                                       :quant (s2.g2 / glass))
                            :op3 (s2.v2 / volume-quantity
                                        :quant-of (s2.k / ketchup)
                                        :unit (s2.b / bottle)
                                        :quant "1"))
               :mod (s2.a / also))
   :snt3 (s3.p2 / plate
                :ARG2-of (s3.b / be-located-at-91
                               :ARG1 (s3.p / pizza
                                           :quant (s3.s / slice
                                                        :quant "2")))
                :mod (s3.a / another))
   :snt4 (s4.a / and
               :op1 (s4.s / sit-01
                          :ARG1 (s4.p / person)
                          :ARG2 (s4.t / table
                                      :same-as s1.t))
               :op2 (s4.p3 / place-01
                           :ARG1 (s4.p2 / phone
                                        :mod (s4.c / cell))
                           :ARG2 s4.t
                           :mod (s4.a2 / as-well))))