# ::id train2014~COCO_train2014_000000173474
# ::doc_file train2014~COCO_train2014_000000173474
# ::tok A bathroom sink with a mirror above it . <next_sent> The sink is white and has a faucet . <next_sent> The mirror is above the sink and is reflecting the bathroom . <next_sent> The bathroom is decorated with blue tiles on the walls and floor . <next_sent> There are several bottles on the counter , including one that is blue . <next_sent> A toothbrush is also visible on the counter .
(d / document
   :snt1 (s1.s / sink
               :location (s1.b / bathroom)
               :location (s1.a / above
                               :op1 (s1.m / mirror)))
   :snt2 (s2.a / and
               :op1 (s2.w / white-03
                          :ARG1 (s2.s / sink
                                      :same-as s1.s))
               :op2 (s2.h / have-03
                          :ARG0 s2.s
                          :ARG1 (s2.f / faucet)))
   :snt3 (s3.a2 / and
                :op1 (s3.m / mirror
                           :location (s3.a / above
                                           :op1 (s3.s / sink
                                                      :same-as s1.s))
                           :same-as s1.m)
                :op2 (s3.r / reflect-01
                           :ARG1 (s3.b / bathroom)
                           :ARG2 s3.m))
   :snt4 (s4.d / decorate-01
               :ARG1 (s4.b / bathroom
                           :same-as s3.b)
               :ARG2 (s4.t / tile
                           :location (s4.a / and
                                           :op1 (s4.w / wall)
                                           :op2 (s4.f / floor))
                           :mod (s4.b2 / blue)))
   :snt5 (s5.b / be-located-at-91
               :ARG1 (s5.b3 / bottle
                            :quant (s5.s / several)
                            :ARG2-of (s5.i / include-01
                                           :ARG1 (s5.b4 / bottle
                                                        :mod (s5.b2 / blue)
                                                        :quant "1")))
               :ARG2 (s5.c / counter))
   :snt6 (s6.p / possible-01
               :ARG1 (s6.s / see-01
                           :ARG1 (s6.t / toothbrush)
                           :location (s6.c / counter
                                           :same-as s5.c))
               :mod (s6.a / also)))