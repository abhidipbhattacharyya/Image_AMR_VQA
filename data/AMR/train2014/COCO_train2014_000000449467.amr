# ::id train2014~COCO_train2014_000000449467
# ::doc_file train2014~COCO_train2014_000000449467
# ::tok A table with a variety of vegetables and fruits . <next_sent> There are several carrots , an orange , a lemon , a purple cabbage , and a head of broccoli . <next_sent> The vegetables are placed in plastic bags , and some are placed on the table . <next_sent> The table is grey , and the vegetables are arranged in a way that makes it easy to see and access them .
(d / document
   :snt1 (s1.t / table
               :ARG0-of (s1.h / have-03
                              :ARG1 (s1.v / variety
                                          :domain (s1.a / and
                                                        :op1 (s1.v2 / vegetable)
                                                        :op2 (s1.f / fruit)))))
   :snt2 (s2.a / and
               :op1 (s2.c2 / carrot
                           :quant (s2.s / several))
               :op2 (s2.o / orange)
               :op3 (s2.l / lemon)
               :op4 (s2.c / cabbage
                          :ARG1-of (s2.p / purple-02))
               :op5 (s2.b / broccoli
                          :quant (s2.h / head)))
   :snt3 (s3.a / and
               :op1 (s3.p / place-01
                          :ARG1 (s3.v / vegetable
                                      :same-as s1.v)
                          :ARG2 (s3.b / bag
                                      :consist-of (s3.p3 / plastic)))
               :op2 (s3.p2 / place-01
                           :ARG1 (s3.v2 / vegetable
                                        :quant (s3.s / some))
                           :ARG2 (s3.t / table
                                       :same-as s1.t)))
   :snt4 (s4.a2 / and
                :op1 (s4.g / gray-02
                           :ARG1 (s4.t / table
                                       :same-as s1.t))
                :op2 (s4.a4 / arrange-01
                            :ARG1 (s4.v / vegetable
                                        :same-as s1.v)
                            :manner (s4.w / way
                                          :ARG0-of (s4.m / make-02
                                                         :ARG1 (s4.e / easy-05
                                                                     :ARG1 (s4.a3 / and
                                                                                  :op1 (s4.s / see-01
                                                                                             :ARG1 s4.v)
                                                                                  :op2 (s4.a / access-01
                                                                                             :ARG1 s4.v))))))))