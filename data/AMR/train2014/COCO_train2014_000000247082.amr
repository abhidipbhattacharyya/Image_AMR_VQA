# ::id train2014~COCO_train2014_000000247082
# ::doc_file train2014~COCO_train2014_000000247082
# ::tok Two men are standing in the snow , one holding a snowboard and the other holding a pair of skis . <next_sent> The snowboarder is wearing a helmet and the skier is wearing a hat . <next_sent> The snowboard is placed in the snow , and the skis are leaning against a pole .
(d / document
   :snt1 (s1.s4 / stand-01
                :ARG1 (s1.m / man
                            :ARG0-of (s1.h / hold-01
                                           :ARG1 (s1.s3 / snowboard))
                            :ARG1-of (s1.i / include-91
                                           :ARG2 (s1.m2 / man
                                                        :ARG0-of (s1.h2 / hold-01
                                                                        :ARG1 (s1.s / ski-01
                                                                                    :quant (s1.p / pair
                                                                                                 :quant "1")))
                                                        :mod (s1.o / other))))
                :ARG2 (s1.s2 / snow))
   :snt2 (s2.a / and
               :op1 (s2.w / wear-01
                          :ARG0 (s2.p / person
                                      :ARG0-of (s2.s / ski-01))
                          :ARG1 (s2.h2 / helmet))
               :op2 (s2.w2 / wear-01
                           :ARG0 (s2.p2 / person
                                        :ARG0-of (s2.s2 / ski-01))
                           :ARG1 (s2.h / hat)))
   :snt3 (s3.a2 / and
                :op1 (s3.p / place-01
                           :ARG1 (s3.s3 / snowboard
                                        :same-as s1.s3)
                           :ARG2 (s3.s2 / snow
                                        :same-as s1.s2))
                :op2 (s3.l / lean-01
                           :ARG1 (s3.t / thing
                                       :ARG1-of (s3.s / ski-01
                                                      :same-as s1.s))
                           :ARG2 (s3.a / against
                                       :op1 (s3.p2 / pole)))))