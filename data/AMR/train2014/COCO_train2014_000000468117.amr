# ::id train2014~COCO_train2014_000000468117
# ::doc_file train2014~COCO_train2014_000000468117
# ::tok A large pizza is on a table with a slice missing . <next_sent> The pizza is topped with cheese and has a crust . <next_sent> The table is surrounded by people , with one person on the left side , another on the right side , and one person behind the pizza . <next_sent> A knife is also visible on the table , likely used to cut the pizza .
(d / document
   :snt1 (s1.m / miss-01
               :ARG0 (s1.b / be-located-at-91
                           :ARG1 (s1.p / pizza
                                       :mod (s1.l / large))
                           :ARG2 (s1.t / table))
               :ARG1 (s1.s / slice))
   :snt2 (s2.a / and
               :op1 (s2.t / top-01
                          :ARG1 (s2.p / pizza
                                      :same-as s1.p)
                          :ARG2 (s2.c / cheese))
               :op2 (s2.h / have-03
                          :ARG0 s2.p
                          :ARG1 (s2.c2 / crust)))
   :snt3 (s3.s3 / surround-01
                :ARG1 (s3.p / person
                            :consist-of (s3.a / and
                                              :op1 (s3.p2 / person
                                                          :location (s3.s / side
                                                                          :ARG1-of (s3.l / left-20))
                                                          :quant "1")
                                              :op2 (s3.p3 / person
                                                          :location (s3.s2 / side
                                                                           :ARG1-of (s3.r / right-04))
                                                          :mod (s3.a2 / another))
                                              :op3 (s3.p4 / person
                                                          :location (s3.b / behind
                                                                          :op1 (s3.p5 / pizza
                                                                                      :same-as s1.p))
                                                          :quant "1")))
                :ARG2 (s3.t / table))
   :snt4 (s4.p2 / possible-01
                :ARG1 (s4.s / see-01
                            :ARG1 (s4.k / knife
                                        :ARG1-of (s4.u / use-01
                                                       :ARG1-of (s4.l / likely-01)
                                                       :ARG2 (s4.c / cut-01
                                                                   :ARG0 s4.k
                                                                   :ARG1 (s4.p / pizza
                                                                               :same-as s1.p))))
                            :location (s4.t / table
                                            :same-as s3.t))
                :mod (s4.a / also)))