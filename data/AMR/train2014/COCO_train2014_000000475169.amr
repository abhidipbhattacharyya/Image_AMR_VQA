# ::id train2014~COCO_train2014_000000475169
# ::doc_file train2014~COCO_train2014_000000475169
# ::tok A large group of pigeons are gathered on the sidewalk , eating food . <next_sent> The birds are scattered all over the sidewalk , with some standing and others sitting . <next_sent> The pigeons are eating food that has been left out for them , and there are several handbags and a backpack nearby .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.g / gather-03
                          :ARG0 (s1.g2 / group
                                       :consist-of (s1.b / bird)
                                       :mod (s1.l / large))
                          :location (s1.s / sidewalk))
               :op2 (s1.e / eat-01
                          :ARG0 s1.g2
                          :ARG1 (s1.f / food)))
   :snt2 (s2.s / scatter-01
               :ARG1 (s2.b / bird
                           :same-as s1.g2)
               :ARG2 (s2.a / all-over
                           :op1 (s2.s2 / sidewalk
                                       :same-as s1.s))
               :example (s2.a2 / and
                               :op1 (s2.s5 / stand-01
                                           :ARG1 (s2.b2 / bird
                                                        :quant (s2.s4 / some)
                                                        :mod (s2.o / other)))
                               :op2 (s2.s3 / sit-01
                                           :ARG1 s2.b2)))
   :snt3 (s3.a / and
               :op1 (s3.e / eat-01
                          :ARG0 (s3.b3 / bird
                                       :same-as s1.g2)
                          :ARG1 (s3.f / food
                                      :ARG1-of (s3.l / leave-12
                                                     :ARG2 s3.b3
                                                     :direction (s3.o / out))
                                      :same-as s1.f))
               :op2 (s3.n / near-02
                          :ARG1 (s3.a2 / and
                                       :op1 (s3.b2 / bag
                                                   :quant (s3.s / several))
                                       :op2 (s3.b / backpack)))))