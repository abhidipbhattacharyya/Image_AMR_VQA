# ::id train2014~COCO_train2014_000000255849
# ::doc_file train2014~COCO_train2014_000000255849
# ::tok A woman is making a pizza in a kitchen . <next_sent> She is standing in front of a counter and is using a pizza cutter to cut the pizza . <next_sent> The kitchen is equipped with a sink , a refrigerator , a microwave , and an oven . <next_sent> There are several bottles and cups scattered around the counter and a pair of scissors is also visible .
(d / document
   :snt1 (s1.m / make-01
               :ARG0 (s1.w / woman)
               :ARG1 (s1.p / pizza)
               :location (s1.k / kitchen))
   :snt2 (s2.a / and
               :op1 (s2.s2 / stand-01
                           :ARG0 (s2.s / she
                                       :same-as s1.w)
                           :ARG2 (s2.i / in-front-of
                                       :op1 (s2.c / counter)))
               :op2 (s2.u / use-01
                          :ARG0 s2.s
                          :ARG1 (s2.t / thing
                                      :ARG0-of (s2.c2 / cut-01
                                                      :ARG1 (s2.p / pizza)))
                          :ARG2 (s2.c3 / cut-01
                                       :ARG0 s2.s
                                       :ARG1 s2.p)))
   :snt3 (s3.e / equip-01
               :ARG1 (s3.k / kitchen
                           :same-as s1.k)
               :ARG2 (s3.a / and
                           :op1 (s3.s / sink)
                           :op2 (s3.r / refrigerator)
                           :op3 s3.r
                           :op4 (s3.m / microwave)
                           :op5 (s3.o / oven)))
   :snt4 (s4.a2 / and
                :op1 (s4.s / scatter-01
                           :ARG1 (s4.a3 / and
                                        :op1 (s4.b / bottle
                                                   :quant (s4.s3 / several))
                                        :op2 (s4.c2 / cup
                                                    :quant (s4.s4 / several)))
                           :ARG2 (s4.a4 / around
                                        :op1 (s4.c / counter
                                                   :same-as s2.c)))
                :op2 (s4.p2 / possible-01
                            :ARG1 (s4.s2 / see-01
                                         :ARG1 (s4.n / needle
                                                     :quant (s4.p / pair)))
                            :mod (s4.a / also))))