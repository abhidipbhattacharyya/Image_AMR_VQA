# ::id train2014~COCO_train2014_000000004642
# ::doc_file train2014~COCO_train2014_000000004642
# ::tok Two pizzas are on a wooden table , one with mushrooms and the other with mushrooms and ham . <next_sent> The pizzas are placed on a wooden platter , and there are silverware items on the table , including a fork , a knife , and a spoon . <next_sent> The table is also adorned with a cell phone and a cup .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.p / pizzeria
                           :ARG0-of (s1.h2 / have-03
                                           :ARG1 (s1.m / mushroom))
                           :quant "1"
                           :quant "2")
               :ARG2 (s1.t / table
                           :consist-of (s1.w / wood))
               :rel (s1.a / and
                          :op1 (s1.m2 / mushroom)
                          :op2 (s1.p2 / pizzeria
                                      :mod (s1.o / other))
                          :ARG1-of s1.p2
                          :op2 (s1.h / ham)))
   :snt2 (s2.a / and
               :op1 (s2.p2 / place-01
                           :ARG1 (s2.p / pizzeria)
                           :ARG2 (s2.p3 / platter
                                        :consist-of (s2.w / wood)))
               :op2 (s2.b / be-located-at-91
                          :ARG1 (s2.i2 / item
                                       :ARG2-of (s2.i / include-01
                                                      :ARG1 (s2.a2 / and
                                                                   :op1 (s2.f / fork)
                                                                   :op2 (s2.k / knife)
                                                                   :op3 (s2.s2 / spoon)))
                                       :consist-of (s2.s / silverware))
                          :ARG2 (s2.t / table
                                      :same-as s1.h)))
   :snt3 (s3.a / adorn-01
               :ARG1 (s3.t / table
                           :same-as s1.h)
               :ARG2 (s3.a3 / and
                            :op1 (s3.p / phone
                                       :mod (s3.c / cell))
                            :op2 (s3.c2 / cup))
               :mod (s3.a2 / also)))