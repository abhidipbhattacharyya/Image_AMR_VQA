# ::id train2014~COCO_train2014_000000168451
# ::doc_file train2014~COCO_train2014_000000168451
# ::tok Two people are skiing down a snowy hill . <next_sent> They are wearing skis and holding ski poles . <next_sent> The first person is on the left side of the image , while the second person is on the right side . <next_sent> The two skiers are moving in the same direction , and they appear to be enjoying their time on the snowy slope .
(d / document
   :snt1 (s1.s / ski-01
               :ARG0 (s1.p / person
                           :quant "2")
               :direction (s1.d / down)
               :path (s1.h / hill
                           :ARG1-of (s1.s2 / snowy-02)))
   :snt2 (s2.a / and
               :op1 (s2.w / wear-01
                          :ARG0 (s2.t / they
                                      :same-as s1.p)
                          :ARG1 (s2.s / ski-01))
               :op2 (s2.h / hold-01
                          :ARG0 s2.t
                          :ARG1 (s2.p / pole
                                      :mod (s2.s2 / ski-01))))
   :snt3 (s3.c / contrast-01
               :ARG1 (s3.b / be-located-at-91
                           :ARG1 (s3.p / person
                                       :ord (s3.o / ordinal-entity
                                                  :value "1"))
                           :ARG2 (s3.s / side
                                       :ARG1-of (s3.l / left-20)
                                       :part-of (s3.i / image)))
               :ARG2 (s3.b2 / be-located-at-91
                            :ARG1 (s3.p2 / person
                                         :ord (s3.o2 / ordinal-entity
                                                     :value "2"))
                            :ARG2 (s3.s2 / side
                                         :ARG1-of (s3.r / right-04))))
   :snt4 (s4.a / and
               :op1 (s4.m / move-01
                          :ARG1 (s4.p / person
                                      :ARG0-of (s4.s2 / ski-01)
                                      :quant "2"
                                      :same-as s1.p)
                          :ARG2 (s4.d / direction
                                      :ARG1-of (s4.s / same-01)))
               :op2 (s4.a2 / appear-02
                           :ARG1 (s4.e / enjoy-01
                                       :ARG0 s4.p
                                       :ARG1 (s4.t / time
                                                   :location (s4.s3 / slope
                                                                    :ARG2-of (s4.s4 / snowy-02)
                                                                    :same-as s1.h)
                                                   :poss s4.p)))))