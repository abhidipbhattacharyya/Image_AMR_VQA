# ::id train2014~COCO_train2014_000000117413
# ::doc_file train2014~COCO_train2014_000000117413
# ::tok A man is riding a motorcycle on a city street , with a yellow taxi cab behind him . <next_sent> The man is wearing a helmet and a leather jacket . <next_sent> The motorcycle is parked in the middle of the street , and the man is sitting on it . <next_sent> There are also two trucks on the street , one behind the man and the other further back .
(d / document
   :snt1 (s1.r / ride-01
               :ARG0 (s1.m / man)
               :ARG1 (s1.m2 / motorcycle)
               :location (s1.s / street
                               :mod (s1.c2 / city))
               :op1-of (s1.b / behind
                             :location-of (s1.c / cab
                                                :ARG1-of (s1.y / yellow-02)
                                                :mod (s1.t / taxi))))
   :snt2 (s2.w / wear-01
               :ARG0 (s2.m / man
                           :same-as s1.m)
               :ARG1 (s2.a / and
                           :op1 (s2.h / helmet)
                           :op2 (s2.j / jacket
                                      :mod (s2.l / leather))))
   :snt3 (s3.a / and
               :op1 (s3.p / park-01
                          :ARG1 (s3.m3 / motorcycle
                                       :same-as s1.m2)
                          :location (s3.m2 / middle
                                           :part-of (s3.s2 / street
                                                           :same-as s1.s)))
               :op2 (s3.s / sit-01
                          :ARG1 (s3.m / man
                                      :same-as s1.m)
                          :ARG2 s3.m3))
   :snt4 (s4.a2 / and
                :op1 (s4.t / truck
                           :location (s4.s / street
                                           :same-as s1.s)
                           :mod (s4.a / also)
                           :mod (s4.b2 / behind
                                       :op1 (s4.m / man
                                                  :same-as s1.m))
                           :quant "1"
                           :quant "2")
                :op2 (s4.t2 / truck
                            :location (s4.b / back
                                            :extent (s4.f / further))
                            :mod (s4.o / other))))