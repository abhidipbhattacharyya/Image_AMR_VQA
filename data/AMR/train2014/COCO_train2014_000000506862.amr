# ::id train2014~COCO_train2014_000000506862
# ::doc_file train2014~COCO_train2014_000000506862
# ::tok A white car with a dog sitting in the driver 's seat . <next_sent> The dog is wearing a collar and is looking out the window . <next_sent> There are several other cars parked on the street , including one behind the white car and two others on the right side of the image .
(d / document
   :snt1 (s1.c / car
               :ARG1-of (s1.w / white-03)
               :location-of (s1.s2 / sit-01
                                   :ARG1 (s1.d / dog)
                                   :ARG2 (s1.s / seat
                                               :location-of (s1.d2 / drive-01))))
   :snt2 (s2.a / and
               :op1 (s2.w / wear-01
                          :ARG0 (s2.d / dog
                                      :same-as s1.s2)
                          :ARG1 (s2.c / collar))
               :op2 (s2.l / look-01
                          :ARG0 s2.d
                          :ARG1 (s2.w2 / window)))
   :snt3 (s3.p / park-01
               :ARG1 (s3.c / car
                           :quant (s3.s / several)
                           :ARG2-of (s3.i2 / include-91
                                           :ARG1 (s3.a / and
                                                       :op1 (s3.c2 / car
                                                                   :location (s3.b / behind
                                                                                   :op1 (s3.c3 / car
                                                                                               :ARG1-of (s3.w / white-03)
                                                                                               :same-as s1.c))
                                                                   :location (s3.s2 / side
                                                                                    :ARG1-of (s3.r / right-04)
                                                                                    :part-of (s3.i / image))
                                                                   :mod (s3.o2 / other)
                                                                   :op2-of s3.a
                                                                   :quant "1"
                                                                   :quant "2")))
                           :mod (s3.o / other))
               :ARG2 (s3.s3 / street)))