# ::id train2014~COCO_train2014_000000486730
# ::doc_file train2014~COCO_train2014_000000486730
# ::tok A red double decker bus is parked on the side of a road . <next_sent> The bus is large and occupies most of the image . <next_sent> The bus has two sets of doors , one on the left and one on the right . <next_sent> The bus is parked next to a tree , which is visible on the left side of the bus .
(d / document
   :snt1 (s1.p / park-01
               :ARG1 (s1.b / bus
                           :ARG1-of (s1.r / red-02)
                           :mod (s1.d / double-decker))
               :ARG2 (s1.s / side
                           :part-of (s1.r2 / road)))
   :snt2 (s2.a / and
               :op1 (s2.l / large
                          :domain (s2.b / bus
                                        :same-as s1.b))
               :op2 (s2.o / occupy-01
                          :ARG0 s2.b
                          :ARG1 (s2.i / image
                                      :quant (s2.m / most))))
   :snt3 (s3.h / have-03
               :ARG0 (s3.b / bus
                           :same-as s1.b)
               :ARG1 (s3.s / set
                           :ARG1-of (s3.m / mean-01
                                          :ARG2 (s3.a / and
                                                      :op1 (s3.d2 / door
                                                                  :ARG1-of (s3.l / left-19)
                                                                  :quant "1")
                                                      :op2 (s3.d3 / door
                                                                  :location (s3.r / right-04)
                                                                  :quant "1")))
                           :consist-of (s3.d / door)
                           :quant "2"))
   :snt4 (s4.p / park-01
               :ARG1 (s4.b / bus
                           :part (s4.s2 / side
                                        :ARG1-of (s4.l / left-20))
                           :same-as s1.b)
               :ARG2 (s4.n / next-to
                           :op1 (s4.t / tree
                                      :ARG1-of (s4.s / see-01
                                                     :location s4.s2)))))