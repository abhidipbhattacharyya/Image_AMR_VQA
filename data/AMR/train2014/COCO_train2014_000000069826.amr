# ::id train2014~COCO_train2014_000000069826
# ::doc_file train2014~COCO_train2014_000000069826
# ::tok A toothbrush is standing up in a cup , which is sitting on a bathroom counter . <next_sent> The cup has a skeleton design , and the toothbrush is red and white . <next_sent> There are several bottles on the counter , including one near the left edge , one in the middle , and another on the right side . <next_sent> A cup is also visible on the right side of the counter .
(d / document
   :snt1 (s1.s2 / stand-01
                :ARG1 (s1.t / toothbrush)
                :ARG2 (s1.c2 / cup
                             :ARG1-of (s1.s / sit-01
                                            :ARG2 (s1.c / counter
                                                        :mod (s1.b / bathroom)))))
   :snt2 (s2.a / and
               :op1 (s2.h / have-03
                          :ARG0 (s2.c / cup
                                      :same-as s1.c2)
                          :ARG1 (s2.d / design-01
                                      :ARG1 (s2.s / skeleton)))
               :op2 (s2.a2 / and
                           :domain (s2.t / toothbrush
                                         :same-as s1.t)
                           :op1 (s2.r / red-02)
                           :op2 (s2.w / white-03)))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.b2 / bottle
                            :quant (s3.s / several)
                            :ARG2-of (s3.i / include-01
                                           :ARG1 (s3.a / and
                                                       :op1 (s3.n / near-02
                                                                  :ARG1 (s3.b3 / bottle)
                                                                  :ARG2 (s3.e / edge
                                                                              :ARG1-of (s3.l / left-20)))
                                                       :op2 (s3.b4 / bottle
                                                                   :quant (s3.a2 / another)
                                                                   :location (s3.m / middle)
                                                                   :location (s3.s2 / side
                                                                                    :ARG1-of (s3.r / right-04))))))
               :ARG2 (s3.c / counter
                           :same-as s1.c))
   :snt4 (s4.p / possible-01
               :ARG1 (s4.s / see-01
                           :ARG1 (s4.c2 / cup)
                           :location (s4.s2 / side
                                            :ARG1-of (s4.r / right-04
                                                           :ARG2 (s4.c / counter
                                                                       :same-as s1.c))
                                            :same-as s3.s2))
               :mod (s4.a / also)))