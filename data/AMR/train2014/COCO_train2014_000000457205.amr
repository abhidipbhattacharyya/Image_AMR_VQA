# ::id train2014~COCO_train2014_000000457205
# ::doc_file train2014~COCO_train2014_000000457205
# ::tok A pizza is sitting on a wooden table with a bottle of wine on the right side . <next_sent> The pizza is sliced and has cheese on top . <next_sent> There is another bottle of wine on the left side of the table . <next_sent> A fork and a knife are also present on the table , with the fork on the left side and the knife on the right side .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.s2 / sit-01
                           :ARG1 (s1.p / pizza)
                           :ARG2 (s1.t / table
                                       :consist-of (s1.w2 / wood)))
               :op2 (s1.w / wine
                          :quant (s1.b / bottle)
                          :location (s1.s / side
                                          :ARG1-of (s1.r / right-04))))
   :snt2 (s2.a / and
               :op1 (s2.s / slice-01
                          :ARG1 (s2.p / pizza
                                      :same-as s1.p))
               :op2 (s2.h / have-03
                          :ARG0 s2.p
                          :ARG1 (s2.c / cheese)
                          :location (s2.t / top)))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.w / wine
                           :quant (s3.b2 / bottle
                                         :mod (s3.a / another)))
               :ARG2 (s3.s / side
                           :ARG1-of (s3.l / left-20)
                           :part-of (s3.t / table
                                          :same-as s1.t)))
   :snt4 (s4.p / present-02
               :ARG1 (s4.a2 / and
                            :example (s4.a3 / and
                                            :op1 (s4.b / be-located-at-91
                                                       :ARG1 (s4.f / fork
                                                                   :ARG0-of (s4.h / have-03
                                                                                  :ARG1 s4.a2))
                                                       :ARG2 (s4.s / side
                                                                   :ARG1-of (s4.l / left-20)))
                                            :op2 (s4.b2 / be-located-at-91
                                                        :ARG1 s4.a2
                                                        :ARG2 (s4.s2 / side
                                                                     :ARG1-of (s4.r / right-04))
                                                        :ARG2 (s4.k / knife)))
                            :op1 s4.f
                            :op2 s4.k)
               :ARG2 (s4.t / table
                           :same-as s1.t)
               :mod (s4.a / also)))