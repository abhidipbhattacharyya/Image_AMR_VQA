# ::id train2014~COCO_train2014_000000014812
# ::doc_file train2014~COCO_train2014_000000014812
# ::tok A small dining table with a black and white checkered tablecloth . <next_sent> On the table , there are two bowls , one containing bread and the other containing butter . <next_sent> There are also two bottles , one containing juice and the other containing water . <next_sent> The table is surrounded by chairs , one on the left side , one on the right side , and one on the far end .
(d / document
   :snt1 (s1.t / table
               :purpose (s1.d / dine-01)
               :mod (s1.s / small)
               :part (s1.t2 / tablecloth
                            :mod (s1.p / pattern
                                       :consist-of (s1.a / and
                                                         :op1 (s1.b / black-04)
                                                         :op2 (s1.w / white-03)))))
   :snt2 (s2.a / and
               :op1 (s2.p / pound
                          :ARG0-of (s2.c / contain-01
                                         :ARG1 (s2.b2 / bread))
                          :location (s2.t / table
                                          :same-as s1.t)
                          :quant "2")
               :op2 (s2.b / bowl-01
                          :ARG0-of (s2.c2 / contain-01
                                          :ARG1 (s2.b3 / butter))
                          :mod (s2.o / other))
               :rel (s2.p2 / pound
                           :quant "1"))
   :snt3 (s3.a2 / and
                :op1 (s3.b / bottle
                           :mod (s3.a / also)
                           :quant "2")
                :op2 (s3.b2 / bottle
                            :ARG0-of (s3.c / contain-01)
                            :ARG0-of (s3.c2 / contain-01
                                            :ARG1 (s3.j / juice))
                            :ARG0-of (s3.c3 / contain-01
                                            :ARG1 (s3.w / water))
                            :mod (s3.o / other)
                            :quant "1"))
   :snt4 (s4.s3 / surround-01
                :ARG1 (s4.c / chair
                            :example (s4.a / and
                                           :op2 (s4.o / one
                                                      :location (s4.s2 / side
                                                                       :ARG1-of (s4.r / right-04)))
                                           :op3 (s4.o2 / one
                                                       :location (s4.e / end
                                                                       :mod (s4.f / far))))
                            :op1-of s4.a
                            :location (s4.s / side
                                            :ARG1-of (s4.l / left-20)))
                :ARG2 (s4.t / table
                            :same-as s1.t)))