# ::id train2014~COCO_train2014_000000347354
# ::doc_file train2014~COCO_train2014_000000347354
# ::tok A man in a white shirt and apron is preparing food in a kitchen . <next_sent> He is standing at a counter and cutting a piece of meat on a cutting board . <next_sent> There are several bottles on the counter , with one near the man and others scattered around . <next_sent> A knife is also visible on the counter , being used by the man .
(d / document
   :snt1 (s1.p / prepare-01
               :ARG0 (s1.m / man
                           :ARG0-of (s1.w / wear-01
                                          :ARG1 (s1.a / and
                                                      :op1 (s1.s / shirt
                                                                 :ARG1-of (s1.w2 / white-03
                                                                                 :ARG1 (s1.a2 / apron)))
                                                      :op2 s1.a2)))
               :ARG1 (s1.f / food)
               :location (s1.k / kitchen))
   :snt2 (s2.a / and
               :op1 (s2.s / stand-01
                          :ARG0 (s2.h / he
                                      :same-as s1.m)
                          :ARG2 (s2.c / counter))
               :op2 (s2.c2 / cut-01
                           :ARG0 s2.h
                           :ARG1 (s2.p / piece
                                       :consist-of (s2.m / meat))
                           :instrument (s2.b / board
                                             :purpose (s2.c3 / cut-01))))
   :snt3 (s3.a / and
               :op1 (s3.b / be-located-at-91
                          :ARG1 (s3.b2 / bottle
                                       :quant (s3.s2 / several))
                          :ARG2 (s3.c / counter
                                      :same-as s2.c))
               :op1 (s3.n / near-02
                          :ARG1 (s3.o / one)
                          :ARG2 (s3.m / man
                                      :same-as s1.m))
               :op2 (s3.s / scatter-01
                          :ARG1 (s3.b3 / bottle
                                       :quant s3.o
                                       :mod (s3.o2 / other))
                          :ARG2 (s3.a2 / around)))
   :snt4 (s4.p / possible-01
               :ARG1 (s4.s / see-01
                           :ARG1 (s4.k / knife
                                       :ARG1-of (s4.u / use-01
                                                      :ARG0 (s4.m / man
                                                                  :same-as s1.m)))
                           :location (s4.c / counter
                                           :same-as s2.c))
               :mod (s4.a / also)))