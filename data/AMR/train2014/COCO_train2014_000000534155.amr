# ::id train2014~COCO_train2014_000000534155
# ::doc_file train2014~COCO_train2014_000000534155
# ::tok A red and blue airplane is on display in a hangar . <next_sent> The plane has a propeller on the front and is parked on the ground . <next_sent> There are two other airplanes in the background , one on the right and one on the far left . <next_sent> The hangar is filled with various airplanes , some parked and others on display .
(d / document
   :snt1 (s1.d / display-01
               :ARG1 (s1.a3 / and
                            :op1 (s1.a / airplane
                                       :ARG1-of (s1.r / red-02))
                            :op2 (s1.a2 / airplane
                                        :mod (s1.b / blue)))
               :location (s1.h / hangar))
   :snt2 (s2.a / and
               :op1 (s2.h / have-03
                          :ARG0 (s2.p2 / plane
                                       :same-as s1.a3)
                          :ARG1 (s2.p3 / propeller
                                       :location (s2.f / front)))
               :op2 (s2.p / park-01
                          :ARG1 s2.p2
                          :ARG2 (s2.g / ground)))
   :snt3 (s3.a4 / and
                :op1 (s3.a / airplane
                           :location (s3.b / background)
                           :mod (s3.o / other)
                           :quant "2")
                :op2 (s3.a3 / airplane
                            :location (s3.l / left-19
                                            :mod (s3.f / far))
                            :quant "1")
                :rel (s3.a2 / airplane
                            :ARG1-of (s3.r / right-08)
                            :quant "1"))
   :snt4 (s4.f / fill-01
               :ARG1 (s4.h / hangar
                           :same-as s1.h)
               :ARG2 (s4.a / airplane
                           :ARG2-of (s4.i / include-91
                                          :ARG1 (s4.a4 / and
                                                       :op1 (s4.a2 / airplane
                                                                   :quant (s4.s / some)
                                                                   :ARG1-of (s4.p / park-01))
                                                       :op2 (s4.a3 / airplane
                                                                   :ARG1-of (s4.d / display-01)
                                                                   :mod (s4.o / other))))
                           :mod (s4.v / various))))