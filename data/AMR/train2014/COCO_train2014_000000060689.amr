# ::id train2014~COCO_train2014_000000060689
# ::doc_file train2014~COCO_train2014_000000060689
# ::tok A dog is looking out of a window , with its head sticking out . <next_sent> The dog is looking to the left , and appears to be looking at something outside . <next_sent> The window is open , and the dog is sitting on a ledge . <next_sent> The dog is white , and its ears are perked up , giving the impression that it is curious about what is happening outside .
(d / document
   :snt1 (s1.l / look-01
               :ARG0 (s1.d / dog
                           :part (s1.h / head))
               :ARG1 (s1.o / out
                           :op1 (s1.w / window))
               :manner (s1.s / stick-out-02
                             :ARG1 s1.h))
   :snt2 (s2.a / and
               :op1 (s2.l2 / look-01
                           :ARG0 (s2.d / dog
                                       :same-as s1.d)
                           :direction (s2.l / left-20))
               :op2 (s2.a2 / appear-02
                           :ARG1 (s2.l3 / look-01
                                        :ARG0 s2.d
                                        :ARG1 (s2.s / something
                                                    :location (s2.o / outside)))))
   :snt3 (s3.a / and
               :op1 (s3.o / open-01
                          :ARG1 (s3.w / window
                                      :same-as s1.w))
               :op2 (s3.s / sit-01
                          :ARG1 (s3.d / dog
                                      :same-as s1.d)
                          :ARG2 (s3.l / ledge)))
   :snt4 (s4.a / and
               :ARG0-of (s4.g / give-01
                              :ARG1 (s4.i / impression-03
                                          :ARG1 (s4.c / curious-01
                                                      :ARG0 (s4.e2 / event
                                                                   :location (s4.o / outside))
                                                      :ARG1 (s4.d / dog
                                                                  :part (s4.e / ear)
                                                                  :same-as s1.d))))
               :op1 (s4.w / white-03
                          :ARG1 s4.d)
               :op2 (s4.r / rise-01
                          :ARG1 s4.e)))