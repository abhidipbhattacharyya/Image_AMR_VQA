# ::id train2014~COCO_train2014_000000264320
# ::doc_file train2014~COCO_train2014_000000264320
# ::tok A plate of food is on a table , including a slice of pizza and a salad . <next_sent> The pizza is on the left side of the plate , and the salad is on the right . <next_sent> A fork is placed on the plate , and a spoon is located next to it . <next_sent> A dog is laying on a couch in the background , and a knife is also visible on the table .
(d / document
   :snt1 (s1.i / include-01
               :ARG1 (s1.a / and
                           :op1 (s1.s2 / slice
                                       :consist-of (s1.p / pizza))
                           :op2 (s1.s / salad))
               :ARG2 (s1.p2 / plate
                            :consist-of (s1.f / food)
                            :location (s1.t / table)))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.p / pizza
                                      :same-as s1.s2)
                          :ARG2 (s2.s2 / side
                                       :ARG1-of (s2.l / left-20)
                                       :part-of (s2.p2 / plate
                                                       :part (s2.s3 / side
                                                                    :ARG1-of (s2.r / right-04))
                                                       :same-as s1.f)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.s / salad
                                       :same-as s1.s)
                           :ARG2 s2.s3))
   :snt3 (s3.a / and
               :op1 (s3.p / place-01
                          :ARG1 (s3.f / fork)
                          :ARG2 (s3.p2 / plate
                                       :same-as s1.f))
               :op2 (s3.l / locate-01
                          :ARG1 (s3.s / spoon)
                          :location (s3.n / next-to
                                          :op1 s3.p2)))
   :snt4 (s4.a2 / and
                :op1 (s4.l / lay-01
                           :ARG1 (s4.d / dog)
                           :ARG2 (s4.c / couch
                                       :location (s4.b / background)))
                :op2 (s4.s / see-01
                           :ARG1 (s4.k / knife
                                       :location (s4.t / table
                                                       :same-as s1.t))
                           :mod (s4.a / also))))