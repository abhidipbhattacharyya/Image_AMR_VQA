# ::id train2014~COCO_train2014_000000189229
# ::doc_file train2014~COCO_train2014_000000189229
# ::tok A square plate with a slice of cake and a glass of orange juice . <next_sent> The cake is on the left side of the plate and the glass of orange juice is on the right side . <next_sent> There are two oranges on the plate , one is on the left side and the other is on the right side .
(d / document
   :snt1 (s1.p / plate
               :ARG0-of (s1.h / have-03
                              :ARG1 (s1.a / and
                                          :op1 (s1.c / cake
                                                     :quant (s1.v / volume-quantity
                                                                  :quant "1")
                                                     :consist-of (s1.s / slice))
                                          :op2 (s1.j / juice
                                                     :quant (s1.g / glass)
                                                     :source (s1.o / orange))))
               :mod (s1.s2 / square))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.c / cake
                                      :same-as s1.c)
                          :ARG2 (s2.s / side
                                      :ARG1-of (s2.l / left-20)
                                      :part-of (s2.p / plate
                                                     :ARG1-of (s2.r / right-04)
                                                     :same-as s1.p)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.j / juice
                                       :quant (s2.g / glass)
                                       :source (s2.o / orange)
                                       :same-as s1.j)
                           :ARG2 s2.s))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.o / orange
                           :quant "2")
               :ARG1-of (s3.c / cause-01
                              :ARG0 (s3.a / and
                                          :op1 (s3.b2 / be-located-at-91
                                                      :ARG1 s3.o
                                                      :ARG2 (s3.s / side
                                                                  :ARG1-of (s3.l / left-20)))
                                          :op2 (s3.b3 / be-located-at-91
                                                      :ARG1 (s3.o2 / orange)
                                                      :ARG2 (s3.s2 / side
                                                                   :ARG1-of (s3.r / right-04
                                                                                  :same-as s2.r)))))
               :ARG2 (s3.p / plate
                           :same-as s1.p)))