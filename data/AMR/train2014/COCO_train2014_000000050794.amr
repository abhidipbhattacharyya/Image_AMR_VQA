# ::id train2014~COCO_train2014_000000050794
# ::doc_file train2014~COCO_train2014_000000050794
# ::tok A cat is sitting on a table in front of a bookcase . <next_sent> The cat is white and brown and is looking at the camera . <next_sent> The bookcase is filled with various books , some of which are stacked on top of each other . <next_sent> The cat is positioned between the bookcase and the table , occupying most of the space in the image .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.c / cat)
               :ARG2 (s1.t / table
                           :location (s1.i / in-front-of
                                           :op1 (s1.b / bookcase))))
   :snt2 (s2.a / and
               :op1 (s2.w / white-03
                          :ARG1 (s2.c2 / cat
                                       :same-as s1.c))
               :op2 (s2.g / green-02
                          :ARG1 s2.c2)
               :op3 (s2.l / look-01
                          :ARG0 s2.c2
                          :ARG1 (s2.c / camera)))
   :snt3 (s3.f / fill-01
               :ARG1 (s3.b3 / bookcase
                            :same-as s1.b)
               :ARG2 (s3.b / book
                           :ARG2-of (s3.i / include-91
                                          :ARG1 (s3.b2 / book
                                                       :ARG1-of (s3.s2 / stack-01
                                                                       :ARG2 (s3.t / top
                                                                                   :mod (s3.o / other
                                                                                              :mod (s3.e / each))))
                                                       :mod (s3.s / some)))
                           :mod (s3.v / various)))
   :snt4 (s4.p / position-01
               :ARG1 (s4.c / cat
                           :ARG0-of (s4.o / occupy-01
                                          :ARG1 (s4.s / space
                                                      :quant (s4.m / most)
                                                      :location (s4.i / image)))
                           :same-as s1.c)
               :ARG2 (s4.b / between
                           :op1 (s4.b2 / bookcase
                                       :same-as s1.b)
                           :op2 (s4.t / table
                                      :same-as s1.t))))