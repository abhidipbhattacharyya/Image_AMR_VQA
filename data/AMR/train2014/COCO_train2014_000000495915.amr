# ::id train2014~COCO_train2014_000000495915
# ::doc_file train2014~COCO_train2014_000000495915
# ::tok A pizza with meat and cheese toppings is on a white plate . <next_sent> The plate is on a table with a glass of beer next to it . <next_sent> There are two plates on the table , one with a pizza and the other with a slice of pizza . <next_sent> A fork is also on the table .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.p / pizza
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.p3 / portion
                                                       :consist-of (s1.a / and
                                                                         :op1 (s1.m / meat)
                                                                         :op2 (s1.c / cheese)))))
               :ARG2 (s1.p2 / plate
                            :ARG1-of (s1.w / white-03)))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.p / plate
                                      :same-as s1.p2)
                          :ARG2 (s2.t / table))
               :op2 (s2.n / next-to
                          :location s2.t
                          :op1 (s2.b2 / beer
                                      :quant (s2.v / volume-quantity
                                                   :unit (s2.g / glass)
                                                   :quant "1"))))
   :snt3 (s3.c / cause-01
               :ARG0 (s3.a / and
                           :op1 (s3.p2 / plate
                                       :ARG0-of (s3.h / have-03
                                                      :ARG1 (s3.p / pizza
                                                                  :consist (s3.s / slice)
                                                                  :same-as s1.p))
                                       :quant "1")
                           :op2 (s3.p3 / plate
                                       :ARG0-of (s3.h2 / have-03
                                                       :ARG1 s3.s)
                                       :location (s3.t / table
                                                       :same-as s2.t)
                                       :mod (s3.o / other)))
               :ARG1 s3.t
               :rel "2")
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.f / fork)
               :ARG2 (s4.t / table
                           :same-as s2.t)
               :mod (s4.a / also)))