# ::id train2014~COCO_train2014_000000224483
# ::doc_file train2014~COCO_train2014_000000224483
# ::tok The scene is set on a sunny day at an intersection with a traffic light . <next_sent> The traffic light is green , and the sun is shining brightly in the sky . <next_sent> The traffic light is located on the right side of the intersection . <next_sent> There are two traffic lights in the scene , one on the left side and another on the right side . <next_sent> The left traffic light is red , while the right traffic light is green . <next_sent> There are also two cars in the scene , one on the left side and another on the right side of the intersection .
(d / document
   :snt1 (s1.s2 / set-02
                :ARG1 (s1.s / scene)
                :location (s1.i / intersect-01
                                :ARG1 (s1.t / thing
                                            :ARG0-of (s1.l / light-04
                                                           :ARG1 (s1.t2 / traffic))))
                :time (s1.d / day
                            :mod (s1.s3 / sunny)))
   :snt2 (s2.a / and
               :op1 (s2.g / green-02
                          :ARG1 (s2.l / light
                                      :mod (s2.t / traffic)
                                      :same-as s1.t))
               :op2 (s2.s / shine-01
                          :ARG0-of (s2.b / bright-02)
                          :ARG1 (s2.s3 / sun)
                          :ARG2 (s2.s2 / sky)))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.l / light
                           :mod (s3.t / traffic)
                           :same-as s1.t)
               :ARG2 (s3.s / side
                           :ARG1-of (s3.r / right-04)
                           :part-of (s3.i / intersect-01
                                          :same-as s1.i)))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.l2 / light
                            :mod (s4.t / traffic)
                            :quant "2")
               :ARG2 (s4.s / scene
                           :same-as s1.s)
               :ARG2 (s4.a / and
                           :op1 (s4.l3 / light
                                       :ARG1-of (s4.i / include-91
                                                      :ARG2 (s4.s3 / side
                                                                   :ARG1-of (s4.r / right-04)))
                                       :location (s4.s2 / side
                                                        :ARG1-of (s4.l / left-20))
                                       :quant "1")
                           :op2 (s4.l4 / light
                                       :location s4.s3
                                       :mod (s4.a2 / another))))
   :snt5 (s5.c / contrast-01
               :ARG1 (s5.r / red-02
                           :ARG1 (s5.l2 / light
                                        :ARG1-of (s5.l / left-20)
                                        :mod (s5.t / traffic)))
               :ARG2 (s5.g / green-02
                           :ARG1 (s5.l3 / light
                                        :ARG1-of (s5.r2 / right-08)
                                        :mod (s5.t2 / traffic)
                                        :same-as s4.i)))
   :snt6 (s6.b / be-located-at-91
               :ARG1 (s6.c / car
                           :domain (s6.a2 / and
                                          :op2 (s6.c2 / car
                                                      :location (s6.s3 / side
                                                                       :ARG1-of (s6.r / right-04)
                                                                       :part-of (s6.i / intersect-01
                                                                                      :same-as s1.i)
                                                                       :same-as s3.s)
                                                      :mod (s6.a3 / another)
                                                      :quant "1"))
                           :op1-of s6.a2
                           :location (s6.s2 / side
                                            :ARG1-of (s6.l / left-20)
                                            :same-as s4.s2)
                           :mod (s6.a / also)
                           :quant "2")
               :ARG2 (s6.s / scene
                           :same-as s1.s)))