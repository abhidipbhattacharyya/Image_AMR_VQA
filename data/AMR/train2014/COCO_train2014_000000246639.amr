# ::id train2014~COCO_train2014_000000246639
# ::doc_file train2014~COCO_train2014_000000246639
# ::tok A white cat is sitting on a metal railing , looking out of a window . <next_sent> The cat is positioned in the middle of the railing , with its front paws on the railing and its back paws on the window ledge . <next_sent> The cat appears to be looking out of the window , possibly observing the surroundings or waiting for someone .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.s / sit-01
                          :ARG1 (s1.c / cat
                                      :ARG1-of (s1.w / white-03))
                          :ARG2 (s1.r / railing
                                      :consist-of (s1.m / metal)))
               :op2 (s1.l / look-01
                          :ARG0 s1.c
                          :ARG1 (s1.o / out
                                      :op1 (s1.w2 / window))))
   :snt2 (s2.p / position-01
               :ARG1 (s2.c / cat
                           :part (s2.c2 / claw
                                        :mod (s2.b / back))
                           :same-as s1.c)
               :ARG2 (s2.m / middle
                           :part-of (s2.r / railing
                                          :same-as s1.r))
               :manner (s2.a / and
                             :op1 (s2.b2 / be-located-at-91
                                         :ARG1 s2.c
                                         :ARG2 s2.r)
                             :op2 (s2.b3 / be-located-at-91
                                         :ARG1 s2.c2
                                         :ARG2 (s2.l / ledge
                                                     :mod (s2.w / window))))
               :rel (s2.f / front))
   :snt3 (s3.a2 / appear-02
                :ARG1 (s3.a / and
                            :op1 (s3.l / look-01
                                       :ARG0 (s3.c / cat
                                                   :same-as s1.c)
                                       :direction (s3.o3 / out
                                                         :op1 (s3.w2 / window
                                                                     :same-as s1.w2)))
                            :op2 (s3.o2 / or
                                        :op1 (s3.o / observe-01
                                                   :ARG0 s3.c
                                                   :ARG1 (s3.t / thing
                                                               :ARG1-of (s3.s2 / surround-01))
                                                   :ARG1-of (s3.p / possible-01))
                                        :op2 (s3.w / wait-01
                                                   :ARG1 s3.c
                                                   :ARG2 (s3.s / someone))))))