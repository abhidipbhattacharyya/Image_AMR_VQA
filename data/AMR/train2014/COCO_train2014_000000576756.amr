# ::id train2014~COCO_train2014_000000576756
# ::doc_file train2014~COCO_train2014_000000576756
# ::tok The image features a train on display in front of a building . <next_sent> The train is black and has the words " NH TRAP ROCK CU " written on the side . <next_sent> The train is sitting on a track that is located in front of a building . <next_sent> The building has many windows and a red roof .
(d / document
   :snt1 (s1.f / feature-01
               :ARG0 (s1.i / image)
               :ARG1 (s1.t / train
                           :ARG1-of (s1.d / display-01
                                          :location (s1.i2 / in-front-of
                                                           :op1 (s1.b / building)))))
   :snt2 (s2.a3 / and
                :op1 (s2.b / black-04
                           :ARG1 (s2.t / train
                                       :part (s2.s / side)
                                       :same-as s1.t))
                :op2 (s2.w2 / write-01
                            :ARG1 (s2.w / word-01
                                        :ARG1 (s2.s3 / string-entity
                                                     :location (s2.s2 / state
                                                                      :name (s2.n / name
                                                                                  :op4 "CU"))
                                                     :op2 (s2.a2 / TRAP)
                                                     :op3 (s2.a / ROCK)
                                                     :value "NH"))
                            :location s2.s))
   :snt3 (s3.s / sit-01
               :ARG1 (s3.t2 / train
                            :same-as s1.t)
               :ARG2 (s3.t / track
                           :location (s3.i / in-front-of
                                           :op1 (s3.b / building
                                                      :same-as s1.b))))
   :snt4 (s4.h / have-03
               :ARG0 (s4.b / building
                           :same-as s1.b)
               :ARG1 (s4.a / and
                           :op1 (s4.w / window
                                      :quant (s4.m / many))
                           :op2 (s4.r2 / roof
                                       :ARG1-of (s4.r / red-02)))))