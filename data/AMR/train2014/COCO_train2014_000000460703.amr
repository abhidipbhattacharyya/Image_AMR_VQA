# ::id train2014~COCO_train2014_000000460703
# ::doc_file train2014~COCO_train2014_000000460703
# ::tok A room full of tables with laptops on them . <next_sent> The tables are arranged in rows , with chairs placed in front of them . <next_sent> The laptops are white and have cords plugged into them . <next_sent> The chairs are black and arranged in various positions . <next_sent> The room is filled with many tables and chairs , creating a crowded and busy atmosphere .
(d / document
   :snt1 (s1.r / room
               :ARG1-of (s1.f / fill-01
                              :ARG2 (s1.t / table
                                          :location (s1.p / product
                                                          :name (s1.n / name))
                                          :part (s1.l / laptop))))
   :snt2 (s2.a / arrange-01
               :ARG1 (s2.t / table
                           :same-as s1.l)
               :ARG2 (s2.r / row)
               :ARG2-of (s2.p / place-01
                              :ARG1 (s2.c / chair)
                              :ARG2 (s2.i / in-front-of
                                          :op1 s2.t)))
   :snt3 (s3.a / and
               :op1 (s3.w / white-03
                          :ARG1 (s3.l / laptop
                                      :same-as s1.n))
               :op2 (s3.p / plug-in-03
                          :ARG1 (s3.c / computer)
                          :ARG2 s3.l))
   :snt4 (s4.a / and
               :op1 (s4.b / black-04
                          :ARG1 (s4.c / chair))
               :op2 (s4.a2 / arrange-01
                           :ARG1 s4.c
                           :ARG2 (s4.p / position
                                       :mod (s4.v / various))))
   :snt5 (s5.f / fill-01
               :ARG0-of (s5.c2 / create-01
                               :ARG1 (s5.a2 / atmosphere
                                            :ARG1-of (s5.b / busy-01)
                                            :ARG1-of (s5.c3 / crowd-01)))
               :ARG1 (s5.r / room
                           :same-as s1.l)
               :ARG2 (s5.a / and
                           :quant (s5.m / many)
                           :op1 (s5.t / table)
                           :op2 (s5.c / chair))))