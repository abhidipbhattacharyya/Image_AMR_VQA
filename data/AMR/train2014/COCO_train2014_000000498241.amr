# ::id train2014~COCO_train2014_000000498241
# ::doc_file train2014~COCO_train2014_000000498241
# ::tok A man is walking down a snowy street in front of a yellow house . <next_sent> The street is covered in snow and there are several cars parked along the side . <next_sent> There are three cars visible in the scene , one on the left side , one in the middle , and another on the right side of the street .
(d / document
   :snt1 (s1.w / walk-01
               :ARG0 (s1.m / man)
               :ARG2 (s1.s2 / street
                            :ARG1-of (s1.s / snowy-02))
               :direction (s1.d / down)
               :location (s1.i / in-front-of
                               :op1 (s1.h / house
                                          :ARG1-of (s1.y / yellow-02))))
   :snt2 (s2.a2 / and
                :op1 (s2.c2 / cover-01
                            :ARG1 (s2.s4 / street
                                         :same-as s1.s2)
                            :ARG2 (s2.s3 / snow))
                :op2 (s2.p / park-01
                           :ARG1 (s2.c / car
                                       :quant (s2.s / several))
                           :ARG2 (s2.a / along
                                       :op1 (s2.s2 / side))))
   :snt3 (s3.s2 / see-01
                :ARG1 (s3.c / car
                            :quant "3")
                :location (s3.s / scene)
                :rel (s3.a / and
                           :op1 (s3.c2 / car
                                       :location (s3.s3 / side
                                                        :ARG1-of (s3.l / left-20))
                                       :quant "1")
                           :domain-of s3.c2
                           :op2 (s3.c3 / car
                                       :location (s3.m / middle)
                                       :location (s3.s4 / side
                                                        :ARG1-of (s3.r / right-04)
                                                        :part-of (s3.s5 / street
                                                                        :same-as s1.s2))
                                       :mod (s3.a2 / another)))))