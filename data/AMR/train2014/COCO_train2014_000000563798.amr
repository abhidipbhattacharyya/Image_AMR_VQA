# ::id train2014~COCO_train2014_000000563798
# ::doc_file train2014~COCO_train2014_000000563798
# ::tok A train is parked next to a large boat . <next_sent> The boat is docked in a harbor and is white and blue . <next_sent> The train is blue and yellow and is parked on the tracks . <next_sent> The boat is in the background and is larger than the train . <next_sent> The train is parked on the left side of the boat .
(d / document
   :snt1 (s1.p / park-01
               :ARG1 (s1.t / train)
               :ARG2 (s1.n / next-to
                           :op1 (s1.b / boat
                                      :mod (s1.l / large))))
   :snt2 (s2.a / and
               :op1 (s2.d / dock-01
                          :ARG1 (s2.b2 / boat
                                       :same-as s1.b)
                          :ARG2 (s2.h / harbor))
               :op2 (s2.a2 / and
                           :op1 (s2.w / white-03
                                      :ARG1 s2.b2)
                           :op2 (s2.b / blue
                                      :domain s2.b2)))
   :snt3 (s3.a2 / and
                :op1 (s3.a / and
                           :domain (s3.t2 / train
                                          :same-as s1.t)
                           :op1 (s3.b / blue)
                           :op2 (s3.y / yellow))
                :op2 (s3.p / park-01
                           :ARG1 s3.t2
                           :ARG2 (s3.t / track)))
   :snt4 (s4.a / and
               :op1 (s4.b2 / be-located-at-91
                           :ARG1 (s4.b3 / boat
                                        :same-as s1.b)
                           :ARG2 (s4.b / background))
               :op2 (s4.h / have-degree-91
                          :ARG1 s4.b3
                          :ARG2 (s4.l / large)
                          :ARG3 (s4.m / more)
                          :ARG4 (s4.t / train
                                      :same-as s1.t)))
   :snt5 (s5.p / park-01
               :ARG1 (s5.t / train
                           :same-as s1.t)
               :ARG2 (s5.s / side
                           :ARG1-of (s5.l / left-20)
                           :part-of (s5.b / boat
                                          :same-as s1.b))))