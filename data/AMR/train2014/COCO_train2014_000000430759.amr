# ::id train2014~COCO_train2014_000000430759
# ::doc_file train2014~COCO_train2014_000000430759
# ::tok A display case filled with a variety of donuts and pastries . <next_sent> The donuts are in different shapes , sizes , and colors . <next_sent> Some are glazed , while others have sprinkles . <next_sent> The case is filled with at least 13 different donuts , with some overlapping each other . <next_sent> The donuts are arranged in a way that showcases the different options available .
(d / document
   :snt1 (s1.c / case
               :ARG1-of (s1.f / fill-01
                              :ARG2 (s1.a / and
                                          :mod (s1.v / variety)
                                          :op1 (s1.d2 / donut)
                                          :op2 (s1.p / pastries)))
               :ARG2-of (s1.d / display-01))
   :snt2 (s2.d / differ-02
               :ARG1 (s2.a / and
                           :op1 (s2.s / shape-01
                                      :ARG1 (s2.d2 / donut
                                                   :same-as s1.a))
                           :op2 (s2.s2 / size
                                       :domain s2.d2)
                           :op3 (s2.c / color
                                      :domain s2.d2)))
   :snt3 (s3.c / contrast-01
               :ARG1 (s3.g / glaze-01
                           :ARG1 (s3.s / some))
               :ARG2 (s3.h / have-03
                           :ARG0 (s3.o / other)
                           :ARG1 (s3.s2 / sprinkle-01)))
   :snt4 (s4.f / fill-01
               :ARG1 (s4.c / case
                           :same-as s1.c)
               :ARG2 (s4.d2 / donut
                            :quant (s4.a / at-least
                                         :op1 "13"
                                         :same-as s1.a)
                            :ARG1-of (s4.d / differ-02)
                            :ARG1-of (s4.o / overlap-01
                                           :ARG0 (s4.d3 / donut
                                                        :quant (s4.s / some)))))
   :snt5 (s5.a / arrange-01
               :ARG1 (s5.d2 / donut
                            :same-as s1.a)
               :manner (s5.s / showcase-01
                             :ARG1 (s5.o / option
                                         :ARG1-of (s5.d / differ-02)
                                         :ARG2-of (s5.a2 / available-02)))))