# ::id train2014~COCO_train2014_000000525462
# ::doc_file train2014~COCO_train2014_000000525462
# ::tok A kite is flying in the sky , with a long tail trailing behind it . <next_sent> The kite is shaped like a fish , and has a long body with a short tail . <next_sent> The kite is flying in a cloudy sky , and the tail is long enough to be visible in the distance .
(d / document
   :snt1 (s1.f / fly-01
               :ARG2 (s1.k / kite
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.t / tail
                                                      :ARG1-of (s1.l / long-03)
                                                      :ARG1-of (s1.f2 / follow-01
                                                                      :ARG2 (s1.b / behind
                                                                                  :op1 s1.k)))))
               :location (s1.s / sky))
   :snt2 (s2.a / and
               :op1 (s2.s / shape-01
                          :ARG1 (s2.k / kite
                                      :same-as s1.k)
                          :ARG2 (s2.f / fish))
               :op2 (s2.h / have-03
                          :ARG0 s2.k
                          :ARG1 (s2.b / body
                                      :ARG0-of (s2.h2 / have-03
                                                      :ARG1 (s2.t / tail
                                                                  :ARG1-of (s2.s2 / short-07)
                                                                  :same-as s1.l))
                                      :ARG1-of (s2.l / long-03))))
   :snt3 (s3.a / and
               :op1 (s3.f / fly-01
                          :ARG2 (s3.k / kite
                                      :same-as s1.k)
                          :location (s3.s2 / sky
                                           :ARG1-of (s3.c / cloudy-02)))
               :op2 (s3.h / have-degree-91
                          :ARG1 (s3.t / tail
                                      :same-as s1.l)
                          :ARG2 (s3.l / long-03
                                      :ARG1 s3.t)
                          :ARG3 (s3.e / enough)
                          :ARG6 (s3.s / see-01
                                      :ARG1 s3.t
                                      :location (s3.d / distance)))))