# ::id train2014~COCO_train2014_000000262954
# ::doc_file train2014~COCO_train2014_000000262954
# ::tok The kitchen is white and has a center island with a laptop on it . <next_sent> A refrigerator is on the left side of the kitchen and a sink is on the right side . <next_sent> There are two chairs at the island and a potted plant is on the counter . <next_sent> The kitchen also has a dining table and a few bottles and cups on the counter .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.w / white-03
                          :ARG1 (s1.k / kitchen))
               :op2 (s1.h / have-03
                          :ARG0 s1.k
                          :ARG1 (s1.i / island
                                      :ARG0-of (s1.h2 / have-03
                                                      :ARG1 (s1.l / laptop
                                                                  :location s1.i))
                                      :location (s1.c / center))))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.r / refrigerator)
                          :ARG2 (s2.s / side
                                      :ARG1-of (s2.l / left-20)
                                      :part-of (s2.k / kitchen
                                                     :same-as s1.k)))
               :op2 (s2.s3 / sink
                           :ARG1-of (s2.b2 / be-located-at-91
                                           :ARG2 s2.s
                                           :ARG2 (s2.s2 / side
                                                        :ARG1-of (s2.r2 / right-04)))))
   :snt3 (s3.a / and
               :op1 (s3.c / chair
                          :location (s3.i / island
                                          :same-as s1.i)
                          :quant "2")
               :op2 (s3.p / plant
                          :ARG1-of (s3.g / grow-03)
                          :location (s3.c2 / counter)))
   :snt4 (s4.h / have-03
               :ARG0 (s4.k / kitchen
                           :same-as s1.k)
               :ARG1 (s4.a2 / and
                            :location (s4.c / counter
                                            :same-as s3.c2)
                            :op1 (s4.t / table
                                       :purpose (s4.d / dine-01))
                            :op2 (s4.a3 / and
                                        :quant (s4.f / few)
                                        :op1 (s4.b / bottle)
                                        :op2 (s4.c2 / cup)))
               :mod (s4.a / also)))