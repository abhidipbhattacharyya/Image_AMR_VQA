# ::id train2014~COCO_train2014_000000012891
# ::doc_file train2014~COCO_train2014_000000012891
# ::tok A train is traveling down the tracks next to a tree . <next_sent> The train is green and white , and it is pulling into a station . <next_sent> There are several people standing on the sidewalk , waiting for the train to come to a stop . <next_sent> The people are scattered along the sidewalk , with some closer to the train and others further away .
(d / document
   :snt1 (s1.t3 / travel-01
                :ARG0 (s1.t2 / train)
                :ARG1 (s1.t / track)
                :direction (s1.d / down)
                :location (s1.n / next-to
                                :op1 (s1.t4 / tree)))
   :snt2 (s2.a2 / and
                :op1 (s2.a / and
                           :domain (s2.t / train
                                         :same-as s1.t2)
                           :op1 (s2.g / green-02)
                           :op2 (s2.w / white-03))
                :op2 (s2.p / pull-01
                           :ARG1 s2.t
                           :ARG2 (s2.s / station)))
   :snt3 (s3.s3 / stand-01
                :purpose (s3.w / wait-01
                               :ARG1 (s3.p / person
                                           :quant (s3.s / several))
                               :ARG2 (s3.c / come-01
                                           :ARG1 (s3.t / train
                                                       :same-as s1.t2)
                                           :ARG4 (s3.s4 / stop-01
                                                        :ARG1 s3.t)))
                :ARG1 s3.p
                :ARG2 (s3.s2 / sidewalk))
   :snt4 (s4.s / scatter-01
               :ARG1 (s4.p / person
                           :same-as s3.s3)
               :ARG2 (s4.a / along
                           :op1 (s4.s2 / sidewalk
                                       :same-as s3.s2))
               :example (s4.a2 / and
                               :op1 (s4.c / close-10
                                          :ARG1 s4.p
                                          :ARG2 (s4.t / train
                                                      :same-as s1.t2)
                                          :ARG2-of (s4.h / have-degree-91
                                                         :ARG1 (s4.p2 / person
                                                                      :quant (s4.s3 / some))
                                                         :ARG3 (s4.m / more)))
                               :op2 (s4.b / be-located-at-91
                                          :ARG1 (s4.o / other)
                                          :ARG2 s4.t
                                          :ARG2 (s4.a3 / away
                                                       :extent (s4.f / far))))))