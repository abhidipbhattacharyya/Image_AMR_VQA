# ::id train2014~COCO_train2014_000000547769
# ::doc_file train2014~COCO_train2014_000000547769
# ::tok A table with two pizzas on it , one with ham and cheese and the other with pepperoni and cheese . <next_sent> There are two plates , one with a pizza on it and another with a pizza on it . <next_sent> There are two forks and two knives on the table , one near each plate . <next_sent> A bottle is also present on the table .
(d / document
   :snt1 (s1.t / table
               :domain (s1.p2 / pizzeria
                              :ARG0-of (s1.h2 / have-03
                                              :ARG1 (s1.f2 / food-dish
                                                           :quant "1"))
                              :quant "2")
               :rel (s1.h3 / have-03
                           :ARG1 (s1.a / and
                                       :op1 (s1.h / ham)
                                       :op2 (s1.c / cheese))
                           :ARG1 (s1.a2 / and
                                        :op1 (s1.p / pepperoni)
                                        :op2 (s1.f / food
                                                   :mod (s1.o / other)))
                           :ARG0 s1.f))
   :snt2 (s2.a / and
               :op1 (s2.p3 / plate
                           :ARG0-of (s2.h / have-03
                                          :ARG1 (s2.p / pizza))
                           :quant "1"
                           :quant "2")
               :op2 (s2.p4 / plate
                           :ARG0-of (s2.h2 / have-03
                                           :ARG1 (s2.p2 / pizza))
                           :mod (s2.a2 / another)))
   :snt3 (s3.a / and
               :location (s3.t / table
                               :same-as s1.t)
               :op1 (s3.c / continent
                          :quant "2")
               :op2 (s3.k / knife
                          :ARG2-of (s3.i / include-91
                                         :ARG1 (s3.k2 / knife
                                                      :ARG1-of (s3.n / near-02
                                                                     :ARG2 (s3.p / plate
                                                                                 :mod (s3.e / each)))
                                                      :quant "1"))
                          :quant "2")
               :rel (s3.c2 / continent))
   :snt4 (s4.p / present-02
               :ARG1 (s4.b / bottle)
               :ARG2 (s4.t / table
                           :same-as s1.t)
               :mod (s4.a / also)))