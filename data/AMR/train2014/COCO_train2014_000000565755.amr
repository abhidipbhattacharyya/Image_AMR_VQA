# ::id train2014~COCO_train2014_000000565755
# ::doc_file train2014~COCO_train2014_000000565755
# ::tok A flock of geese are swimming in a river , with one of them flying above the water . <next_sent> There are four geese in total , with one of them flying and the others swimming . <next_sent> The geese are spread out in the river , with one near the left side , another in the middle , and the third and fourth geese on the right side of the river .
(d / document
   :snt1 (s1.a2 / and
                :op1 (s1.s / swim-01
                           :ARG0 (s1.f / flock
                                       :consist-of (s1.g / geese))
                           :ARG1 (s1.r / river))
                :op2 (s1.f2 / fly-01
                            :ARG1 (s1.o / one
                                        :ARG1-of (s1.i / include-91
                                                       :ARG2 s1.g))
                            :path (s1.a / above
                                        :op1 s1.r)))
   :snt2 (s2.t / total-01
               :ARG1 (s2.e / George
                           :ARG0-of (s2.c / cause-01
                                          :ARG1 (s2.a / and
                                                      :op1 (s2.f / fly-01)
                                                      :op2 (s2.s / swim-01
                                                                 :ARG0 (s2.o / other))))
                           :quant "4")
               :rel (s2.i / include-91
                          :ARG2 "1"
                          :same-as s1.o))
   :snt3 (s3.s3 / spread-out-04
                :ARG1 (s3.g / geese
                            :consist-of (s3.a / and
                                              :op1 (s3.n / near-02
                                                         :ARG1 (s3.o / one)
                                                         :ARG2 (s3.s / side
                                                                     :ARG1-of (s3.l / left-20)))
                                              :op2 (s3.b / be-located-at-91
                                                         :ARG1 (s3.a3 / another)
                                                         :ARG2 (s3.m / middle))
                                              :op3 (s3.a2 / and
                                                          :location (s3.s2 / side
                                                                           :ARG1-of (s3.r / right-04))
                                                          :op1 (s3.g2 / geese
                                                                      :ord (s3.o2 / ordinal-entity
                                                                                  :value "3"))
                                                          :op2 (s3.g3 / geese
                                                                      :ord (s3.o3 / ordinal-entity
                                                                                  :value "4"))))
                            :same-as s1.f)
                :ARG2 (s3.r2 / river
                             :part s3.s2
                             :same-as s1.r)))