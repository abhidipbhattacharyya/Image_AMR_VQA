# ::id train2014~COCO_train2014_000000251405
# ::doc_file train2014~COCO_train2014_000000251405
# ::tok A man is standing in a kitchen in front of a chocolate cake . <next_sent> The cake is on a glass cake stand and is decorated with a cigar . <next_sent> The man is wearing a black and white sweater and is smiling . <next_sent> The kitchen is equipped with a sink , a refrigerator , and a microwave . <next_sent> There are also several bottles and a cell phone on the counter .
(d / document
   :snt1 (s1.s / stand-01
               :ARG1 (s1.m / man)
               :ARG2 (s1.i / in-front-of
                           :op1 (s1.c / cake
                                      :mod (s1.c2 / chocolate)))
               :location (s1.k / kitchen))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.c / cake
                                      :same-as s1.c)
                          :ARG2 (s2.s / stand
                                      :mod (s2.c2 / cake
                                                  :consist-of (s2.g / glass))))
               :op2 (s2.d / decorate-01
                          :ARG1 s2.c
                          :ARG2 (s2.c3 / cigar)))
   :snt3 (s3.a2 / and
                :op1 (s3.w / wear-01
                           :ARG0 (s3.m / man
                                       :same-as s1.m)
                           :ARG1 (s3.s2 / sweater
                                        :mod (s3.a / and
                                                   :op1 (s3.b / black-04)
                                                   :op2 (s3.w2 / white-03))))
                :op2 (s3.s / smile-01
                           :ARG0 s3.m))
   :snt4 (s4.e / equip-01
               :ARG1 (s4.k / kitchen
                           :same-as s1.k)
               :ARG2 (s4.a / and
                           :op1 (s4.s / sink)
                           :op2 (s4.r / refrigerator)
                           :op3 (s4.m / microwave)))
   :snt5 (s5.a2 / and
                :location (s5.c2 / counter)
                :mod (s5.a / also)
                :op1 (s5.s / several
                           :op1 (s5.b / bottle
                                      :quant "1"))
                :op2 (s5.p / phone
                           :mod (s5.c / cell))))