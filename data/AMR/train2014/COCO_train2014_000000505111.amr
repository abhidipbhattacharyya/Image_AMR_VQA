# ::id train2014~COCO_train2014_000000505111
# ::doc_file train2014~COCO_train2014_000000505111
# ::tok A table with two plates of food , one with a frittata and the other with a fried egg . <next_sent> There are also two bowls of food , one with fruit and the other with a dip . <next_sent> A cup of coffee is also present on the table .
(d / document
   :snt1 (s1.t / table
               :ARG0-of (s1.h / have-03
                              :ARG1 (s1.p / plate
                                          :ARG2-of (s1.i / include-91
                                                         :ARG1 (s1.f2 / frittata)
                                                         :ARG1 (s1.a / and
                                                                     :op1 (s1.p2 / plate
                                                                                 :ARG0-of (s1.h2 / have-03
                                                                                                 :ARG1 (s1.e / egg
                                                                                                             :ARG1-of (s1.f3 / fry-01)))
                                                                                 :mod (s1.o / other)
                                                                                 :op2-of s1.a
                                                                                 :quant "1")))
                                          :consist-of (s1.f / food)
                                          :quant "2")))
   :snt2 (s2.a2 / and
                :op1 (s2.p / pound
                           :mod (s2.a / also)
                           :quant "2")
                :op2 (s2.b / bowl-01
                           :ARG1 (s2.f / food)
                           :mod (s2.o / other)
                           :part (s2.d / dip))
                :rel (s2.d2 / dish
                            :part (s2.f2 / fruit)
                            :quant "1"))
   :snt3 (s3.p / present-02
               :ARG1 (s3.c / coffee
                           :quant (s3.c2 / cup))
               :ARG2 (s3.t / table
                           :same-as s1.t)
               :mod (s3.a / also)))