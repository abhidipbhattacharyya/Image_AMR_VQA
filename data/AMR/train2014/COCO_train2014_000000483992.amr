# ::id train2014~COCO_train2014_000000483992
# ::doc_file train2014~COCO_train2014_000000483992
# ::tok A woman is sitting at a table eating a slice of pizza . <next_sent> The pizza is on a tray and there are two slices of pizza on the table . <next_sent> There are also two cups on the table , one near the woman and the other further away . <next_sent> A fork is also visible on the table . <next_sent> The woman is wearing glasses and a white shirt .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.w / woman
                           :ARG0-of (s1.e / eat-01
                                          :ARG1 (s1.s2 / slice
                                                       :ARG0-of (s1.c / contain-01
                                                                      :ARG1 (s1.p / pizza)))))
               :ARG2 (s1.t / table))
   :snt2 (s2.a / and
               :location (s2.t / table
                               :same-as s1.t)
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.p / pizza
                                      :consist (s2.s / slice
                                                     :quant "2")
                                      :same-as s1.s2)
                          :ARG2 (s2.t2 / tray)))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.c / cup
                           :ARG1-of (s3.n / near-02
                                          :ARG2 (s3.w / woman
                                                      :same-as s1.w))
                           :example (s3.a2 / and
                                           :op2 (s3.c2 / cup
                                                       :ARG1-of (s3.n2 / near-02
                                                                       :ARG2 (s3.f / far
                                                                                   :ARG3 (s3.m / more)))))
                           :op1-of s3.a2
                           :mod (s3.a / also)
                           :quant "1"
                           :quant "2")
               :ARG2 (s3.t / table
                           :same-as s1.t))
   :snt4 (s4.p / possible-01
               :ARG1 (s4.s / see-01
                           :ARG1 (s4.f / fork)
                           :location (s4.t / table
                                           :same-as s1.t))
               :mod (s4.a / also))
   :snt5 (s5.w / wear-01
               :ARG0 (s5.w3 / woman
                            :same-as s1.w)
               :ARG1 (s5.a / and
                           :op1 (s5.g / glasses)
                           :op2 (s5.s / shirt
                                      :ARG1-of (s5.w2 / white-03)))))