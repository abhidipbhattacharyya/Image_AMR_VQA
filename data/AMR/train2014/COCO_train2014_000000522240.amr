# ::id train2014~COCO_train2014_000000522240
# ::doc_file train2014~COCO_train2014_000000522240
# ::tok The image shows a table with a variety of food items . <next_sent> There are two pizzas , one of which is a cheese pizza , and a bowl of chips . <next_sent> Additionally , there are two plates , one of which has a pizza and the other has a bowl of food . <next_sent> The table is set up for a meal , and the food items are arranged neatly .
(d / document
   :snt1 (s1.s / show-01
               :ARG0 (s1.i / image)
               :ARG1 (s1.t / table
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.i2 / item
                                                       :mod (s1.f / food)
                                                       :mod (s1.v / variety)))))
   :snt2 (s2.a / and
               :op1 (s2.p3 / pizzeria
                           :ARG2-of (s2.i / include-91
                                          :ARG1 (s2.p / pizza
                                                      :mod (s2.c / cheese)
                                                      :quant "1"))
                           :ARG2-of (s2.i2 / include-91
                                           :ARG1 (s2.p2 / pizza))
                           :quant "2")
               :op2 (s2.c2 / chip
                           :quant (s2.b / bowl)))
   :snt3 (s3.a2 / and
                :op2 (s3.i2 / include-91
                            :ARG1 (s3.p3 / plate
                                         :ARG0-of (s3.h / have-03
                                                        :ARG1 (s3.p / pizza))
                                         :ARG0-of (s3.h2 / have-03
                                                         :ARG1 (s3.b / bowl
                                                                     :consist-of (s3.f / food)))
                                         :quant "1")
                            :ARG2 s3.p2)
                :rel (s3.p2 / plate
                            :ARG2-of (s3.i / include-91
                                           :ARG1 s3.p3)
                            :mod (s3.a / additional)
                            :quant "2"))
   :snt4 (s4.a / and
               :op1 (s4.s / set-up-03
                          :purpose (s4.m / meal)
                          :ARG1 (s4.t / table
                                      :same-as s1.t))
               :op2 (s4.a2 / arrange-01
                           :ARG1 (s4.i / item
                                       :mod (s4.f / food)
                                       :same-as s1.i2)
                           :manner (s4.n / neat))))