# ::id train2014~COCO_train2014_000000388852
# ::doc_file train2014~COCO_train2014_000000388852
# ::tok Two men are sitting on a couch , eating pizza . <next_sent> There are three pizzas on the table in front of them . <next_sent> One pizza is in a box , and the other two are on plates . <next_sent> There are also two cups on the table , one near each man . <next_sent> The men are enjoying their meal together .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.s / sit-01
                          :ARG1 (s1.m / man
                                      :quant "2")
                          :ARG2 (s1.c / couch))
               :op2 (s1.e / eat-01
                          :ARG0 s1.m
                          :ARG1 (s1.p / pizza)))
   :snt2 (s2.b / be-located-at-91
               :ARG1 (s2.p / pizzeria
                           :quant "3")
               :ARG2 (s2.t / table
                           :location (s2.i / in-front-of
                                           :op1 (s2.t2 / they
                                                       :same-as s1.m))))
   :snt3 (s3.a / and
               :op1 (s3.b / be-located-at-91
                          :ARG1 (s3.p / pizza
                                      :quant "1")
                          :ARG2 (s3.b3 / box))
               :op2 (s3.b2 / be-located-at-91
                           :ARG1 (s3.p2 / pizza
                                        :mod (s3.o / other)
                                        :quant "2")
                           :ARG2 (s3.p3 / plate)))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.c / cup
                           :ARG2-of (s4.i / include-91
                                          :ARG1 (s4.c2 / cup
                                                       :ARG1-of (s4.n / near-02
                                                                      :ARG2 (s4.m / man
                                                                                  :mod (s4.e / each)))
                                                       :quant "1"))
                           :mod (s4.a / also)
                           :quant "2")
               :ARG2 (s4.t / table
                           :same-as s2.t))
   :snt5 (s5.e / enjoy-01
               :ARG0 (s5.m / man
                           :same-as s1.m)
               :ARG1 (s5.m2 / meal
                            :poss s5.m)
               :manner (s5.t / together)))