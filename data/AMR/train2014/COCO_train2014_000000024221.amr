# ::id train2014~COCO_train2014_000000024221
# ::doc_file train2014~COCO_train2014_000000024221
# ::tok Two motorcycles are parked on the side of a road . <next_sent> The first motorcycle is on the left side of the road and the second motorcycle is on the right side . <next_sent> The first motorcycle has a black seat and a black bag on the back . <next_sent> The second motorcycle has a black seat and a black bag on the back as well .
(d / document
   :snt1 (s1.p / park-01
               :ARG1 (s1.m / motorcycle
                           :quant "2")
               :ARG2 (s1.s / side
                           :part-of (s1.r / road)))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.m / motorcycle
                                      :li "1")
                          :ARG2 (s2.s / side
                                      :ARG1-of (s2.l / left-20)
                                      :part-of (s2.r2 / road
                                                      :same-as s1.r)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.m2 / motorcycle
                                        :li "2")
                           :ARG2 s2.r2
                           :ARG3 (s2.s2 / side
                                        :ARG1-of (s2.r / right-04))))
   :snt3 (s3.h / have-03
               :ARG0 (s3.m / motorcycle
                           :ord (s3.o / ordinal-entity
                                      :value "1"
                                      :same-as s2.m)
                           :part (s3.b / back))
               :ARG1 (s3.a / and
                           :op1 (s3.s / seat
                                      :ARG1-of (s3.b3 / black-04
                                                      :ARG1 (s3.b2 / bag
                                                                   :location s3.b
                                                                   :op2-of s3.a)))))
   :snt4 (s4.h / have-03
               :ARG0 (s4.m / motorcycle
                           :ord (s4.o / ordinal-entity
                                      :value "2"
                                      :same-as s2.m2)
                           :part (s4.b / back))
               :ARG1 (s4.a / and
                           :op1 (s4.s / seat
                                      :ARG1-of (s4.b3 / black-04
                                                      :ARG1 (s4.b2 / bag
                                                                   :location s4.b
                                                                   :mod (s4.a2 / as-well)
                                                                   :op2-of s4.a))))))