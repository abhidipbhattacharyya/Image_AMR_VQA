# ::id train2014~COCO_train2014_000000567091
# ::doc_file train2014~COCO_train2014_000000567091
# ::tok A wooden dining table with a red tablecloth , set for two people . <next_sent> The table is surrounded by chairs , one on each side and one at the end . <next_sent> The table has a wine glass , a bowl , a fork , a knife , and a spoon on it . <next_sent> There are also a few potted plants in the room , one near the table and another near the window .
(d / document
   :snt1 (s1.t / table
               :purpose (s1.d / dine-01)
               :ARG1-of (s1.s / set-01
                              :ARG2 (s1.p / person
                                          :quant "2"))
               :consist-of (s1.w / wood)
               :part (s1.t2 / tablecloth
                            :ARG1-of (s1.r / red-02)))
   :snt2 (s2.s2 / surround-01
                :ARG1 (s2.c / chair
                            :example (s2.a / and
                                           :op1 (s2.c2 / chair
                                                       :location (s2.s / side
                                                                       :mod (s2.e / each))
                                                       :quant "1")
                                           :op2 (s2.c3 / chair-01
                                                       :location (s2.e2 / end)
                                                       :quant "1")))
                :ARG2 (s2.t / table
                            :same-as s1.t))
   :snt3 (s3.h / have-03
               :ARG0 (s3.t / table
                           :same-as s1.t)
               :ARG1 (s3.a / and
                           :op1 (s3.g / glass
                                      :mod (s3.w / wine))
                           :op2 (s3.b / bowl)
                           :op3 (s3.f / fork)
                           :op4 (s3.k / knife)
                           :op5 (s3.s / spoon)))
   :snt4 (s4.g / grow-03
               :ARG1 (s4.a2 / and
                            :op1 (s4.p2 / plant
                                        :quant (s4.f / few)
                                        :ARG1-of s4.g
                                        :ARG1-of (s4.n / near-02
                                                       :ARG2 (s4.t / table
                                                                   :same-as s1.t))
                                        :quant "1")
                            :op2 (s4.p3 / plant
                                        :ARG1-of (s4.n2 / near-02
                                                        :ARG2 (s4.w / window))
                                        :mod (s4.a3 / another)))
               :location (s4.r / room)
               :mod (s4.a / also)
               :rel (s4.p / plant)))