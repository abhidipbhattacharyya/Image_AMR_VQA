# ::id train2014~COCO_train2014_000000150646
# ::doc_file train2014~COCO_train2014_000000150646
# ::tok A bar with a man sitting at the counter reading a book . <next_sent> The bar has a large collection of clocks on the wall , and a television is mounted on the wall above the man . <next_sent> There are several bottles and cups on the counter , and a few clocks are also visible .
(d / document
   :snt1 (s1.e / event
               :location (s1.b / bar)
               :mod (s1.m / man
                          :ARG0-of (s1.r / read-01
                                         :ARG1 (s1.b2 / book))
                          :ARG1-of (s1.s / sit-01
                                         :ARG2 (s1.c / counter))))
   :snt2 (s2.a2 / and
                :op1 (s2.h / have-03
                           :ARG0 (s2.b / bar
                                       :same-as s1.b)
                           :ARG1 (s2.c / collect-01
                                       :ARG1 (s2.w3 / watch)
                                       :location (s2.w / wall)
                                       :mod (s2.l / large)))
                :op2 (s2.m2 / mount-03
                            :ARG1 (s2.t / television)
                            :location (s2.w2 / wall
                                             :location (s2.a / above
                                                             :op1 (s2.m / man
                                                                        :same-as s1.m)))))
   :snt3 (s3.a3 / and
                :op1 (s3.b / be-located-at-91
                           :ARG1 (s3.a2 / and
                                        :quant (s3.s2 / several)
                                        :op1 (s3.b2 / bottle)
                                        :op2 (s3.c2 / cup))
                           :ARG2 (s3.c / counter
                                       :same-as s1.c))
                :op2 (s3.p / possible-01
                           :ARG1 (s3.s / see-01
                                       :ARG1 (s3.w / watch
                                                   :quant (s3.f / few)))
                           :mod (s3.a / also))))