# ::id train2014~COCO_train2014_000000218179
# ::doc_file train2014~COCO_train2014_000000218179
# ::tok The bathroom has a brown toilet and a sink . <next_sent> The toilet is positioned next to the sink . <next_sent> The floor is covered with black and white tiles . <next_sent> There is a shower curtain in the bathroom . <next_sent> The bathroom also has a towel rack with a towel on it . <next_sent> There are several bottles and a cup on the sink .
(d / document
   :snt1 (s1.h / have-03
               :ARG0 (s1.b / bathroom)
               :ARG1 (s1.a / and
                           :op1 (s1.t / toilet
                                      :ARG1-of (s1.b2 / brown-01))
                           :op2 (s1.s / sink)))
   :snt2 (s2.p / position-01
               :ARG1 (s2.t / toilet
                           :same-as s1.t)
               :ARG2 (s2.n / next-to
                           :op1 (s2.s / sink
                                      :same-as s1.s)))
   :snt3 (s3.c / cover-02
               :ARG1 (s3.f / floor)
               :ARG2 (s3.t / tile
                           :consist-of (s3.a / and
                                             :op1 (s3.b / black-04)
                                             :op2 (s3.w / white-03))))
   :snt4 (s4.c / curtain
               :location (s4.b / bathroom
                               :same-as s1.b)
               :mod (s4.s / shower-01))
   :snt5 (s5.h / have-03
               :ARG0 (s5.b / bathroom
                           :same-as s1.b)
               :ARG1 (s5.r / rack
                           :ARG0-of (s5.h2 / have-03
                                           :ARG1 (s5.t / towel)
                                           :ARG1 (s5.t2 / towel)))
               :mod (s5.a / also))
   :snt6 (s6.a / and
               :location (s6.s3 / sink
                                :same-as s1.s)
               :op1 (s6.s / several
                          :op1 (s6.v / volume-quantity
                                     :unit (s6.b / bottle)
                                     :quant "1"))
               :op2 (s6.s2 / several
                           :op2 (s6.c / cup)
                           :quant-of s6.c)))