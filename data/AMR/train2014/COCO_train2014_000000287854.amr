# ::id train2014~COCO_train2014_000000287854
# ::doc_file train2014~COCO_train2014_000000287854
# ::tok A kitchen with a sink and a counter . <next_sent> The sink is made of metal and is located in the middle of the counter . <next_sent> The counter is made of granite . <next_sent> There are two knives on the counter , one on the left side and one on the right side . <next_sent> There are also two bottles , one on the right side and one on the left side .
(d / document
   :snt1 (s1.k / kitchen
               :ARG0-of (s1.h / have-03
                              :ARG1 (s1.a / and
                                          :op1 (s1.s / sink)
                                          :op2 (s1.c / counter))))
   :snt2 (s2.a / and
               :op1 (s2.m / make-01
                          :ARG1 (s2.s / sink
                                      :same-as s1.s)
                          :ARG2 (s2.m2 / metal))
               :op2 (s2.b / be-located-at-91
                          :ARG1 s2.s
                          :ARG2 (s2.m3 / middle
                                       :part-of (s2.c / counter
                                                      :same-as s1.c))))
   :snt3 (s3.m / make-01
               :ARG1 (s3.c / counter
                           :same-as s1.c)
               :ARG2 (s3.g / granite))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.k / knife
                           :domain (s4.a / and
                                         :op1 (s4.k2 / knife
                                                     :location (s4.s / side
                                                                     :ARG1-of (s4.l / left-20))
                                                     :quant "1")
                                         :op2 (s4.k3 / knife
                                                     :location (s4.s2 / side
                                                                      :ARG1-of (s4.r / right-04))
                                                     :quant "1"))
                           :quant "2")
               :ARG2 (s4.c / counter
                           :same-as s1.c))
   :snt5 (s5.a2 / and
                :op1 (s5.b / bottle
                           :mod (s5.a / also)
                           :quant "2")
                :op2 (s5.b3 / bottle
                            :location (s5.s2 / side
                                             :ARG1-of (s5.l / left-20))
                            :quant "1")
                :rel (s5.b2 / bottle
                            :location (s5.s / side
                                            :ARG1-of (s5.r / right-04)
                                            :same-as s4.r)
                            :quant "1")))