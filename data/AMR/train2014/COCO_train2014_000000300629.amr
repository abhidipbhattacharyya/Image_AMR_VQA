# ::id train2014~COCO_train2014_000000300629
# ::doc_file train2014~COCO_train2014_000000300629
# ::tok Two pizzas are sitting on a table , one of which is missing a slice . <next_sent> The pizzas are placed on plates , with one plate holding two slices of pizza and the other holding one slice . <next_sent> The pizzas are on a countertop , with one pizza being larger than the other .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.p / pizzeria
                           :ARG2-of (s1.i / include-91
                                          :ARG1 (s1.p2 / pizzeria
                                                       :ARG0-of (s1.m / miss-01
                                                                      :ARG1 (s1.s2 / slice))
                                                       :quant "1"))
                           :quant "2")
               :ARG2 (s1.t / table))
   :snt2 (s2.p3 / place-01
                :ARG1 (s2.p2 / pizzeria)
                :ARG2 (s2.p4 / plate
                             :example (s2.a / and
                                            :op1 (s2.p5 / plate
                                                        :mod (s2.o / one))
                                            :op2 (s2.h2 / hold-01
                                                        :ARG0 (s2.p6 / plate
                                                                     :mod (s2.o2 / other))
                                                        :ARG1 (s2.s2 / slice
                                                                     :quant "1"))))
                :rel (s2.h / hold-01
                           :ARG0 s2.p5
                           :ARG1 (s2.s / slice
                                       :mod (s2.p / pizza)
                                       :quant "2")))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.p3 / pizzeria
                            :mod (s3.p / pizza
                                       :quant (s3.o / one
                                                    :same-as s1.m)
                                       :ARG1-of (s3.h / have-degree-91
                                                      :ARG2 (s3.l / large)
                                                      :ARG3 (s3.m / more)
                                                      :ARG4 (s3.p2 / pizza
                                                                   :mod (s3.o2 / other)))))
               :ARG2 (s3.c / countertop)))