# ::id train2014~COCO_train2014_000000110034
# ::doc_file train2014~COCO_train2014_000000110034
# ::tok A plate of food sits on a tray with a fork and spoon nearby . <next_sent> The plate contains fish , carrots , and a slice of pizza . <next_sent> There are also two bowls of food , one containing salad and the other containing a fruit salad . <next_sent> A glass of wine is also present on the tray .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.p / plate
                           :consist-of (s1.f / food))
               :ARG2 (s1.t / tray)
               :accompanier (s1.n / near-02
                                  :ARG1 (s1.a / and
                                              :op1 (s1.f2 / fork)
                                              :op2 (s1.s2 / spoon))))
   :snt2 (s2.c2 / contain-01
                :ARG0 (s2.p2 / plate
                             :same-as s1.p)
                :ARG1 (s2.a / and
                            :op1 (s2.f / fish)
                            :op2 (s2.c / carrot)
                            :op3 (s2.s / slice
                                       :consist-of (s2.p / pizza))))
   :snt3 (s3.a2 / and
                :op1 (s3.p / pound
                           :ARG2-of (s3.i / include-91
                                          :ARG1 (s3.d / dish
                                                      :ARG0-of (s3.c / contain-01
                                                                     :ARG1 (s3.s / salad))))
                           :ARG2-of (s3.i2 / include-91
                                           :ARG1 s3.d
                                           :mod (s3.o / other
                                                      :ARG0-of (s3.c2 / contain-01
                                                                      :ARG1 (s3.s2 / salad
                                                                                   :mod (s3.f2 / fruit)))))
                           :consist-of (s3.f / food)
                           :mod (s3.a / also)
                           :quant "2")
                :op2 s3.i2)
   :snt4 (s4.p / present-02
               :ARG1 (s4.w / wine
                           :quant (s4.g / glass))
               :ARG2 (s4.t / tray
                           :same-as s1.t)
               :mod (s4.a / also)))