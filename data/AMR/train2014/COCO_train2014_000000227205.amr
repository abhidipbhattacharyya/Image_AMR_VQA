# ::id train2014~COCO_train2014_000000227205
# ::doc_file train2014~COCO_train2014_000000227205
# ::tok A train is traveling down the tracks , blowing smoke as it goes . <next_sent> The train is green and yellow , and it is pulling a red car . <next_sent> The smoke is coming from the train , and it is billowing up into the sky . <next_sent> There are a few people standing near the train , and a stop sign is visible in the distance .
(d / document
   :snt1 (s1.t3 / travel-01
                :ARG0 (s1.t2 / train
                             :ARG0-of (s1.b / blow-01
                                            :ARG1 (s1.s / smoke)
                                            :time (s1.g / go-02
                                                        :ARG0 s1.t2)))
                :ARG1 (s1.t / track)
                :direction (s1.d / down))
   :snt2 (s2.a2 / and
                :op1 (s2.a / and
                           :domain (s2.t / train
                                         :same-as s1.t2)
                           :op1 (s2.g / green-02)
                           :op2 (s2.y / yellow-02))
                :op2 (s2.p / pull-01
                           :ARG0 s2.t
                           :ARG1 (s2.c / car
                                       :ARG1-of (s2.r / red-02))))
   :snt3 (s3.a / and
               :op1 (s3.c / come-01
                          :ARG1 (s3.s2 / smoke
                                       :same-as s1.s)
                          :ARG3 (s3.t / train
                                      :same-as s1.t2))
               :op2 (s3.b / billow-01
                          :ARG1 s3.s2
                          :ARG2 (s3.s / sky)
                          :direction (s3.u / up)))
   :snt4 (s4.a / and
               :op1 (s4.s3 / stand-01
                           :ARG1 (s4.p / person
                                       :quant (s4.f / few))
                           :ARG2 (s4.n / near-02
                                       :ARG1 s4.p
                                       :ARG2 (s4.t / train
                                                   :same-as s1.t2)))
               :op2 (s4.p2 / possible-01
                           :ARG1 (s4.s / see-01
                                       :ARG1 (s4.s2 / sign
                                                    :purpose (s4.s4 / stop-01))
                                       :location (s4.d / distance)))))