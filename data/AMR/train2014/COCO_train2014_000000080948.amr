# ::id train2014~COCO_train2014_000000080948
# ::doc_file train2014~COCO_train2014_000000080948
# ::tok A large pizza sits on a white plate on a wooden table . <next_sent> The table is set with plates , cups , forks , knives , and spoons . <next_sent> There are two cups , one on the left side and one on the right side of the table . <next_sent> There are three forks , one on the left side , one on the right side , and one near the center of the table . <next_sent> There are three knives , one on the left side , one on the right side , and one near the center of the table . <next_sent> There are two spoons , one on the left side and one on the right side of the table .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.p / pizza
                           :mod (s1.l / large))
               :ARG2 (s1.p2 / plate
                            :ARG1-of (s1.w / white-03)
                            :location (s1.t / table
                                            :consist-of (s1.w2 / wooden))))
   :snt2 (s2.s / set-01
               :ARG1 (s2.t / table
                           :same-as s1.t)
               :ARG2 (s2.a / and
                           :op1 (s2.p / plate)
                           :op2 (s2.c2 / cup)
                           :op3 (s2.c / continent)
                           :op4 (s2.k / knife)
                           :op5 (s2.s2 / spoon)))
   :snt3 (s3.a / and
               :op1 (s3.c / cup
                          :quant "2")
               :op2 (s3.c3 / cup
                           :location (s3.s2 / side
                                            :ARG1-of (s3.r / right-04)
                                            :part-of (s3.t / table
                                                           :same-as s1.t))
                           :quant "1")
               :rel (s3.c2 / cup
                           :location (s3.s / side
                                           :ARG1-of (s3.l / left-20))
                           :quant "1"))
   :snt4 (s4.f / fork-out-02
               :ARG1 (s4.a / and
                           :op1 (s4.f2 / fork-out-02
                                       :location (s4.s / side
                                                       :ARG1-of (s4.l / left-20)
                                                       :same-as s3.s))
                           :op2 s4.f2
                           :op3 (s4.f3 / fork-out-02
                                       :ARG1-of (s4.n / near-02
                                                      :ARG2 (s4.c / center
                                                                  :part-of (s4.t / table
                                                                                 :same-as s1.t)))
                                       :location (s4.s2 / side
                                                        :ARG1-of (s4.r / right-04))))
               :quant "3")
   :snt5 (s5.k / knife
               :domain (s5.a / and
                             :op1 (s5.k2 / knife
                                         :location (s5.s / side
                                                         :ARG1-of (s5.l / left-20)
                                                         :same-as s3.s)
                                         :quant "1")
                             :op2 s5.k2
                             :op3 (s5.k3 / knife
                                         :ARG1-of (s5.n / near-02
                                                        :ARG2 (s5.c / center
                                                                    :part-of (s5.t / table
                                                                                   :same-as s1.t)
                                                                    :same-as s4.c))
                                         :location (s5.s2 / side
                                                          :ARG1-of (s5.r / right-04)
                                                          :same-as s4.s2)
                                         :quant "1"))
               :quant "3")
   :snt6 (s6.a / and
               :op1 (s6.s3 / spoon
                           :quant "2")
               :op2 (s6.s5 / spoon
                           :location (s6.s2 / side
                                            :ARG1-of (s6.r / right-04)
                                            :part-of (s6.t / table
                                                           :same-as s1.t)
                                            :same-as s4.s2)
                           :quant "1")
               :rel (s6.s4 / spoon
                           :location (s6.s / side
                                           :ARG1-of (s6.l / left-20)
                                           :same-as s3.s)
                           :quant "1")))