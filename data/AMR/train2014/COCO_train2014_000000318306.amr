# ::id train2014~COCO_train2014_000000318306
# ::doc_file train2014~COCO_train2014_000000318306
# ::tok Two glasses of wine are sitting on a table next to a bottle of wine . <next_sent> The glasses are filled with red wine and are placed on a wooden table . <next_sent> There are also two cups on the table , one near the center and the other near the edge . <next_sent> A person can be seen in the background , and a fork and a knife are also present on the table .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.w / wine
                           :quant (s1.g / glasses
                                        :quant "2"))
               :ARG2 (s1.t / table
                           :location-of (s1.n / next-to
                                              :op1 (s1.w2 / wine
                                                          :quant (s1.b / bottle)))))
   :snt2 (s2.a / and
               :op1 (s2.f / fill-01
                          :ARG1 (s2.g / glass
                                      :same-as s1.w)
                          :ARG2 (s2.w / wine
                                      :ARG1-of (s2.r / red-02)))
               :op2 (s2.p / place-01
                          :ARG1 s2.g
                          :ARG2 (s2.t / table
                                      :consist-of (s2.w2 / wood)
                                      :same-as s1.t)))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.c2 / cup
                            :ARG1-of (s3.n / near-02
                                           :ARG2 (s3.c / center))
                            :mod (s3.a / also)
                            :quant "1"
                            :quant "2")
               :ARG2 (s3.t / table
                           :same-as s1.t)
               :rel (s3.a2 / and
                           :op1 s3.c2
                           :op2 (s3.c3 / cup
                                       :ARG1-of (s3.n2 / near-02
                                                       :ARG2 (s3.e / edge)))))
   :snt4 (s4.a2 / and
                :op1 (s4.p2 / possible-01
                            :ARG1 (s4.s / see-01
                                        :ARG1 (s4.p / person)
                                        :location (s4.b / background)))
                :op2 (s4.p3 / present-02
                            :ARG1 (s4.a3 / and
                                         :op1 (s4.f / fork)
                                         :op2 (s4.k / knife))
                            :ARG2 (s4.t / table
                                        :same-as s1.t)
                            :mod (s4.a / also))))