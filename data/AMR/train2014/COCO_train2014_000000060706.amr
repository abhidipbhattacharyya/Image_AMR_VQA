# ::id train2014~COCO_train2014_000000060706
# ::doc_file train2014~COCO_train2014_000000060706
# ::tok Two laptops are sitting on a table , one is open and the other is closed . <next_sent> The open laptop is on the left side of the table and the closed laptop is on the right side . <next_sent> A mouse is placed near the open laptop , and a cell phone is also on the table .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.o / open-01
                          :ARG1 (s1.c3 / computer))
               :op2 (s1.a2 / and
                           :op1 s1.o
                           :op2 (s1.c / close-01
                                      :ARG1 s1.c3))
               :rel (s1.s / sit-01
                          :ARG1 (s1.c2 / computer
                                       :quant "2")
                          :ARG2 (s1.t / table)))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.l / laptop
                                      :ARG1-of (s2.o / open-01))
                          :ARG2 (s2.s / side
                                      :ARG1-of (s2.l3 / left-20)
                                      :part-of (s2.t / table
                                                     :same-as s1.t)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.l2 / laptop
                                        :ARG1-of (s2.c / close-01))
                           :ARG2 (s2.s2 / side
                                        :ARG1-of (s2.r / right-04))))
   :snt3 (s3.a2 / and
                :op1 (s3.p2 / place-01
                            :ARG1 (s3.m / mouse)
                            :ARG2 (s3.n / near-02
                                        :ARG1 s3.m
                                        :ARG2 (s3.l / laptop
                                                    :ARG1-of (s3.o / open-01)
                                                    :same-as s2.l)))
                :op2 (s3.b / be-located-at-91
                           :ARG1 (s3.p / phone
                                       :mod (s3.c / cell))
                           :ARG2 (s3.t / table
                                       :same-as s1.t)
                           :mod (s3.a / also))))