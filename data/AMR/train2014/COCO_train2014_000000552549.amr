# ::id train2014~COCO_train2014_000000552549
# ::doc_file train2014~COCO_train2014_000000552549
# ::tok A person is sitting at a table with a plate of food in front of them . <next_sent> The plate has a sandwich and some vegetables . <next_sent> There are also several other plates of food on the table . <next_sent> There are two cups , one on the left side of the table and one on the right side . <next_sent> A fork is also visible on the right side of the table .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.p / person
                           :poss-of (s1.i / in-front-of
                                          :location-of (s1.f / food
                                                             :quant (s1.p2 / plate))))
               :ARG2 (s1.t / table))
   :snt2 (s2.h / have-03
               :ARG0 (s2.p / plate
                           :same-as s1.f)
               :ARG1 (s2.a / and
                           :op1 (s2.s / sandwich)
                           :op2 (s2.v / vegetable
                                      :quant (s2.s2 / some))))
   :snt3 (s3.p / plate
               :quant (s3.s / several)
               :consist-of (s3.f / food)
               :location (s3.t / table
                               :same-as s1.t)
               :mod (s3.o / other)
               :mod (s3.a / also))
   :snt4 (s4.a / and
               :op1 (s4.b / be-located-at-91
                          :ARG1 (s4.c / cup
                                      :quant "2")
                          :ARG2 (s4.s / side
                                      :ARG1-of (s4.l / left-20)
                                      :part-of (s4.t / table
                                                     :same-as s1.t)))
               :op2 s4.c
               :rel (s4.c2 / cup
                           :quant "1")
               :rel (s4.c3 / cup
                           :location (s4.s2 / side
                                            :ARG1-of (s4.r / right-04))
                           :quant "1"))
   :snt5 (s5.p / possible-01
               :ARG1 (s5.s / see-01
                           :ARG1 (s5.f / fork)
                           :location (s5.s2 / side
                                            :ARG1-of (s5.r / right-04
                                                           :ARG2 (s5.t / table
                                                                       :same-as s1.t))
                                            :same-as s4.s2))
               :mod (s5.a / also)))