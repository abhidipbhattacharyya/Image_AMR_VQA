# ::id train2014~COCO_train2014_000000296790
# ::doc_file train2014~COCO_train2014_000000296790
# ::tok A large pizza is on a table with a knife and fork . <next_sent> There are two other pizzas on the table , one near the top and one near the bottom . <next_sent> A person is sitting at the table . <next_sent> There are also two cups on the table , one near the top and one near the bottom .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.p / pizza
                           :mod (s1.l / large))
               :ARG2 (s1.t / table)
               :instrument (s1.a / and
                                 :op1 (s1.k / knife)
                                 :op2 (s1.f / fork)))
   :snt2 (s2.a / and
               :op1 (s2.p / pizzeria
                          :location (s2.t / table
                                          :same-as s1.t)
                          :mod (s2.o / other)
                          :quant "2")
               :op2 (s2.p2 / pizzeria
                           :ARG1-of (s2.n / near-02
                                          :ARG2 (s2.t2 / top))
                           :ARG1-of (s2.n2 / near-02
                                           :ARG2 (s2.b / bottom))
                           :mod s2.p
                           :quant "1"))
   :snt3 (s3.s / sit-01
               :ARG1 (s3.p / person)
               :ARG2 (s3.t / table
                           :same-as s1.t))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.c / cup
                           :example (s4.a2 / and
                                           :op1 (s4.c2 / cup
                                                       :ARG1-of (s4.n / near-02
                                                                      :ARG2 (s4.t2 / top
                                                                                   :same-as s2.t2))
                                                       :quant "1")
                                           :op2 (s4.c3 / cup
                                                       :ARG1-of (s4.n2 / near-02
                                                                       :ARG2 (s4.b2 / bottom))
                                                       :quant "1"))
                           :mod (s4.a / also)
                           :quant "2")
               :ARG2 (s4.t / table
                           :same-as s1.t)))