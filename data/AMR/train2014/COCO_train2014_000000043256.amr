# ::id train2014~COCO_train2014_000000043256
# ::doc_file train2014~COCO_train2014_000000043256
# ::tok The room is filled with various items , including a table with a potted plant on it . <next_sent> There are two chairs in the room , one near the table and another in the corner . <next_sent> The room also contains a sink , a refrigerator , and a microwave . <next_sent> There are several bottles scattered throughout the room , and a cup can be seen on a surface .
(d / document
   :snt1 (s1.f / fill-01
               :ARG1 (s1.r / room)
               :ARG2 (s1.i2 / item
                            :ARG2-of (s1.i / include-91
                                           :ARG1 (s1.t / table
                                                       :ARG0-of (s1.h / have-03
                                                                      :ARG1 (s1.p / plant
                                                                                  :ARG1-of (s1.g / grow-03)))))
                            :mod (s1.v / various)))
   :snt2 (s2.b / be-located-at-91
               :ARG1 (s2.c / chair
                           :ARG1-of (s2.n / near-02
                                          :ARG2 (s2.t / table
                                                      :same-as s1.t))
                           :domain (s2.a / and
                                         :op2 (s2.c2 / chair
                                                     :location (s2.c3 / corner)))
                           :op1-of s2.a
                           :quant "1"
                           :quant "2")
               :ARG2 (s2.r / room
                           :same-as s1.r))
   :snt3 (s3.c / contain-01
               :ARG0 (s3.r2 / room
                            :same-as s1.r)
               :ARG1 (s3.a2 / and
                            :op1 (s3.s / sink)
                            :op2 (s3.r / refrigerator)
                            :op3 (s3.m / microwave))
               :mod (s3.a / also))
   :snt4 (s4.a / and
               :op1 (s4.s / scatter-01
                          :ARG1 (s4.b / bottle
                                      :quant (s4.s3 / several))
                          :ARG2 (s4.r / room
                                      :same-as s1.r))
               :op2 (s4.p / possible-01
                          :ARG1 (s4.s2 / see-01
                                       :ARG1 (s4.c / cup)
                                       :location (s4.s4 / surface)))))