# ::id train2014~COCO_train2014_000000252198
# ::doc_file train2014~COCO_train2014_000000252198
# ::tok A table with two plates of food on it , one plate has a sandwich and the other has a slice of pizza . <next_sent> There are two glasses of drinks on the table , one is a wine glass and the other is a cup . <next_sent> There are also two vases with flowers on the table . <next_sent> A fork and a knife are also present on the table .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.h / have-03
                          :ARG0 (s1.t / table)
                          :ARG1 (s1.p2 / plate
                                       :consist-of (s1.f / food)
                                       :quant "2"))
               :op2 (s1.h2 / have-03
                           :ARG0 (s1.p3 / plate
                                        :mod (s1.o / one))
                           :ARG1 (s1.s / sandwich))
               :op3 (s1.h3 / have-03
                           :ARG0 (s1.p4 / plate
                                        :mod (s1.o2 / other))
                           :ARG1 (s1.s2 / slice
                                        :consist-of (s1.p / pizza))))
   :snt2 (s2.b / be-located-at-91
               :ARG1 (s2.d / drink-01
                           :quant (s2.g3 / glasses
                                         :quant "2"))
               :ARG2 (s2.t / table
                           :same-as s1.h)
               :rel (s2.a / and
                          :op1 (s2.g / glass
                                     :domain (s2.o / one)
                                     :mod (s2.w / wine))
                          :op2 (s2.g2 / glass)
                          :op3 (s2.c / cup
                                     :domain s2.g2)))
   :snt3 (s3.f / flower
               :location (s3.t / table
                               :same-as s1.h)
               :location-of (s3.f2 / flower)
               :mod (s3.a / also)
               :quant "2")
   :snt4 (s4.p / present-02
               :ARG1 (s4.a2 / and
                            :op1 (s4.f / fork)
                            :op2 (s4.k / knife))
               :ARG2 (s4.t / table
                           :same-as s1.h)
               :mod (s4.a / also)))