# ::id train2014~COCO_train2014_000000167913
# ::doc_file train2014~COCO_train2014_000000167913
# ::tok A man wearing a helmet is riding a motorcycle down a street . <next_sent> The motorcycle is yellow and blue and has a red stripe . <next_sent> The man is wearing a black jacket and a white helmet . <next_sent> There are several cars on the street , including one behind the motorcycle and others in the background .
(d / document
   :snt1 (s1.r / ride-01
               :ARG0 (s1.m / man
                           :ARG0-of (s1.w / wear-01
                                          :ARG1 (s1.h / helmet)))
               :ARG1 (s1.m2 / motorcycle)
               :direction (s1.d / down)
               :path (s1.s / street))
   :snt2 (s2.a2 / and
                :op1 (s2.a / and
                           :domain (s2.m / motorcycle
                                         :same-as s1.m2)
                           :op1 (s2.y / yellow-02)
                           :op2 (s2.b / blue))
                :op2 (s2.h / have-03
                           :ARG0 s2.m
                           :ARG1 (s2.s / stripe
                                       :ARG1-of (s2.r / red-02))))
   :snt3 (s3.w / wear-01
               :ARG0 (s3.m / man
                           :same-as s1.m)
               :ARG1 (s3.a / and
                           :op1 (s3.j / jacket
                                      :ARG1-of (s3.b / black-04))
                           :op2 (s3.h / helmet
                                      :ARG1-of (s3.w2 / white-03))))
   :snt4 (s4.b2 / be-located-at-91
                :ARG1 (s4.c / car
                            :quant (s4.s / several)
                            :ARG2-of (s4.i / include-91
                                           :ARG1 (s4.a / and
                                                       :op1 (s4.c2 / car
                                                                   :location (s4.b3 / behind
                                                                                    :op1 (s4.m / motorcycle
                                                                                               :same-as s1.m2))
                                                                   :quant "1")
                                                       :op2 (s4.c3 / car
                                                                   :location (s4.b / background)
                                                                   :mod (s4.o / other)))))
                :ARG2 (s4.s2 / street
                             :same-as s1.s)))