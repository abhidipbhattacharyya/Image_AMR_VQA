# ::id train2014~COCO_train2014_000000292087
# ::doc_file train2014~COCO_train2014_000000292087
# ::tok A row of old motorcycles are parked in a garage . <next_sent> The motorcycles are green and blue , and they are parked next to each other . <next_sent> There are three motorcycles in total , with one on the left , one in the middle , and one on the right . <next_sent> The motorcycles are parked in a line , with the leftmost motorcycle being the closest to the viewer .
(d / document
   :snt1 (s1.p / park-01
               :ARG1 (s1.m / motorcycle
                           :quant (s1.r / row)
                           :mod (s1.o / old))
               :ARG2 (s1.g / garage))
   :snt2 (s2.a2 / and
                :op1 (s2.a / and
                           :op1 (s2.m / motorcycle
                                      :ARG1-of (s2.g / green-02)
                                      :same-as s1.o)
                           :op2 (s2.m2 / motorcycle
                                       :mod (s2.b / blue)))
                :op2 (s2.p / park-01
                           :ARG1 s2.a
                           :ARG2 (s2.n / next-to
                                       :op1 (s2.o / other
                                                  :mod (s2.e / each)))))
   :snt3 (s3.m2 / motorcycle
                :ARG2-of (s3.t / total-01)
                :accompanier (s3.a / and
                                   :op1 (s3.o / one
                                              :ARG1-of (s3.l / left-19))
                                   :op2 (s3.o2 / one
                                               :ARG1-of (s3.r / right-04)
                                               :location (s3.m / middle)))
                :quant "3")
   :snt4 (s4.p / park-01
               :ARG1 (s4.m2 / motorcycle
                            :ARG1-of (s4.c / close-10
                                           :ARG2 (s4.p2 / person
                                                        :ARG0-of (s4.v / view-01))
                                           :ARG2-of (s4.h / have-degree-91
                                                          :ARG1 s4.m2
                                                          :ARG2 (s4.r / right-04
                                                                      :ARG1 s4.m2)
                                                          :same-as s3.l)
                                           :ARG2-of (s4.h2 / have-degree-91
                                                           :ARG1 s4.m2
                                                           :ARG3 (s4.m / most)))
                            :same-as s1.o)
               :manner (s4.l / line)))