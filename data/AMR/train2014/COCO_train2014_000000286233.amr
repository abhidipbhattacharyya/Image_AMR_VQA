# ::id train2014~COCO_train2014_000000286233
# ::doc_file train2014~COCO_train2014_000000286233
# ::tok A busy city street with a large building in the background . <next_sent> A traffic light is hanging on a pole next to a street sign . <next_sent> The street sign is for a family entertainment center and has a no left turn restriction . <next_sent> The traffic light is green , and there is a large billboard on the building .
(d / document
   :snt1 (s1.s / street
               :ARG1-of (s1.b3 / busy-02)
               :location-of (s1.b2 / building
                                   :location (s1.b / background)
                                   :mod (s1.l / large))
               :mod (s1.c / city))
   :snt2 (s2.h / hang-01
               :ARG1 (s2.l / light
                           :mod (s2.t / traffic))
               :ARG2 (s2.p / pole
                           :location (s2.n / next-to
                                           :op1 (s2.s / sign
                                                      :mod (s2.s2 / street)))))
   :snt3 (s3.a / and
               :op1 (s3.h / have-purpose-91
                          :ARG1 (s3.s / sign
                                      :mod (s3.s2 / street)
                                      :same-as s2.s)
                          :ARG2 (s3.c / center
                                      :mod (s3.e / entertainment
                                                 :mod (s3.f / family))))
               :op2 (s3.r / restrict-01
                          :ARG0 s3.s
                          :ARG1 (s3.t / turn-01
                                      :ARG1-of (s3.l / left-20))
                          :polarity "-"))
   :snt4 (s4.a / and
               :op1 (s4.g / green-02
                          :ARG1 (s4.l2 / light
                                       :mod (s4.t / traffic)
                                       :same-as s2.l))
               :op2 (s4.b / billboard
                          :location (s4.b2 / building
                                           :same-as s1.l)
                          :mod (s4.l / large))))