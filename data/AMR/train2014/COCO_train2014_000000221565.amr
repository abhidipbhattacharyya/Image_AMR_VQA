# ::id train2014~COCO_train2014_000000221565
# ::doc_file train2014~COCO_train2014_000000221565
# ::tok A group of people are standing on the side of a road , looking at a white and red bus . <next_sent> The bus is parked on the side of the road and has a windshield wiper . <next_sent> There are several people standing near the bus , some closer and others further away .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.s2 / stand-01
                           :ARG0 (s1.g / group
                                       :consist-of (s1.p / person))
                           :ARG2 (s1.s / side
                                       :part-of (s1.r2 / road)))
               :op2 (s1.l / look-01
                          :ARG0 s1.g
                          :ARG1 (s1.a2 / and
                                       :op1 (s1.b / bus
                                                  :ARG1-of (s1.w / white-03))
                                       :op2 (s1.b2 / bus
                                                   :ARG1-of (s1.r / red-02)))))
   :snt2 (s2.a / and
               :op1 (s2.p / park-01
                          :ARG1 (s2.b / bus
                                      :same-as s1.a2)
                          :ARG2 (s2.s / side
                                      :part-of (s2.r / road
                                                     :same-as s1.r2)
                                      :same-as s1.s))
               :op2 (s2.h / have-03
                          :ARG0 s2.b
                          :ARG1 (s2.t / thing
                                      :ARG2-of (s2.w2 / wipe-01
                                                      :ARG1 (s2.w / windshield)))))
   :snt3 (s3.s3 / stand-01
                :ARG1 (s3.p / person
                            :quant (s3.s / several))
                :ARG2 (s3.n / near-02
                            :ARG1 s3.p
                            :ARG2 (s3.b / bus
                                        :same-as s1.a2))
                :rel (s3.p2 / person
                            :quant (s3.s2 / some)
                            :ARG2-of (s3.i / include-91
                                           :ARG1 (s3.a / and
                                                       :op1 (s3.c / close-10
                                                                  :ARG1 s3.i
                                                                  :ARG2-of (s3.h / have-degree-91
                                                                                 :ARG1 s3.b
                                                                                 :ARG3 (s3.m / more)))
                                                       :op2 (s3.a2 / away
                                                                   :extent (s3.f / far)
                                                                   :mod (s3.o / other))))
                            :mod (s3.m2 / more))))