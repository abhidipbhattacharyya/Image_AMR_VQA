# ::id train2014~COCO_train2014_000000426828
# ::doc_file train2014~COCO_train2014_000000426828
# ::tok A pizza with strawberries and whipped cream on top is sitting on a table . <next_sent> The pizza is cut into slices and has a purple background . <next_sent> There are two bowls on the table , one near the top left corner and the other near the top right corner .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.p / pizza
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.a / and
                                                      :location (s1.t2 / top)
                                                      :op1 (s1.f / flower
                                                                 :name (s1.n / name
                                                                             :op1 "Walmart"))
                                                      :op2 (s1.c / cream
                                                                 :ARG1-of (s1.w / whip-01)))))
               :ARG2 (s1.t / table))
   :snt2 (s2.a / and
               :op1 (s2.c / cut-01
                          :ARG1 (s2.p / pizza
                                      :same-as s1.p)
                          :ARG2 (s2.s / slice))
               :op2 (s2.h / have-03
                          :ARG0 s2.p
                          :ARG1 (s2.b / background
                                      :ARG1-of (s2.p2 / purple-02))))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.p / pound
                           :ARG2-of (s3.i / include-91
                                          :ARG1 (s3.a / and
                                                      :op1 (s3.n / near-02
                                                                 :ARG1 (s3.p2 / pound
                                                                              :mod (s3.o / other))
                                                                 :ARG2 (s3.c / corner
                                                                             :ARG1-of (s3.l / left-20)
                                                                             :mod (s3.t2 / top)))
                                                      :op2 (s3.n2 / near-02
                                                                  :ARG1 s3.o
                                                                  :ARG2 (s3.c2 / corner
                                                                               :ARG1-of (s3.r / right-04)
                                                                               :mod (s3.t3 / top)))))
                           :quant "1"
                           :quant "2")
               :ARG2 (s3.t / table
                           :same-as s1.t)))