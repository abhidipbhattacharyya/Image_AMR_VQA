# ::id train2014~COCO_train2014_000000086065
# ::doc_file train2014~COCO_train2014_000000086065
# ::tok A group of people are sitting around a table in a restaurant , enjoying a meal together . <next_sent> The table is filled with various items such as wine glasses , cups , bowls , and forks . <next_sent> There are at least six wine glasses , four cups , and three bowls on the table , along with multiple forks . <next_sent> The people are engaged in conversation and eating , creating a lively atmosphere .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.s / sit-01
                          :ARG1 (s1.g / group
                                      :consist-of (s1.p / person))
                          :ARG2 (s1.a2 / around
                                       :op1 (s1.t / table
                                                  :location (s1.r / restaurant))))
               :op2 (s1.e / enjoy-01
                          :ARG0 s1.g
                          :ARG1 (s1.m / meal)
                          :mod (s1.t2 / together)))
   :snt2 (s2.f / fill-01
               :ARG1 (s2.t / table
                           :same-as s1.t)
               :ARG2 (s2.i / item
                           :example (s2.a / and
                                          :op1 (s2.g / glass
                                                     :mod (s2.w / wine))
                                          :op2 (s2.c / cup)
                                          :op3 (s2.b / bowl-01)
                                          :op4 (s2.f2 / fork-out-02))
                           :mod (s2.v / various)))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.a / and
                           :op1 (s3.g / glass
                                      :quant (s3.a2 / at-least
                                                    :op1 "6")
                                      :mod (s3.w / wine))
                           :op2 (s3.c / cup
                                      :quant "4")
                           :op3 (s3.p / plate
                                      :quant "3")
                           :op4 (s3.f / fork-out-02
                                      :quant (s3.m / multiple)))
               :ARG2 (s3.t / table
                           :same-as s1.t))
   :snt4 (s4.a / and
               :ARG0-of (s4.c2 / create-01
                               :ARG1 (s4.a2 / atmosphere
                                            :mod (s4.l / lively)))
               :op1 (s4.e2 / engage-01
                           :ARG1 (s4.p / person
                                       :ARG2 (s4.c / converse-01)
                                       :ARG0-of s4.c
                                       :same-as s1.g))
               :op2 (s4.e / eat-01
                          :ARG0 s4.p)))