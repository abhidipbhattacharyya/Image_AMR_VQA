# ::id train2014~COCO_train2014_000000132114
# ::doc_file train2014~COCO_train2014_000000132114
# ::tok A young boy is laying on the ground wearing a helmet and holding a skateboard . <next_sent> The boy is wearing a green shirt and purple shorts . <next_sent> The skateboard is positioned in front of the boy , and there are two sets of wheels on the ground , one near the boy and the other further away .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.l / lay-01
                          :ARG1 (s1.b / boy
                                      :ARG0-of (s1.w / wear-01
                                                     :ARG1 (s1.h / helmet))
                                      :mod (s1.y / young))
                          :ARG2 (s1.g / ground))
               :op2 (s1.h2 / hold-01
                           :ARG0 s1.b
                           :ARG1 (s1.s / skateboard)))
   :snt2 (s2.w / wear-01
               :ARG0 (s2.b / boy
                           :same-as s1.y)
               :ARG1 (s2.a / and
                           :op1 (s2.s / shirt
                                      :ARG1-of (s2.g / green-02))
                           :op2 (s2.s2 / shorts
                                       :ARG1-of (s2.p / purple-02))))
   :snt3 (s3.a / and
               :op1 (s3.p / position-01
                          :ARG1 (s3.s2 / skateboard
                                       :same-as s1.s)
                          :ARG2 (s3.i / in-front-of
                                      :op1 (s3.b / boy
                                                 :same-as s1.y)))
               :op2 (s3.s / set
                          :consist-of (s3.w / wheel
                                            :ARG1-of (s3.n2 / near-02
                                                            :ARG2 s3.b
                                                            :ARG2 (s3.f / further
                                                                        :op1 (s3.a2 / away))))
                          :consist-of (s3.o / one
                                            :ARG1-of (s3.n / near-02
                                                           :ARG2 s3.b))
                          :location (s3.g / ground
                                          :same-as s1.g)
                          :quant "2")))