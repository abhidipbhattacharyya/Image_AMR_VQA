# ::id train2014~COCO_train2014_000000331505
# ::doc_file train2014~COCO_train2014_000000331505
# ::tok A bowl filled with apples and bananas is on a table . <next_sent> The apples are red and yellow , and the bananas are yellow . <next_sent> There are three apples in the bowl , and one of them is cut in half . <next_sent> The bowl is placed on a table , and a bunch of bananas is also present on the table .
(d / document
   :snt1 (s1.b2 / be-located-at-91
                :ARG1 (s1.b3 / bowl
                             :ARG1-of (s1.f / fill-01
                                            :ARG2 (s1.a / and
                                                        :op1 (s1.a2 / apple)
                                                        :op2 (s1.b / banana))))
                :ARG2 (s1.t / table))
   :snt2 (s2.a2 / and
                :op1 (s2.a / and
                           :op1 (s2.a3 / apple
                                       :ARG1-of (s2.r / red-02)
                                       :same-as s1.a2))
                :op2 (s2.b / banana
                           :ARG1-of (s2.y / yellow-02)
                           :same-as s1.b))
   :snt3 (s3.a / and
               :op1 (s3.b / be-located-at-91
                          :ARG1 (s3.a2 / apple
                                       :quant "3")
                          :ARG2 (s3.b2 / bowl
                                       :same-as s1.b3))
               :op2 (s3.c / cut-02
                          :ARG1 (s3.a3 / apple
                                       :ARG1-of (s3.i / include-91
                                                      :ARG2 s3.a2)
                                       :quant "1")
                          :ARG2 (s3.h / half)))
   :snt4 (s4.a2 / and
                :op1 (s4.p / place-01
                           :ARG1 (s4.b2 / bowl
                                        :same-as s1.b3)
                           :ARG2 (s4.t / table
                                       :same-as s1.t))
                :op2 (s4.p2 / present-02
                            :ARG1 (s4.b / banana
                                        :quant (s4.b3 / bunch))
                            :ARG2 s4.t
                            :mod (s4.a / also))))