# ::id train2014~COCO_train2014_000000332243
# ::doc_file train2014~COCO_train2014_000000332243
# ::tok A zebra and a giraffe are grazing in a zoo enclosure . <next_sent> The zebra is eating grass and the giraffe is eating leaves from a tree . <next_sent> There are two trees in the enclosure , one with a feeder hanging from it . <next_sent> The zebra is standing on the left side of the enclosure , while the giraffe is standing on the right side .
(d / document
   :snt1 (s1.g2 / graze-01
                :ARG0 (s1.a / and
                            :op1 (s1.z / zebra)
                            :op2 (s1.g / giraffe))
                :location (s1.e / enclosure
                                :mod (s1.z2 / zoo)))
   :snt2 (s2.a / and
               :op1 (s2.e / eat-01
                          :ARG0 (s2.z / zebra
                                      :same-as s1.z)
                          :ARG1 (s2.g2 / grass))
               :op2 (s2.e2 / eat-01
                           :ARG0 (s2.g / giraffe
                                       :same-as s1.g)
                           :ARG1 (s2.l / leaf
                                       :source (s2.t / tree))))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.t2 / tree
                            :ARG2-of (s3.i / include-91
                                           :ARG1 (s3.t3 / tree
                                                        :ARG0-of (s3.h2 / have-03
                                                                        :ARG1 (s3.t / thing
                                                                                    :ARG0-of (s3.f / feed-01)
                                                                                    :ARG1-of (s3.h / hanging-07
                                                                                                   :ARG2 s3.t3)))
                                                        :quant "1"))
                            :quant "2")
               :ARG2 (s3.e / enclosure
                           :same-as s1.e))
   :snt4 (s4.c / contrast-01
               :ARG1 (s4.s3 / stand-01
                            :ARG1 (s4.z / zebra
                                        :same-as s1.z)
                            :ARG2 (s4.s / side
                                        :ARG1-of (s4.l / left-20)
                                        :part-of (s4.e / enclosure
                                                       :part (s4.s2 / side
                                                                    :ARG1-of (s4.r / right-04))
                                                       :same-as s1.e)))
               :ARG2 (s4.s4 / stand-01
                            :ARG1 (s4.g / giraffe
                                        :same-as s1.g)
                            :ARG2 s4.s2)))