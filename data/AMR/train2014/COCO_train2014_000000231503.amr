# ::id train2014~COCO_train2014_000000231503
# ::doc_file train2014~COCO_train2014_000000231503
# ::tok A giraffe stands in a grassy field under a tree , with its head reaching up to the branches . <next_sent> The giraffe is brown and white , and its long neck is visible as it reaches up to the tree . <next_sent> The tree is surrounded by a few other trees , creating a peaceful and natural setting .
(d / document
   :snt1 (s1.s / stand-01
               :ARG1 (s1.g / giraffe
                           :part (s1.h / head))
               :ARG2 (s1.f / field
                           :consist-of (s1.g2 / grass)
                           :location (s1.u / under
                                           :op1 (s1.t / tree)))
               :manner (s1.r / reach-03
                             :ARG0 s1.h
                             :ARG2 (s1.b / branch)
                             :direction (s1.u2 / up)))
   :snt2 (s2.a / and
               :op1 (s2.r / Brown
                          :domain (s2.g / giraffe
                                        :ARG1-of (s2.w / white-03)
                                        :part (s2.n / neck
                                                    :ARG1-of (s2.l / long-03))
                                        :same-as s1.g))
               :op2 (s2.p / possible-01
                          :ARG1 (s2.s / see-01
                                      :ARG1 s2.n
                                      :time (s2.r2 / reach-03
                                                   :ARG0 s2.g
                                                   :ARG1 (s2.t / tree
                                                               :same-as s1.t)
                                                   :ARG2 (s2.u / up)))))
   :snt3 (s3.s2 / surround-01
                :ARG0-of (s3.c / create-01
                               :ARG1 (s3.s / setting
                                           :ARG1-of (s3.n / natural-03)
                                           :mod (s3.p / peaceful)))
                :ARG1 (s3.t / tree
                            :same-as s1.t)
                :ARG2 (s3.t2 / tree
                             :quant (s3.f / few)
                             :mod (s3.o / other))))