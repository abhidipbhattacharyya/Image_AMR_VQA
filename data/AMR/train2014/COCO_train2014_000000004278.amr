# ::id train2014~COCO_train2014_000000004278
# ::doc_file train2014~COCO_train2014_000000004278
# ::tok A group of elephants are standing in the water , with some of them drinking . <next_sent> The elephants are of various sizes , with some being larger and others smaller . <next_sent> They are all standing close to each other , creating a sense of unity and togetherness .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.s2 / stand-01
                           :ARG1 (s1.g / group
                                       :consist-of (s1.e / elephant))
                           :ARG2 (s1.w / water))
               :op2 (s1.d / drink-01
                          :ARG0 (s1.e2 / elephant
                                       :quant (s1.s / some)
                                       :ARG1-of (s1.i / include-91
                                                      :ARG2 s1.e))))
   :snt2 (s2.a / and
               :op1 (s2.s / size
                          :mod (s2.v / various)
                          :poss (s2.e / elephant
                                      :same-as s1.g))
               :op2 (s2.a2 / and
                           :op1 (s2.h / have-degree-91
                                      :ARG1 (s2.s3 / some)
                                      :ARG2 (s2.l / large)
                                      :ARG3 (s2.m / more))
                           :op2 (s2.h2 / have-degree-91
                                       :ARG1 (s2.o / other)
                                       :ARG2 (s2.s2 / small)
                                       :ARG3 (s2.m2 / more))))
   :snt3 (s3.s2 / stand-01
                :ARG0-of (s3.c2 / create-01
                                :ARG1 (s3.s / sense-01
                                            :ARG1 (s3.a2 / and
                                                         :op1 (s3.u / unity)
                                                         :op2 (s3.t2 / together))))
                :ARG1 (s3.t / they
                            :mod (s3.a / all)
                            :same-as s1.g)
                :ARG2 (s3.c / close-10
                            :ARG1 s3.t
                            :ARG2 (s3.o / other
                                        :mod (s3.e / each)))))