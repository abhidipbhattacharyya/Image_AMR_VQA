# ::id train2014~COCO_train2014_000000525904
# ::doc_file train2014~COCO_train2014_000000525904
# ::tok A tray of pizza slices is displayed on a table . <next_sent> The pizza has a variety of toppings , including cheese , olives , and anchovies . <next_sent> The pizza slices are arranged in a neat row , and there are several of them on the tray . <next_sent> The tray is placed on a table , and a bowl is also visible on the table , possibly containing a dipping sauce .
(d / document
   :snt1 (s1.d / display-01
               :ARG1 (s1.t2 / tray
                            :consist-of (s1.s / slice
                                              :mod (s1.p / pizza)))
               :ARG2 (s1.t / table))
   :snt2 (s2.h / have-03
               :ARG0 (s2.p / pizza
                           :same-as s1.s)
               :ARG1 (s2.i2 / ingredient
                            :ARG2-of (s2.t / top-01)
                            :ARG2-of (s2.i / include-01
                                           :ARG1 (s2.a / and
                                                       :op1 (s2.c / cheese)
                                                       :op2 (s2.l / Olive)
                                                       :op3 (s2.s / sandwich)))
                            :mod (s2.v / variety)))
   :snt3 (s3.a / and
               :op1 (s3.a2 / arrange-01
                           :ARG1 (s3.s2 / slice
                                        :mod (s3.p / pizza)
                                        :same-as s1.s)
                           :ARG2 (s3.r / row
                                       :mod (s3.n / neat)))
               :op2 (s3.b / be-located-at-91
                          :ARG1 (s3.s3 / slice
                                       :quant (s3.s / several)
                                       :ARG1-of (s3.i / include-91
                                                      :ARG2 s3.s2))
                          :ARG2 (s3.t / tray
                                      :same-as s1.t2)))
   :snt4 (s4.a2 / and
                :op1 (s4.p / place-01
                           :ARG1 (s4.t2 / tray
                                        :same-as s1.t2)
                           :ARG2 (s4.t / table
                                       :same-as s1.t))
                :op2 (s4.s2 / see-01
                            :ARG1 (s4.b / bowl
                                        :ARG0-of (s4.c / contain-01
                                                       :ARG1 (s4.s / sauce
                                                                   :ARG1-of (s4.d / dip-02))
                                                       :ARG1-of (s4.p2 / possible-01)))
                            :mod (s4.a / also))))