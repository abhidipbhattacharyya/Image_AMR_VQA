# ::id train2014~COCO_train2014_000000129031
# ::doc_file train2014~COCO_train2014_000000129031
# ::tok A large pizza with cheese and sauce is on a silver platter . <next_sent> The pizza is placed on a table with a fork and a knife beside it . <next_sent> There are also two cups on the table , one near the top right corner and the other near the top left corner .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.p / pizza
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.a / and
                                                      :op1 (s1.c / cheese)
                                                      :op2 (s1.s / sauce)))
                           :mod (s1.l / large))
               :ARG2 (s1.p2 / platter
                            :consist-of (s1.s2 / silver)))
   :snt2 (s2.p2 / place-01
                :ARG1 (s2.p / pizza
                            :same-as s1.p)
                :ARG2 (s2.t / table
                            :ARG2-of (s2.b / be-located-at-91
                                           :ARG1 (s2.a / and
                                                       :op1 (s2.f / fork)
                                                       :op2 (s2.k / knife))
                                           :ARG2 (s2.b2 / beside
                                                        :op1 s2.p))))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.c3 / cup
                            :ARG2-of (s3.i / include-91
                                           :ARG1 (s3.a2 / and
                                                        :op1 (s3.n / near-02
                                                                   :ARG1 (s3.c4 / cup
                                                                                :mod (s3.o / other
                                                                                           :op2 (s3.n2 / near-02
                                                                                                       :ARG1 s3.c4
                                                                                                       :ARG2 (s3.c2 / corner
                                                                                                                    :ARG1-of (s3.l / left-20)
                                                                                                                    :mod (s3.t3 / top)))))
                                                                   :ARG2 (s3.c / corner
                                                                               :ARG1-of (s3.r / right-04)
                                                                               :mod (s3.t2 / top)))))
                            :mod (s3.a / also)
                            :quant "1"
                            :quant "2")
               :ARG2 (s3.t / table
                           :same-as s2.t)))