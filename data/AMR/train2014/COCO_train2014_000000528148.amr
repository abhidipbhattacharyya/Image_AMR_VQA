# ::id train2014~COCO_train2014_000000528148
# ::doc_file train2014~COCO_train2014_000000528148
# ::tok A stop sign is attached to a wall with a sticker on it that says " Stop Bored " . <next_sent> Above the stop sign is a sign that says " Prince Property No Trespassing " . <next_sent> There are also two potted plants in the room , one on the right side and one on the left side .
(d / document
   :snt1 (s1.a / attach-01
               :ARG1 (s1.s2 / signal-07
                            :ARG1 (s1.s4 / stop-01))
               :ARG2 (s1.w / wall
                           :location-of (s1.t / thing
                                              :ARG0-of (s1.s / say-01
                                                             :ARG1 (s1.s5 / stop-01
                                                                          :ARG0 (s1.y / you)
                                                                          :ARG1 (s1.b / bore-02)
                                                                          :ARG1-of s1.b))
                                              :ARG1-of (s1.s3 / stick-01))))
   :snt2 (s2.s2 / sign
                :ARG0-of (s2.s / say-01
                               :ARG1 (s2.t / trespass-01
                                           :ARG1 (s2.p2 / property
                                                        :mod (s2.p / prince))
                                           :polarity "-"))
                :location (s2.a / above
                                :op1 (s2.s3 / signal-07
                                            :ARG1 (s2.s4 / stop-01)
                                            :same-as s1.s2)))
   :snt3 (s3.g / grow-03
               :location (s3.r2 / room)
               :mod (s3.a / also)
               :rel (s3.p / plant
                          :ARG1 (s3.a2 / and
                                       :op1 (s3.p2 / plant
                                                   :location (s3.s / side
                                                                   :ARG1-of (s3.r / right-04))
                                                   :quant "1")
                                       :op2 (s3.p3 / plant
                                                   :location (s3.s2 / side
                                                                    :ARG1-of (s3.l / left-20))
                                                   :quant "1")))
               :ARG1 s3.p
               :rel "2"))