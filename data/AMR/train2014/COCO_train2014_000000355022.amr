# ::id train2014~COCO_train2014_000000355022
# ::doc_file train2014~COCO_train2014_000000355022
# ::tok A display case filled with a variety of sandwiches and pizzas . <next_sent> There are several different types of sandwiches and pizzas , each with different toppings . <next_sent> The sandwiches are arranged in rows , with some placed on plates and others on trays . <next_sent> The pizzas are also displayed in rows , with some on plates and others on trays . <next_sent> The display case is filled with a total of 13 different types of sandwiches and 12 different types of pizzas .
(d / document
   :snt1 (s1.c / case
               :ARG1-of (s1.f / fill-01
                              :ARG2 (s1.a / and
                                          :mod (s1.v / variety)
                                          :op1 (s1.s / sandwich)
                                          :op2 (s1.p / pizzeria)))
               :ARG2-of (s1.d / display-01))
   :snt2 (s2.a / and
               :ARG0-of (s2.h / have-03
                              :ARG1 (s2.p2 / portion
                                           :ARG1-of (s2.d2 / differ-02)
                                           :ARG2-of (s2.t / top-01)))
               :mod (s2.t2 / type
                           :quant (s2.s2 / several)
                           :ARG1-of (s2.d / differ-02))
               :mod (s2.e / each)
               :op1 (s2.s / sandwich)
               :op2 (s2.p / pizzeria))
   :snt3 (s3.a2 / arrange-01
                :ARG1 (s3.s / sandwich
                            :quant (s3.s3 / some)
                            :same-as s2.s)
                :ARG2 (s3.r2 / row)
                :example (s3.a / and
                               :op1 (s3.p / place-01
                                          :ARG1 s3.s
                                          :ARG2 (s3.p3 / plate))
                               :op2 (s3.p2 / place-01
                                           :ARG1 (s3.s2 / sandwich
                                                        :mod (s3.o / other))
                                           :ARG2 (s3.r / Trayvon))))
   :snt4 (s4.d / display-01
               :ARG1 (s4.p / pizzeria
                           :ARG2-of (s4.i / include-91
                                          :ARG1 (s4.a2 / and
                                                       :op1 (s4.b / be-located-at-91
                                                                  :ARG1 s4.p
                                                                  :ARG2 (s4.p3 / plate))
                                                       :op2 (s4.p2 / pizzeria
                                                                   :quant (s4.s / some)
                                                                   :ARG2 (s4.r / Trayvon)
                                                                   :mod (s4.o / other)))))
               :ARG2 (s4.r2 / row)
               :mod (s4.a / also))
   :snt5 (s5.f / fill-01
               :ARG1 (s5.c / case
                           :ARG2-of (s5.d3 / display-01)
                           :same-as s1.c)
               :ARG2 (s5.a / and
                           :op1 (s5.s / sandwich
                                      :mod (s5.t2 / type
                                                  :ARG1-of (s5.d / differ-02)
                                                  :ARG2-of (s5.t / total-01)
                                                  :quant "13"))
                           :op2 (s5.p / pizzeria
                                      :mod (s5.t3 / type
                                                  :ARG1-of (s5.d2 / differ-02)
                                                  :quant "12")))))