# ::id train2014~COCO_train2014_000000123980
# ::doc_file train2014~COCO_train2014_000000123980
# ::tok A group of people are in the water , with some of them standing on a yellow raft . <next_sent> There are at least six people in the water , and they are all wearing life jackets . <next_sent> The group consists of both adults and children , and they are all enjoying their time together .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.b / be-located-at-91
                          :ARG1 (s1.g / group
                                      :consist-of (s1.p / person))
                          :ARG2 (s1.w / water))
               :op2 (s1.s2 / stand-01
                           :ARG1 (s1.p2 / person
                                        :quant (s1.s / some)
                                        :ARG1-of (s1.i / include-91
                                                       :ARG2 s1.p))
                           :ARG2 (s1.r / raft
                                       :ARG1-of (s1.y / yellow-02))))
   :snt2 (s2.a2 / and
                :op1 (s2.b / be-located-at-91
                           :ARG1 (s2.p / person
                                       :quant (s2.a3 / at-least
                                                     :op1 "6"
                                                     :same-as s1.g)
                                       :mod (s2.a / all))
                           :ARG2 (s2.w / water
                                       :same-as s1.w))
                :op2 (s2.w2 / wear-01
                            :ARG0 s2.p
                            :ARG1 (s2.j / jacket
                                        :mod (s2.l / life))))
   :snt3 (s3.a4 / and
                :op1 (s3.c2 / consist-01
                            :ARG1 (s3.g / group
                                        :same-as s1.g)
                            :ARG2 (s3.a3 / and
                                         :op1 (s3.a / adult)
                                         :op2 (s3.c / child)))
                :op2 (s3.e / enjoy-01
                           :ARG0 (s3.t / they
                                       :ARG1-of (s3.i / include-91
                                                      :ARG2 s3.g
                                                      :ARG3 (s3.a2 / all))
                                       :same-as s1.g)
                           :ARG1 (s3.t2 / time
                                        :mod (s3.t3 / together)
                                        :poss s3.t))))