# ::id train2014~COCO_train2014_000000227325
# ::doc_file train2014~COCO_train2014_000000227325
# ::tok A man is eating a slice of pizza at a table . <next_sent> The pizza is on a tray and the man is using a knife and fork to eat it . <next_sent> There are two cups on the table , one near the man and the other further away . <next_sent> A bottle is also visible on the table .
(d / document
   :snt1 (s1.e / eat-01
               :ARG0 (s1.m / man)
               :ARG1 (s1.s / slice
                           :quant-of (s1.p / pizza))
               :location (s1.t / table))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.p / pizza
                                      :same-as s1.s)
                          :ARG2 (s2.t / tray))
               :op2 (s2.u / use-01
                          :ARG0 (s2.m / man
                                      :same-as s1.m)
                          :ARG1 (s2.a2 / and
                                       :op1 (s2.k / knife)
                                       :op2 (s2.f / fork))
                          :ARG2 (s2.e / eat-01
                                      :ARG0 s2.m
                                      :ARG1 s2.p)))
   :snt3 (s3.a / and
               :op1 (s3.c / cup
                          :ARG1-of (s3.n / near-02
                                         :ARG2 (s3.m / man
                                                     :same-as s1.m))
                          :location (s3.t / table
                                          :same-as s1.t)
                          :quant "1"
                          :quant "2")
               :op2 (s3.c2 / cup
                           :ARG1-of (s3.n2 / near-02
                                           :ARG2 (s3.f / far
                                                       :mod (s3.m2 / more)))))
   :snt4 (s4.p / possible-01
               :ARG1 (s4.s / see-01
                           :ARG1 (s4.b / bottle)
                           :location (s4.t / table
                                           :same-as s1.t))
               :mod (s4.a / also)))