# ::id train2014~COCO_train2014_000000524428
# ::doc_file train2014~COCO_train2014_000000524428
# ::tok A man is sitting at a table with a large pizza in front of him . <next_sent> The pizza has two different toppings , one on the left and one on the right . <next_sent> There are also two cups on the table , one near the pizza and the other further away .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.m / man
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.p / pizza
                                                      :location (s1.i / in-front-of
                                                                      :op1 s1.m)
                                                      :mod (s1.l / large))))
               :ARG2 (s1.t / table))
   :snt2 (s2.h / have-03
               :ARG0 (s2.p / pizza
                           :same-as s1.l)
               :ARG1 (s2.l2 / letter
                            :ARG1-of (s2.d / differ-02)
                            :ARG2-of (s2.t3 / top-01
                                            :ARG1 (s2.a / and
                                                        :op1 (s2.l3 / location
                                                                    :ARG1-of (s2.l / left-19))
                                                        :op2 (s2.t / thing
                                                                   :location (s2.r / right-08))
                                                        :op3 (s2.t2 / thing
                                                                    :location s2.r))
                                            :ARG1 s2.t)
                            :quant "2"))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.c / cup
                           :ARG1-of (s3.n / near-02
                                          :ARG2 (s3.p / pizza
                                                      :same-as s1.l))
                           :mod (s3.a / also)
                           :quant "1"
                           :quant "2")
               :ARG2 (s3.t / table
                           :same-as s1.t)
               :rel (s3.c2 / cup
                           :ARG1-of (s3.n2 / near-02
                                           :ARG2 (s3.f / further
                                                       :op1 (s3.a2 / away))))))