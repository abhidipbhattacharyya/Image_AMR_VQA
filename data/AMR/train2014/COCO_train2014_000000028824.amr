# ::id train2014~COCO_train2014_000000028824
# ::doc_file train2014~COCO_train2014_000000028824
# ::tok A group of people are sitting in a room , watching a TV and using laptops . <next_sent> There are two laptops on the table , one in front of a person and the other in front of another person . <next_sent> A TV is on the left side of the room , and a person is sitting in front of it . <next_sent> A person is also sitting in front of the laptop on the table . <next_sent> The room has a dining table in the middle , and a chair is placed near the table . <next_sent> There are also two bottles in the room , one on the table and the other on the floor .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.s / sit-01
                          :ARG1 (s1.g / group
                                      :consist-of (s1.p / person))
                          :ARG2 (s1.r / room))
               :op2 (s1.w / watch-01
                          :ARG0 s1.g
                          :ARG1 (s1.t / television))
               :op3 (s1.u / use-01
                          :ARG0 s1.g
                          :ARG1 (s1.c / computer)))
   :snt2 (s2.a / and
               :location (s2.t / table)
               :op2 (s2.c / computer
                          :location (s2.i2 / in-front-of
                                           :op1 (s2.p2 / person
                                                       :mod (s2.a2 / another)))
                          :mod (s2.o / other))
               :rel (s2.l / laptop
                          :location (s2.i / in-front-of
                                          :op1 (s2.p / person))
                          :quant "1"
                          :quant "2"))
   :snt3 (s3.a / and
               :op1 (s3.b / be-located-at-91
                          :ARG1 (s3.t / television
                                      :same-as s1.t)
                          :ARG2 (s3.s / side
                                      :ARG1-of (s3.l / left-20)
                                      :part-of (s3.r / room
                                                     :same-as s1.r)))
               :op2 (s3.s2 / sit-01
                           :ARG1 (s3.p / person)
                           :ARG2 (s3.i / in-front-of
                                       :op1 s3.t)))
   :snt4 (s4.s / sit-01
               :ARG1 (s4.p / person)
               :ARG2 (s4.i / in-front-of
                           :op1 (s4.l / laptop
                                      :location (s4.t / table
                                                      :same-as s2.t)))
               :mod (s4.a / also))
   :snt5 (s5.a / and
               :op1 (s5.h / have-03
                          :ARG0 (s5.r / room
                                      :same-as s1.r)
                          :ARG1 (s5.t / table
                                      :location (s5.m / middle)
                                      :mod (s5.d / dine-01)))
               :op2 (s5.p / place-01
                          :ARG1 (s5.c / chair)
                          :ARG2 (s5.n / near-02
                                      :ARG1 s5.c
                                      :ARG2 s5.t)))
   :snt6 (s6.b / be-located-at-91
               :ARG1 (s6.b4 / bottle
                            :domain (s6.a2 / and
                                           :op1 (s6.b2 / be-located-at-91
                                                       :ARG1 (s6.b5 / bottle
                                                                    :quant "1")
                                                       :ARG2 (s6.t / table
                                                                   :same-as s2.t))
                                           :op2 (s6.o / other
                                                      :ARG1-of (s6.b3 / be-located-at-91
                                                                      :ARG2 (s6.f / floor))))
                            :mod (s6.a / also)
                            :quant "2")
               :ARG2 (s6.r / room
                           :same-as s1.r)))