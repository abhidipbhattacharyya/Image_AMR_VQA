# ::id train2014~COCO_train2014_000000366863
# ::doc_file train2014~COCO_train2014_000000366863
# ::tok A woman is sitting at a table with a plate of food in front of her . <next_sent> The plate is filled with a variety of food items , including a pile of onion rings . <next_sent> The onion rings are arranged in a stack , with some on top of each other . <next_sent> The woman is also holding a glass of beer . <next_sent> The table is set on a patio , with a brick wall in the background .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.w / woman
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.p / plate
                                                      :consist-of (s1.f / food))
                                          :location (s1.i / in-front-of
                                                          :op1 s1.w)))
               :ARG2 (s1.t / table))
   :snt2 (s2.f / fill-01
               :ARG1 (s2.p2 / plate
                            :same-as s1.p)
               :ARG2 (s2.i2 / item
                            :ARG2-of (s2.i / include-01
                                           :ARG1 (s2.p / pile-01
                                                       :ARG1 (s2.r / ring
                                                                   :consist-of (s2.o / onion))))
                            :mod (s2.f2 / food)
                            :mod (s2.v / variety)))
   :snt3 (s3.a / arrange-01
               :ARG1 (s3.r / ring
                           :ARG2-of (s3.i / include-91
                                          :ARG1 (s3.r2 / ring
                                                       :ARG2-of (s3.t / top-01
                                                                      :ARG1 (s3.o2 / other
                                                                                   :mod (s3.e / each)))
                                                       :mod (s3.s / some)))
                           :consist-of (s3.o / onion
                                             :same-as s2.p))
               :ARG2 (s3.s2 / stack))
   :snt4 (s4.h / hold-01
               :ARG0 (s4.w / woman
                           :same-as s1.w)
               :ARG1 (s4.b / beer
                           :quant (s4.v / volume-quantity
                                        :unit (s4.g / glass)
                                        :quant "1"))
               :mod (s4.a / also))
   :snt5 (s5.s / set-01
               :ARG1 (s5.t / table
                           :ARG0-of (s5.h / have-03
                                          :ARG1 (s5.w / wall
                                                      :consist-of (s5.b2 / brick)
                                                      :location (s5.b / background)))
                           :same-as s1.t)
               :ARG2 (s5.p / patio)))