# ::id train2014~COCO_train2014_000000001319
# ::doc_file train2014~COCO_train2014_000000001319
# ::tok Two cats are sitting on a table in front of a television . <next_sent> One cat is on the left side and the other is on the right side . <next_sent> The television is on the right side of the table . <next_sent> There are two cups on the table , one near the left cat and the other near the right cat .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.c / cat
                           :quant "2")
               :ARG2 (s1.t / table
                           :location (s1.i / in-front-of
                                           :op1 (s1.t2 / television))))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.c / cat
                                      :mod (s2.o / one))
                          :ARG2 (s2.s / side
                                      :ARG1-of (s2.l / left-20)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.c2 / cat
                                        :mod (s2.o2 / other))
                           :ARG2 (s2.s2 / side
                                        :ARG1-of (s2.r / right-04))))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.t2 / television
                            :same-as s1.t2)
               :ARG2 (s3.s / side
                           :ARG1-of (s3.r / right-04
                                          :ARG2 (s3.t / table
                                                      :same-as s1.t))))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.c3 / cup
                            :ARG1-of (s4.n / near-02
                                           :ARG2 (s4.c / cat
                                                       :ARG1-of (s4.l / left-19)
                                                       :same-as s2.c))
                            :quant "1"
                            :quant "2")
               :ARG2 (s4.t / table
                           :same-as s1.t)
               :rel (s4.a / and
                          :op1 s4.c3
                          :op2 (s4.c4 / cup
                                      :ARG1-of (s4.n2 / near-02
                                                      :ARG2 (s4.c2 / cat
                                                                   :ARG1-of (s4.r / right-08)
                                                                   :same-as s2.o2))))))