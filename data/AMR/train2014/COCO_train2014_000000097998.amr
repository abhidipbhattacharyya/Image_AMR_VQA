# ::id train2014~COCO_train2014_000000097998
# ::doc_file train2014~COCO_train2014_000000097998
# ::tok A train is passing by a fence with a car parked next to it . <next_sent> The train is yellow and black , and it is moving down the tracks . <next_sent> The car is black and parked next to the fence . <next_sent> There are also two potted plants in the scene , one near the fence and the other near the car .
(d / document
   :snt1 (s1.p2 / pass-by-17
                :ARG0 (s1.t / train)
                :ARG1 (s1.f / fence
                            :prep-with (s1.c / car
                                             :ARG1-of (s1.p / park-01
                                                            :ARG2 (s1.n / next-to
                                                                        :op1 s1.f)))))
   :snt2 (s2.a / and
               :op1 (s2.y / yellow-02
                          :ARG1 (s2.t2 / train
                                       :same-as s1.t))
               :op2 (s2.b / black-04
                          :ARG1 s2.t2)
               :op3 (s2.m / move-01
                          :ARG1 s2.t2
                          :ARG2 (s2.t / track)
                          :direction (s2.d / down)))
   :snt3 (s3.a / and
               :op1 (s3.b / black-04
                          :ARG1 (s3.c / car
                                      :same-as s1.c))
               :op2 (s3.p / park-01
                          :ARG1 s3.c
                          :ARG2 (s3.n / next-to
                                      :op1 (s3.f / fence
                                                 :same-as s1.f))))
   :snt4 (s4.g / grow-03
               :location (s4.s / scene)
               :mod (s4.a / also)
               :rel (s4.p2 / plant
                           :ARG1 (s4.a2 / and
                                        :op2 (s4.p3 / plant
                                                    :ARG1-of (s4.n2 / near-02
                                                                    :ARG2 (s4.c / car
                                                                                :same-as s1.c))
                                                    :mod (s4.p / plant
                                                               :quant "1")))
                           :op1-of s4.a2
                           :ARG1-of (s4.n / near-02
                                          :ARG2 (s4.f / fence
                                                      :same-as s1.f))
                           :mod s4.p
                           :mod s4.a)
               :quant-of s4.p2
               :rel "2"))