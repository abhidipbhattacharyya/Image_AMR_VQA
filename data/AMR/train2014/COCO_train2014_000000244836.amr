# ::id train2014~COCO_train2014_000000244836
# ::doc_file train2014~COCO_train2014_000000244836
# ::tok Two white bowls filled with vegetables are placed on a counter . <next_sent> The vegetables include broccoli , potatoes , and beans . <next_sent> The bowls are positioned next to each other , with one bowl being larger than the other . <next_sent> The dishes are placed on a tiled counter , and a spoon can be seen nearby .
(d / document
   :snt1 (s1.p / place-01
               :ARG1 (s1.p2 / pound
                            :ARG1-of (s1.w / white-03)
                            :ARG1-of (s1.f / fill-01
                                           :ARG2 (s1.v / vegetable))
                            :quant "2")
               :ARG2 (s1.c / counter))
   :snt2 (s2.i / include-01
               :ARG1 (s2.a / and
                           :op1 (s2.b2 / broccoli)
                           :op2 (s2.p / potato)
                           :op3 (s2.b / bean))
               :ARG2 (s2.v / vegetable
                           :same-as s1.v))
   :snt3 (s3.p / position-01
               :ARG1 (s3.b3 / bowl-01
                            :ARG2-of (s3.i / include-91
                                           :ARG1 (s3.b / bowl
                                                       :ARG1-of (s3.h / have-degree-91
                                                                      :ARG2 (s3.l / large)
                                                                      :ARG3 (s3.m / more)
                                                                      :ARG4 (s3.b2 / bowl
                                                                                   :mod (s3.o2 / other)))
                                                       :quant "1"))
                            :same-as s1.p2)
               :ARG2 (s3.n / next-to
                           :op1 (s3.o / other
                                      :mod (s3.e / each))))
   :snt4 (s4.a / and
               :op1 (s4.p / place-01
                          :ARG1 (s4.d / dish
                                      :same-as s1.p2)
                          :ARG2 (s4.c / counter
                                      :ARG1-of (s4.t / tile-01)
                                      :same-as s1.c))
               :op2 (s4.p2 / possible-01
                           :ARG1 (s4.s / see-01
                                       :ARG1 (s4.s2 / spoon)
                                       :location (s4.n / nearby)))))