# ::id train2014~COCO_train2014_000000047928
# ::doc_file train2014~COCO_train2014_000000047928
# ::tok Two sandwiches are on a plate , one with a mint leaf on top . <next_sent> There are also two bowls of food , one with fries and the other with a different type of food . <next_sent> A fork and a knife are placed on the table .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.b / be-located-at-91
                          :ARG1 (s1.s / sandwich
                                      :ARG2-of (s1.i / include-91
                                                     :ARG1 (s1.s2 / sandwich
                                                                  :ARG0-of (s1.h / have-03
                                                                                 :ARG1 (s1.l / leaf
                                                                                             :location (s1.t / top)
                                                                                             :mod (s1.m / mint)))
                                                                  :quant "1"))
                                      :quant "2")
                          :ARG2 (s1.p / plate)))
   :snt2 (s2.a2 / and
                :op1 (s2.e / eat-01
                           :ARG1 (s2.f2 / food-dish))
                :rel (s2.p / pound
                           :mod (s2.a / also)
                           :quant "2")
                :rel (s2.h / have-03
                           :ARG1 (s2.f3 / fry-01
                                        :op2 (s2.a3 / and
                                                    :op1 (s2.o / one)
                                                    :op2 (s2.o2 / other
                                                                :ARG0-of (s2.h2 / have-03
                                                                                :ARG1 (s2.f / food
                                                                                            :mod (s2.t / type
                                                                                                       :ARG1-of (s2.d / differ-02)))))))
                           :ARG0 s2.o))
   :snt3 (s3.p / place-01
               :ARG1 (s3.a / and
                           :op1 (s3.f / fork)
                           :op2 (s3.k / knife))
               :ARG2 (s3.t / table)))