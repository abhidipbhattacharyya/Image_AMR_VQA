# ::id train2014~COCO_train2014_000000571541
# ::doc_file train2014~COCO_train2014_000000571541
# ::tok Three double decker buses are parked in a field . <next_sent> The first bus is red and white , the second bus is yellow and blue , and the third bus is white and blue . <next_sent> The buses are parked in a row , with the red and white bus being the first , followed by the yellow and blue bus , and then the white and blue bus .
(d / document
   :snt1 (s1.p / park-01
               :ARG1 (s1.b / bus
                           :mod (s1.d / double-decker)
                           :quant "3")
               :ARG2 (s1.f / field))
   :snt2 (s2.a3 / and
                :op1 (s2.a / and
                           :domain (s2.b3 / bus
                                          :li "1")
                           :op1 s2.b3
                           :op2 (s2.w / white-03))
                :op2 (s2.a2 / and
                            :domain (s2.b4 / bus
                                           :li "2")
                            :op1 (s2.y / yellow-02))
                :op2 (s2.b2 / blue)
                :op3 (s2.b5 / bus
                            :domain (s2.a4 / and
                                           :op1 (s2.w2 / white-03)
                                           :op2 (s2.b / blue))
                            :ord (s2.o / ordinal-entity
                                       :value "2"))
                :rel (s2.r / red-02))
   :snt3 (s3.p / park-01
               :ARG1 (s3.b2 / bus
                            :consist-of (s3.a / and
                                              :ARG2-of (s3.f / follow-01
                                                             :ARG1 (s3.b5 / bus
                                                                          :mod (s3.y / yellow)
                                                                          :same-as s2.b4))
                                              :ARG2-of (s3.f2 / follow-01
                                                              :ARG1 (s3.b6 / bus
                                                                           :ARG1-of (s3.w2 / white-03))
                                                              :time (s3.t / then))
                                              :op1 (s3.b3 / bus
                                                          :ARG1-of (s3.r / red-02)
                                                          :ord (s3.o / ordinal-entity
                                                                     :value "1"))
                                              :op1 (s3.a2 / and
                                                          :op1 s3.b5
                                                          :op2 s3.b6
                                                          :op3 (s3.b7 / bus
                                                                      :mod (s3.b / blue
                                                                                 :same-as s2.o)))
                                              :op2 (s3.b4 / bus
                                                          :ARG1-of (s3.w / white-03)
                                                          :same-as s2.b3))
                            :same-as s1.b)
               :ARG2 (s3.r2 / row)))