# ::id train2014~COCO_train2014_000000339987
# ::doc_file train2014~COCO_train2014_000000339987
# ::tok A cat is curled up in a wicker chair , with its paws in the air . <next_sent> The chair has a black pillow and a black and white blanket on it . <next_sent> The cat is surrounded by a few books , with one on the left side of the chair and two on the right side .
(d / document
   :snt1 (s1.c4 / curl-up-02
                :ARG1 (s1.c / cat
                            :part (s1.c3 / claw))
                :location (s1.c2 / chair
                                 :mod (s1.w / wicker))
                :manner (s1.b / be-located-at-91
                              :ARG1 s1.c3
                              :ARG2 (s1.a / air)))
   :snt2 (s2.h / have-03
               :ARG0 (s2.c / chair
                           :same-as s1.c2)
               :ARG1 (s2.a / and
                           :op1 (s2.p / pillow
                                      :ARG1-of (s2.b / black-04))
                           :op2 (s2.b3 / blanket
                                       :consist-of (s2.a2 / and
                                                          :op1 (s2.b2 / black-04)
                                                          :op2 (s2.w / white-03)))))
   :snt3 (s3.s3 / surround-01
                :ARG1 (s3.b / book
                            :quant (s3.f / few)
                            :example (s3.a / and
                                           :op1 (s3.b2 / book
                                                       :location (s3.s / side
                                                                       :ARG1-of (s3.l / left-20)
                                                                       :part-of (s3.c2 / chair
                                                                                       :same-as s1.c2))
                                                       :quant "1")
                                           :op2 (s3.b3 / book
                                                       :location (s3.s2 / side
                                                                        :ARG1-of (s3.r / right-04))
                                                       :quant "2")))
                :ARG2 (s3.c / cat
                            :same-as s1.c)))