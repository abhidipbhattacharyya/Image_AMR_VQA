# ::id train2014~COCO_train2014_000000138921
# ::doc_file train2014~COCO_train2014_000000138921
# ::tok A blue and red airplane is flying over a city with a large building in the background . <next_sent> The airplane is flying at a low altitude and appears to be landing . <next_sent> The city is bustling with activity , as there are several cars and trucks on the road . <next_sent> The cars are in various positions , some are driving in the same direction as the airplane , while others are driving in the opposite direction . <next_sent> The trucks are also in various positions , some are driving in the same direction as the airplane , while others are driving in the opposite direction .
(d / document
   :snt1 (s1.f / fly-01
               :ARG2 (s1.a3 / and
                            :op1 (s1.a / airplane
                                       :mod (s1.b2 / blue))
                            :op2 (s1.a2 / airplane
                                        :ARG1-of (s1.r / red-02)))
               :path (s1.o / over
                           :op1 (s1.c / city
                                      :ARG0-of (s1.h / have-03
                                                     :ARG1 (s1.b3 / building
                                                                  :location (s1.b / background)
                                                                  :mod (s1.l / large))))))
   :snt2 (s2.a3 / and
                :op1 (s2.f / fly-01
                           :ARG2 (s2.a / airplane
                                       :same-as s1.a3)
                           :path (s2.a2 / altitude
                                        :ARG1-of (s2.l2 / low-04)))
                :op2 (s2.a4 / appear-02
                            :ARG1 (s2.l / land-01
                                        :ARG1 s2.a)))
   :snt3 (s3.b2 / bustle-01
                :ARG0 (s3.a / activity-06)
                :ARG1 (s3.c3 / city
                             :same-as s1.c)
                :ARG1-of (s3.c2 / cause-01
                                :ARG0 (s3.b / be-located-at-91
                                            :ARG1 (s3.a2 / and
                                                         :quant (s3.s / several)
                                                         :op1 (s3.c / car)
                                                         :op2 (s3.t / truck))
                                            :ARG2 (s3.r / road))))
   :snt4 (s4.a2 / and
                :op1 (s4.p / position-01
                           :ARG1 (s4.c / car)
                           :ARG1-of (s4.v / vary-01))
                :op2 (s4.d3 / drive-01
                            :ARG0 (s4.c2 / car
                                         :quant (s4.s2 / some)
                                         :mod (s4.o2 / other))
                            :direction (s4.d / direction
                                             :ARG1-of (s4.s / same-01
                                                            :ARG2 (s4.a / airplane
                                                                        :same-as s1.a3))))
                :op3 (s4.d4 / drive-01
                            :ARG0 s4.c2
                            :direction (s4.d2 / direction
                                              :ARG1-of (s4.o / opposite-01))))
   :snt5 (s5.a3 / and
                :op1 (s5.p / position-01
                           :ARG1 (s5.t / truck
                                       :same-as s3.t)
                           :ARG1-of (s5.v / vary-01)
                           :mod (s5.a2 / also))
                :op2 (s5.d3 / drive-01
                            :ARG0 s5.t
                            :direction (s5.d / direction
                                             :ARG1-of (s5.s / same-01
                                                            :ARG2 (s5.a / airplane
                                                                        :same-as s1.a3))))
                :op3 (s5.d4 / drive-01
                            :ARG0 (s5.t2 / truck
                                         :quant (s5.s2 / some)
                                         :mod (s5.o2 / other))
                            :direction (s5.d2 / direction
                                              :ARG1-of (s5.o / opposite-01)))))