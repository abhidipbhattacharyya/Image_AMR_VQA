# ::id train2014~COCO_train2014_000000256921
# ::doc_file train2014~COCO_train2014_000000256921
# ::tok A stainless steel oven is built into a wooden cabinet . <next_sent> The oven has two doors , one on top and one on the bottom . <next_sent> The top door is open , revealing the interior of the oven . <next_sent> The bottom door is closed . <next_sent> The oven is located next to a counter , and there is a microwave above the oven .
(d / document
   :snt1 (s1.b / build-01
               :ARG1 (s1.o / oven
                           :mod (s1.s2 / steel
                                       :mod (s1.s / stainless)))
               :location (s1.c / cabinet
                               :consist-of (s1.w / wood)))
   :snt2 (s2.h / have-03
               :ARG0 (s2.o / oven
                           :same-as s1.o)
               :ARG1 (s2.d / door
                           :domain (s2.a / and
                                         :op1 (s2.d2 / door
                                                     :location (s2.t / top)
                                                     :quant "1")
                                         :op2 (s2.d3 / door
                                                     :location (s2.b / bottom)
                                                     :quant "1"))
                           :quant "2"))
   :snt3 (s3.o / open-01
               :ARG0-of (s3.r / reveal-01
                              :ARG1 (s3.i / interior
                                          :part-of (s3.o2 / oven
                                                          :same-as s1.o)))
               :ARG1 (s3.d / door
                           :mod (s3.t / top)
                           :same-as s2.t))
   :snt4 (s4.c / close-01
               :ARG1 (s4.d / door
                           :location (s4.b / bottom)
                           :same-as s2.b))
   :snt5 (s5.a2 / and
                :op1 (s5.b / be-located-at-91
                           :ARG1 (s5.o / oven
                                       :same-as s1.o)
                           :ARG2 (s5.n / next-to
                                       :op1 (s5.c / counter)))
                :op2 (s5.m / microwave
                           :location (s5.a / above
                                           :op1 s5.o))))