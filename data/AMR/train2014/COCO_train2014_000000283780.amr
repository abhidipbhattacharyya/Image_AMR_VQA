# ::id train2014~COCO_train2014_000000283780
# ::doc_file train2014~COCO_train2014_000000283780
# ::tok A table with a variety of pies and vegetables on it . <next_sent> There are two pies with one being a quiche and the other a pizza . <next_sent> The quiche is on the left side of the table and the pizza is on the right side . <next_sent> There are also two pies with one being a quiche and the other a pizza . <next_sent> The quiche is on the left side of the table and the pizza is on the right side . <next_sent> There are also two pies with one being a quiche and the other a pizza . <next_sent> The quiche is on the left side of the table and the pizza is on the right side .
(d / document
   :snt1 (s1.t / table
               :location-of (s1.a / and
                                  :mod (s1.v / variety)
                                  :op1 (s1.a2 / apple)
                                  :op2 (s1.v2 / vegetable)))
   :snt2 (s2.a / and
               :op1 (s2.s / slice
                          :ARG2-of (s2.i / include-91
                                         :ARG1 (s2.f2 / food-dish
                                                      :mod (s2.q / quiche)))
                          :ARG2-of (s2.i2 / include-91
                                          :ARG1 (s2.f / food
                                                      :mod (s2.o / other)
                                                      :mod (s2.p / pizza)))
                          :quant "2")
               :op2 s2.i2)
   :snt3 (s3.a / and
               :op1 (s3.b / be-located-at-91
                          :ARG1 (s3.q / quiche
                                      :same-as s2.q)
                          :ARG2 (s3.s / side
                                      :ARG1-of (s3.l / left-20)
                                      :part-of (s3.t / table
                                                     :same-as s1.t)))
               :op2 (s3.b2 / be-located-at-91
                           :ARG1 (s3.p / pizza
                                       :same-as s2.p)
                           :ARG2 (s3.s2 / side
                                        :ARG1-of (s3.r / right-04))))
   :snt4 (s4.c / cause-01
               :ARG0 (s4.s / slice
                           :mod (s4.a / also)
                           :quant "2")
               :ARG1 (s4.a2 / and
                            :op1 (s4.q / quiche
                                       :domain (s4.o / one))
                            :op2 (s4.h / have-mod-91
                                       :ARG1 s4.q
                                       :ARG2 (s4.p / pizza)))
               :rel (s4.o2 / other))
   :snt5 (s5.a / and
               :op1 (s5.b / be-located-at-91
                          :ARG1 (s5.q / quiche
                                      :same-as s2.q)
                          :ARG2 (s5.s / side
                                      :ARG1-of (s5.l / left-20)
                                      :part-of (s5.t / table
                                                     :same-as s1.t)
                                      :same-as s3.s))
               :op2 (s5.b2 / be-located-at-91
                           :ARG1 (s5.p / pizza
                                       :same-as s4.o2)
                           :ARG2 (s5.s2 / side
                                        :ARG1-of (s5.r / right-04))))
   :snt6 (s6.c / cause-01
               :ARG0 (s6.s / slice
                           :mod (s6.a / also)
                           :quant "2")
               :ARG1 (s6.a2 / and
                            :op1 (s6.q / quiche
                                       :domain (s6.o / one))
                            :op2 (s6.h / have-mod-91
                                       :ARG1 s6.q
                                       :ARG2 (s6.p / pizza)))
               :rel (s6.o2 / other))
   :snt7 (s7.a / and
               :op1 (s7.b / be-located-at-91
                          :ARG1 (s7.q / quiche
                                      :same-as s2.q)
                          :ARG2 (s7.s / side
                                      :ARG1-of (s7.l / left-20)
                                      :part-of (s7.t / table
                                                     :same-as s1.t)
                                      :same-as s3.s))
               :op2 (s7.b2 / be-located-at-91
                           :ARG1 (s7.p / pizza
                                       :same-as s2.p)
                           :ARG2 (s7.s2 / side
                                        :ARG1-of (s7.r / right-04)))))