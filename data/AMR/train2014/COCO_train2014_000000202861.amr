# ::id train2014~COCO_train2014_000000202861
# ::doc_file train2014~COCO_train2014_000000202861
# ::tok Two large pizzas are on a table , one with pepperoni and the other with peppers . <next_sent> A woman is sitting at the table , enjoying a slice of pizza . <next_sent> There are several cups on the table , one of which has a straw in it . <next_sent> A fork is also present on the table .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.p3 / pizzeria
                            :ARG0-of (s1.h / have-03
                                           :ARG1 (s1.p2 / pepperoni))
                            :mod (s1.l / large)
                            :quant "1"
                            :quant "2")
               :ARG2 (s1.t / table)
               :rel (s1.a / and
                          :op1 s1.p3
                          :op2 (s1.p4 / pizzeria
                                      :ARG0-of (s1.h2 / have-03
                                                      :ARG1 (s1.p / pepper-spray)))))
   :snt2 (s2.a / and
               :op1 (s2.s / sit-01
                          :ARG1 (s2.w / woman)
                          :ARG2 (s2.t / table
                                      :same-as s1.t))
               :op2 (s2.e / enjoy-01
                          :ARG0 s2.w
                          :ARG1 (s2.s2 / slice
                                       :ARG0-of (s2.c / contain-01
                                                      :ARG1 (s2.p / pizza)))))
   :snt3 (s3.a / and
               :op1 (s3.c / cup
                          :quant (s3.s / several)
                          :ARG2-of (s3.i / include-91
                                         :ARG1 (s3.c2 / cup
                                                      :ARG0-of (s3.h / have-03
                                                                     :ARG1 (s3.s2 / straw))
                                                      :quant "1"))
                          :location (s3.t / table
                                          :same-as s1.t))
               :op2 s3.c2)
   :snt4 (s4.p / present-02
               :ARG1 (s4.f / fork)
               :ARG2 (s4.t / table
                           :same-as s1.t)
               :mod (s4.a / also)))