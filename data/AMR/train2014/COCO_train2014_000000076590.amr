# ::id train2014~COCO_train2014_000000076590
# ::doc_file train2014~COCO_train2014_000000076590
# ::tok A pizza with pepperoni and spinach is on a white plate . <next_sent> The pizza is on a table with a few drinks and cups . <next_sent> There are two people sitting at the table , one on the left and one on the right . <next_sent> A knife and a spoon are also present on the table .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.p2 / pizza
                            :ARG0-of (s1.h / have-03
                                           :ARG1 (s1.a / and
                                                       :op1 (s1.p / pepperoni)
                                                       :op2 (s1.s / spinach))))
               :ARG2 (s1.p3 / plate
                            :ARG1-of (s1.w / white-03)))
   :snt2 (s2.b / be-located-at-91
               :ARG1 (s2.p / pizza
                           :same-as s1.p2)
               :ARG2 (s2.t / table)
               :accompanier (s2.a / and
                                  :op1 (s2.t2 / thing
                                              :quant (s2.f / few)
                                              :ARG1-of (s2.d / drink-01))
                                  :op2 (s2.c / cup)))
   :snt3 (s3.s / sit-01
               :ARG1 (s3.p / person
                           :ARG1-of (s3.m / mean-01
                                          :ARG2 (s3.a / and
                                                      :op1 s3.p
                                                      :op1 (s3.p2 / person
                                                                  :ARG1-of (s3.l / left-19)
                                                                  :quant "1")
                                                      :op2 (s3.r / right-08)))
                           :quant "2")
               :ARG2 (s3.t / table
                           :same-as s2.a))
   :snt4 (s4.p / present-02
               :ARG1 (s4.a2 / and
                            :op1 (s4.k / knife)
                            :op2 (s4.s / spoon))
               :ARG2 (s4.t / table
                           :same-as s2.a)
               :mod (s4.a / also)))