# ::id train2014~COCO_train2014_000000461267
# ::doc_file train2014~COCO_train2014_000000461267
# ::tok A plate of food with a sandwich and fries sits on a table . <next_sent> The sandwich is covered in mustard and has a bite taken out of it . <next_sent> The table is set with a fork , knife , and spoon , as well as a cup of water . <next_sent> There are also two bottles on the table , one of which is a can of soda .
(d / document
   :snt1 (s1.s2 / sit-01
                :ARG1 (s1.p / plate
                            :consist-of (s1.f / food
                                              :ARG0-of (s1.h / have-03
                                                             :ARG1 (s1.a / and
                                                                         :op1 (s1.s / sandwich)
                                                                         :op2 (s1.f2 / fry-01)))))
                :ARG2 (s1.t / table))
   :snt2 (s2.a / and
               :op1 (s2.c / cover-02
                          :ARG1 (s2.s / sandwich
                                      :same-as s1.s)
                          :ARG2 (s2.m / mustard))
               :op2 (s2.t / take-out-11
                          :ARG1 (s2.b / bite)
                          :source s2.s))
   :snt3 (s3.s / set-01
               :ARG1 (s3.t / table
                           :same-as s1.t)
               :instrument (s3.a / and
                                 :op1 (s3.f / fork)
                                 :op2 (s3.k / knife)
                                 :op3 (s3.s2 / spoon)
                                 :op4 (s3.w / water
                                            :quant (s3.v / volume-quantity
                                                         :unit (s3.c / cup)
                                                         :quant "1"))))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.b2 / bottle
                            :ARG2-of (s4.i / include-91
                                           :ARG1 (s4.b3 / bottle
                                                        :mod (s4.c / can)
                                                        :mod (s4.s / soda)
                                                        :quant "1"))
                            :quant "2")
               :ARG2 (s4.t / table
                           :same-as s1.t)
               :mod (s4.a / also)))