# ::id train2014~COCO_train2014_000000385695
# ::doc_file train2014~COCO_train2014_000000385695
# ::tok Two animals are grazing on grass in a field . <next_sent> One is a zebra and the other is a deer . <next_sent> The zebra is standing on the right side of the field and the deer is on the left . <next_sent> The zebra is eating grass near the center of the field while the deer is eating grass closer to the left side .
(d / document
   :snt1 (s1.g2 / graze-01
                :ARG1 (s1.a / animal
                            :quant "2")
                :ARG2 (s1.g / grass
                            :location (s1.f / field)))
   :snt2 (s2.a / and
               :op1 (s2.z / zebra
                          :domain (s2.o / one))
               :op2 (s2.d / deer
                          :domain (s2.o2 / other)))
   :snt3 (s3.a / and
               :op1 (s3.s3 / stand-01
                           :ARG1 (s3.z / zebra
                                       :same-as s2.z)
                           :ARG2 (s3.s / side
                                       :ARG1-of (s3.r / right-04)
                                       :part-of (s3.f / field
                                                      :same-as s1.f)))
               :op2 (s3.b / be-located-at-91
                          :ARG1 (s3.d / deer
                                      :same-as s2.d)
                          :ARG2 (s3.s2 / side
                                       :ARG1-of (s3.l / left-19)
                                       :part-of s3.f)))
   :snt4 (s4.c3 / contrast-01
                :ARG1 (s4.e / eat-01
                            :ARG0 (s4.z / zebra
                                        :same-as s2.z)
                            :ARG1 (s4.g / grass
                                        :ARG1-of (s4.n / near-02
                                                       :ARG2 (s4.c / center
                                                                   :part-of (s4.f / field
                                                                                  :same-as s1.f)))))
                :ARG2 (s4.e2 / eat-01
                             :ARG0 (s4.d / deer
                                         :same-as s2.d)
                             :ARG1 (s4.g2 / grass
                                          :ARG1-of (s4.h / have-degree-91
                                                         :ARG2 (s4.c2 / close-10
                                                                      :ARG1 s4.g2
                                                                      :ARG2 (s4.s / side
                                                                                  :ARG1-of (s4.l / left-20)))
                                                         :ARG3 (s4.m / more))))))