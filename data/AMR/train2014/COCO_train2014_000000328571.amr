# ::id train2014~COCO_train2014_000000328571
# ::doc_file train2014~COCO_train2014_000000328571
# ::tok A woman and two children are sitting at a table eating chocolate cake . <next_sent> The woman is on the left side of the table , and the two children are on the right side . <next_sent> There are three cakes on the table , with one in front of the woman , one in front of the child on the right , and another in front of the child on the left . <next_sent> There are also two cups on the table , one in front of the woman and the other in front of the child on the right . <next_sent> The table is surrounded by chairs , with one on the left side and another on the right side .
(d / document
   :snt1 (s1.a2 / and
                :op1 (s1.s / sit-01
                           :ARG1 (s1.a / and
                                       :op1 (s1.w / woman)
                                       :op2 (s1.c2 / child
                                                   :quant "2"))
                           :ARG2 (s1.t / table))
                :op2 (s1.e / eat-01
                           :ARG0 s1.a
                           :ARG1 (s1.c / cake
                                       :mod (s1.c3 / chocolate))))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.w / woman
                                      :same-as s1.w)
                          :ARG2 (s2.s / side
                                      :ARG1-of (s2.l / left-20)
                                      :part-of (s2.t / table
                                                     :same-as s1.t)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.c / child
                                       :quant "2"
                                       :same-as s1.c2)
                           :ARG2 s2.s
                           :ARG3 (s2.s2 / side
                                        :ARG1-of (s2.r / right-04))))
   :snt3 (s3.a / and
               :op1 (s3.c / cake
                          :location s3.t
                          :quant "3")
               :op2 (s3.t / table
                          :same-as s1.t)
               :op3 (s3.a2 / another
                           :location (s3.i2 / in-front-of
                                            :op1 (s3.c4 / child
                                                        :ARG1-of (s3.l / left-19))))
               :rel (s3.c2 / cake
                           :location (s3.i / in-front-of
                                           :op1 (s3.w / woman
                                                      :same-as s1.w))
                           :location (s3.f / front
                                           :op1 (s3.c3 / child
                                                       :ARG1-of (s3.r / right-04)))))
   :snt4 (s4.a2 / and
                :op1 (s4.c2 / cup
                            :ARG2-of (s4.i3 / include-91
                                            :location (s4.i / in-front-of
                                                            :op1 (s4.w / woman
                                                                       :same-as s1.w)))
                            :ARG1-of s4.i3
                            :ARG2-of (s4.i4 / include-91
                                            :ARG1 (s4.c3 / cup
                                                         :mod (s4.o / other))
                                            :ARG2 (s4.i2 / in-front-of
                                                         :op1 (s4.c / child
                                                                    :ARG1-of (s4.r / right-04)
                                                                    :same-as s3.c3)))
                            :location (s4.t / table
                                            :same-as s1.t)
                            :mod (s4.a / also)
                            :quant "1"
                            :quant "2")
                :op2 s4.c3)
   :snt5 (s5.s3 / surround-01
                :ARG1 (s5.c / chair
                            :ARG2-of (s5.i / include-91
                                           :ARG1 (s5.a / and
                                                       :op1 (s5.c2 / chair
                                                                   :location (s5.s / side
                                                                                   :ARG1-of (s5.l / left-20))
                                                                   :location (s5.s2 / side
                                                                                    :ARG1-of (s5.r / right-04)
                                                                                    :same-as s2.s2)
                                                                   :mod (s5.a2 / another)))))
                :ARG2 (s5.t / table
                            :same-as s1.t)))