# ::id train2014~COCO_train2014_000000551736
# ::doc_file train2014~COCO_train2014_000000551736
# ::tok A dog is walking on a beach near the water . <next_sent> The dog is looking at the camera , and it appears to be a small breed . <next_sent> The beach is sandy and has a few boats in the water . <next_sent> There are two boats visible , one closer to the left side of the image and the other further to the right .
(d / document
   :snt1 (s1.w / walk-01
               :ARG0 (s1.d / dog)
               :ARG2 (s1.b / beach
                           :ARG1-of (s1.n / near-02
                                          :ARG2 (s1.w2 / water))))
   :snt2 (s2.a / and
               :op1 (s2.l / look-01
                          :ARG0 (s2.d / dog
                                      :same-as s1.d)
                          :ARG1 (s2.c / camera))
               :op2 (s2.a2 / appear-02
                           :ARG1 (s2.b / breed
                                       :domain s2.d
                                       :mod (s2.s / small))))
   :snt3 (s3.a / and
               :op1 (s3.s / sandy
                          :domain (s3.b / beach
                                        :same-as s1.b))
               :op2 (s3.h / have-03
                          :ARG0 s3.b
                          :ARG1 (s3.b2 / boat
                                       :quant (s3.f / few)
                                       :location (s3.w / water
                                                       :same-as s1.w2))))
   :snt4 (s4.p / possible-01
               :ARG1 (s4.s / see-01
                           :ARG1 (s4.b2 / boat
                                        :example (s4.b / be-located-at-91
                                                       :ARG1 (s4.b3 / boat)
                                                       :ARG2 (s4.f / further
                                                                   :ARG1-of (s4.r / right-04)))
                                        :part (s4.o / one
                                                    :ARG1-of (s4.c / close-10
                                                                   :ARG2 (s4.s2 / side
                                                                                :ARG1-of (s4.l / left-20)
                                                                                :part-of (s4.i / image))
                                                                   :ARG2-of (s4.h / have-degree-91
                                                                                  :ARG1 s4.b3
                                                                                  :ARG3 (s4.m / more))))
                                        :quant "2"))
               :rel (s4.a / and
                          :op1 s4.b2
                          :op2 s4.b3)))