# ::id train2014~COCO_train2014_000000575652
# ::doc_file train2014~COCO_train2014_000000575652
# ::tok A young boy is mixing batter in a bowl . <next_sent> He is using a hand mixer to blend the ingredients . <next_sent> There are two bottles on the counter , one is near the mixer and the other is further away . <next_sent> There are also two cups , one is near the boy and the other is further away . <next_sent> There are two bowls , one is near the boy and the other is further away . <next_sent> There are three eggs on the counter , one is near the boy and the other two are further away .
(d / document
   :snt1 (s1.m / mix-01
               :ARG0 (s1.b3 / boy
                            :mod (s1.y / young))
               :ARG1 (s1.b / batter)
               :location (s1.b2 / bowl))
   :snt2 (s2.u / use-01
               :ARG0 (s2.h2 / he
                            :same-as s1.b3)
               :ARG1 (s2.p / product
                           :ARG0-of (s2.m / mix-01)
                           :instrument (s2.h / hand))
               :ARG2 (s2.b / blend-01
                           :ARG0 s2.h2
                           :ARG1 (s2.i / ingredient)))
   :snt3 (s3.c / cause-01
               :ARG0 (s3.b / be-located-at-91
                           :ARG1 (s3.b2 / bottle
                                        :ARG2-of (s3.i / include-91)
                                        :ARG1-of s3.i
                                        :quant "2")
                           :ARG2 (s3.c2 / counter))
               :ARG1 (s3.a / and
                           :op1 (s3.n / near-02
                                      :ARG1 (s3.b3 / bottle
                                                   :quant "1")
                                      :ARG2 (s3.t / thing
                                                  :ARG0-of (s3.m / mix-01)
                                                  :same-as s2.p))
                           :op2 (s3.h / have-mod-91
                                      :ARG1 s3.b3
                                      :ARG2 s3.b2
                                      :ARG2 (s3.a2 / away
                                                   :extent (s3.f / far))
                                      :ARG3 (s3.m2 / more))))
   :snt4 (s4.a2 / and
                :op1 (s4.n / near-02
                           :ARG1 (s4.c / cup
                                       :mod (s4.a / also)
                                       :quant "1"
                                       :quant "2")
                           :ARG2 (s4.b / boy
                                       :same-as s1.b3))
                :rel (s4.c2 / cup
                            :mod (s4.o / other)
                            :op2 (s4.a3 / away
                                        :ARG2-of (s4.h / have-degree-91
                                                       :ARG1 s4.c2
                                                       :ARG2 (s4.f / far)
                                                       :ARG3 (s4.m / more)))))
   :snt5 (s5.a / and
               :op1 (s5.t / thing
                          :ARG1-of (s5.i / include-91
                                         :ARG2 (s5.p / pound
                                                     :part s5.t
                                                     :quant "2"))
                          :ARG1-of (s5.n / near-02
                                         :ARG2 (s5.b / boy
                                                     :same-as s1.b3))
                          :quant "1")
               :op2 (s5.p2 / pound
                           :ARG1-of (s5.h / have-degree-91
                                          :ARG2 (s5.f / far)
                                          :ARG2 (s5.a2 / away)
                                          :ARG3 (s5.m / more))))
   :snt6 (s6.a / and
               :op1 (s6.b / be-located-at-91
                          :ARG1 (s6.e / egg
                                      :ARG2-of (s6.i / include-91
                                                     :ARG1 (s6.e2 / egg
                                                                  :ARG1-of (s6.n / near-02
                                                                                 :ARG2 (s6.b2 / boy
                                                                                              :same-as s1.b3))
                                                                  :quant "1"))
                                      :quant "3")
                          :ARG2 (s6.c / counter
                                      :same-as s3.c2))
               :op2 s6.i
               :rel (s6.e3 / egg
                           :ARG1-of (s6.h / have-degree-91
                                          :ARG2 (s6.f / far)
                                          :ARG2 (s6.a2 / away)
                                          :ARG3 (s6.m / more))
                           :mod (s6.o / other))))