# ::id train2014~COCO_train2014_000000275544
# ::doc_file train2014~COCO_train2014_000000275544
# ::tok Two people are riding motorcycles down a street . <next_sent> One motorcycle is white and the other is blue . <next_sent> The white motorcycle is on the left side of the street and the blue motorcycle is on the right . <next_sent> There is a car parked on the left side of the street and another car further down the street .
(d / document
   :snt1 (s1.r / ride-01
               :ARG0 (s1.p / person
                           :quant "2")
               :ARG1 (s1.m / motorcycle)
               :direction (s1.d / down)
               :op1 (s1.s / street))
   :snt2 (s2.a / and
               :op1 (s2.w / white-03
                          :ARG1 (s2.m / motorcycle
                                      :mod (s2.o / one)))
               :op2 (s2.b / blue
                          :domain (s2.m2 / motorcycle
                                         :mod (s2.o2 / other))))
   :snt3 (s3.a / and
               :op1 (s3.b / be-located-at-91
                          :ARG1 (s3.m / motorcycle
                                      :ARG1-of (s3.w / white-03)
                                      :same-as s2.m)
                          :ARG2 (s3.s / side
                                      :ARG1-of (s3.l / left-20)))
               :op2 (s3.b2 / be-located-at-91
                           :ARG1 (s3.m2 / motorcycle
                                        :mod (s3.b3 / blue)
                                        :same-as s2.o2)
                           :ARG2 (s3.s2 / side
                                        :ARG1-of (s3.r / right-04)
                                        :part-of (s3.s3 / street
                                                        :same-as s1.s))))
   :snt4 (s4.a / and
               :op1 (s4.p / park-01
                          :ARG1 (s4.c / car)
                          :ARG2 (s4.s / side
                                      :ARG1-of (s4.l / left-20)
                                      :part-of (s4.s2 / street
                                                      :same-as s1.s)
                                      :same-as s3.s3))
               :op2 (s4.c2 / car
                           :location (s4.f / further
                                           :direction (s4.d / down
                                                            :op1 (s4.s3 / street
                                                                        :same-as s1.s)))
                           :mod (s4.a2 / another))))