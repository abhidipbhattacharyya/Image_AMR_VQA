# ::id train2014~COCO_train2014_000000241214
# ::doc_file train2014~COCO_train2014_000000241214
# ::tok The trunk of a car is open , revealing a variety of suitcases and bags . <next_sent> There are three suitcases , one blue , one black , and one red , as well as two backpacks , one black and one red . <next_sent> The suitcases are stacked on top of each other , with the blue one on top and the red one on the bottom . <next_sent> The backpacks are placed next to the suitcases .
(d / document
   :snt1 (s1.o / open-01
               :ARG0-of (s1.r / reveal-01
                              :ARG1 (s1.a / and
                                          :mod (s1.v / variety)
                                          :op1 (s1.s / suitcase)
                                          :op2 (s1.b / bag)))
               :ARG1 (s1.t / trunk
                           :part-of (s1.c / car)))
   :snt2 (s2.a2 / and
                :op1 (s2.a / and
                           :op1 (s2.c / case
                                      :ARG1-of (s2.b / black-04)
                                      :mod (s2.b3 / blue)
                                      :op2-of s2.a)
                           :op3 (s2.c2 / case
                                       :ARG1-of (s2.r / red-02)
                                       :op4-of s2.a))
                :op2 (s2.s2 / suitcase
                            :quant "2")
                :op2 (s2.s3 / suitcase
                            :ARG1-of (s2.b2 / black-04))
                :op3 (s2.p / pocket
                           :ARG1-of (s2.r2 / red-02))
                :rel (s2.s / suitcase
                           :quant "3"))
   :snt3 (s3.s / stack-01
               :ARG1 (s3.s2 / suitcase
                            :same-as s2.s)
               :ARG2 (s3.t / top
                           :location (s3.t2 / top)
                           :op1 (s3.o / other
                                      :mod (s3.e / each)))
               :rel (s3.a / and
                          :op1 (s3.c / case
                                     :mod (s3.b / blue
                                                :same-as s2.b3))
                          :consist s3.c
                          :op2 (s3.c2 / case
                                      :ARG1-of (s3.r / red-02
                                                     :same-as s2.r)
                                      :location (s3.b2 / bottom))))
   :snt4 (s4.p / place-01
               :ARG1 (s4.b / back
                           :same-as s2.p)
               :ARG2 (s4.n / next-to
                           :op1 (s4.s / suitcase
                                      :same-as s2.s))))