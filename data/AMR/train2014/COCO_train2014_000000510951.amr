# ::id train2014~COCO_train2014_000000510951
# ::doc_file train2014~COCO_train2014_000000510951
# ::tok Two sandwiches are on a table , one with meat and the other with lettuce . <next_sent> The sandwich with meat is on the left side and the lettuce sandwich is on the right . <next_sent> The meat sandwich has a tomato slice on top and is cut in half . <next_sent> The lettuce sandwich has a tomato slice on top as well .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.s / sandwich
                           :quant "1"
                           :quant "2")
               :ARG2 (s1.t / table)
               :rel (s1.a / and
                          :op1 (s1.s2 / sandwich
                                      :accompanier (s1.l / lettuce)
                                      :domain s1.a
                                      :mod (s1.o / other))
                          :op2 (s1.m / meat)))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.s / sandwich
                                      :ARG0-of (s2.h / have-03
                                                     :ARG1 (s2.m / meat))
                                      :same-as s1.m)
                          :ARG2 (s2.s3 / side
                                       :ARG1-of (s2.l / left-20)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.s2 / sandwich
                                        :mod (s2.l2 / lettuce)
                                        :same-as s1.l)
                           :ARG2 (s2.s4 / side
                                        :ARG1-of (s2.r / right-04))))
   :snt3 (s3.a / and
               :op1 (s3.h2 / have-03
                           :ARG0 (s3.s / sandwich
                                       :consist-of (s3.m / meat)
                                       :same-as s1.m)
                           :ARG1 (s3.s2 / slice
                                        :consist-of (s3.t / tomato)
                                        :location (s3.t2 / top)))
               :op2 (s3.c / cut-01
                          :ARG1 s3.s
                          :manner (s3.h / half)))
   :snt4 (s4.h / have-03
               :ARG0 (s4.s / sandwich
                           :consist-of (s4.l / lettuce)
                           :same-as s1.l)
               :ARG1 (s4.s2 / slice
                            :consist-of (s4.t / tomato))
               :location (s4.t2 / top)
               :mod (s4.a / as-well)))