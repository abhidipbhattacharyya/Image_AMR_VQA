# ::id train2014~COCO_train2014_000000510368
# ::doc_file train2014~COCO_train2014_000000510368
# ::tok Two dogs are looking out of a window , one on the left side and the other on the right side . <next_sent> The dogs are looking out of the window , possibly waiting for their owner or observing the outside world . <next_sent> The window is open , allowing the dogs to have a clear view of the surroundings .
(d / document
   :snt1 (s1.l2 / look-01
                :ARG0 (s1.d / dog
                            :location (s1.s / side
                                            :ARG1-of (s1.l / left-20))
                            :quant "1"
                            :quant "2")
                :rel (s1.a / and
                           :op1 (s1.l3 / look-01
                                       :ARG0 (s1.d2 / dog
                                                    :mod (s1.o / other))
                                       :direction (s1.o2 / out
                                                         :op1 (s1.w / window))
                                       :location (s1.s2 / side
                                                        :ARG1-of (s1.r / right-04)))
                           :op2 s1.l3))
   :snt2 (s2.l / look-01
               :ARG0 (s2.d / dog)
               :direction (s2.o3 / out
                                 :op1 (s2.w2 / window
                                             :same-as s1.s2))
               :time-of (s2.o2 / or
                               :op1 (s2.w / wait-01
                                          :ARG1 s2.d
                                          :ARG1-of (s2.p2 / possible-01)
                                          :ARG2 (s2.p / person
                                                      :ARG0-of (s2.o5 / own-01
                                                                      :ARG1 s2.d)))
                               :op2 (s2.o / observe-01
                                          :ARG0 s2.d
                                          :ARG1 (s2.w3 / world
                                                       :mod (s2.o4 / outside)))))
   :snt3 (s3.o / open-09
               :ARG0-of (s3.a / allow-01
                              :ARG1 (s3.h / have-03
                                          :ARG0 (s3.d / dog)
                                          :ARG1 (s3.v / view-01
                                                      :ARG0 s3.d
                                                      :ARG1 (s3.t / thing
                                                                  :ARG1-of (s3.s / surround-01))
                                                      :ARG1-of (s3.c / clear-08))))
               :ARG1 (s3.w / window
                           :same-as s1.s2)))