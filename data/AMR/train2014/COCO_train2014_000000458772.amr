# ::id train2014~COCO_train2014_000000458772
# ::doc_file train2014~COCO_train2014_000000458772
# ::tok A busy intersection with multiple cars and people . <next_sent> There are several cars in the intersection , including a red car , a white car , and a black car . <next_sent> A person is crossing the street in front of the cars . <next_sent> Traffic lights are present at the intersection , with one on the left side and two on the right side . <next_sent> There are also a few pedestrians walking around the area .
(d / document
   :snt1 (s1.i / intersect-01
               :ARG1 (s1.a / and
                           :op1 (s1.c / car
                                      :quant (s1.m / multiple))
                           :op2 (s1.p / person
                                      :quant s1.m))
               :ARG1-of (s1.b / busy-02))
   :snt2 (s2.b / be-located-at-91
               :ARG1 (s2.c / car
                           :quant (s2.s / several)
                           :ARG2-of (s2.i / include-01
                                          :ARG1 (s2.a / and
                                                      :op1 (s2.c2 / car
                                                                  :ARG1-of (s2.r / red-02))
                                                      :op2 (s2.c3 / car
                                                                  :ARG1-of (s2.w / white-03))
                                                      :op3 (s2.c4 / car
                                                                  :ARG1-of (s2.b2 / black-05)))))
               :ARG2 (s2.i2 / intersect-01
                            :same-as s1.i))
   :snt3 (s3.c2 / cross-02
                :ARG0 (s3.p / person)
                :ARG1 (s3.s / street
                            :location (s3.i / in-front-of
                                            :op1 (s3.c / car
                                                       :same-as s2.b))))
   :snt4 (s4.p / present-02
               :ARG1 (s4.l2 / light
                            :consist-of (s4.a / and
                                              :op2 (s4.l3 / light
                                                          :location (s4.s2 / side
                                                                           :ARG1-of (s4.r / right-04))
                                                          :mod (s4.t / traffic)
                                                          :quant "2"))
                            :op1-of s4.a
                            :location (s4.s / side
                                            :ARG1-of (s4.l / left-20))
                            :mod s4.t
                            :quant "1")
               :location (s4.i / intersect-01
                               :same-as s1.i))
   :snt5 (s5.p / person
               :quant (s5.f / few)
               :ARG0-of (s5.w / walk-01)
               :ARG2 (s5.a3 / around
                            :op1 (s5.a2 / area))
               :mod (s5.a / also)))