# ::id train2014~COCO_train2014_000000190513
# ::doc_file train2014~COCO_train2014_000000190513
# ::tok A group of motorcycles are parked in a garage . <next_sent> The motorcycles are black and red , and they are parked in a row . <next_sent> There are three motorcycles in total , with one being red and black , and the other two being black . <next_sent> The motorcycles are parked next to each other , with one on the left , one in the middle , and one on the right .
(d / document
   :snt1 (s1.p / park-01
               :ARG1 (s1.m / motorcycle
                           :quant (s1.g2 / group))
               :ARG2 (s1.g / garage))
   :snt2 (s2.a2 / and
                :op1 (s2.a / and
                           :op1 (s2.m / motorcycle
                                      :ARG1-of (s2.b / black-04)
                                      :same-as s1.m)
                           :op2 (s2.m2 / motorcycle
                                       :ARG1-of (s2.r / red-02)))
                :op2 (s2.p / park-01
                           :ARG1 s2.a
                           :location (s2.r2 / row)))
   :snt3 (s3.t / total-01
               :ARG1 (s3.m / motorcycle
                           :consist-of (s3.a / and
                                             :op1 (s3.m2 / motorcycle
                                                         :quant (s3.o / one)
                                                         :ARG1-of (s3.r / red-02))
                                             :op2 (s3.m3 / motorcycle
                                                         :ARG1-of (s3.b / black-04)
                                                         :ARG1-of (s3.b2 / black-05)
                                                         :mod (s3.o2 / other)
                                                         :quant "2"))
                           :quant "3")
               :ARG2 s3.m)
   :snt4 (s4.p / park-01
               :ARG1 (s4.m2 / motorcycle
                            :consist-of (s4.a / and
                                              :op2 (s4.m3 / motorcycle
                                                          :ARG1-of (s4.l / left-20)
                                                          :location (s4.m / middle))
                                              :op3 (s4.m4 / motorcycle
                                                          :ARG1-of (s4.r / right-04)))
                            :op1-of s4.a
                            :same-as s1.m)
               :ARG2 (s4.n / next-to
                           :op1 (s4.o / other
                                      :mod (s4.e / each)))))