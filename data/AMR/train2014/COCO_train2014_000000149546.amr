# ::id train2014~COCO_train2014_000000149546
# ::doc_file train2014~COCO_train2014_000000149546
# ::tok A box of assorted donuts is on a table . <next_sent> There are five donuts in total , with three of them being white and one being brown . <next_sent> The white donuts have sprinkles on them , while the brown one is covered in chocolate . <next_sent> The donuts are arranged in a circular pattern , with some of them overlapping each other .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.b2 / box
                            :consist-of (s1.d / donut
                                              :mod (s1.a / assorted)))
               :ARG2 (s1.t / table))
   :snt2 (s2.t / total-01
               :ARG1 (s2.d / donut
                           :quant "5")
               :ARG2 (s2.d3 / donut
                            :mod (s2.b / brown)
                            :quant "1")
               :rel (s2.d2 / donut
                           :ARG1-of (s2.i / include-91
                                          :ARG2 s2.d)
                           :ARG1-of (s2.w / white-02)
                           :quant "3"))
   :snt3 (s3.c2 / contrast-01
                :ARG1 (s3.h / have-03
                            :ARG0 (s3.d / donut
                                        :ARG1-of (s3.w / white-03)
                                        :same-as s2.i)
                            :ARG1 (s3.s / sprinkle-01))
                :ARG2 (s3.c3 / cover-02
                             :ARG1 (s3.d2 / donut
                                          :mod (s3.b / brown))
                             :ARG2 (s3.c / chocolate)))
   :snt4 (s4.a / arrange-01
               :ARG1 (s4.d / donut
                           :same-as s2.d)
               :example (s4.o2 / overlap-01
                               :ARG0 (s4.s / some
                                           :ARG3-of (s4.i / include-91
                                                          :ARG2 s4.d))
                               :ARG1 (s4.o / other
                                           :mod (s4.e / each)))
               :manner (s4.p / pattern
                             :mod (s4.c / circular))))