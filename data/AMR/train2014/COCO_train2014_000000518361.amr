# ::id train2014~COCO_train2014_000000518361
# ::doc_file train2014~COCO_train2014_000000518361
# ::tok Three people are watching an elephant in an enclosure . <next_sent> The elephant is in the middle of the scene , and the people are standing on the left side of the enclosure . <next_sent> One person is wearing a yellow jacket , and another person is wearing a blue jacket . <next_sent> The people are standing close to each other , and they are all looking at the elephant .
(d / document
   :snt1 (s1.w / watch-01
               :ARG0 (s1.p / person
                           :quant "3")
               :ARG1 (s1.e / elephant
                           :location (s1.e2 / enclosure)))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.e / elephant
                                      :same-as s1.e)
                          :ARG2 (s2.m / middle
                                      :part-of (s2.s / scene)))
               :op2 (s2.s3 / stand-01
                           :ARG0 (s2.p / person
                                       :same-as s1.p)
                           :ARG2 (s2.s2 / side
                                        :ARG1-of (s2.l / left-20)
                                        :part-of (s2.e2 / enclosure
                                                        :same-as s1.e2))))
   :snt3 (s3.a / and
               :op1 (s3.w / wear-01
                          :ARG0 (s3.p / person
                                      :quant "1")
                          :ARG1 (s3.j / jacket
                                      :ARG1-of (s3.y / yellow-02)))
               :op2 (s3.w2 / wear-01
                           :ARG0 (s3.p2 / person
                                        :mod (s3.a2 / another))
                           :ARG1 (s3.j2 / jacket
                                        :mod (s3.b / blue))))
   :snt4 (s4.a2 / and
                :op1 (s4.s / stand-01
                           :ARG1 (s4.p / person
                                       :same-as s1.p)
                           :ARG2 (s4.c / close-10
                                       :ARG1 s4.p
                                       :ARG2 (s4.e / each
                                                   :mod (s4.o / other))))
                :op2 (s4.l / look-01
                           :ARG0 s4.p
                           :ARG0 (s4.p2 / person
                                        :ARG1-of (s4.i / include-91
                                                       :ARG2 (s4.a / all))
                                        :mod s4.a)
                           :ARG1 (s4.e2 / elephant
                                        :same-as s1.e))))