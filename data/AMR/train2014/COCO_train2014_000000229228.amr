# ::id train2014~COCO_train2014_000000229228
# ::doc_file train2014~COCO_train2014_000000229228
# ::tok A cat is sitting on a window sill , looking out of the window . <next_sent> The window has two shutters , one on the left and one on the right . <next_sent> The cat is positioned between the two shutters , with one on the left and one on the right . <next_sent> The cat is looking out of the window , possibly observing the outside environment .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.s2 / sit-01
                           :ARG1 (s1.c / cat)
                           :ARG2 (s1.s / sill
                                       :mod (s1.w / window)))
               :op2 (s1.l / look-01
                          :ARG0 s1.c
                          :ARG1 s1.w))
   :snt2 (s2.h / have-03
               :ARG0 (s2.w / window)
               :ARG1 (s2.s / shut-01
                           :ARG1 (s2.a / and
                                       :op1 (s2.w2 / window
                                                   :location (s2.l / left-19)
                                                   :quant "1")
                                       :op2 (s2.s2 / shut-01
                                                   :location (s2.r / right-08)
                                                   :quant "1"))
                           :quant "2"))
   :snt3 (s3.p / position-01
               :ARG1 (s3.c / cat
                           :same-as s1.c)
               :ARG2 (s3.b / between
                           :op1 (s3.t / thing
                                      :ARG1-of (s3.l / left-19
                                                     :same-as s2.l)
                                      :ARG2-of (s3.b2 / blind
                                                      :ARG0-of (s3.m / mean-01
                                                                     :ARG1 (s3.a / and
                                                                                 :op1 s3.t
                                                                                 :op2 (s3.t2 / thing
                                                                                             :ARG0-of (s3.s / shut-01)
                                                                                             :ARG1-of (s3.r / right-04)
                                                                                             :quant "2"))))
                                      :quant "2")))
   :snt4 (s4.l / look-01
               :ARG0 (s4.c / cat
                           :same-as s1.c)
               :ARG0-of (s4.o / observe-01
                              :ARG1 (s4.e / environment
                                          :location (s4.o3 / outside))
                              :ARG1-of (s4.p / possible-01))
               :direction (s4.o2 / out
                                 :op1 (s4.w / window
                                            :same-as s2.w))))