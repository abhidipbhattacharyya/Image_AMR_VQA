# ::id train2014~COCO_train2014_000000281994
# ::doc_file train2014~COCO_train2014_000000281994
# ::tok A red and white truck is parked in a parking lot . <next_sent> The truck is a large semi truck with a white trailer . <next_sent> The truck is parked next to a red pole . <next_sent> There are several other cars in the parking lot , including one parked behind the truck and others parked in the distance .
(d / document
   :snt1 (s1.p / park-01
               :ARG1 (s1.a / and
                           :op1 (s1.t / truck
                                      :ARG1-of (s1.r / red-02))
                           :op2 (s1.t2 / truck
                                       :ARG1-of (s1.w / white-03)))
               :location (s1.l / lot
                               :purpose (s1.p2 / park-01)))
   :snt2 (s2.t3 / truck
                :ARG0-of (s2.h / have-03
                               :ARG1 (s2.t / trailer
                                           :ARG1-of (s2.w / white-03)))
                :domain (s2.t2 / truck
                               :same-as s1.a)
                :mod (s2.s / semi)
                :mod (s2.l / large))
   :snt3 (s3.p / park-01
               :ARG1 (s3.t / truck
                           :same-as s1.a)
               :location (s3.n / next-to
                               :op1 (s3.p2 / pole
                                           :ARG1-of (s3.r / red-02))))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.c / car
                           :quant (s4.s / several)
                           :ARG2-of (s4.i / include-91
                                          :ARG1 (s4.a / and
                                                      :op1 (s4.c2 / car
                                                                  :ARG1-of (s4.p2 / park-01
                                                                                  :ARG2 (s4.b2 / behind
                                                                                               :op1 (s4.t / truck
                                                                                                          :same-as s1.a)))
                                                                  :mod (s4.o2 / other
                                                                              :ARG1-of (s4.p3 / park-01
                                                                                              :location (s4.d / distance)))
                                                                  :quant "1")))
                           :mod (s4.o / other))
               :ARG2 (s4.l / lot
                           :ARG2-of (s4.p / park-01)
                           :same-as s1.l)))