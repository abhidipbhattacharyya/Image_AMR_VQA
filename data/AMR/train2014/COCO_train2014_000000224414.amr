# ::id train2014~COCO_train2014_000000224414
# ::doc_file train2014~COCO_train2014_000000224414
# ::tok A fenced area has a dirt road with a few sheep walking on it . <next_sent> There are three sheep in the scene , one on the left , one in the middle , and one on the right . <next_sent> A person is standing on the right side of the fence , possibly observing the sheep . <next_sent> There are also two bicycles parked near the fence , one closer to the left and the other near the center .
(d / document
   :snt1 (s1.h / have-03
               :ARG0 (s1.a / area
                           :ARG1-of (s1.c / chain-01))
               :ARG1 (s1.r / road
                           :location-of (s1.w / walk-01
                                              :ARG0 (s1.s / sheep
                                                          :quant (s1.f / few)))
                           :mod (s1.d / dirt)))
   :snt2 (s2.b / be-located-at-91
               :ARG1 (s2.s2 / sheep
                            :domain (s2.a / and
                                          :op1 (s2.s3 / sheep
                                                      :ARG1-of (s2.l / left-19)
                                                      :op2-of s2.a
                                                      :quant "1")
                                          :op3 (s2.s4 / sheep
                                                      :ARG1-of (s2.r / right-08)
                                                      :location (s2.m / middle)))
                            :quant "3")
               :ARG2 (s2.s / scene))
   :snt3 (s3.s3 / stand-01
                :ARG1 (s3.p / person
                            :ARG0-of (s3.o / observe-01
                                           :ARG1 (s3.s / sheep)
                                           :ARG1-of (s3.p2 / possible-01)))
                :ARG2 (s3.s2 / side
                             :ARG1-of (s3.r / right-04
                                            :ARG2 (s3.f / fence))))
   :snt4 (s4.p / park-01
               :ARG1 (s4.b / bicycle
                           :ARG1-of (s4.c2 / close-10
                                           :ARG2 (s4.l / left-20)
                                           :ARG2-of (s4.h / have-degree-91
                                                          :ARG1 (s4.b2 / bicycle
                                                                       :ARG1-of (s4.h2 / have-degree-91
                                                                                       :ARG2 (s4.c3 / close-10
                                                                                                    :ARG1 s4.b2)
                                                                                       :ARG2 (s4.n2 / near-02
                                                                                                    :ARG1 s4.b2
                                                                                                    :ARG2 (s4.c / center-02
                                                                                                                :same-as s2.m))
                                                                                       :ARG3 (s4.m2 / more))
                                                                       :mod (s4.o / other))
                                                          :ARG3 (s4.m / more)))
                           :mod (s4.a / also)
                           :quant "1"
                           :quant "2")
               :ARG1-of (s4.n / near-02
                              :ARG2 (s4.f / fence
                                          :same-as s3.f))))