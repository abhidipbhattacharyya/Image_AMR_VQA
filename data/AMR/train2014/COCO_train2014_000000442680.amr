# ::id train2014~COCO_train2014_000000442680
# ::doc_file train2014~COCO_train2014_000000442680
# ::tok A group of zebras are standing in a line in a building . <next_sent> There are three zebras , with one on the left , one in the middle , and one on the right . <next_sent> The zebras are standing in front of a glass wall , which separates them from the viewer . <next_sent> The zebras are facing the same direction , and their stripes are visible , creating a striking pattern .
(d / document
   :snt1 (s1.s / stand-01
               :ARG1 (s1.g / group
                           :consist-of (s1.e / elephant))
               :ARG2 (s1.l / line)
               :location (s1.b / building))
   :snt2 (s2.e / elephant
               :domain (s2.a / and
                             :op1 (s2.a2 / animal
                                         :ARG1-of (s2.l / left-19
                                                        :ARG1 s2.a3))
                             :op2 (s2.a3 / animal
                                         :location (s2.m / middle)
                                         :location (s2.r / right-08)
                                         :quant "1")
                             :op3 s2.m)
               :quant "3"
               :same-as s1.g)
   :snt3 (s3.s2 / stand-01
                :ARG1 (s3.e / elephant
                            :same-as s1.g)
                :ARG2 (s3.i / in-front-of
                            :op1 (s3.w / wall
                                       :ARG0-of (s3.s / separate-01
                                                      :ARG1 s3.e
                                                      :ARG2 (s3.p / person
                                                                  :ARG0-of (s3.v / view-01)))
                                       :consist-of (s3.g / glass))))
   :snt4 (s4.a / and
               :op1 (s4.f / face-01
                          :ARG0 (s4.e / elephant
                                      :same-as s1.g)
                          :ARG1 (s4.d / direction
                                      :ARG1-of (s4.s / same-01)))
               :op2 (s4.p2 / possible-01
                           :ARG1 (s4.s2 / see-01
                                        :ARG1 (s4.s4 / stripe
                                                     :ARG0-of (s4.c / create-01
                                                                    :ARG1 (s4.p / pattern
                                                                                :ARG0-of (s4.s3 / strike-01)))
                                                     :poss s4.e)))))