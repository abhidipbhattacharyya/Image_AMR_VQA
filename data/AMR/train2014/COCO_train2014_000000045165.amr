# ::id train2014~COCO_train2014_000000045165
# ::doc_file train2014~COCO_train2014_000000045165
# ::tok A bus is driving down a street with a car in front of it . <next_sent> The bus is white and black and has the word " intercity " on it . <next_sent> The car is black and is in front of the bus . <next_sent> There are also a few people on the street , one near the bus and two others near the car .
(d / document
   :snt1 (s1.d2 / drive-01
                :ARG0 (s1.b / bus)
                :ARG1 (s1.s / street)
                :direction (s1.d / down)
                :prep-with (s1.c / car
                                 :location (s1.i / in-front-of
                                                 :op1 s1.b)))
   :snt2 (s2.a / and
               :op1 (s2.w / white-03
                          :ARG1 (s2.b2 / bus
                                       :same-as s1.b))
               :op2 (s2.b / black-04
                          :ARG1 s2.b2)
               :op3 (s2.h / have-03
                          :ARG0 s2.b2
                          :ARG1 (s2.w2 / word
                                       :mod (s2.s / string-entity
                                                  :value "intercity"))))
   :snt3 (s3.a / and
               :op1 (s3.b2 / black-04
                           :ARG1 (s3.c / car
                                       :same-as s1.c))
               :op2 (s3.b / be-located-at-91
                          :ARG1 s3.c
                          :ARG2 (s3.i / in-front-of
                                      :op1 (s3.b3 / bus
                                                  :same-as s1.b))))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.p / person
                           :quant (s4.f / few)
                           :domain (s4.a2 / and
                                          :op1 (s4.p2 / person
                                                      :ARG1-of (s4.n / near-02
                                                                     :ARG2 (s4.b2 / bus
                                                                                  :same-as s1.b))
                                                      :ARG1-of (s4.n2 / near-02
                                                                      :ARG2 (s4.c / car
                                                                                  :same-as s1.c))
                                                      :mod (s4.o / other)
                                                      :op2-of s4.a2
                                                      :quant "1"
                                                      :quant "2"))
                           :mod (s4.a / also))
               :ARG2 (s4.s / street
                           :same-as s1.s)))