# ::id train2014~COCO_train2014_000000224891
# ::doc_file train2014~COCO_train2014_000000224891
# ::tok Three giraffes are standing in a fenced area . <next_sent> The first giraffe is on the left side , the second giraffe is in the middle , and the third giraffe is on the right side . <next_sent> The giraffes are standing close to each other , with their necks and heads visible . <next_sent> The fence is made of metal and is tall enough to keep the giraffes contained .
(d / document
   :snt1 (s1.s / stand-01
               :ARG1 (s1.g / giraffe
                           :quant "3")
               :ARG2 (s1.a / area
                           :ARG1-of (s1.c / chain-01)))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.g / giraffe
                                      :ord (s2.o / ordinal-entity
                                                 :value "1"))
                          :ARG2 (s2.s / side
                                      :ARG1-of (s2.l / left-20)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.g2 / giraffe
                                        :li "2")
                           :ARG2 (s2.m / middle))
               :op3 (s2.g3 / giraffe
                           :ARG1-of (s2.b3 / be-located-at-91
                                           :ARG2 (s2.s2 / side
                                                        :ARG1-of (s2.r / right-04)))
                           :ord (s2.o2 / ordinal-entity
                                       :value "3")))
   :snt3 (s3.s2 / stand-01
                :ARG1 (s3.g / giraffe
                            :ARG0-of (s3.s / see-01
                                           :ARG1 (s3.a / and
                                                       :op1 (s3.n / neck)
                                                       :op2 (s3.h / head))
                                           :ARG1-of (s3.p / possible-01))
                            :part s3.n
                            :part s3.h
                            :same-as s1.g)
                :ARG2 (s3.c / close-10
                            :ARG1 s3.g
                            :ARG2 (s3.o / other
                                        :mod (s3.e / each))))
   :snt4 (s4.a / and
               :op1 (s4.m / make-01
                          :ARG1 (s4.f / fence)
                          :ARG2 (s4.m2 / metal))
               :op2 (s4.h / have-degree-91
                          :ARG1 s4.f
                          :ARG2 (s4.t / tall)
                          :ARG3 (s4.e / enough)
                          :ARG6 (s4.k / keep-02
                                      :ARG0 s4.f
                                      :ARG1 (s4.c / contain-01
                                                  :ARG0 s4.f
                                                  :ARG1 (s4.g / giraffe
                                                              :same-as s1.g))))))