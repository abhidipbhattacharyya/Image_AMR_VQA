# ::id train2014~COCO_train2014_000000559382
# ::doc_file train2014~COCO_train2014_000000559382
# ::tok Three trucks are parked in a parking lot . <next_sent> The first truck is on the left side , the second truck is in the middle , and the third truck is on the right side . <next_sent> A man is standing next to the first truck , and a dog is standing next to the second truck . <next_sent> The trucks are parked in a row , and they are all white .
(d / document
   :snt1 (s1.p / park-01
               :ARG1 (s1.t / truck
                           :quant "3")
               :ARG2 (s1.l / lot
                           :purpose (s1.p2 / park-01)))
   :snt2 (s2.a / and
               :ARG1-of (s2.b3 / be-located-at-91
                               :ARG2 (s2.s2 / side
                                            :ARG1-of (s2.r / right-04)))
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.t / truck
                                      :ord (s2.o / ordinal-entity
                                                 :value "1"))
                          :ARG2 (s2.s / side
                                      :ARG1-of (s2.l / left-20)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.t2 / truck
                                        :ord (s2.o2 / ordinal-entity
                                                    :value "2"))
                           :ARG2 (s2.m / middle))
               :op3 (s2.t3 / truck
                           :ord (s2.o3 / ordinal-entity
                                       :value "3")))
   :snt3 (s3.a / and
               :op1 (s3.s / stand-01
                          :ARG1 (s3.m / man)
                          :ARG2 (s3.n / next-to
                                      :op1 (s3.t / truck
                                                 :ord (s3.o / ordinal-entity
                                                            :value "1")
                                                 :same-as s2.t)))
               :op2 (s3.s2 / stand-01
                           :ARG1 (s3.d / dog)
                           :ARG2 (s3.n2 / next-to
                                        :op1 (s3.t2 / truck
                                                    :ord (s3.o2 / ordinal-entity
                                                                :value "2")))))
   :snt4 (s4.a2 / and
                :op1 (s4.p / park-01
                           :ARG1 (s4.t / truck
                                       :quant (s4.a / all)
                                       :same-as s1.t)
                           :ARG2 (s4.r / row))
                :op2 (s4.w / white-02
                           :ARG1 s4.t)))