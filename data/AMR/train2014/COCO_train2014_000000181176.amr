# ::id train2014~COCO_train2014_000000181176
# ::doc_file train2014~COCO_train2014_000000181176
# ::tok A man is skateboarding in a parking lot , and a seagull is flying above him . <next_sent> The parking lot is filled with cars , including a red one parked near the man . <next_sent> There are also two other people in the parking lot , one near the red car and another near the man on the skateboard .
(d / document
   :snt1 (s1.a2 / and
                :op1 (s1.s2 / skate-01
                            :ARG0 (s1.m / man)
                            :location (s1.l / lot
                                            :ARG2-of (s1.p / park-01)))
                :op2 (s1.f / fly-01
                           :ARG1 (s1.s / seagull)
                           :path (s1.a / above
                                       :op1 s1.m)))
   :snt2 (s2.f / fill-01
               :ARG1 (s2.l / lot
                           :purpose (s2.p / park-01)
                           :same-as s1.l)
               :ARG2 (s2.c / car
                           :ARG2-of (s2.i / include-01
                                          :ARG1 (s2.c2 / car
                                                       :ARG1-of (s2.r / red-02)
                                                       :ARG1-of (s2.p2 / park-01
                                                                       :ARG1-of (s2.n / near-02
                                                                                      :ARG2 (s2.m / man
                                                                                                  :same-as s1.m)))))))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.p2 / person
                            :ARG1-of (s3.n / near-02
                                           :ARG2 (s3.c / car
                                                       :ARG1-of (s3.r / red-02)
                                                       :same-as s2.p2)
                                           :quant "1")
                            :ARG2-of (s3.i / include-91
                                           :ARG1 (s3.a2 / another
                                                        :ARG1-of (s3.n2 / near-02
                                                                        :ARG2 (s3.m / man
                                                                                    :ARG0-of (s3.s / skate-01)
                                                                                    :same-as s1.m))))
                            :mod (s3.o / other)
                            :mod (s3.a / also)
                            :quant "2")
               :ARG2 (s3.l / lot
                           :ARG2-of (s3.p / park-01)
                           :same-as s1.l)))