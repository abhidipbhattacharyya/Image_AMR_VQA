# ::id train2014~COCO_train2014_000000362744
# ::doc_file train2014~COCO_train2014_000000362744
# ::tok A plate of salad and a sandwich are on a table . <next_sent> The sandwich is on a plate with a green plate underneath it . <next_sent> The salad is on a plate next to the sandwich . <next_sent> The table is blue and has a chair on one side . <next_sent> There are two cups on the table , one near the sandwich and the other near the salad .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.a / and
                           :op1 (s1.p / plate
                                      :consist-of (s1.s / salad))
                           :op2 (s1.s2 / sandwich))
               :ARG2 (s1.t / table))
   :snt2 (s2.b / be-located-at-91
               :ARG1 (s2.s / sandwich
                           :same-as s1.s2)
               :ARG2 (s2.p / plate
                           :ARG0-of (s2.h / have-03
                                          :ARG1 (s2.p2 / plate
                                                       :ARG1-of (s2.g / green-02)
                                                       :location (s2.u / underneath
                                                                       :op1 s2.p)))))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.s / salad
                           :same-as s1.p)
               :ARG2 (s3.p / plate
                           :location-of (s3.n / next-to
                                              :op1 (s3.s2 / sandwich
                                                          :same-as s1.s2))))
   :snt4 (s4.a / and
               :op1 (s4.b / blue
                          :domain (s4.t / table
                                        :same-as s1.t))
               :op2 (s4.h / have-03
                          :ARG0 s4.t
                          :ARG1 (s4.c / chair
                                      :location (s4.s / side
                                                      :quant "1"))))
   :snt5 (s5.b / be-located-at-91
               :ARG1 (s5.c / cup
                           :ARG1-of (s5.n / near-02
                                          :ARG2 (s5.s2 / sandwich
                                                       :same-as s1.s2))
                           :quant "1"
                           :quant "2")
               :ARG2 (s5.t / table
                           :same-as s1.t)
               :rel (s5.a / and
                          :op1 s5.c
                          :op2 (s5.c2 / cup
                                      :ARG1-of (s5.n2 / near-02
                                                      :ARG2 (s5.s / salad
                                                                  :same-as s1.p))))))