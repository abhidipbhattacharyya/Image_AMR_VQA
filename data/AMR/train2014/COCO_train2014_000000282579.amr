# ::id train2014~COCO_train2014_000000282579
# ::doc_file train2014~COCO_train2014_000000282579
# ::tok A plate of food with a sandwich , french fries , and pickles . <next_sent> The sandwich is cut in half and has onions on it . <next_sent> The fries are on the side of the plate and there are two pickles on top of the sandwich . <next_sent> The plate is on a table with a bowl and a cup nearby .
(d / document
   :snt1 (s1.p2 / plate
                :accompanier (s1.a / and
                                   :op1 (s1.s / sandwich)
                                   :op2 (s1.f2 / fry-01
                                               :mod (s1.c / country
                                                          :name (s1.n / name
                                                                      :op1 "France")))
                                   :op3 (s1.p / pickle))
                :consist-of (s1.f / food))
   :snt2 (s2.a / and
               :op1 (s2.c / cut-01
                          :ARG1 (s2.s / sandwich
                                      :same-as s1.s)
                          :manner (s2.h / half))
               :op2 (s2.h2 / have-03
                           :ARG0 s2.s
                           :ARG1 (s2.p / potato
                                       :example s2.s)))
   :snt3 (s3.a / and
               :op1 (s3.b / be-located-at-91
                          :ARG1 (s3.f / fry-01
                                      :same-as s1.f2)
                          :ARG2 (s3.s2 / side
                                       :part-of (s3.p2 / plate
                                                       :same-as s1.p2)))
               :op2 (s3.b2 / be-located-at-91
                           :ARG1 (s3.p / pickle
                                       :quant "2")
                           :ARG2 (s3.t / top
                                       :op1 (s3.s / sandwich
                                                  :same-as s1.s))))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.p / plate
                           :same-as s1.p2)
               :ARG2 (s4.t / table
                           :ARG0-of (s4.h / have-03
                                          :ARG1 (s4.a / and
                                                      :location (s4.n / nearby)
                                                      :op1 (s4.b2 / bowl)
                                                      :op2 (s4.c / cup))))))