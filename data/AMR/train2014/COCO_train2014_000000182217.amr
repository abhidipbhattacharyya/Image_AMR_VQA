# ::id train2014~COCO_train2014_000000182217
# ::doc_file train2014~COCO_train2014_000000182217
# ::tok A large red truck is driving down a street with a yellow line . <next_sent> The truck is passing a water tower and is in front of a building . <next_sent> There are several cars on the street , including one behind the truck and others in front of it . <next_sent> A stop sign is also visible on the street .
(d / document
   :snt1 (s1.d2 / drive-01
                :ARG0 (s1.t / truck
                            :ARG1-of (s1.r / red-02)
                            :mod (s1.l / large))
                :ARG1 (s1.s / street
                            :ARG0-of (s1.h / have-03
                                           :ARG1 (s1.l2 / line
                                                        :ARG1-of (s1.y / yellow-02))))
                :direction (s1.d / down))
   :snt2 (s2.a / and
               :op1 (s2.p / pass-02
                          :ARG0 (s2.t2 / truck
                                       :same-as s1.t)
                          :ARG1 (s2.t / tower
                                      :mod (s2.w / water)))
               :op2 (s2.b / be-located-at-91
                          :ARG1 s2.t2
                          :ARG2 (s2.i / in-front-of
                                      :op1 (s2.b2 / building))))
   :snt3 (s3.s2 / street
                :location-of (s3.c / car
                                   :quant (s3.s / several)
                                   :ARG2-of (s3.i2 / include-91
                                                   :ARG1 (s3.a / and
                                                               :op1 (s3.c2 / car
                                                                           :location (s3.b / behind
                                                                                           :op1 (s3.t / truck
                                                                                                      :same-as s1.t))
                                                                           :quant "1")
                                                               :op2 (s3.c3 / car
                                                                           :location (s3.i / in-front-of
                                                                                           :op1 s3.t)
                                                                           :mod (s3.o / other)))))
                :same-as s1.s)
   :snt4 (s4.p / possible-01
               :ARG1 (s4.s / see-01
                           :ARG1 (s4.s2 / signal-07
                                        :ARG1 (s4.s3 / stop-01))
                           :location (s4.s4 / street
                                            :same-as s1.s))
               :mod (s4.a / also)))