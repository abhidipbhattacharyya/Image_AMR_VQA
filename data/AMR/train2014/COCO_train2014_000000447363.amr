# ::id train2014~COCO_train2014_000000447363
# ::doc_file train2014~COCO_train2014_000000447363
# ::tok A large pizza is on a table with a knife and fork on either side . <next_sent> The pizza is topped with cheese , tomatoes , and lemon wedges . <next_sent> There are two plates on the table , one near the pizza and the other further away . <next_sent> A person can be seen in the background .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.p / pizza
                           :mod (s1.l / large))
               :ARG2 (s1.t / table)
               :manner (s1.a / and
                             :location (s1.s / side
                                             :mod (s1.e / either))
                             :op1 (s1.k / knife)
                             :op2 (s1.f / fork)))
   :snt2 (s2.t2 / top-01
                :ARG1 (s2.p / pizza
                            :same-as s1.p)
                :ARG2 (s2.a / and
                            :op1 (s2.c / cheese)
                            :op2 (s2.t / tomato)
                            :op3 (s2.w / wedge-01
                                       :ARG2 (s2.l / lemon))))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.p2 / plate
                            :ARG1-of (s3.n / near-02
                                           :ARG2 (s3.p / pizza
                                                       :same-as s1.p))
                            :domain (s3.a / and
                                          :op2 (s3.p3 / plate
                                                      :location (s3.f / far
                                                                      :ARG2 (s3.a2 / away)
                                                                      :ARG2-of (s3.h / have-degree-91
                                                                                     :ARG1 s3.p3
                                                                                     :ARG3 (s3.m / more)))))
                            :op1-of s3.a
                            :quant "1"
                            :quant "2")
               :ARG2 (s3.t / table
                           :same-as s1.t))
   :snt4 (s4.p2 / possible-01
                :ARG1 (s4.s / see-01
                            :ARG1 (s4.p / person)
                            :location (s4.b / background))))