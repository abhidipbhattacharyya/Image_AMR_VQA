# ::id train2014~COCO_train2014_000000201940
# ::doc_file train2014~COCO_train2014_000000201940
# ::tok A man is standing in a kitchen , looking at a laptop computer . <next_sent> The laptop is placed on a counter next to a keyboard . <next_sent> There are several bottles scattered throughout the kitchen , with one near the laptop , another on the counter , and a third on the floor . <next_sent> The kitchen also has a sink and a potted plant .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.s / stand-01
                          :ARG1 (s1.m / man)
                          :ARG2 (s1.k / kitchen))
               :op2 (s1.l2 / look-01
                           :ARG0 s1.m
                           :ARG1 (s1.c / computer
                                       :mod (s1.l / laptop))))
   :snt2 (s2.p / place-01
               :ARG1 (s2.l / laptop
                           :same-as s1.c)
               :ARG2 (s2.c / counter
                           :location-of (s2.n / next-to
                                              :op1 (s2.k / keyboard))))
   :snt3 (s3.s / scatter-01
               :ARG1 (s3.b2 / bottle
                            :quant (s3.s2 / several)
                            :example (s3.a / and
                                           :op1 (s3.b3 / bottle
                                                       :ARG1-of (s3.n / near-02
                                                                      :ARG2 (s3.l / laptop
                                                                                  :same-as s1.c))
                                                       :location (s3.c / counter
                                                                       :same-as s2.c)
                                                       :quant "1")
                                           :op2 (s3.b4 / bottle
                                                       :ARG1-of (s3.b / be-located-at-91
                                                                      :ARG2 (s3.f / floor))
                                                       :ord (s3.o / ordinal-entity
                                                                  :value "3"))))
               :ARG2 (s3.k / kitchen
                           :same-as s1.k))
   :snt4 (s4.h / have-03
               :ARG0 (s4.k / kitchen
                           :same-as s1.k)
               :ARG1 (s4.a2 / and
                            :op1 (s4.s / sink)
                            :op2 (s4.p / plant
                                       :ARG1-of (s4.p2 / plant-01)))
               :mod (s4.a / also)))