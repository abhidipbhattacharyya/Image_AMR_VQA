# ::id train2014~COCO_train2014_000000373747
# ::doc_file train2014~COCO_train2014_000000373747
# ::tok A pizza with cheese and pepperoni sits on a white plate on a wooden table . <next_sent> The pizza is topped with olives and is served with a fork and knife . <next_sent> There are two pizzas on the table , one of which is a personal size pizza . <next_sent> A glass of beer is also present on the table .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.p2 / pizza
                            :ARG0-of (s1.h / have-03
                                           :ARG1 (s1.a / and
                                                       :op1 (s1.c / cheese)
                                                       :op2 (s1.p / pepperoni))))
               :ARG2 (s1.p3 / plate
                            :ARG1-of (s1.w / white-03)
                            :location (s1.t / table
                                            :consist-of (s1.w2 / wood))))
   :snt2 (s2.a / and
               :op1 (s2.t / top-01
                          :ARG1 (s2.p / pizza
                                      :same-as s1.p2)
                          :ARG2 (s2.l / Olive))
               :op2 (s2.s / serve-02
                          :ARG1 s2.p
                          :instrument (s2.a2 / and
                                             :op1 (s2.f / fork)
                                             :op2 (s2.k / knife))))
   :snt3 (s3.m / multi-sentence
               :snt1 (s3.p3 / pizzeria
                            :ARG1-of (s3.t / table-01
                                           :same-as s1.t)
                            :ARG2-of (s3.i / include-91
                                           :ARG1 (s3.p2 / pizza
                                                        :mod (s3.s / size
                                                                   :ARG1-of (s3.p / personal-02))
                                                        :quant "1"))
                            :quant "2"))
   :snt4 (s4.p / present-02
               :ARG1 (s4.b / beer
                           :quant (s4.v / volume-quantity
                                        :unit (s4.g / glass)))
               :ARG2 (s4.t / table
                           :same-as s1.t)
               :mod (s4.a / also)))