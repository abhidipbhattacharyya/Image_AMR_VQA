# ::id train2014~COCO_train2014_000000302278
# ::doc_file train2014~COCO_train2014_000000302278
# ::tok A plate of food sits on a table . <next_sent> The plate contains a sausage , a piece of bread , and a variety of vegetables including broccoli and carrots . <next_sent> The sausage is located towards the right side of the plate , while the bread is positioned towards the left . <next_sent> The broccoli is scattered around the plate , with some pieces near the center and others towards the edges . <next_sent> The carrots are also scattered around the plate , with some pieces near the center and others towards the edges . <next_sent> A knife and fork are also present on the table , with the knife on the left side and the fork on the right .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.p / plate
                           :consist-of (s1.f / food))
               :ARG2 (s1.t / table))
   :snt2 (s2.c2 / contain-01
                :ARG0 (s2.p2 / plate
                             :same-as s1.p)
                :ARG1 (s2.a / and
                            :op1 (s2.s / sausage)
                            :op2 (s2.p / piece
                                       :consist-of (s2.b / bread))
                            :op3 (s2.v2 / vegetable
                                        :ARG2-of (s2.i / include-01
                                                       :ARG1 (s2.a2 / and
                                                                    :op1 (s2.b2 / broccoli)
                                                                    :op2 (s2.c / carrot)))
                                        :mod (s2.v / variety))))
   :snt3 (s3.c / contrast-01
               :ARG1 (s3.l2 / locate-01
                            :ARG1 (s3.s / sausage
                                        :same-as s2.s)
                            :direction (s3.s2 / side
                                              :ARG1-of (s3.r / right-04)
                                              :part-of (s3.p / plate
                                                             :same-as s1.p)))
               :ARG2 (s3.p2 / position-01
                            :ARG1 (s3.b / bread
                                        :same-as s2.p)
                            :ARG2 (s3.l / left-20)))
   :snt4 (s4.s / scatter-01
               :ARG1 (s4.b / broccoli
                           :same-as s2.b2)
               :ARG2 (s4.a2 / around
                            :op1 (s4.p3 / plate
                                        :same-as s1.p))
               :example (s4.a / and
                              :op1 (s4.n / near-02
                                         :ARG1 (s4.p / piece
                                                     :mod (s4.s2 / some))
                                         :ARG2 (s4.c / center))
                              :op2 (s4.n2 / near-02
                                          :ARG1 (s4.p2 / piece
                                                       :mod (s4.o / other))
                                          :ARG2 (s4.e / edge))))
   :snt5 (s5.s / scatter-01
               :ARG1 (s5.c / carrot)
               :ARG2 (s5.a3 / around
                            :op1 (s5.p3 / plate
                                        :same-as s1.p))
               :example (s5.a2 / and
                               :op1 (s5.n / near-02
                                          :ARG1 (s5.p / piece
                                                      :mod (s5.s2 / some))
                                          :ARG2 (s5.c2 / center
                                                       :same-as s4.c))
                               :op2 (s5.n2 / near-02
                                           :ARG1 (s5.p2 / piece
                                                        :mod (s5.o / other))
                                           :ARG2 (s5.e / edge)))
               :mod (s5.a / also))
   :snt6 (s6.p / present-02
               :ARG1 (s6.a2 / and
                            :ARG1-of (s6.m / mean-01
                                           :ARG2 (s6.a3 / and
                                                        :op1 (s6.s2 / side
                                                                    :ARG1-of (s6.r / right-04))
                                                        :op2 (s6.f2 / fork
                                                                    :location s6.s2)))
                            :op1 (s6.k / knife
                                       :location (s6.s / side
                                                       :ARG1-of (s6.l / left-20)))
                            :op2 (s6.f / fork))
               :ARG2 (s6.t / table
                           :same-as s1.t)
               :mod (s6.a / also)))