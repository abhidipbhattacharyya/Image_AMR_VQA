# ::id train2014~COCO_train2014_000000308292
# ::doc_file train2014~COCO_train2014_000000308292
# ::tok A green and white train is on the tracks next to a building . <next_sent> The train is on the left side of the tracks and is moving along the tracks . <next_sent> There are several traffic lights above the train , with one on the left side and two on the right side of the train . <next_sent> The traffic lights are red , indicating that the train is stopped .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.a / and
                           :op1 (s1.t2 / train
                                       :ARG1-of (s1.g / green-02))
                           :op2 (s1.t3 / train
                                       :ARG1-of (s1.w / white-03)))
               :ARG2 (s1.t / track
                           :location (s1.n / next-to
                                           :op1 (s1.b2 / building))))
   :snt2 (s2.a2 / and
                :op1 (s2.b / be-located-at-91
                           :ARG1 (s2.t2 / train
                                        :same-as s1.a)
                           :ARG2 (s2.s / side
                                       :ARG1-of (s2.l / left-20)
                                       :part-of (s2.t / track
                                                      :same-as s1.t)))
                :op2 (s2.m / move-01
                           :ARG1 s2.t2
                           :ARG2 (s2.a / along
                                       :op1 s2.t)))
   :snt3 (s3.a2 / and
                :op1 (s3.l2 / light
                            :quant (s3.s / several)
                            :location (s3.a / above
                                            :op1 (s3.t2 / train
                                                        :part (s3.s3 / side
                                                                     :ARG1-of (s3.r / right-04))
                                                        :same-as s1.a))
                            :mod (s3.t / traffic))
                :op2 (s3.l4 / light
                            :location s3.s3
                            :quant "2")
                :rel (s3.l3 / light
                            :location (s3.s2 / side
                                             :ARG1-of (s3.l / left-20))
                            :quant "1"))
   :snt4 (s4.r / red-02
               :ARG0-of (s4.i / indicate-01
                              :ARG1 (s4.s / stop-01
                                          :ARG1 (s4.t2 / train
                                                       :same-as s1.a)))
               :ARG1 (s4.l / light
                           :mod (s4.t / traffic)
                           :same-as s3.t)))