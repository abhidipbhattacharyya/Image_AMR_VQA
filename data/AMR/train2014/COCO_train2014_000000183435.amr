# ::id train2014~COCO_train2014_000000183435
# ::doc_file train2014~COCO_train2014_000000183435
# ::tok A table is filled with a variety of fruits and vegetables . <next_sent> There are several apples , oranges , and broccoli . <next_sent> The apples are placed in the middle of the table , the oranges are on the right side , and the broccoli is on the left side . <next_sent> The table is surrounded by chairs , with one on the left side , one on the right side , and another on the far right .
(d / document
   :snt1 (s1.f / fill-01
               :ARG1 (s1.t / table)
               :ARG2 (s1.v / variety
                           :domain (s1.a / and
                                         :op1 (s1.f2 / fruit)
                                         :op2 (s1.v2 / vegetable))))
   :snt2 (s2.a / and
               :quant (s2.s / several)
               :op1 (s2.a2 / apple)
               :op2 (s2.o / orange)
               :op3 (s2.b / broccoli))
   :snt3 (s3.a / and
               :op1 (s3.p / place-01
                          :ARG1 (s3.a2 / apple
                                       :same-as s2.s)
                          :ARG2 (s3.m / middle
                                      :part-of (s3.t / table
                                                     :same-as s1.t)))
               :op2 (s3.b / be-located-at-91
                          :ARG1 (s3.o / orange
                                      :same-as s2.o)
                          :ARG2 (s3.s / side
                                      :ARG1-of (s3.r / right-04)))
               :op3 (s3.b3 / broccoli
                           :ARG1-of (s3.b2 / be-located-at-91
                                           :ARG2 (s3.s2 / side
                                                        :ARG1-of (s3.l / left-20)))))
   :snt4 (s4.s3 / surround-01
                :ARG1 (s4.c / chair
                            :consist-of (s4.a / and
                                              :op1 (s4.o / one
                                                         :location (s4.s / side
                                                                         :ARG1-of (s4.l / left-20)))
                                              :op2 (s4.o2 / one
                                                          :location (s4.s2 / side
                                                                           :ARG1-of (s4.r / right-04)))
                                              :op3 (s4.a2 / another
                                                          :ARG1-of (s4.r2 / right-04
                                                                          :mod (s4.f / far)))))
                :ARG2 (s4.t / table
                            :same-as s1.t)))