# ::id train2014~COCO_train2014_000000332613
# ::doc_file train2014~COCO_train2014_000000332613
# ::tok A pizza with shrimp and cheese on top is on a metal tray . <next_sent> The tray is on a table with a knife and a fork nearby . <next_sent> There are two cups on the table , one near the top left corner and the other near the top right corner .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.p / pizza
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.a / and
                                                      :location (s1.t / top)
                                                      :op1 (s1.s / shrimp)
                                                      :op2 (s1.c / cheese))))
               :ARG2 (s1.t2 / tray
                            :consist-of (s1.m / metal)))
   :snt2 (s2.b / be-located-at-91
               :ARG1 (s2.t2 / tray
                            :same-as s1.t2)
               :ARG2 (s2.t / table)
               :accompanier (s2.a / and
                                  :location (s2.n / nearby)
                                  :op1 (s2.k / knife)
                                  :op2 (s2.f / fork)))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.c3 / cup
                            :ARG2-of (s3.i / include-91
                                           :ARG1 (s3.a / and
                                                       :op1 (s3.n / near-02
                                                                  :ARG1 (s3.c4 / cup
                                                                               :mod (s3.o / other
                                                                                          :op2 (s3.n2 / near-02
                                                                                                      :ARG1 s3.c4
                                                                                                      :ARG2 (s3.c2 / corner
                                                                                                                   :ARG1-of (s3.r / right-04)
                                                                                                                   :mod (s3.t3 / top)))))
                                                                  :ARG2 (s3.c / corner
                                                                              :ARG1-of (s3.l / left-20)
                                                                              :mod (s3.t2 / top)))))
                            :quant "1"
                            :quant "2")
               :ARG2 (s3.t / table
                           :same-as s2.a)))