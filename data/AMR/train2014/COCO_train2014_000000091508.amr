# ::id train2014~COCO_train2014_000000091508
# ::doc_file train2014~COCO_train2014_000000091508
# ::tok A blue and white airplane with the word " Ryanair " on the side is flying in the sky . <next_sent> The plane has two engines on the bottom and two on the top . <next_sent> The tail of the plane is blue and yellow . <next_sent> The plane is flying in the air with no visible obstacles .
(d / document
   :snt1 (s1.f / fly-01
               :ARG2 (s1.a / airplane
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.w2 / word
                                                       :location (s1.s / side)
                                                       :mod (s1.c / company
                                                                  :name (s1.n / name
                                                                              :op1 "Ryanair"))))
                           :mod (s1.a2 / and
                                       :op1 (s1.b / blue)
                                       :op2 (s1.w / white-03
                                                  :ARG1 s1.a))
                           :part s1.s)
               :direction (s1.s2 / sky))
   :snt2 (s2.h / have-03
               :ARG0 (s2.p / plane
                           :same-as s1.a)
               :ARG1 (s2.a / and
                           :op1 (s2.e / engine
                                      :location (s2.b / bottom)
                                      :quant "2")
                           :op2 (s2.e2 / engine
                                       :location (s2.t / top)
                                       :quant "2")))
   :snt3 (s3.a / and
               :domain (s3.t / tail
                             :part-of (s3.p / plane
                                            :same-as s1.a))
               :op1 (s3.b / blue)
               :op2 (s3.y / yellow))
   :snt4 (s4.f / fly-01
               :ARG2 (s4.p / plane
                           :same-as s1.a)
               :location (s4.a / air)
               :prep-with (s4.o / obstacle
                                :ARG1-of (s4.s / see-01
                                               :ARG1-of (s4.p2 / possible-01))
                                :polarity "-")))