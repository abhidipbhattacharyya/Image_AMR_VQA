# ::id train2014~COCO_train2014_000000232701
# ::doc_file train2014~COCO_train2014_000000232701
# ::tok A herd of cows are eating hay in a barn . <next_sent> The cows are black and white and are standing in a line . <next_sent> There are at least 12 cows in the barn , with some standing closer to the front and others further back . <next_sent> The cows are eating hay from a trough , and there are several cows eating at the same time .
(d / document
   :snt1 (s1.e / eat-01
               :ARG0 (s1.h2 / herd
                            :consist-of (s1.c / cow))
               :ARG1 (s1.h / hay)
               :location (s1.b / barn))
   :snt2 (s2.a / and
               :op1 (s2.b / black-and-white
                          :domain (s2.c / cow
                                        :same-as s1.h2))
               :op2 (s2.s / stand-01
                          :ARG1 s2.c
                          :ARG2 (s2.l / line)))
   :snt3 (s3.b3 / be-located-at-91
                :ARG1 (s3.c2 / cow
                             :quant (s3.a2 / at-least
                                           :op1 "12"
                                           :same-as s1.h2)
                             :example (s3.a / and
                                            :op1 (s3.s2 / stand-01
                                                        :ARG1 s3.c2
                                                        :ARG2 (s3.c / close-10
                                                                    :ARG1 s3.c2
                                                                    :ARG2 (s3.f / front)
                                                                    :ARG2-of (s3.h / have-degree-91
                                                                                   :ARG1 s3.s2
                                                                                   :ARG3 (s3.m / more))))
                                            :op2 (s3.s3 / stand-01
                                                        :ARG1 (s3.c3 / cow
                                                                     :quant (s3.s / some)
                                                                     :mod (s3.o / other))
                                                        :ARG2 (s3.b / back
                                                                    :extent (s3.f2 / further)))))
                :ARG2 (s3.b2 / barn
                             :same-as s1.b))
   :snt4 (s4.a / and
               :op1 (s4.e / eat-01
                          :ARG0 (s4.c / cow
                                      :same-as s1.h2)
                          :ARG1 (s4.h / hay
                                      :source (s4.t2 / trough)))
               :op2 (s4.e2 / eat-01
                           :ARG0 (s4.c2 / cow
                                        :quant (s4.s2 / several))
                           :time (s4.t / time
                                       :ARG1-of (s4.s / same-01)))))