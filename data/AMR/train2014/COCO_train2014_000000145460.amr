# ::id train2014~COCO_train2014_000000145460
# ::doc_file train2014~COCO_train2014_000000145460
# ::tok A blue tray with a plate of food on it . <next_sent> The plate has a red tray and a white plate with a red tray . <next_sent> The food on the plate includes a sandwich , broccoli , tomatoes , and oranges . <next_sent> There are two bottles on the tray , one of which is a water bottle . <next_sent> The tray is placed on a table .
(d / document
   :snt1 (s1.t / tray
               :ARG2-of (s1.b / be-located-at-91
                              :ARG1 (s1.f / food
                                          :quant (s1.p / plate)))
               :mod (s1.b2 / blue))
   :snt2 (s2.h / have-03
               :ARG0 (s2.p / plate
                           :same-as s1.b)
               :ARG1 (s2.a / and
                           :op1 (s2.t / tray
                                      :ARG1-of (s2.r / red-02))
                           :op2 (s2.p2 / plate
                                       :ARG0-of (s2.h2 / have-03
                                                       :ARG1 s2.t)
                                       :ARG1-of (s2.w / white-03))))
   :snt3 (s3.i / include-01
               :ARG1 (s3.a / and
                           :op1 (s3.s / sandwich)
                           :op2 (s3.b / broccoli)
                           :op3 (s3.t / tomato)
                           :op4 (s3.o / orange))
               :ARG2 (s3.f / food
                           :location (s3.p / plate
                                           :same-as s1.b)
                           :same-as s1.b))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.b2 / bottle
                            :ARG2-of (s4.i / include-91
                                           :ARG1 (s4.b3 / bottle
                                                        :domain (s4.b4 / bottle
                                                                       :mod (s4.w / water))
                                                        :quant "1"))
                            :quant "2")
               :ARG2 (s4.t / tray
                           :same-as s1.t))
   :snt5 (s5.p / place-01
               :ARG1 (s5.t2 / tray
                            :same-as s1.t)
               :ARG2 (s5.t / table)))