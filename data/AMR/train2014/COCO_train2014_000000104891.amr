# ::id train2014~COCO_train2014_000000104891
# ::doc_file train2014~COCO_train2014_000000104891
# ::tok A plate of food is on a table , including a sandwich , chips , and a salad . <next_sent> The plate is white and the food is arranged nicely . <next_sent> There are two bowls on the table , one containing the salad and the other containing the chips . <next_sent> A fork and a knife are also on the table , placed near the plate .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.p / plate
                           :consist-of (s1.f / food
                                             :ARG2-of (s1.i / include-01
                                                            :ARG1 (s1.a / and
                                                                        :op1 (s1.s2 / sandwich)
                                                                        :op2 (s1.c / chip)
                                                                        :op3 (s1.s / salad)))))
               :ARG2 (s1.t / table))
   :snt2 (s2.a / and
               :op1 (s2.w / white-03
                          :ARG1 (s2.p / plate
                                      :same-as s1.f))
               :op2 (s2.a2 / arrange-01
                           :ARG1 (s2.f / food
                                       :same-as s1.a)
                           :ARG1-of (s2.n / nice-01)))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.p / pound
                           :ARG0-of (s3.c2 / contain-01
                                           :ARG1 (s3.s / salad
                                                       :same-as s1.s))
                           :ARG2-of (s3.i / include-91)
                           :ARG1-of s3.i
                           :ARG2-of (s3.i2 / include-91
                                           :ARG1 (s3.p2 / pound
                                                        :ARG0-of (s3.c3 / contain-01
                                                                        :ARG1 (s3.c / chip
                                                                                    :same-as s1.c))))
                           :quant "2")
               :ARG2 (s3.t / table
                           :same-as s1.t))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.a2 / and
                            :ARG1-of (s4.p / place-01
                                           :ARG2 (s4.n / near-02
                                                       :ARG1 s4.a2
                                                       :ARG2 (s4.p2 / plate
                                                                    :same-as s1.f)))
                            :op1 (s4.f / fork)
                            :op2 (s4.k / knife))
               :ARG2 (s4.t / table
                           :same-as s1.t)
               :mod (s4.a / also)))