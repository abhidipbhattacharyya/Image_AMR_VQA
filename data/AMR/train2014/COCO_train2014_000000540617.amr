# ::id train2014~COCO_train2014_000000540617
# ::doc_file train2014~COCO_train2014_000000540617
# ::tok A plate of salad and a bowl of pasta sit on a table . <next_sent> The salad is on the left side of the table , and the pasta is on the right side . <next_sent> The salad is placed on a plate , while the pasta is in a bowl . <next_sent> A fork is also present on the table , located near the pasta .
(d / document
   :snt1 (s1.s2 / sit-01
                :ARG1 (s1.a / and
                            :op1 (s1.p2 / plate
                                        :consist-of (s1.s / salad))
                            :op2 (s1.p / pasta
                                       :quant (s1.b / bowl)))
                :ARG2 (s1.t / table))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.s / salad
                                      :same-as s1.p2)
                          :ARG2 (s2.s2 / side
                                       :ARG1-of (s2.l / left-20)
                                       :part-of (s2.t / table
                                                      :same-as s1.t)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.p / pasta
                                       :same-as s1.p)
                           :ARG2 (s2.s3 / side
                                        :ARG1-of (s2.r / right-04))))
   :snt3 (s3.c / contrast-01
               :ARG1 (s3.p2 / place-01
                            :ARG1 (s3.s / salad
                                        :same-as s1.p2)
                            :ARG2 (s3.p3 / plate))
               :ARG2 (s3.b / be-located-at-91
                           :ARG1 (s3.p / pasta
                                       :same-as s1.p)
                           :ARG2 (s3.b2 / bowl)))
   :snt4 (s4.p2 / present-02
                :ARG1 (s4.f / fork)
                :ARG2 (s4.t / table
                            :ARG1-of (s4.n / near-02
                                           :ARG2 (s4.p / pasta
                                                       :same-as s1.p))
                            :same-as s1.t)
                :mod (s4.a / also)))