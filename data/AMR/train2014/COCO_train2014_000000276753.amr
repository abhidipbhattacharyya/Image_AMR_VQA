# ::id train2014~COCO_train2014_000000276753
# ::doc_file train2014~COCO_train2014_000000276753
# ::tok A pizza with a salad on top is placed on a dining table . <next_sent> The pizza has a variety of toppings , including ham , cheese , and lettuce . <next_sent> A person is sitting at the table , and there are two forks and a knife on the table . <next_sent> The table is white , and the pizza is placed in the center of the table .
(d / document
   :snt1 (s1.p2 / place-01
                :ARG1 (s1.p / pizza
                            :ARG0-of (s1.h / have-03
                                           :ARG1 (s1.s / salad
                                                       :location (s1.t2 / top))))
                :ARG2 (s1.t / table
                            :mod (s1.d / dine-01)))
   :snt2 (s2.h2 / have-03
                :ARG0 (s2.p / pizza
                            :same-as s1.p)
                :ARG1 (s2.i2 / ingredient
                             :ARG2-of (s2.t / top-01)
                             :ARG2-of (s2.i / include-01
                                            :ARG1 (s2.a / and
                                                        :op1 (s2.h / ham)
                                                        :op2 (s2.c / cheese)
                                                        :op3 (s2.l / lettuce)))
                             :mod (s2.v / variety)))
   :snt3 (s3.a / and
               :op1 (s3.s / sit-01
                          :ARG1 (s3.p / person)
                          :ARG2 (s3.t / table
                                      :same-as s1.t))
               :op2 (s3.a2 / and
                           :location s3.t
                           :op1 (s3.c / continent
                                      :name (s3.n / name
                                                  :op1 "Europe"))
                           :op2 (s3.k / knife)
                           :quant "2"))
   :snt4 (s4.a / and
               :op1 (s4.w / white-03
                          :ARG1 (s4.t / table
                                      :part (s4.c / center)
                                      :same-as s1.t))
               :op2 (s4.p2 / place-01
                           :ARG1 (s4.p / pizza
                                       :same-as s1.p)
                           :ARG2 s4.c)))