# ::id train2014~COCO_train2014_000000248797
# ::doc_file train2014~COCO_train2014_000000248797
# ::tok A man is standing on a grassy field , looking up at a kite flying in the sky . <next_sent> The kite is shaped like a wheel and is flying above the ocean . <next_sent> There are several other people in the field , some of them sitting on the grass . <next_sent> The ocean is visible in the background , with several boats of various sizes scattered across the water .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.s2 / stand-01
                           :ARG0 (s1.m / man)
                           :ARG2 (s1.f / field
                                       :consist-of (s1.g / grass)))
               :op2 (s1.l / look-01
                          :ARG0 s1.m
                          :ARG1 (s1.k / kite
                                      :ARG1-of (s1.f2 / fly-01
                                                      :location (s1.s / sky)))
                          :direction (s1.u / up)))
   :snt2 (s2.a2 / and
                :op1 (s2.s / shape-01
                           :ARG1 (s2.k / kite
                                       :same-as s1.k)
                           :ARG2 (s2.w / wheel))
                :op2 (s2.f / fly-01
                           :ARG2 s2.k
                           :path (s2.a / above
                                       :op1 (s2.o / ocean))))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.p / person
                           :quant (s3.s / several)
                           :ARG2-of (s3.i / include-91
                                          :ARG1 (s3.s3 / some
                                                       :ARG1-of (s3.s2 / sit-01
                                                                       :ARG2 (s3.g / grass))))
                           :mod (s3.o / other))
               :ARG2 (s3.f / field
                           :same-as s1.f))
   :snt4 (s4.p / possible-01
               :ARG1 (s4.s2 / see-01
                            :ARG1 (s4.o / ocean
                                        :ARG0-of (s4.s / scatter-01
                                                       :ARG1 (s4.b2 / boat
                                                                    :quant (s4.s3 / several)
                                                                    :mod (s4.s4 / size
                                                                                :mod (s4.v / various)))
                                                       :ARG2 (s4.a / across
                                                                   :op1 s4.o))
                                        :same-as s2.o)
                            :location (s4.b / background))))