# ::id train2014~COCO_train2014_000000174351
# ::doc_file train2014~COCO_train2014_000000174351
# ::tok A display case in a bakery with a variety of pastries , including donuts , cakes , and cookies . <next_sent> The donuts are green and brown , and the cakes are yellow . <next_sent> There are also some green and brown donuts in a tray . <next_sent> The display case is filled with a variety of different types of pastries , making it a visually appealing sight for customers .
(d / document
   :snt1 (s1.c2 / case
                :ARG2-of (s1.d / display-01)
                :consist-of (s1.c3 / cookie
                                   :ARG2-of (s1.i / include-91
                                                  :ARG1 (s1.a / and
                                                              :op1 (s1.d2 / donut)
                                                              :op2 (s1.c / cake)
                                                              :op3 (s1.c4 / cookie)))
                                   :mod (s1.v / variety))
                :location (s1.b / bakery))
   :snt2 (s2.a2 / and
                :op1 (s2.a / and
                           :op1 (s2.d / donut
                                      :ARG1-of (s2.g / green-02)
                                      :same-as s1.d2)
                           :op2 (s2.b / brown))
                :op2 (s2.c / cake
                           :ARG1-of (s2.y / yellow-02)))
   :snt3 (s3.a2 / and
                :location (s3.t / tray)
                :mod (s3.a / also)
                :op1 (s3.d / donut
                           :ARG1-of (s3.g / green-02)
                           :mod (s3.s / some))
                :op2 (s3.d2 / donut
                            :ARG1-of (s3.g2 / green-02)
                            :mod (s3.s2 / some)))
   :snt4 (s4.f / fill-01
               :ARG0-of (s4.m / make-02
                              :ARG1 (s4.s2 / sight
                                           :ARG0-of (s4.a / appeal-03
                                                          :ARG0 (s4.c2 / customer)
                                                          :ARG1-of (s4.s / see-01
                                                                         :manner (s4.l / literal)))))
               :ARG1 (s4.c / case
                           :ARG2-of (s4.d2 / display-01)
                           :same-as s1.c2)
               :ARG2 (s4.p / pastries
                           :mod (s4.t / type
                                      :ARG1-of (s4.d / differ-02)
                                      :mod (s4.v / variety)))))