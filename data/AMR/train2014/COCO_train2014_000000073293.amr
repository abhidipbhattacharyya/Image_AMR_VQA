# ::id train2014~COCO_train2014_000000073293
# ::doc_file train2014~COCO_train2014_000000073293
# ::tok A man and two children are standing in front of a tree . <next_sent> The man is wearing a blue and white striped shirt and is smiling . <next_sent> The children are eating apples , and one of them is wearing a pink shirt . <next_sent> The man is holding the child on his right , and the other child is standing to the left .
(d / document
   :snt1 (s1.s / stand-01
               :ARG1 (s1.a / and
                           :op1 (s1.m / man)
                           :op2 (s1.c / child
                                      :quant "2"))
               :ARG2 (s1.i / in-front-of
                           :op1 (s1.t / tree)))
   :snt2 (s2.a2 / and
                :op1 (s2.w / wear-01
                           :ARG0 (s2.m / man
                                       :same-as s1.m)
                           :ARG1 (s2.s / shirt
                                       :mod (s2.s3 / stripe
                                                   :consist-of (s2.a / and
                                                                     :op1 s2.w
                                                                     :op2 (s2.w2 / white-03)))))
                :op2 (s2.s2 / smile-01
                            :ARG0 s2.m)
                :rel (s2.b / blue))
   :snt3 (s3.a / and
               :op1 (s3.e / eat-01
                          :ARG0 (s3.c / child
                                      :same-as s1.c)
                          :ARG1 (s3.a2 / apple))
               :op2 (s3.w / wear-01
                          :ARG0 (s3.p / person
                                      :ARG1-of (s3.i / include-91
                                                     :ARG2 "1")
                                      :quant "1")
                          :ARG1 (s3.s / shirt
                                      :ARG1-of (s3.p2 / pink-04))))
   :snt4 (s4.a / and
               :op1 (s4.h / hold-01
                          :ARG0 (s4.m / man
                                      :same-as s1.m)
                          :ARG1 (s4.c / child)
                          :ARG1-of (s4.r / right-04
                                         :ARG2 s4.m))
               :op2 (s4.s / stand-01
                          :ARG1 (s4.c2 / child
                                       :mod (s4.o / other))
                          :ARG2 (s4.l / left-20))))