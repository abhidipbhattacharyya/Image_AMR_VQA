# ::id train2014~COCO_train2014_000000002545
# ::doc_file train2014~COCO_train2014_000000002545
# ::tok A train is traveling down the tracks with a yellow and white engine . <next_sent> The train is pulling a long orange train car . <next_sent> There are also two traffic lights in the scene , one on the left and one on the right . <next_sent> The traffic lights are red , indicating that the train is not allowed to pass through the intersection at this time .
(d / document
   :snt1 (s1.t3 / travel-01
                :ARG0 (s1.t2 / train
                             :accompanier (s1.e / engine
                                                :mod (s1.a / and
                                                           :op1 (s1.y / yellow-02)
                                                           :op2 (s1.w / white-03))))
                :direction (s1.d / down)
                :path (s1.t / track))
   :snt2 (s2.p / pull-01
               :ARG0 (s2.t / train
                           :same-as s1.t2)
               :ARG1 (s2.c / car
                           :ARG1-of (s2.l / long-03)
                           :mod (s2.o / orange)
                           :mod s2.t))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.l2 / light
                            :domain (s3.a2 / and
                                           :op1 (s3.l3 / light
                                                       :ARG1-of (s3.l / left-19)
                                                       :quant "1")
                                           :op2 (s3.l4 / light
                                                       :location (s3.r / right-04)
                                                       :quant "1"))
                            :mod (s3.t / traffic)
                            :mod (s3.a / also)
                            :quant "2")
               :ARG2 (s3.s / scene))
   :snt4 (s4.r / red-02
               :ARG0-of (s4.i / indicate-01
                              :ARG1 (s4.a / allow-01
                                          :ARG1 (s4.p / pass-03
                                                      :ARG1 (s4.t3 / train
                                                                   :same-as s1.t2)
                                                      :path (s4.i2 / intersect-01))
                                          :time (s4.t / this)
                                          :polarity "-"))
               :ARG1 (s4.l / light
                           :mod (s4.t2 / traffic)
                           :same-as s3.s)))