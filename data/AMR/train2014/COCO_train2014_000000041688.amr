# ::id train2014~COCO_train2014_000000041688
# ::doc_file train2014~COCO_train2014_000000041688
# ::tok A bunch of bananas are displayed on a table . <next_sent> There are a total of 13 bananas in the bunch . <next_sent> They are arranged in a way that they are all visible and easily accessible . <next_sent> The bananas are placed in a way that they are not overlapping each other , allowing for a clear view of each individual banana . <next_sent> The table is covered with a green cloth , which adds to the overall presentation of the bananas .
(d / document
   :snt1 (s1.d / display-01
               :ARG1 (s1.b / banana
                           :quant (s1.b2 / bunch))
               :ARG2 (s1.t / table))
   :snt2 (s2.b / banana
               :ARG2-of (s2.t / total-01)
               :part-of (s2.b2 / bunch
                               :same-as s1.b)
               :quant "13")
   :snt3 (s3.a4 / arrange-01
                :ARG1 (s3.t / they
                            :mod (s3.a2 / all)
                            :same-as s2.b)
                :manner (s3.a3 / and
                               :op1 (s3.p / possible-01
                                          :ARG1 (s3.s / see-01
                                                      :ARG1 s3.t))
                               :op2 (s3.a / access-01
                                          :ARG1 s3.t
                                          :ARG1-of (s3.e / easy-05))))
   :snt4 (s4.p / place-01
               :ARG0-of (s4.a / allow-01
                              :ARG1 (s4.v / view-01
                                          :ARG1 (s4.b2 / banana
                                                       :mod (s4.i / individual)
                                                       :mod (s4.e / each))
                                          :ARG1-of (s4.c / clear-08)))
               :ARG1 (s4.b / banana
                           :same-as s2.b)
               :manner (s4.o / overlap-01
                             :ARG0 s4.b
                             :polarity "-"))
   :snt5 (s5.c2 / cover-02
                :ARG1 (s5.t / table
                            :same-as s1.t)
                :ARG2 (s5.c / cloth
                            :ARG0-of (s5.a / add-02
                                           :ARG2 (s5.p / present-01
                                                       :ARG1 (s5.b / banana
                                                                   :same-as s2.b)
                                                       :mod (s5.o / overall)))
                            :ARG1-of (s5.g / green-02))))