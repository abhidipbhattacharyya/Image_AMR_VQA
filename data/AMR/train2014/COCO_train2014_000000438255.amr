# ::id train2014~COCO_train2014_000000438255
# ::doc_file train2014~COCO_train2014_000000438255
# ::tok Two zebras are standing in a forest . <next_sent> One zebra is facing the camera while the other is facing away . <next_sent> The zebra facing the camera has a black and white tail , and the other has a black tail . <next_sent> The zebras are standing next to each other , with one zebra being larger than the other .
(d / document
   :snt1 (s1.s / stand-01
               :ARG1 (s1.e / elephant
                           :quant "2")
               :ARG2 (s1.f / forest))
   :snt2 (s2.c2 / contrast-01
                :ARG1 (s2.f / face-01
                            :ARG0 (s2.z / zebra
                                        :quant "1")
                            :ARG1 (s2.c / camera))
                :ARG2 (s2.f2 / face-01
                             :ARG0 (s2.z2 / zebra
                                          :mod (s2.o / other))
                             :direction (s2.a / away)))
   :snt3 (s3.a / and
               :op1 (s3.h / have-03
                          :ARG0 (s3.z / zebra
                                      :ARG0-of (s3.f / face-01
                                                     :ARG1 (s3.c / camera))
                                      :same-as s2.z)
                          :ARG1 (s3.t / tail
                                      :ARG1-of (s3.w / white-03)
                                      :ARG1-of (s3.b / black-04)))
               :op2 (s3.h2 / have-03
                           :ARG0 (s3.z2 / zebra
                                        :mod (s3.o / other
                                                   :same-as s2.o))
                           :ARG1 (s3.t2 / tail
                                        :ARG1-of (s3.b2 / black-04))))
   :snt4 (s4.s / stand-01
               :ARG1 (s4.e2 / elephant
                            :ARG2-of (s4.h / have-degree-91
                                           :ARG1 (s4.z / zebra
                                                       :quant "1"
                                                       :same-as s2.z)
                                           :ARG2 (s4.l / large)
                                           :ARG3 (s4.m / more)
                                           :ARG4 (s4.z2 / zebra
                                                        :mod (s4.o2 / other
                                                                    :same-as s2.o)))
                            :same-as s1.e)
               :ARG2 (s4.n / next-to
                           :op1 (s4.o / other
                                      :mod (s4.e / each)))))