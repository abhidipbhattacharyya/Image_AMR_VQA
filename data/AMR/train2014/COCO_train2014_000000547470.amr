# ::id train2014~COCO_train2014_000000547470
# ::doc_file train2014~COCO_train2014_000000547470
# ::tok A table with a pizza and pasta on it . <next_sent> The pizza is on a white plate , and the pasta is in a bowl . <next_sent> There are two plates , one with a pizza and the other with a bowl of pasta . <next_sent> A fork and spoon are also on the table . <next_sent> A person is sitting at the table , and there is a cup and a bottle on the table as well .
(d / document
   :snt1 (s1.t / table
               :ARG0-of (s1.h / have-03
                              :ARG1 (s1.a / and
                                          :op1 (s1.p2 / pizza)
                                          :op2 (s1.p / pasta))))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.p2 / pizza
                                       :same-as s1.p2)
                          :ARG2 (s2.p3 / plate
                                       :ARG1-of (s2.w / white-03)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.p / pasta
                                       :same-as s1.p)
                           :ARG2 (s2.b3 / bowl)))
   :snt3 (s3.a / and
               :op1 (s3.p3 / plate
                           :accompanier (s3.p2 / pizza
                                               :same-as s1.p2)
                           :quant "1"
                           :quant "2")
               :op2 (s3.p4 / plate
                           :ARG0-of (s3.h / have-03
                                          :ARG1 (s3.p / pasta
                                                      :quant (s3.b / bowl)))
                           :mod (s3.o / other)))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.a2 / and
                            :op1 (s4.f / fork)
                            :op2 (s4.s / spoon))
               :ARG2 (s4.t / table
                           :same-as s1.t)
               :mod (s4.a / also))
   :snt5 (s5.a / and
               :op1 (s5.s / sit-01
                          :ARG1 (s5.p / person)
                          :ARG2 (s5.t / table
                                      :same-as s1.t))
               :op2 (s5.a2 / and
                           :location s5.t
                           :mod (s5.a3 / as-well)
                           :op1 (s5.c / cup)
                           :op2 (s5.b / bottle))))