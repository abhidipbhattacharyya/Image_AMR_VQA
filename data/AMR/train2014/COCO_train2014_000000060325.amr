# ::id train2014~COCO_train2014_000000060325
# ::doc_file train2014~COCO_train2014_000000060325
# ::tok A man sits at an outdoor table with a pizza in front of him . <next_sent> The table is surrounded by chairs and has a few cups and a knife on it . <next_sent> The man is wearing a white shirt and is smiling . <next_sent> There are other people in the background , and a few cars can be seen in the distance .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.m / man
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.p / pizza
                                                      :location (s1.i / in-front-of
                                                                      :op1 s1.m))))
               :ARG2 (s1.t / table
                           :location (s1.o / outdoor)))
   :snt2 (s2.a / and
               :op1 (s2.s / surround-01
                          :ARG1 (s2.c / chair)
                          :ARG2 (s2.t / table
                                      :same-as s1.t))
               :op2 (s2.b / be-located-at-91
                          :ARG1 (s2.a2 / and
                                       :op1 (s2.c2 / cup
                                                   :quant (s2.f / few))
                                       :op2 (s2.k / knife))
                          :ARG2 s2.t))
   :snt3 (s3.a / and
               :op1 (s3.w / wear-01
                          :ARG0 (s3.m / man
                                      :same-as s1.m)
                          :ARG1 (s3.s / shirt
                                      :ARG1-of (s3.w2 / white-03)))
               :op2 (s3.s2 / smile-01
                           :ARG0 s3.m))
   :snt4 (s4.a / and
               :op1 (s4.p / person
                          :location (s4.b / background)
                          :mod (s4.o / other))
               :op2 (s4.p2 / possible-01
                           :ARG1 (s4.s / see-01
                                       :ARG1 (s4.c / car
                                                   :quant (s4.f / few))
                                       :location (s4.d / distance)))))