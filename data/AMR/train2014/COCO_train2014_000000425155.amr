# ::id train2014~COCO_train2014_000000425155
# ::doc_file train2014~COCO_train2014_000000425155
# ::tok Two white plates are on a table , one with a pizza and the other with a pizza slice . <next_sent> The pizza on the first plate is missing a slice , and the pizza slice on the second plate is missing a slice . <next_sent> There is a spatula on both plates , one on the left side of the first plate and the other on the right side of the second plate .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.p2 / plate
                            :ARG0-of (s1.h / have-03
                                           :ARG1 (s1.p / pizza))
                            :ARG1-of (s1.w / white-03)
                            :quant "1"
                            :quant "2")
               :ARG2 (s1.t / table)
               :rel (s1.a / and
                          :op1 s1.p2
                          :op2 (s1.p3 / plate
                                      :ARG0-of (s1.h2 / have-03
                                                      :ARG1 (s1.s / slice
                                                                  :mod s1.p))
                                      :mod (s1.o / other))))
   :snt2 (s2.a / and
               :op1 (s2.m / miss-01
                          :ARG0 (s2.p / pizza
                                      :location (s2.p3 / plate
                                                       :ord (s2.o / ordinal-entity
                                                                  :value "1"))
                                      :same-as s1.p)
                          :ARG1 (s2.s / slice))
               :op2 (s2.m2 / miss-01
                           :ARG0 (s2.s2 / slice
                                        :location (s2.p4 / plate
                                                         :ord (s2.o2 / ordinal-entity
                                                                     :value "2")
                                                         :same-as s1.o)
                                        :mod (s2.p2 / pizza)
                                        :same-as s1.s)
                           :ARG1 s2.s))
   :snt3 (s3.a / and
               :op1 (s3.s3 / spatula
                           :domain (s3.o / one
                                         :location (s3.s / side
                                                         :ARG1-of (s3.l / left-20)
                                                         :part-of (s3.p2 / plate
                                                                         :ord (s3.o2 / ordinal-entity
                                                                                     :value "1")
                                                                         :same-as s2.p3))))
               :op2 (s3.s4 / spatula
                           :location (s3.p / plate
                                           :mod (s3.b / both))
                           :location (s3.s2 / side
                                            :ARG1-of (s3.r / right-04)
                                            :part-of (s3.p3 / plate
                                                            :ord (s3.o3 / ordinal-entity
                                                                        :value "2")
                                                            :same-as s1.o))
                           :mod (s3.o4 / other))))