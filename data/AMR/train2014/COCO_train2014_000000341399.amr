# ::id train2014~COCO_train2014_000000341399
# ::doc_file train2014~COCO_train2014_000000341399
# ::tok A man is holding a white plate with a pizza on it . <next_sent> The pizza is topped with cheese and vegetables . <next_sent> The man is standing in a kitchen with a microwave above a stove . <next_sent> There are several bowls on the counter , one near the man and others further away . <next_sent> A knife is also visible on the counter .
(d / document
   :snt1 (s1.h2 / hold-01
                :ARG0 (s1.m / man)
                :ARG1 (s1.p2 / plate
                             :ARG0-of (s1.h / have-03
                                            :ARG1 (s1.p / pizza))
                             :ARG1-of (s1.w / white-03)))
   :snt2 (s2.t / top-01
               :ARG1 (s2.p / pizza
                           :same-as s1.p)
               :ARG2 (s2.a / and
                           :op1 (s2.c / cheese)
                           :op2 (s2.v / vegetable)))
   :snt3 (s3.s / stand-01
               :ARG1 (s3.m / man
                           :ARG0-of (s3.h / have-03
                                          :ARG1 (s3.m2 / microwave
                                                       :location (s3.a / above
                                                                       :op1 (s3.s2 / stove))))
                           :same-as s1.m)
               :location (s3.k / kitchen))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.p / pound
                           :quant (s4.s / several)
                           :ARG2-of (s4.i / include-91
                                          :ARG1 (s4.a / and
                                                      :op1 (s4.n / near-02
                                                                 :ARG1 s4.p
                                                                 :ARG2 (s4.m / man
                                                                             :same-as s1.m))
                                                      :op2 (s4.n2 / near-02
                                                                  :ARG1 (s4.p2 / pound
                                                                               :mod (s4.o / other))
                                                                  :ARG2 (s4.f / far
                                                                              :op1 (s4.a2 / away)))))
                           :quant "1")
               :ARG2 (s4.c / counter))
   :snt5 (s5.p / possible-01
               :ARG1 (s5.s / see-01
                           :ARG1 (s5.k / knife)
                           :location (s5.c / counter
                                           :same-as s4.c))
               :mod (s5.a / also)))