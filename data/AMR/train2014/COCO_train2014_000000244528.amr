# ::id train2014~COCO_train2014_000000244528
# ::doc_file train2014~COCO_train2014_000000244528
# ::tok A plate of food on a table includes a sandwich , a bowl of soup , and a basket of crackers . <next_sent> The sandwich is cut in half and has lettuce and bacon . <next_sent> The soup is in a bowl next to the sandwich . <next_sent> There are also two cups on the table , one near the soup and the other near the sandwich .
(d / document
   :snt1 (s1.i / include-01
               :ARG1 (s1.a / and
                           :op1 (s1.s / sandwich)
                           :op2 (s1.s2 / soup
                                       :quant (s1.b2 / bowl))
                           :op3 (s1.b / basket
                                      :consist-of (s1.c / crack)))
               :ARG2 (s1.p / plate
                           :consist-of (s1.f / food)
                           :location (s1.t / table)))
   :snt2 (s2.a / and
               :op1 (s2.c / cut-01
                          :ARG1 (s2.s / sandwich
                                      :same-as s1.s)
                          :manner (s2.h / half))
               :op2 (s2.h2 / have-03
                           :ARG0 s2.s
                           :ARG1 (s2.a2 / and
                                        :op1 (s2.l / lettuce)
                                        :op2 (s2.b / bacon))))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.s2 / soup
                            :same-as s1.s2)
               :ARG2 (s3.b2 / bowl
                            :location-of (s3.n / next-to
                                               :op1 (s3.s / sandwich
                                                          :same-as s1.s))))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.c / cup
                           :ARG1-of (s4.n / near-02
                                          :ARG2 (s4.s2 / soup
                                                       :same-as s1.s2))
                           :domain (s4.a2 / and
                                          :op2 (s4.c2 / cup
                                                      :ARG1-of (s4.n2 / near-02
                                                                      :ARG2 (s4.s / sandwich
                                                                                  :same-as s1.s))))
                           :op1-of s4.a2
                           :mod (s4.a / also)
                           :quant "1"
                           :quant "2")
               :ARG2 (s4.t / table
                           :same-as s1.t)))