# ::id train2014~COCO_train2014_000000563989
# ::doc_file train2014~COCO_train2014_000000563989
# ::tok A yellow truck is driving down a street with a blue trailer attached to it . <next_sent> The truck is in front of a traffic light . <next_sent> The traffic light is showing a red light . <next_sent> There are also other cars on the street , including one behind the truck and another in front of it .
(d / document
   :snt1 (s1.d2 / drive-01
                :ARG0 (s1.t2 / truck
                             :ARG1-of (s1.y / yellow-02)
                             :ARG2-of (s1.a / attach-01
                                            :ARG1 (s1.t / trailer
                                                        :mod (s1.b / blue))))
                :ARG1 (s1.s / street)
                :direction (s1.d / down))
   :snt2 (s2.b / be-located-at-91
               :ARG1 (s2.t2 / truck
                            :same-as s1.y)
               :ARG2 (s2.i / in-front-of
                           :op1 (s2.l / light
                                      :mod (s2.t / traffic))))
   :snt3 (s3.s / show-01
               :ARG0 (s3.l / light
                           :mod (s3.t / traffic)
                           :same-as s2.l)
               :ARG1 (s3.l2 / light
                            :ARG1-of (s3.r / red-02)))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.c / car
                           :ARG2-of (s4.i2 / include-91
                                           :ARG1 (s4.a2 / and
                                                        :op1 (s4.c2 / car
                                                                    :location (s4.b2 / behind
                                                                                     :op1 (s4.t / truck
                                                                                                :location (s4.i / in-front-of)
                                                                                                :op1-of s4.i
                                                                                                :same-as s1.y))
                                                                    :mod (s4.a3 / another)
                                                                    :op2-of s4.a2
                                                                    :quant "1")))
                           :mod (s4.o / other)
                           :mod (s4.a / also))
               :ARG2 (s4.s / street
                           :same-as s1.s)))