# ::id train2014~COCO_train2014_000000201062
# ::doc_file train2014~COCO_train2014_000000201062
# ::tok A refrigerator with stickers on it is sitting on a table . <next_sent> The refrigerator is covered in stickers and magnets , and it has a small TV screen on the top . <next_sent> There are several bottles on the table , including one near the refrigerator and others scattered around . <next_sent> A cup is also visible on the table .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.r / refrigerator
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.t2 / thing
                                                       :ARG1-of (s1.s2 / stick-01))))
               :ARG2 (s1.t / table))
   :snt2 (s2.a2 / and
                :op1 (s2.c / cover-02
                           :ARG1 (s2.r / refrigerator
                                       :part (s2.t4 / top)
                                       :same-as s1.r)
                           :ARG2 (s2.a / and
                                       :op1 (s2.t2 / thing
                                                   :ARG1-of (s2.s3 / stick-01))
                                       :op2 (s2.t3 / thing
                                                   :mod (s2.m / magnet))))
                :op2 (s2.h / have-03
                           :ARG0 s2.r
                           :ARG1 (s2.s / screen
                                       :location s2.t4
                                       :mod (s2.t / television)
                                       :mod (s2.s2 / small))))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.b2 / bottle
                            :quant (s3.s2 / several)
                            :ARG2-of (s3.i / include-91
                                           :ARG1 (s3.a / and
                                                       :op1 (s3.b3 / bottle
                                                                   :ARG1-of (s3.n / near-02
                                                                                  :ARG2 (s3.r / refrigerator
                                                                                              :same-as s1.r))
                                                                   :ARG1-of (s3.s / scatter-01
                                                                                  :ARG2 (s3.a2 / around))
                                                                   :mod (s3.o / other)
                                                                   :op2-of s3.a
                                                                   :quant "1"))))
               :ARG2 (s3.t / table
                           :same-as s1.t))
   :snt4 (s4.p / possible-01
               :ARG1 (s4.s / see-01
                           :ARG1 (s4.c / cup)
                           :location (s4.t / table
                                           :same-as s1.t))
               :mod (s4.a / also)))