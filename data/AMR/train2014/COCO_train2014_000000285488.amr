# ::id train2014~COCO_train2014_000000285488
# ::doc_file train2014~COCO_train2014_000000285488
# ::tok A table with a variety of food items on it . <next_sent> There are several bowls of food , including a bowl of sushi , a bowl of fruit , and a bowl of vegetables . <next_sent> The table also has a sign that says " Sushi Station . " <next_sent> There are also a couple of oranges and a pineapple on the table .
(d / document
   :snt1 (s1.t / table
               :location-of (s1.i / item
                                  :mod (s1.f / food)
                                  :mod (s1.v / variety)))
   :snt2 (s2.f / food
               :quant (s2.p / pound)
               :ARG2-of (s2.i / include-01
                              :ARG1 (s2.a / and
                                          :op1 (s2.s2 / sushi
                                                      :quant (s2.b / bowl))
                                          :op2 (s2.f2 / fruit
                                                      :consist s2.b3)
                                          :op3 (s2.b3 / bowl)
                                          :op4 (s2.b4 / bowl
                                                      :consist-of (s2.v / vegetable))))
               :rel (s2.b2 / bowl)
               :rel (s2.s / several))
   :snt3 (s3.h / have-03
               :ARG0 (s3.t / table
                           :same-as s1.t)
               :ARG1 (s3.s2 / sign
                            :ARG0-of (s3.s / say-01
                                           :ARG1 (s3.s3 / station
                                                        :name (s3.n / name
                                                                    :op1 "Sushi"
                                                                    :op2 "Station"))))
               :mod (s3.a / also))
   :snt4 (s4.t / table-01
               :ARG1 (s4.a2 / and
                            :op1 (s4.o / orange
                                       :quant (s4.c / couple))
                            :op2 (s4.p / pineapple
                                       :quant "1"))
               :mod (s4.a / also)
               :same-as s1.t))