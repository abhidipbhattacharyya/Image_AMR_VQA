# ::id train2014~COCO_train2014_000000473029
# ::doc_file train2014~COCO_train2014_000000473029
# ::tok Two women are working in a kitchen , preparing food . <next_sent> One woman is standing near a sink , while the other is standing near a window . <next_sent> The kitchen is filled with various items , including a microwave , a refrigerator , a sink , and a bowl . <next_sent> There are also several bottles and a knife in the kitchen .
(d / document
   :snt1 (s1.w2 / work-01
                :ARG0 (s1.w / woman
                            :quant "2")
                :ARG0-of (s1.p / prepare-01
                               :ARG1 (s1.f / food))
                :location (s1.k / kitchen))
   :snt2 (s2.a / and
               :op1 (s2.s2 / stand-01
                           :ARG1 (s2.w2 / woman
                                        :quant "1")
                           :ARG2 (s2.n / near-02
                                       :ARG1 s2.w2
                                       :ARG2 (s2.s / sink)))
               :op2 (s2.s3 / stand-01
                           :ARG1 (s2.w3 / woman
                                        :mod (s2.o / other))
                           :ARG2 (s2.n2 / near-02
                                        :ARG1 s2.w3
                                        :ARG2 (s2.w / window))))
   :snt3 (s3.f / fill-01
               :ARG1 (s3.k / kitchen
                           :same-as s1.k)
               :ARG2 (s3.i2 / item
                            :ARG2-of (s3.i / include-01
                                           :ARG1 (s3.a / and
                                                       :op1 (s3.m / microwave)
                                                       :op2 (s3.r / refrigerator)
                                                       :op3 (s3.s / sink)
                                                       :op4 (s3.b / bowl)))
                            :mod (s3.v / various)))
   :snt4 (s4.a2 / and
                :location (s4.k / kitchen
                                :same-as s1.k)
                :mod (s4.a / also)
                :op1 (s4.s / several
                           :op1 (s4.b / bottle
                                      :quant "1"))
                :op2 (s4.k2 / knife)))