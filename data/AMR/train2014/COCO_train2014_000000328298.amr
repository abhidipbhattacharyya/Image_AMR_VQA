# ::id train2014~COCO_train2014_000000328298
# ::doc_file train2014~COCO_train2014_000000328298
# ::tok A plate of food is on a table . <next_sent> The plate contains a sandwich , a bowl of soup , a pickle , and a tomato . <next_sent> There are two cups on the table , one to the left of the plate and the other to the right . <next_sent> A fork and a knife are also present on the table . <next_sent> The food is placed on a black and white checkered plate .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.f / food
                           :quant (s1.p / plate))
               :ARG2 (s1.t / table))
   :snt2 (s2.c / contain-01
               :ARG0 (s2.p2 / plate
                            :same-as s1.f)
               :ARG1 (s2.a / and
                           :op1 (s2.s / sandwich)
                           :op2 (s2.s2 / soup
                                       :quant (s2.b / bowl))
                           :op3 (s2.p / pickle)
                           :op4 (s2.t / tomato)))
   :snt3 (s3.a / and
               :op1 (s3.c / cup
                          :domain (s3.o / one
                                        :ARG1-of (s3.l / left-20
                                                       :ARG2 (s3.p / plate
                                                                   :same-as s1.f)))
                          :location (s3.t / table
                                          :same-as s1.t)
                          :quant "2")
               :op2 (s3.c2 / cup
                           :ARG1-of (s3.r / right-04)
                           :mod (s3.o2 / other)))
   :snt4 (s4.p / present-02
               :ARG1 (s4.a2 / and
                            :op1 (s4.f / fork)
                            :op2 (s4.k / knife))
               :ARG2 (s4.t / table
                           :same-as s1.t)
               :mod (s4.a / also))
   :snt5 (s5.p / place-01
               :ARG1 (s5.f / food
                           :same-as s2.a)
               :ARG2 (s5.p2 / plate
                            :consist-of (s5.l / letter)
                            :mod (s5.a / and
                                       :op1 (s5.b / black-04)
                                       :op2 (s5.w / white-03))
                            :same-as s1.f)))