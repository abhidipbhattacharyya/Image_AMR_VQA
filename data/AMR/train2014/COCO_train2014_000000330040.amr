# ::id train2014~COCO_train2014_000000330040
# ::doc_file train2014~COCO_train2014_000000330040
# ::tok A table with three plates of food , including a sandwich and a salad . <next_sent> The plates are placed on a wooden table . <next_sent> The sandwich is on the left plate , the salad is in the middle plate , and the other plate has a different food item . <next_sent> There are also a fork and a knife on the table .
(d / document
   :snt1 (s1.t / table
               :ARG0-of (s1.h / have-03
                              :ARG1 (s1.p / plate
                                          :ARG2-of (s1.i / include-01
                                                         :ARG1 (s1.a / and
                                                                     :op1 (s1.s2 / sandwich)
                                                                     :op2 (s1.s / salad)))
                                          :consist-of (s1.f / food)
                                          :quant "3")))
   :snt2 (s2.p / place-01
               :ARG1 (s2.p2 / plate
                            :same-as s1.p)
               :ARG2 (s2.t / table
                           :consist-of (s2.w / wood)))
   :snt3 (s3.a / and
               :op1 (s3.s2 / sandwich
                           :location (s3.p / plate
                                           :ARG1-of (s3.l / left-20))
                           :same-as s1.s2)
               :op2 (s3.b / be-located-at-91
                          :ARG1 (s3.s / salad
                                      :same-as s1.s)
                          :ARG2 (s3.p2 / plate
                                       :mod (s3.m / middle)))
               :op3 (s3.h / have-03
                          :ARG0 (s3.p3 / plate
                                       :mod (s3.o / other))
                          :ARG1 (s3.i / item
                                      :ARG1-of (s3.d / differ-02)
                                      :mod (s3.f / food))))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.a2 / and
                            :mod (s4.a / also)
                            :op1 (s4.f / fork)
                            :op2 (s4.k / knife))
               :ARG2 (s4.t / table
                           :same-as s2.t)))