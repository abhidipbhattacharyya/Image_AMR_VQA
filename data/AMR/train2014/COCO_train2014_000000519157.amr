# ::id train2014~COCO_train2014_000000519157
# ::doc_file train2014~COCO_train2014_000000519157
# ::tok A man is standing in front of a refrigerator filled with various food items . <next_sent> The refrigerator is stocked with many different foods , including multiple bottles , cups , and bowls . <next_sent> The man is looking at the food items in the refrigerator , possibly deciding what to eat .
(d / document
   :snt1 (s1.s / stand-01
               :ARG0 (s1.m / man)
               :ARG2 (s1.i / in-front-of
                           :op1 (s1.r / refrigerator
                                      :ARG1-of (s1.f / fill-01
                                                     :ARG2 (s1.i2 / item
                                                                  :mod (s1.f2 / food)
                                                                  :mod (s1.v / various))))))
   :snt2 (s2.s / stock-01
               :ARG1 (s2.r / refrigerator
                           :same-as s1.r)
               :ARG2 (s2.f / food
                           :quant (s2.m / many)
                           :ARG1-of (s2.d / differ-02)
                           :ARG2-of (s2.i / include-91
                                          :ARG1 (s2.a / and
                                                      :op1 (s2.b / bottle
                                                                 :quant (s2.m2 / multiple))
                                                      :op2 (s2.c / cup
                                                                 :quant s2.m2)
                                                      :op3 (s2.d2 / dish
                                                                  :ARG2-of (s2.b2 / bowl-01))))))
   :snt3 (s3.a / and
               :op1 (s3.l / look-01
                          :ARG0 (s3.m / man
                                      :same-as s1.m)
                          :ARG1 (s3.i / item
                                      :location (s3.r / refrigerator
                                                      :same-as s1.r)
                                      :mod (s3.f / food)
                                      :same-as s2.f))
               :op2 (s3.p / possible-01
                          :ARG1 (s3.d / decide-01
                                      :ARG0 s3.m
                                      :ARG1 (s3.t / thing
                                                  :ARG1-of (s3.e / eat-01
                                                                 :ARG0 s3.m))))))