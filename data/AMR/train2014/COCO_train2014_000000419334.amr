# ::id train2014~COCO_train2014_000000419334
# ::doc_file train2014~COCO_train2014_000000419334
# ::tok A pizza with various toppings is sitting on a wooden tray . <next_sent> The pizza is topped with cheese , tomatoes , and basil . <next_sent> The tray is placed on a dining table , which also has a red tablecloth . <next_sent> There are two cups on the table , one near the top left corner and the other near the top right corner .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.p / pizza
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.p2 / portion
                                                       :mod (s1.v / various))))
               :ARG2 (s1.t / tray
                           :consist-of (s1.w / wood)))
   :snt2 (s2.t2 / top-01
                :ARG1 (s2.p / pizza
                            :same-as s1.p)
                :ARG2 (s2.a / and
                            :op1 (s2.c / cheese)
                            :op2 (s2.t / tomato)
                            :op3 (s2.b / basil)))
   :snt3 (s3.p / place-01
               :ARG1 (s3.t3 / tray
                            :same-as s1.t)
               :ARG2 (s3.t / table
                           :ARG0-of (s3.h / have-03
                                          :ARG1 (s3.t2 / tablecloth
                                                       :ARG1-of (s3.r / red-02))
                                          :mod (s3.a / also))
                           :mod (s3.d / dine-01)))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.c3 / cup
                            :ARG2-of (s4.i / include-91
                                           :ARG1 (s4.a / and
                                                       :op1 (s4.n / near-02
                                                                  :ARG1 (s4.c4 / cup
                                                                               :mod (s4.o / other
                                                                                          :op2 (s4.n2 / near-02
                                                                                                      :ARG1 s4.c4
                                                                                                      :ARG2 (s4.c2 / corner
                                                                                                                   :ARG1-of (s4.r / right-04)
                                                                                                                   :mod (s4.t3 / top)))))
                                                                  :ARG2 (s4.c / corner
                                                                              :ARG1-of (s4.l / left-20)
                                                                              :mod (s4.t2 / top)))))
                            :quant "1"
                            :quant "2")
               :ARG2 (s4.t / table
                           :same-as s3.t)))