# ::id train2014~COCO_train2014_000000127301
# ::doc_file train2014~COCO_train2014_000000127301
# ::tok A bathroom with a sink and a mirror . <next_sent> The mirror is above the sink and has a wooden frame . <next_sent> The sink is white and has a few items on it , including a bottle , a cup , and a toothbrush . <next_sent> The bathroom is also decorated with a few pictures .
(d / document
   :snt1 (s1.b / bathroom
               :ARG0-of (s1.h / have-03
                              :ARG1 (s1.a / and
                                          :op1 (s1.s / sink)
                                          :op2 (s1.m / mirror))))
   :snt2 (s2.a2 / and
                :op1 (s2.m / mirror
                           :location (s2.a / above
                                           :op1 (s2.s / sink
                                                      :same-as s1.s))
                           :same-as s1.m)
                :op2 (s2.h / have-03
                           :ARG0 s2.m
                           :ARG1 (s2.f / frame
                                       :consist-of (s2.w / wood))))
   :snt3 (s3.a / and
               :op1 (s3.w / white-03
                          :ARG1 (s3.s / sink
                                      :same-as s1.s))
               :op2 (s3.h / have-03
                          :ARG0 s3.s
                          :ARG1 (s3.i2 / item
                                       :quant (s3.f / few)
                                       :ARG2-of (s3.i / include-01
                                                      :ARG1 (s3.a2 / and
                                                                   :op1 (s3.b / bottle)
                                                                   :op2 (s3.c / cup)
                                                                   :op3 (s3.t / toothbrush)))
                                       :location s3.s)))
   :snt4 (s4.d / decorate-01
               :ARG1 (s4.b / bathroom
                           :same-as s1.b)
               :ARG2 (s4.p / picture
                           :quant (s4.f / few))
               :mod (s4.a / also)))