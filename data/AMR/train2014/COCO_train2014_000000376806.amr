# ::id train2014~COCO_train2014_000000376806
# ::doc_file train2014~COCO_train2014_000000376806
# ::tok A tray of food is displayed on a table . <next_sent> The tray contains a variety of food items such as sushi , rice , vegetables , and meat . <next_sent> The sushi is arranged in a square , while the rice is placed in a bowl . <next_sent> The vegetables and meat are spread out across the tray . <next_sent> There are also several bowls and cups placed around the tray , possibly containing additional food items or condiments .
(d / document
   :snt1 (s1.d / display-01
               :ARG1 (s1.t2 / tray
                            :consist-of (s1.f / food))
               :ARG2 (s1.t / table))
   :snt2 (s2.c / contain-01
               :ARG0 (s2.t / tray
                           :same-as s1.t2)
               :ARG1 (s2.i / item
                           :example (s2.a / and
                                          :op1 (s2.s / sushi)
                                          :op2 (s2.r / rice)
                                          :op3 (s2.v2 / vegetable)
                                          :op4 (s2.m / meat))
                           :mod (s2.f / food)
                           :mod (s2.v / variety)))
   :snt3 (s3.a / and
               :op1 (s3.a2 / arrange-01
                           :ARG1 (s3.s2 / sushi)
                           :location (s3.s / square))
               :op2 (s3.p / place-01
                          :ARG1 (s3.r / rice
                                      :same-as s2.r)
                          :ARG2 (s3.b / bowl)))
   :snt4 (s4.s / spread-out-04
               :ARG1 (s4.a / and
                           :op1 (s4.v / vegetable)
                           :op2 (s4.m / meat))
               :ARG2 (s4.t / tray
                           :same-as s1.t2))
   :snt5 (s5.p / place-01
               :ARG1 (s5.a3 / and
                            :quant (s5.s / several)
                            :ARG0-of (s5.c2 / contain-01
                                            :ARG1 (s5.o / or
                                                        :op1 (s5.i / item
                                                                   :mod (s5.f / food)
                                                                   :mod (s5.a / additional))
                                                        :op2 (s5.c / conference
                                                                   :mod s5.a))
                                            :ARG1-of (s5.p2 / possible-01))
                            :op1 (s5.b / bowl-01)
                            :op2 (s5.c3 / cup))
               :ARG2 (s5.a4 / around
                            :op1 (s5.t / tray
                                       :same-as s1.t2))
               :mod (s5.a2 / also)))