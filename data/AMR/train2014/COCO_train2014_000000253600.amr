# ::id train2014~COCO_train2014_000000253600
# ::doc_file train2014~COCO_train2014_000000253600
# ::tok A yellow school bus is driving down a street in front of a tall building . <next_sent> The bus is on the left side of the street , and the building is on the right . <next_sent> There are also two benches on the right side of the street , one near the front of the building and the other further back .
(d / document
   :snt1 (s1.d2 / drive-01
                :ARG0 (s1.b2 / bus
                             :ARG1-of (s1.y / yellow-02)
                             :mod (s1.s / school))
                :ARG1 (s1.s2 / street
                             :location (s1.i / in-front-of
                                             :op1 (s1.b / building
                                                        :mod (s1.t / tall))))
                :direction (s1.d / down))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.b3 / bus
                                       :same-as s1.b2)
                          :ARG2 (s2.s / side
                                      :ARG1-of (s2.l / left-20)
                                      :part-of (s2.s2 / street
                                                      :same-as s1.s2)))
               :op2 (s2.b2 / building
                           :ARG1-of (s2.r / right-04)
                           :same-as s1.b))
   :snt3 (s3.a2 / and
                :op1 (s3.b2 / bench
                            :ARG1-of (s3.n / near-02
                                           :ARG2 (s3.f / front
                                                       :part-of (s3.b4 / building
                                                                       :same-as s1.b)))
                            :ARG2-of (s3.i / include-91)
                            :ARG1-of s3.i
                            :location (s3.s / side
                                            :ARG1-of (s3.r / right-04)
                                            :part-of (s3.s2 / street
                                                            :same-as s1.s2))
                            :mod (s3.a / also)
                            :quant "1"
                            :quant "2")
                :op2 (s3.b3 / bench
                            :location (s3.b / back
                                            :mod (s3.f2 / further)))))