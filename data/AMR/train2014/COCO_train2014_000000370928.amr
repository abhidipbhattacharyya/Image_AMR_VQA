# ::id train2014~COCO_train2014_000000370928
# ::doc_file train2014~COCO_train2014_000000370928
# ::tok The image shows a small room with a white refrigerator and a window . <next_sent> The refrigerator is located on the left side of the room and has a few items on top of it . <next_sent> There is a box of chips and a bottle on the top of the refrigerator . <next_sent> The window is located on the right side of the room and has a curtain on it . <next_sent> The room also has a sink and a trash can .
(d / document
   :snt1 (s1.s / show-01
               :ARG0 (s1.i / image)
               :ARG1 (s1.r2 / room
                            :ARG0-of (s1.h / have-03
                                           :ARG1 (s1.a / and
                                                       :op1 (s1.r / refrigerator
                                                                  :ARG1-of (s1.w / white-03))
                                                       :op2 (s1.w2 / window)))
                            :mod (s1.s2 / small)))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.r / refrigerator
                                      :same-as s1.r)
                          :ARG2 (s2.s / side
                                      :ARG1-of (s2.l / left-20)
                                      :part-of (s2.r2 / room
                                                      :same-as s1.r2)))
               :op2 (s2.h / have-03
                          :ARG0 s2.r
                          :ARG1 (s2.i / item
                                      :quant (s2.f / few))
                          :location (s2.t / top
                                          :op1 s2.r)))
   :snt3 (s3.a / and
               :location (s3.t / top
                               :part-of (s3.r / refrigerator
                                              :same-as s1.r))
               :op1 (s3.b2 / box
                           :consist-of (s3.c / chip))
               :op2 (s3.b / bottle))
   :snt4 (s4.a / and
               :op1 (s4.l / locate-01
                          :ARG1 (s4.w / window
                                      :same-as s1.w2)
                          :location (s4.s / side
                                          :ARG1-of (s4.r / right-04)
                                          :part-of (s4.r2 / room
                                                          :same-as s1.r2)))
               :op2 (s4.h / have-03
                          :ARG0 s4.w
                          :ARG1 (s4.c / curtain)))
   :snt5 (s5.h / have-03
               :ARG0 (s5.r / room
                           :same-as s1.r2)
               :ARG1 (s5.a2 / and
                            :op1 (s5.s / sink)
                            :op2 (s5.c / can
                                       :purpose (s5.t / trash)))
               :mod (s5.a / also)))