# ::id train2014~COCO_train2014_000000328121
# ::doc_file train2014~COCO_train2014_000000328121
# ::tok Two zebras are grazing on grass in a zoo enclosure . <next_sent> One zebra is eating grass and the other is eating a carrot . <next_sent> There are two rocks in the enclosure , one near the zebras and the other further away . <next_sent> The zebras are standing next to each other , and there is a deer in the background .
(d / document
   :snt1 (s1.g2 / graze-01
                :ARG0 (s1.e / elephant
                            :quant "2")
                :ARG1 (s1.g / grass)
                :location (s1.e2 / enclosure
                                 :mod (s1.z / zoo)))
   :snt2 (s2.a / and
               :op1 (s2.e / eat-01
                          :ARG0 (s2.z / zebra
                                      :quant (s2.o / one))
                          :ARG1 (s2.g / grass))
               :op2 (s2.e2 / eat-01
                           :ARG0 (s2.z2 / zebra
                                        :mod (s2.o2 / other))
                           :ARG1 (s2.c / carrot)))
   :snt3 (s3.a / and
               :op1 (s3.r / rock
                          :ARG1-of (s3.n / near-02
                                         :ARG2 (s3.e / elephant
                                                     :same-as s1.e))
                          :location (s3.e2 / enclosure
                                           :same-as s1.e2)
                          :quant "1"
                          :quant "2")
               :op2 (s3.r2 / rock
                           :location (s3.f / far
                                           :ARG2-of (s3.h / have-degree-91
                                                          :ARG1 s3.r2
                                                          :ARG3 (s3.m / more))
                                           :direction (s3.a2 / away))))
   :snt4 (s4.a / and
               :op1 (s4.s / stand-01
                          :ARG1 (s4.e2 / elephant
                                       :same-as s1.e)
                          :ARG2 (s4.n / next-to
                                      :op1 (s4.e / each
                                                 :op2 (s4.o / other))))
               :op2 (s4.d / deer
                          :location (s4.b / background))))