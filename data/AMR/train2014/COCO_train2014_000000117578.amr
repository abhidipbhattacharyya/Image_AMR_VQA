# ::id train2014~COCO_train2014_000000117578
# ::doc_file train2014~COCO_train2014_000000117578
# ::tok A pizza with mushrooms , onions , and pepperoni sits on a cardboard box . <next_sent> The pizza is cut into slices and topped with cheese . <next_sent> The onions are scattered around the pizza , with some on the top and others on the bottom . <next_sent> The pizza is placed on a table , ready to be eaten .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.p2 / pizza
                            :ARG0-of (s1.h / have-03
                                           :ARG1 (s1.a / and
                                                       :op1 (s1.m / mushroom)
                                                       :op2 (s1.m2 / mushroom)
                                                       :op3 (s1.p / pepperoni))))
               :ARG2 (s1.b / box
                           :consist-of (s1.c / cardboard)))
   :snt2 (s2.a / and
               :op1 (s2.c2 / cut-01
                           :ARG1 (s2.p / pizza
                                       :same-as s1.p2)
                           :ARG2 (s2.s / slice))
               :op2 (s2.t / top-01
                          :ARG1 s2.p
                          :ARG2 (s2.c / cheese)))
   :snt3 (s3.s / scatter-01
               :ARG1 (s3.m / mushroom
                           :quant (s3.s2 / some)
                           :ARG2-of (s3.i / include-91
                                          :ARG1 (s3.a / and
                                                      :op1 (s3.b / be-located-at-91
                                                                 :ARG1 s3.m
                                                                 :ARG2 (s3.t / top))
                                                      :op2 (s3.m2 / mushroom
                                                                  :location (s3.b2 / bottom)
                                                                  :mod (s3.o / other)))))
               :ARG2 (s3.a2 / around
                            :op1 (s3.p / pizza
                                       :same-as s1.p2)))
   :snt4 (s4.p2 / place-01
                :ARG1 (s4.p / pizza
                            :ARG1-of (s4.r / ready-02
                                           :ARG2 (s4.e / eat-01
                                                       :ARG1 s4.p))
                            :same-as s1.p2)
                :ARG2 (s4.t / table)))