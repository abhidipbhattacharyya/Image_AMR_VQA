# ::id train2014~COCO_train2014_000000203459
# ::doc_file train2014~COCO_train2014_000000203459
# ::tok Three zebras are standing in a grassy field , eating hay from a feeder . <next_sent> One zebra is on the left side , another in the middle , and the third on the right side . <next_sent> The zebras are facing each other , and they are all eating from the same feeder .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.s / stand-01
                          :ARG1 (s1.e2 / elephant
                                       :quant "3")
                          :ARG2 (s1.f2 / field
                                       :consist-of (s1.g / grass)))
               :op2 (s1.e / eat-01
                          :ARG0 s1.e2
                          :ARG1 (s1.h / hay
                                      :source (s1.t / thing
                                                    :ARG0-of (s1.f / feed-01)))))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.z / zebra
                                      :quant "1")
                          :ARG2 (s2.s / side
                                      :ARG1-of (s2.l / left-20)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.z2 / zebra
                                        :mod (s2.a2 / another))
                           :ARG2 (s2.m / middle))
               :op3 (s2.b3 / be-located-at-91
                           :ARG1 (s2.z3 / zebra
                                        :ord (s2.o / ordinal-entity
                                                   :value "3"))
                           :ARG2 (s2.s2 / side
                                        :ARG1-of (s2.r / right-04))))
   :snt3 (s3.a2 / and
                :op1 (s3.f / face-01
                           :ARG0 (s3.e3 / elephant
                                        :mod (s3.a / all)
                                        :same-as s1.e2)
                           :ARG1 (s3.e / each
                                       :mod (s3.o / other)))
                :op2 (s3.e2 / eat-01
                            :ARG0 s3.e3
                            :source (s3.t / thing
                                          :ARG0-of (s3.f2 / feed-01)
                                          :ARG1-of (s3.s / same-01)
                                          :same-as s1.t))))