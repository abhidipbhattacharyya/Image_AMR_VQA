# ::id train2014~COCO_train2014_000000068595
# ::doc_file train2014~COCO_train2014_000000068595
# ::tok A white truck is driving down a street with a green sign on the side of the road . <next_sent> The truck is on the road and is in front of a building . <next_sent> The street has multiple traffic lights , including one near the top left corner , another on the right side of the truck , and a third further down the street .
(d / document
   :snt1 (s1.d2 / drive-01
                :ARG0 (s1.t / truck
                            :ARG1-of (s1.w / white-03))
                :ARG1 (s1.s3 / street
                             :ARG0-of (s1.h / have-03
                                            :ARG1 (s1.s2 / sign
                                                         :ARG1-of (s1.g / green-02)
                                                         :location (s1.s / side
                                                                         :part-of (s1.r / road)))))
                :direction (s1.d / down))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.t / truck
                                      :same-as s1.t)
                          :ARG2 (s2.r / road
                                      :same-as s1.s3))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 s2.t
                           :ARG2 (s2.i / in-front-of
                                       :op1 (s2.b3 / building))))
   :snt3 (s3.h / have-03
               :ARG0 (s3.s2 / street
                            :same-as s1.s3)
               :ARG1 (s3.l2 / light
                            :quant (s3.m2 / multiple)
                            :ARG2-of (s3.i / include-01)
                            :mod (s3.t2 / traffic))
               :rel (s3.l4 / light
                           :location (s3.s / side
                                           :ARG1-of (s3.r / right-04)
                                           :part-of (s3.t3 / truck
                                                           :same-as s1.t))
                           :mod (s3.a2 / another))
               :rel (s3.i2 / include-91
                           :ARG1 (s3.a / and
                                       :op1 (s3.l3 / light
                                                   :ARG1-of (s3.n / near-02
                                                                  :ARG2 (s3.c / corner
                                                                              :ARG1-of (s3.l / left-20)
                                                                              :mod (s3.t / top)))
                                                   :quant "1")
                                       :op2 (s3.l5 / light
                                                   :ARG1-of (s3.h2 / have-degree-91
                                                                   :ARG2 (s3.f / far)
                                                                   :ARG3 (s3.m / more)
                                                                   :direction (s3.d / down
                                                                                    :op1 (s3.s3 / street
                                                                                                :same-as s1.s3)))
                                                   :ord (s3.o / ordinal-entity
                                                              :value "3")))
                           :ARG2 s3.l3)))