# ::id train2014~COCO_train2014_000000249856
# ::doc_file train2014~COCO_train2014_000000249856
# ::tok A half eaten sandwich is on a paper plate . <next_sent> The sandwich is cut in half and has a fork and knife on either side . <next_sent> The fork is on the left side of the plate and the knife is on the right . <next_sent> The sandwich is cut in half and has a carrot stick on the plate .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.s / sandwich
                           :ARG1-of (s1.e / eat-01
                                          :degree (s1.h / half)))
               :ARG2 (s1.p2 / plate
                            :consist-of (s1.p / paper)))
   :snt2 (s2.a / and
               :op1 (s2.c / cut-01
                          :ARG1 (s2.s / sandwich
                                      :same-as s1.s)
                          :manner (s2.h / half))
               :op2 (s2.h2 / have-03
                           :ARG0 s2.s
                           :ARG1 (s2.a2 / and
                                        :location (s2.s2 / side
                                                         :mod (s2.e / either))
                                        :op1 (s2.f / fork)
                                        :op2 (s2.k / knife))))
   :snt3 (s3.a / and
               :op1 (s3.b / be-located-at-91
                          :ARG1 (s3.f / fork)
                          :ARG2 (s3.s / side
                                      :ARG1-of (s3.l / left-20)
                                      :part-of (s3.p / plate
                                                     :same-as s1.p2)))
               :op2 (s3.b2 / be-located-at-91
                           :ARG1 (s3.k / knife
                                       :same-as s2.k)
                           :ARG2 (s3.r / right-04)))
   :snt4 (s4.a / and
               :op1 (s4.c2 / cut-01
                           :ARG1 (s4.s / sandwich
                                       :same-as s1.s)
                           :manner (s4.h / half))
               :op2 (s4.h2 / have-03
                           :ARG0 s4.s
                           :ARG1 (s4.s2 / stick
                                        :consist-of (s4.c / carrot))
                           :location (s4.p / plate
                                           :same-as s1.p2))))