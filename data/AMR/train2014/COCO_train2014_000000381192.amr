# ::id train2014~COCO_train2014_000000381192
# ::doc_file train2014~COCO_train2014_000000381192
# ::tok A desk with a laptop , two monitors , and a keyboard . <next_sent> The laptop is on the left side of the desk , with the monitors on the right side . <next_sent> The keyboard is in front of the laptop . <next_sent> There are also two cups on the desk , one near the left edge and the other near the right edge .
(d / document
   :snt1 (s1.d / desk
               :ARG0-of (s1.h / have-03
                              :ARG1 (s1.a / and
                                          :op1 (s1.l / laptop)
                                          :op2 (s1.m / monitor
                                                     :quant "2")
                                          :op3 (s1.k / keyboard))))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.l / laptop
                                      :same-as s1.l)
                          :ARG2 (s2.s / side
                                      :ARG1-of (s2.l2 / left-20)
                                      :part-of (s2.d / desk
                                                     :same-as s1.d)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.m / monitor
                                       :same-as s1.m)
                           :ARG2 s2.s
                           :ARG3 (s2.s2 / side
                                        :ARG1-of (s2.r / right-04))))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.k / keyboard
                           :same-as s1.k)
               :ARG2 (s3.i / in-front-of
                           :op1 (s3.l / laptop
                                      :same-as s1.l)))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.c / cup
                           :ARG1-of (s4.n / near-02
                                          :ARG2 (s4.e / edge
                                                      :ARG1-of (s4.l / left-20)))
                           :mod (s4.a / also)
                           :quant "1"
                           :quant "2")
               :ARG2 (s4.d / desk
                           :same-as s1.d)
               :rel (s4.a2 / and
                           :op1 s4.c
                           :op2 (s4.c2 / cup
                                       :ARG1-of (s4.n2 / near-02
                                                       :ARG2 (s4.e2 / edge
                                                                    :ARG1-of (s4.r / right-04)))
                                       :mod (s4.o / other)))))