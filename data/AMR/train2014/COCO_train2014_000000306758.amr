# ::id train2014~COCO_train2014_000000306758
# ::doc_file train2014~COCO_train2014_000000306758
# ::tok A pizza with lots of toppings is on a wooden tray . <next_sent> The pizza is placed on a dining table with a fork and a knife . <next_sent> There are also two bottles on the table , one near the top right corner and the other near the top left corner .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.p / pizza
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.c / continent
                                                      :name (s1.n / name
                                                                  :op2 "Health")
                                                      :quant (s1.l / lot))))
               :ARG2 (s1.t / tray
                           :consist-of (s1.w / wood)))
   :snt2 (s2.p2 / place-01
                :ARG1 (s2.p / pizza
                            :same-as s1.p)
                :ARG2 (s2.t / table
                            :mod (s2.d / dine-01))
                :instrument (s2.a / and
                                  :op1 (s2.f / fork)
                                  :op2 (s2.k / knife)))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.b2 / bottle
                            :ARG2-of (s3.i / include-91
                                           :ARG1 (s3.a2 / and
                                                        :op2 (s3.b3 / bottle
                                                                    :ARG1-of (s3.n / near-02
                                                                                   :ARG2 (s3.c / corner
                                                                                               :ARG1-of (s3.r / right-04)
                                                                                               :mod (s3.t2 / top)))
                                                                    :ARG1-of (s3.n2 / near-02
                                                                                    :ARG2 (s3.c2 / corner
                                                                                                 :ARG1-of (s3.l / left-20)
                                                                                                 :mod (s3.t3 / top)))
                                                                    :quant "1"))
                                           :op1-of s3.a2)
                            :ARG1-of s3.i
                            :mod (s3.a / also)
                            :quant "2")
               :ARG2 (s3.t / table
                           :same-as s2.t)))