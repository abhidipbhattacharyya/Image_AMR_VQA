# ::id train2014~COCO_train2014_000000055629
# ::doc_file train2014~COCO_train2014_000000055629
# ::tok A man in a white shirt and black pants is petting a sheep through a fence . <next_sent> The sheep is the center of attention , with the man 's hand on its head . <next_sent> There are several other sheep in the background , some standing and some sitting . <next_sent> The man is also holding a bicycle , which is leaning against the fence .
(d / document
   :snt1 (s1.p2 / pet
                :ARG0 (s1.m / man
                            :domain (s1.a / and
                                          :op1 (s1.s2 / shirt
                                                      :ARG1-of (s1.w / white-03))
                                          :op2 (s1.p / pants
                                                     :ARG1-of (s1.b / black-04))))
                :ARG1 (s1.s / sheep)
                :location (s1.t / through
                                :op1 (s1.f / fence)))
   :snt2 (s2.c / center-01
               :ARG1 (s2.s / sheep
                           :part (s2.h2 / head)
                           :same-as s1.s)
               :ARG2 (s2.a / attend-02)
               :manner (s2.h / hand
                             :location s2.h2
                             :part-of (s2.m / man
                                            :same-as s1.m)))
   :snt3 (s3.a / and
               :op1 (s3.s3 / sheep
                           :quant (s3.s5 / some)
                           :ARG1-of (s3.s7 / stand-01))
               :op2 (s3.s4 / sit-01
                           :ARG1 s3.s3
                           :ARG2 (s3.s6 / some))
               :rel (s3.s2 / sheep
                           :quant (s3.s / several)
                           :ARG2-of (s3.i / include-91
                                          :ARG1 s3.s3)
                           :location (s3.b / background)
                           :mod (s3.o / other)))
   :snt4 (s4.h / hold-01
               :ARG0 (s4.m / man
                           :same-as s1.m)
               :ARG1 (s4.b / bicycle
                           :ARG1-of (s4.l / lean-01
                                          :ARG2 (s4.a / against
                                                      :op1 (s4.f / fence
                                                                 :same-as s1.f))))
               :mod (s4.a2 / also)))