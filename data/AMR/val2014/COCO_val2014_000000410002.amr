# ::id val2014~COCO_val2014_000000410002
# ::doc_file val2014~COCO_val2014_000000410002
# ::tok A display case filled with various donuts and pastries . <next_sent> The donuts are arranged in rows and come in different flavors and toppings . <next_sent> There are at least 12 donuts visible in the display case . <next_sent> The pastries are placed on trays and plates , and some are stacked on top of each other . <next_sent> The display case is filled with a wide assortment of delicious treats , making it an enticing sight for anyone with a sweet tooth .
(d / document
   :snt1 (s1.c / case
               :ARG1-of (s1.f / fill-01
                              :ARG2 (s1.a / and
                                          :mod (s1.v / various)
                                          :op1 (s1.d2 / donut)
                                          :op2 (s1.p / pastries)))
               :ARG2-of (s1.d / display-01))
   :snt2 (s2.a / and
               :op1 (s2.a3 / arrange-01
                           :ARG1 (s2.d2 / donut
                                        :same-as s1.d2)
                           :ARG2 (s2.r / row))
               :op2 (s2.c2 / come-01
                           :ARG1 s2.d2
                           :ARG3 (s2.a2 / and
                                        :ARG1-of (s2.d / differ-02)
                                        :op1 (s2.c / color-01
                                                   :ARG1 s2.d2)
                                        :op2 (s2.t / top-01
                                                   :ARG1 s2.d2))))
   :snt3 (s3.p / possible-01
               :ARG1 (s3.s / see-01
                           :ARG1 (s3.d2 / donut
                                        :quant (s3.a / at-least
                                                     :op1 "12"))
                           :location (s3.c / case
                                           :ARG2-of (s3.d / display-01)
                                           :same-as s1.c)))
   :snt4 (s4.a2 / and
                :op1 (s4.p / place-01
                           :ARG1 (s4.s / sandwich
                                       :same-as s1.a)
                           :ARG2 (s4.a / and
                                       :op1 (s4.r / Trayvon)
                                       :op2 (s4.p2 / plate)))
                :op2 (s4.s3 / stack-01
                            :ARG1 (s4.f / food-dish
                                        :quant (s4.s2 / some))
                            :ARG2 (s4.t / top
                                        :op1 (s4.o / other
                                                   :mod (s4.e / each)))))
   :snt5 (s5.f / fill-01
               :ARG0-of (s5.m / make-02
                              :ARG1 (s5.s / sight
                                          :ARG0-of (s5.t / tempt-01
                                                         :ARG1 (s5.a / anyone
                                                                     :ARG0-of (s5.h / have-03
                                                                                    :ARG1 (s5.t2 / tooth
                                                                                                 :ARG1-of (s5.s2 / sweet-05)))))
                                          :domain (s5.c / case
                                                        :ARG2-of (s5.d2 / display-01)
                                                        :ARG1-of s5.f
                                                        :same-as s1.c)))
               :ARG2 (s5.a2 / assortment
                            :ARG1-of (s5.w / wide-02)
                            :consist-of (s5.t3 / treat-01
                                               :mod (s5.d / delicious)))))