# ::id val2014~COCO_val2014_000000184978
# ::doc_file val2014~COCO_val2014_000000184978
# ::tok A person in a blue jacket is snowboarding down a snowy hill . <next_sent> The person is wearing a hat and is surrounded by trees . <next_sent> The snowboarder is in the middle of the scene , and the snowboard is visible beneath them . <next_sent> The snowy hill is covered with trees , and the person is making their way down the slope .
(d / document
   :snt1 (s1.s / ski-01
               :ARG0 (s1.p / person
                           :mod (s1.j / jacket
                                      :mod (s1.b / blue)))
               :ARG1 (s1.h / hill
                           :ARG1-of (s1.s2 / snowy-02))
               :direction (s1.d / down))
   :snt2 (s2.a / and
               :op1 (s2.w / wear-01
                          :ARG0 (s2.p / person
                                      :same-as s1.p)
                          :ARG1 (s2.h / hat))
               :op2 (s2.s / surround-01
                          :ARG1 (s2.t / tree)
                          :ARG2 s2.p))
   :snt3 (s3.a / and
               :op1 (s3.b / be-located-at-91
                          :ARG1 (s3.p / person
                                      :ARG0-of (s3.b3 / board-05
                                                      :ARG1 (s3.s3 / snow))
                                      :same-as s1.p)
                          :ARG2 (s3.m / middle
                                      :part-of (s3.s / scene)))
               :op2 (s3.p2 / possible-01
                           :ARG1 (s3.s2 / see-01
                                        :ARG1 (s3.b2 / beneath
                                                     :op1 s3.m))))
   :snt4 (s4.a / and
               :op1 (s4.c / cover-02
                          :ARG1 (s4.h / hill
                                      :ARG1-of (s4.s2 / snowy-02)
                                      :same-as s1.h)
                          :ARG2 (s4.t / tree))
               :op2 (s4.m / make-19
                          :ARG0 (s4.p / person
                                      :same-as s1.p)
                          :ARG1 (s4.w / way
                                      :poss s4.p)
                          :ARG2 (s4.s / slope
                                      :same-as s1.h)
                          :direction (s4.d / down))))