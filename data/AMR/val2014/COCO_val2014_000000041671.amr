# ::id val2014~COCO_val2014_000000041671
# ::doc_file val2014~COCO_val2014_000000041671
# ::tok A slice of cake is on a plate with strawberries on top , and a glass of wine is next to it . <next_sent> The cake is on a table with a fork and a knife nearby . <next_sent> There are two wine glasses , one with a glass of wine and the other with a glass of water .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.b / be-located-at-91
                          :ARG1 (s1.s / slice
                                      :consist-of (s1.c / cake))
                          :ARG2 (s1.p / plate
                                      :ARG0-of (s1.h / have-03
                                                     :ARG1 (s1.m / mountain
                                                                 :name (s1.n / name
                                                                             :op1 "diplomat")
                                                                 :location (s1.t / top
                                                                                 :domain s1.p)))))
               :op2 (s1.n2 / next-to
                           :domain (s1.w / wine
                                         :quant (s1.v / volume-quantity
                                                      :unit (s1.g / glass)
                                                      :quant "1"))
                           :op1 s1.p))
   :snt2 (s2.b / be-located-at-91
               :ARG1 (s2.c / cake
                           :same-as s1.s)
               :ARG2 (s2.t / table)
               :manner (s2.b2 / be-located-at-91
                              :ARG1 (s2.a / and
                                          :op1 (s2.f / fork)
                                          :op2 (s2.k / knife))
                              :ARG2 (s2.n / nearby)))
   :snt3 (s3.a / and
               :op1 (s3.g / glass
                          :mod (s3.w2 / wine)
                          :quant "2")
               :op2 (s3.g2 / glass
                           :quant (s3.v / volume-quantity
                                        :unit (s3.g3 / glass))
                           :ARG0-of (s3.h / have-03
                                          :ARG1 (s3.w / water
                                                      :quant (s3.g4 / glass)))
                           :mod (s3.o / other)
                           :quant "1")))