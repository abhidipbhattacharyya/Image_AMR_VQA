# ::id val2014~COCO_val2014_000000217005
# ::doc_file val2014~COCO_val2014_000000217005
# ::tok The image shows a forest with a group of plants growing in the dirt . <next_sent> There are several plants in the foreground , with some of them appearing to be growing out of the ground . <next_sent> The plants are green and yellow , and they are scattered throughout the scene . <next_sent> The forest is also home to a few trees , which can be seen in the background .
(d / document
   :snt1 (s1.s / show-01
               :ARG0 (s1.i / image)
               :ARG1 (s1.f / forest
                           :location-of (s1.g2 / grow-03
                                               :ARG1 (s1.p / plant
                                                           :quant (s1.g / group))
                                               :location (s1.d / dirt))))
   :snt2 (s2.b / be-located-at-91
               :ARG1 (s2.p / plant
                           :quant (s2.s / several))
               :ARG2 (s2.f / foreground)
               :rel (s2.p2 / plant
                           :quant (s2.s2 / some)
                           :ARG1-of (s2.i / include-91
                                          :ARG2 s2.p)
                           :ARG1-of (s2.g2 / grow-01
                                           :ARG1-of (s2.a / appear-02)
                                           :ARG1-of (s2.o / out-06
                                                          :ARG2 (s2.g / ground)))))
   :snt3 (s3.a2 / and
                :op1 (s3.a / and
                           :op1 (s3.p / plant
                                      :ARG1-of (s3.g / green-02)
                                      :same-as s2.p)
                           :op2 (s3.p2 / plant
                                       :ARG1-of (s3.y / yellow-02)))
                :op2 (s3.s / scatter-01
                           :ARG1 s3.a
                           :ARG2 (s3.s2 / scene
                                        :same-as s1.f)))
   :snt4 (s4.h / home
               :beneficiary (s4.t / tree
                                  :quant (s4.f / few)
                                  :ARG1-of (s4.s / see-01
                                                 :ARG1-of (s4.p / possible-01)
                                                 :location (s4.b / background)))
               :domain (s4.f2 / forest
                              :same-as s1.f)
               :mod (s4.a / also)))