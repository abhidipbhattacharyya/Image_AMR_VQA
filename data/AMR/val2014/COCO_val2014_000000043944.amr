# ::id val2014~COCO_val2014_000000043944
# ::doc_file val2014~COCO_val2014_000000043944
# ::tok A plate of food is on a table with a sandwich cut in half and a side of french fries . <next_sent> The fries are cut into pieces and are placed on the plate . <next_sent> There are also two forks and two knives on the table , one near the plate and the other on the opposite side .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.t / table
                          :location-of (s1.p / plate
                                             :consist-of (s1.f / food)))
               :op2 (s1.c2 / cut-01
                           :ARG1 (s1.s / sandwich)
                           :manner (s1.h / half))
               :op3 (s1.s2 / side
                           :consist-of (s1.f2 / fry-01
                                              :mod (s1.c / country
                                                         :name (s1.n / name
                                                                     :op1 "France")))))
   :snt2 (s2.a / and
               :op1 (s2.c / cut-01
                          :ARG1 (s2.f / fry-01
                                      :same-as s1.f2)
                          :ARG2 (s2.p / piece))
               :op2 (s2.p2 / place-01
                           :ARG1 s2.f
                           :ARG2 (s2.p3 / plate
                                        :same-as s1.p)))
   :snt3 (s3.a2 / and
                :location (s3.t / table
                                :same-as s1.t)
                :mod (s3.c / continent
                           :quant "2")
                :op1 (s3.a3 / and
                            :ARG1-of (s3.n / near-02
                                           :ARG2 (s3.p / plate
                                                       :same-as s1.p))
                            :op1 s3.c
                            :op2 (s3.c2 / continent
                                        :quant "1")
                            :op2 (s3.k / knife
                                       :quant "2"))
                :op2 (s3.k2 / knife
                            :location (s3.s / side
                                            :ARG1-of (s3.o / opposite-01))
                            :mod (s3.o2 / other))
                :rel (s3.a / also)))