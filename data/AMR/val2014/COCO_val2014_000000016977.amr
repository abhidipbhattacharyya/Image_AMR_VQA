# ::id val2014~COCO_val2014_000000016977
# ::doc_file val2014~COCO_val2014_000000016977
# ::tok A black car is parked next to a red bench on a city street . <next_sent> The bench is located on the sidewalk . <next_sent> There are several other cars parked along the street , including a silver car parked behind the black car . <next_sent> A person is riding a motorcycle down the street .
(d / document
   :snt1 (s1.p / park-01
               :ARG1 (s1.c / car
                           :ARG1-of (s1.b2 / black-04))
               :ARG2 (s1.n / next-to
                           :op1 (s1.b / bench
                                      :ARG1-of (s1.r / red-02)
                                      :location (s1.s / street
                                                      :mod (s1.c2 / city)))))
   :snt2 (s2.b / be-located-at-91
               :ARG1 (s2.b2 / bench
                            :same-as s1.r)
               :ARG2 (s2.s / sidewalk))
   :snt3 (s3.p / park-01
               :ARG1 (s3.c / car
                           :quant (s3.s / several)
                           :ARG2-of (s3.i / include-91
                                          :ARG1 (s3.c2 / car
                                                       :ARG1-of (s3.p2 / park-01
                                                                       :ARG2 (s3.b / behind
                                                                                   :op1 (s3.c3 / car
                                                                                               :ARG1-of (s3.b2 / black-04)
                                                                                               :same-as s1.c)))
                                                       :mod (s3.s2 / silver)))
                           :mod (s3.o / other))
               :ARG2 (s3.a / along
                           :op1 (s3.s3 / street
                                       :same-as s1.s)))
   :snt4 (s4.r / ride-01
               :ARG0 (s4.p / person)
               :ARG1 (s4.m / motorcycle)
               :direction (s4.d / down)
               :op1 (s4.s / street
                          :same-as s1.s)))