# ::id val2014~COCO_val2014_000000468124
# ::doc_file val2014~COCO_val2014_000000468124
# ::tok A double decker bus is parked in a grassy field , with a red and white color scheme . <next_sent> The bus has a Northumbria sign on the side , and the door is open . <next_sent> There are two people standing in front of the bus , one closer to the left side and the other closer to the right side .
(d / document
   :snt1 (s1.p / park-01
               :ARG1 (s1.b / bus
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.a / and
                                                      :mod (s1.s / scheme)
                                                      :op1 (s1.c / color
                                                                 :ARG1-of (s1.r / red-02))
                                                      :op2 (s1.c2 / color
                                                                  :ARG1-of (s1.w / white-03))))
                           :mod (s1.d / decker
                                      :mod (s1.d2 / double)))
               :ARG2 (s1.f / field
                           :consist-of (s1.g / grass)))
   :snt2 (s2.a / and
               :op1 (s2.h / have-03
                          :ARG0 (s2.b / bus
                                      :same-as s1.d)
                          :ARG1 (s2.s2 / sign
                                       :name (s2.n / name
                                                   :op1 "Northumbria"))
                          :location (s2.s / side))
               :op2 (s2.o / open-01
                          :ARG1 (s2.d / door)))
   :snt3 (s3.s3 / stand-01
                :ARG1 (s3.p / person
                            :ARG2-of (s3.i2 / include-91)
                            :ARG1-of s3.i2
                            :quant "2")
                :ARG2 (s3.i / in-front-of
                            :op1 (s3.b / bus
                                       :same-as s1.d))
                :rel (s3.c / close-10
                           :ARG2 (s3.s / side
                                       :ARG1-of (s3.l / left-20))
                           :ARG2-of (s3.h / have-degree-91
                                          :ARG1 (s3.p2 / person
                                                       :mod (s3.o / other
                                                                  :ARG1-of (s3.c2 / close-10
                                                                                  :ARG2 (s3.s2 / side
                                                                                               :ARG1-of (s3.r / right-04))
                                                                                  :ARG2-of (s3.h2 / have-degree-91
                                                                                                  :ARG1 s3.p2
                                                                                                  :ARG3 (s3.m2 / more))))
                                                       :quant "1")
                                          :ARG3 (s3.m / more))
                           :ARG1 s3.p2)))