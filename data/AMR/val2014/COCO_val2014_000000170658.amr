# ::id val2014~COCO_val2014_000000170658
# ::doc_file val2014~COCO_val2014_000000170658
# ::tok A breakfast sandwich is on a plate with a fork and two mugs . <next_sent> The sandwich is cut in half and has bacon and egg on it . <next_sent> The mugs are on either side of the plate , one with a bird on it and the other with a frog . <next_sent> The fork is on the left side of the plate .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.s / sandwich
                           :ARG1-of (s1.b2 / breakfast-01))
               :ARG2 (s1.p / plate)
               :accompanier (s1.a / and
                                  :op1 (s1.f / fork)
                                  :op2 (s1.s2 / saucer
                                              :quant "2")))
   :snt2 (s2.a / and
               :op1 (s2.c / cut-01
                          :ARG1 (s2.s / sandwich
                                      :same-as s1.s)
                          :manner (s2.h / half))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.a2 / and
                                        :op1 (s2.b / bacon)
                                        :op2 (s2.e / egg))
                           :ARG2 s2.s))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.m / mug-01
                           :ARG1-of (s3.h / have-03
                                          :ARG0 (s3.o / one)
                                          :ARG1 (s3.b2 / bird)))
               :ARG2 (s3.s / side
                           :mod (s3.e / either)
                           :part-of (s3.p / plate
                                          :same-as s1.a))
               :rel (s3.h2 / have-03
                           :ARG0 (s3.m2 / mug-01
                                        :ARG1 (s3.a / and
                                                    :op1 s3.m
                                                    :op2 s3.m2)
                                        :mod (s3.o2 / other)
                                        :same-as s1.s2)
                           :ARG1 s3.m2
                           :ARG1 (s3.f / frog)))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.f / fork
                           :same-as s1.f)
               :ARG2 (s4.s / side
                           :ARG1-of (s4.l / left-20)
                           :part-of (s4.p / plate
                                          :same-as s1.a))))