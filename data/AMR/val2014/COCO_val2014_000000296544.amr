# ::id val2014~COCO_val2014_000000296544
# ::doc_file val2014~COCO_val2014_000000296544
# ::tok A three - tiered cake is the centerpiece of a table filled with pizza . <next_sent> The cake is adorned with flowers and is surrounded by pizza on all sides . <next_sent> There are three pizzas , one on the left , one on the right , and one on the bottom . <next_sent> The table is set with a fork and a knife , ready for the guests to enjoy the cake and pizza .
(d / document
   :snt1 (s1.c2 / centerpiece
                :domain (s1.c / cake
                              :mod (s1.t2 / tier
                                          :quant "3"))
                :part-of (s1.t / table
                               :ARG1-of (s1.f / fill-01
                                              :ARG2 (s1.p / pizza))))
   :snt2 (s2.a3 / and
                :op1 (s2.a / adorn-01
                           :ARG1 (s2.c / cake
                                       :same-as s1.c)
                           :ARG2 (s2.f / flower))
                :op2 (s2.s2 / surround-01
                            :ARG1 (s2.p / pizza)
                            :ARG2 s2.c
                            :location (s2.s / side
                                            :mod (s2.a2 / all))))
   :snt3 (s3.p / pizzeria
               :rel (s3.a / and
                          :op1 (s3.t / thing
                                     :ARG1-of (s3.l / left-19))
                          :op2 (s3.t2 / thing
                                      :ARG1-of (s3.r / right-08)
                                      :location (s3.b / bottom)
                                      :quant "1"))
               :quant "3")
   :snt4 (s4.s / set-01
               :ARG1 (s4.t / table
                           :ARG1-of (s4.r / ready-02
                                          :ARG2 (s4.e / enjoy-01
                                                      :ARG0 (s4.g / guest)
                                                      :ARG1 (s4.a2 / and
                                                                   :op1 (s4.c / cake
                                                                              :same-as s1.c)
                                                                   :op2 (s4.p / pizza))))
                           :same-as s1.t)
               :manner (s4.a / and
                             :op1 (s4.f / fork)
                             :op2 (s4.k / knife))))