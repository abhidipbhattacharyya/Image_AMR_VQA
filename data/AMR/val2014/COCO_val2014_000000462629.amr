# ::id val2014~COCO_val2014_000000462629
# ::doc_file val2014~COCO_val2014_000000462629
# ::tok A large group of old refrigerators are stacked together outside of a building . <next_sent> The refrigerators are white and are piled on top of each other in a somewhat disorganized manner . <next_sent> There are at least 10 refrigerators in the pile , with some stacked on top of each other and others sitting next to each other . <next_sent> The scene appears to be a storage area or a place where old appliances are being discarded or awaiting disposal .
(d / document
   :snt1 (s1.s / stack-01
               :ARG1 (s1.g / group
                           :consist-of (s1.r / refrigerator
                                             :mod (s1.o / old))
                           :mod (s1.l / large))
               :location (s1.o2 / outside
                                :op1 (s1.b / building))
               :mod (s1.t / together))
   :snt2 (s2.a / and
               :op1 (s2.w / white-03
                          :ARG1 (s2.r / refrigerator
                                      :same-as s1.r))
               :op2 (s2.p / pile-01
                          :ARG1 s2.r
                          :ARG2 (s2.t / top
                                      :op1 (s2.o2 / other
                                                  :mod (s2.e / each)))
                          :manner (s2.m / manner
                                        :ARG1-of (s2.o / organize-01
                                                       :degree (s2.s / somewhat)
                                                       :polarity "-"))))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.r / refrigerator
                           :quant (s3.a2 / at-least
                                         :op1 "10"
                                         :same-as s1.r)
                           :example (s3.a / and
                                          :op1 (s3.s3 / stack-01
                                                      :ARG1 (s3.r2 / refrigerator
                                                                   :quant (s3.s2 / some)
                                                                   :mod (s3.o2 / other))
                                                      :ARG2 (s3.t / top
                                                                  :op1 (s3.e / each
                                                                             :mod (s3.o / other))))
                                          :op2 (s3.s / sit-01
                                                     :ARG1 s3.r2
                                                     :ARG2 (s3.n / next-to
                                                                 :op1 s3.e))))
               :ARG2 (s3.p / pile
                           :same-as s1.g))
   :snt4 (s4.a / appear-02
               :ARG1 (s4.o2 / or
                            :domain (s4.s / scene)
                            :op1 (s4.a3 / area
                                        :ARG2-of (s4.s2 / store-01))
                            :op2 (s4.p / place
                                       :location-of (s4.o3 / or
                                                           :op1 (s4.d / discard-01
                                                                      :ARG1 (s4.a2 / appliance
                                                                                   :mod (s4.o / old)))
                                                           :op2 (s4.a4 / await-01
                                                                       :ARG1 s4.a2
                                                                       :ARG2 (s4.d2 / dispose-01
                                                                                    :ARG1 s4.a2)))))))