# ::id val2014~COCO_val2014_000000569618
# ::doc_file val2014~COCO_val2014_000000569618
# ::tok A large pizza is on a pan with a few slices missing . <next_sent> The pizza is topped with mushrooms and pepperoni . <next_sent> There are two plates on the table , one with a pizza slice and the other with a pizza slice and a few olives . <next_sent> A person is sitting at the table , and a knife is on the table as well .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.b / be-located-at-91
                          :ARG1 (s1.p2 / pizza
                                       :mod (s1.l / large))
                          :ARG2 (s1.p / pan))
               :op2 (s1.m / miss-01
                          :ARG1 (s1.s / slice
                                      :quant (s1.f / few))))
   :snt2 (s2.t / top-01
               :ARG1 (s2.p2 / pizza
                            :same-as s1.p2)
               :ARG2 (s2.a / and
                           :op1 (s2.m / mushroom)
                           :op2 (s2.p / pepperoni)))
   :snt3 (s3.c / cause-01
               :ARG0 (s3.a / and
                           :op1 (s3.p2 / plate
                                       :ARG0-of (s3.h / have-03
                                                      :ARG1 (s3.s / slice
                                                                  :mod (s3.p / pizza)))
                                       :location (s3.t / table)
                                       :quant "1"
                                       :quant "2")
                           :op2 (s3.p3 / plate
                                       :ARG0-of (s3.h2 / have-03
                                                       :ARG1 (s3.a2 / and
                                                                    :op1 (s3.s2 / slice
                                                                                :mod s3.p)
                                                                    :op2 (s3.l / Olive
                                                                               :quant (s3.f / few))))
                                       :mod (s3.o / other)))
               :ARG1 s3.a)
   :snt4 (s4.a / and
               :op1 (s4.s / sit-01
                          :ARG1 (s4.p / person)
                          :ARG2 (s4.t / table
                                      :same-as s3.t))
               :op2 (s4.b / be-located-at-91
                          :ARG1 (s4.k / knife)
                          :ARG2 s4.t
                          :mod (s4.a2 / as-well))))