# ::id val2014~COCO_val2014_000000165455
# ::doc_file val2014~COCO_val2014_000000165455
# ::tok A green taxi cab is driving down a street with a bus in front of it . <next_sent> The taxi is in the middle of the street , and the bus is on the left side . <next_sent> There are also several other cars on the street , including one behind the taxi and another in front of it . <next_sent> The street is lined with trees , and there are a few people walking along the sidewalk .
(d / document
   :snt1 (s1.d2 / drive-01
                :ARG0 (s1.c / cab
                            :ARG0-of (s1.h / have-03
                                           :ARG1 (s1.b / bus
                                                       :location (s1.i / in-front-of
                                                                       :op1 s1.c)))
                            :ARG1-of (s1.g / green-02)
                            :mod (s1.t / taxi))
                :ARG1 (s1.s / street)
                :direction (s1.d / down))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.t / taxi
                                      :same-as s1.t)
                          :ARG2 (s2.m / middle
                                      :part-of (s2.s2 / street
                                                      :same-as s1.s)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.b3 / bus
                                        :same-as s1.b)
                           :ARG2 (s2.s / side
                                       :ARG1-of (s2.l / left-20))))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.c / car
                           :quant (s3.s / several)
                           :ARG2-of (s3.i2 / include-91
                                           :ARG1 (s3.a2 / and
                                                        :op1 (s3.c2 / car
                                                                    :location (s3.b2 / behind
                                                                                     :op1 (s3.t / taxi
                                                                                                :location (s3.i / in-front-of)
                                                                                                :op1-of s3.i
                                                                                                :same-as s1.t))
                                                                    :mod (s3.a3 / another)
                                                                    :op2-of s3.a2
                                                                    :quant "1")))
                           :mod (s3.o / other))
               :ARG2 (s3.s2 / street
                            :same-as s1.s)
               :mod (s3.a / also))
   :snt4 (s4.a2 / and
                :op1 (s4.l / line-01
                           :ARG1 (s4.s2 / street
                                        :same-as s1.s)
                           :ARG2 (s4.t / tree))
                :op2 (s4.w / walk-01
                           :ARG0 (s4.p / person
                                       :quant (s4.f / few))
                           :ARG2 (s4.a / along
                                       :op1 (s4.s / sidewalk)))))