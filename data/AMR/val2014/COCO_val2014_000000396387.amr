# ::id val2014~COCO_val2014_000000396387
# ::doc_file val2014~COCO_val2014_000000396387
# ::tok A plate of food is on a table , including a sandwich and a cup of coffee . <next_sent> The sandwich is stacked with meat and cheese , and the plate is white . <next_sent> A fork is placed next to the plate , and a cup of coffee is on the table as well .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.f / food
                           :quant (s1.p / plate)
                           :ARG2-of (s1.i / include-01
                                          :ARG1 (s1.a / and
                                                      :op1 (s1.s / sandwich)
                                                      :op2 (s1.c / coffee
                                                                 :quant (s1.v / volume-quantity
                                                                              :unit (s1.c2 / cup)
                                                                              :quant "1")))))
               :ARG2 (s1.t / table))
   :snt2 (s2.a2 / and
                :op1 (s2.s2 / stack-01
                            :ARG1 (s2.s / sandwich
                                        :same-as s1.s)
                            :ARG2 (s2.a / and
                                        :op1 (s2.m / meat)
                                        :op2 (s2.c / cheese)))
                :op2 (s2.w / white-03
                           :ARG1 (s2.p / plate
                                       :same-as s1.p)))
   :snt3 (s3.a / and
               :op1 (s3.p / place-01
                          :ARG1 (s3.f / fork)
                          :ARG2 (s3.n / next-to
                                      :op1 (s3.p2 / plate
                                                  :same-as s1.p)))
               :op2 (s3.b / be-located-at-91
                          :ARG1 (s3.c / coffee
                                      :quant (s3.v / volume-quantity
                                                   :unit (s3.c2 / cup)
                                                   :quant "1")
                                      :same-as s1.c)
                          :ARG2 s3.p2
                          :mod (s3.a2 / as-well))))