# ::id val2014~COCO_val2014_000000039671
# ::doc_file val2014~COCO_val2014_000000039671
# ::tok A pizza is on a table with a sign that says " Sven & Ol 's Grand Marais , MN . " <next_sent> There are several pizza slices on the table , and a person is reaching for one of them . <next_sent> A fork is also present on the table .
(d / document
   :snt1 (s1.s / say-01
               :ARG0 (s1.s3 / sign
                            :ARG0-of (s1.s2 / say-01
                                            :ARG1 (s1.o / organization
                                                        :name (s1.n / name
                                                                    :op1 "Sven"
                                                                    :op2 "&"
                                                                    :op3 "Ol"
                                                                    :op4 "Grand"
                                                                    :op5 "Marais")
                                                        :location (s1.s4 / state
                                                                         :name (s1.n2 / name
                                                                                      :op1 "MN")))))
               :ARG1 (s1.t / table
                           :location-of (s1.p / pizza)))
   :snt2 (s2.a / and
               :op1 (s2.t / table
                          :location-of (s2.s2 / slice
                                              :quant (s2.s / several)
                                              :mod (s2.p2 / pizza))
                          :same-as s1.s3)
               :op2 (s2.r / reach-03
                          :ARG0 (s2.p / person)
                          :ARG2 (s2.o / one
                                      :ARG1-of (s2.i / include-91
                                                     :ARG2 s2.s2))))
   :snt3 (s3.p / present-02
               :ARG1 (s3.f / fork)
               :ARG2 (s3.t / table
                           :same-as s1.s3)
               :mod (s3.a / also)))