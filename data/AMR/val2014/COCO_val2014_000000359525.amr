# ::id val2014~COCO_val2014_000000359525
# ::doc_file val2014~COCO_val2014_000000359525
# ::tok A plate of pancakes with a sausage link on the side sits on a table . <next_sent> The pancakes are stacked on top of each other , and the sausage link is placed on the plate next to the pancakes . <next_sent> A cup of coffee is also present on the table , along with a bottle of sugar - free syrup .
(d / document
   :snt1 (s1.s3 / sit-01
                :ARG1 (s1.p / plate
                            :consist-of (s1.e / enzyme
                                              :ARG0-of (s1.h / have-03
                                                             :ARG1 (s1.l / link-01
                                                                         :ARG1 (s1.s / sausage)
                                                                         :location (s1.s2 / side)))
                                              :ARG1-of (s1.t2 / tax-01)))
                :ARG2 (s1.t / table))
   :snt2 (s2.a / and
               :op1 (s2.s2 / stack-01
                           :ARG1 (s2.c / continent
                                       :name (s2.n / name)
                                       :ARG4-of s2.s2)
                           :ARG4 (s2.t / top
                                       :op1 (s2.e / each
                                                  :op2 (s2.o / other))))
               :op2 (s2.p / place-01
                          :ARG1 (s2.l / link
                                      :consist-of (s2.s / sausage)
                                      :same-as s1.s)
                          :ARG2 (s2.p2 / plate
                                       :location-of (s2.n2 / next-to
                                                           :op1 s2.c)
                                       :same-as s1.p))
               :rel (s2.c2 / continent
                           :same-as s1.t2))
   :snt3 (s3.p / present-02
               :ARG1 (s3.a2 / and
                            :op1 (s3.c / coffee
                                       :quant (s3.c2 / cup))
                            :op2 (s3.s2 / syrup
                                        :quant (s3.b / bottle)
                                        :ARG1-of (s3.f / free-04
                                                       :ARG2 (s3.s / sugar))))
               :ARG2 (s3.t / table
                           :same-as s1.t)
               :mod (s3.a / also)))