# ::id val2014~COCO_val2014_000000116061
# ::doc_file val2014~COCO_val2014_000000116061
# ::tok A group of people riding motorcycles down a street . <next_sent> There are four motorcycles , with one in the front , one in the middle , and two more in the back . <next_sent> The people on the motorcycles are wearing helmets for safety . <next_sent> There are also a couple of cars on the street , one near the front and another further back .
(d / document
   :snt1 (s1.r / ride-01
               :ARG0 (s1.g / group
                           :consist-of (s1.p / person))
               :ARG1 (s1.m / motorcycle)
               :direction (s1.d / down)
               :op1 (s1.s / street))
   :snt2 (s2.m3 / motorcycle
                :consist-of (s2.a / and
                                  :op1 (s2.m4 / motorcycle
                                              :location (s2.f / front)
                                              :quant "1")
                                  :op2 (s2.m5 / motorcycle
                                              :location (s2.m / middle)
                                              :location (s2.b / back)
                                              :mod (s2.m2 / more)
                                              :quant "1"
                                              :quant "2"))
                :quant "4")
   :snt3 (s3.w / wear-01
               :purpose (s3.s / safe-01
                              :ARG1 (s3.p / person
                                          :location (s3.m / motorcycle
                                                          :same-as s2.m3)
                                          :ARG0-of s3.w))
               :ARG1 (s3.m2 / motorcycle))
   :snt4 (s4.a2 / and
                :op1 (s4.c / car
                           :quant (s4.c4 / couple)
                           :location (s4.s / street
                                           :same-as s1.s)
                           :mod (s4.a / also))
                :op2 (s4.c3 / car
                            :location (s4.b / back
                                            :mod (s4.f2 / further))
                            :mod (s4.a3 / another))
                :rel (s4.c2 / car
                            :ARG1-of (s4.n / near-02
                                           :ARG2 (s4.f / front
                                                       :same-as s2.f))
                            :quant "1")))