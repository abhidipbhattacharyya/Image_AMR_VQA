# ::id val2014~COCO_val2014_000000447354
# ::doc_file val2014~COCO_val2014_000000447354
# ::tok A man is sitting at a table with a large pizza in front of him . <next_sent> The pizza is topped with pepperoni , cheese , and green peppers . <next_sent> The man is smiling and holding a pizza cutter . <next_sent> The table is surrounded by chairs , and there are several bottles on the table and around the room .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.m / man
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.p / pizza
                                                      :location (s1.i / in-front-of
                                                                      :op1 s1.m)
                                                      :mod (s1.l / large))))
               :ARG2 (s1.t / table))
   :snt2 (s2.t / top-01
               :ARG1 (s2.p3 / pizza
                            :same-as s1.l)
               :ARG2 (s2.a / and
                           :op1 (s2.p2 / pepperoni)
                           :op2 (s2.c / cheese)
                           :op3 (s2.p / pepper-spray
                                      :ARG1-of (s2.g / green-02))))
   :snt3 (s3.a / and
               :op1 (s3.s / smile-01
                          :ARG0 (s3.m / man
                                      :same-as s1.m))
               :op2 (s3.h / hold-01
                          :ARG0 s3.m
                          :ARG1 (s3.t / thing
                                      :ARG0-of (s3.c / cut-01
                                                     :ARG1 (s3.p / pizza)))))
   :snt4 (s4.a / and
               :op1 (s4.s2 / surround-01
                           :ARG1 (s4.c / chair)
                           :ARG2 (s4.t / table
                                       :same-as s1.t))
               :op2 (s4.a2 / and
                           :op1 (s4.b / be-located-at-91
                                      :ARG1 (s4.b2 / bottle
                                                   :quant (s4.s / several)))
                           :op2 (s4.a3 / around
                                       :op1 (s4.r / room)))))