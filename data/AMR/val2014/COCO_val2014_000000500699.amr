# ::id val2014~COCO_val2014_000000500699
# ::doc_file val2014~COCO_val2014_000000500699
# ::tok A plate of food is on a table , including pancakes , eggs , and potatoes . <next_sent> A glass of orange juice is next to the plate . <next_sent> A fork and a knife are also on the table , with the fork on the right side of the plate and the knife on the left .
(d / document
   :snt1 (s1.i / include-01
               :ARG1 (s1.a / and
                           :op1 (s1.e / egg)
                           :op2 (s1.e2 / egg)
                           :op3 (s1.p2 / potato))
               :ARG2 (s1.f / food
                           :consist s1.p)
               :rel (s1.t / table
                          :location-of (s1.p / plate)))
   :snt2 (s2.n / next-to
               :domain (s2.j / juice
                             :quant (s2.v / volume-quantity
                                          :unit (s2.g / glass))
                             :source (s2.o / orange))
               :op1 (s2.p / plate
                          :same-as s1.f))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.a2 / and
                            :op1 (s3.f / fork))
               :ARG1-of (s3.m / mean-01
                              :ARG2 (s3.a3 / and
                                           :op1 (s3.b2 / be-located-at-91
                                                       :ARG1 s3.f
                                                       :ARG2 (s3.s / side
                                                                   :ARG1-of (s3.r / right-04)
                                                                   :part-of (s3.p / plate
                                                                                  :part (s3.s2 / side
                                                                                               :ARG1-of (s3.l / left-19))
                                                                                  :same-as s1.f)))
                                           :op2 (s3.b3 / be-located-at-91
                                                       :ARG1 s3.a2
                                                       :ARG2 s3.s2
                                                       :ARG2 (s3.k / knife)
                                                       :op2 s3.k)))
               :ARG2 (s3.t / table
                           :same-as s1.t)
               :mod (s3.a / also)))