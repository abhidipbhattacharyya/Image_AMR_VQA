# ::id val2014~COCO_val2014_000000494439
# ::doc_file val2014~COCO_val2014_000000494439
# ::tok A train is parked on the tracks , with a group of people standing on the platform . <next_sent> The train is blue , red , and white , and is positioned next to a building . <next_sent> There are two traffic lights above the train , one on the left and one on the right . <next_sent> The people on the platform are scattered around , some closer to the train and others further away .
(d / document
   :snt1 (s1.p / park-01
               :ARG1 (s1.t2 / train
                            :ARG0-of (s1.s / stand-01
                                           :ARG1 (s1.g / group
                                                       :consist-of (s1.p2 / person))
                                           :ARG2 (s1.p3 / platform)))
               :ARG2 (s1.t / track))
   :snt2 (s2.a2 / and
                :op1 (s2.a / and
                           :domain (s2.t / train
                                         :same-as s1.t2)
                           :op1 (s2.b / blue)
                           :op2 (s2.r / red-02)
                           :op3 (s2.w / white-03))
                :op2 (s2.p / position-01
                           :ARG1 s2.t
                           :ARG2 (s2.n / next-to
                                       :op1 (s2.b2 / building))))
   :snt3 (s3.a2 / and
                :op1 (s3.l2 / light
                            :location (s3.a / above
                                            :op1 (s3.t2 / train
                                                        :same-as s1.t2))
                            :mod (s3.t / traffic)
                            :quant "2")
                :op2 (s3.l4 / light
                            :ARG1-of (s3.r / right-04)
                            :quant "1")
                :rel (s3.l3 / light
                            :ARG1-of (s3.l / left-19)
                            :quant "1"))
   :snt4 (s4.s / scatter-01
               :ARG1 (s4.p / person
                           :quant (s4.s2 / some)
                           :ARG2-of (s4.i / include-91
                                          :ARG1 (s4.c / close-10
                                                      :ARG1 s4.p
                                                      :ARG2 (s4.t / train
                                                                  :same-as s1.t2)
                                                      :ARG2-of (s4.h / have-degree-91
                                                                     :ARG1 (s4.p2 / person
                                                                                  :location (s4.a2 / away
                                                                                                   :extent (s4.f / further))
                                                                                  :mod (s4.o / other))
                                                                     :ARG3 (s4.m / more))))
                           :location (s4.p3 / platform
                                            :same-as s1.s
                                            :same-as s1.p3))
               :ARG2 (s4.a / around)))