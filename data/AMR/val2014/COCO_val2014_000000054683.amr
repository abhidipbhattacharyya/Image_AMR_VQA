# ::id val2014~COCO_val2014_000000054683
# ::doc_file val2014~COCO_val2014_000000054683
# ::tok A young man is standing in a kitchen , preparing a pizza . <next_sent> He is wearing a blue hoodie and is in the process of adding toppings to the pizza . <next_sent> The kitchen is well - equipped with a refrigerator , oven , and sink . <next_sent> There are several bowls and a spoon on the counter , as well as a potted plant nearby .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.s / stand-01
                          :ARG1 (s1.m / man
                                      :mod (s1.y / young))
                          :ARG2 (s1.k / kitchen))
               :op2 (s1.p2 / prepare-01
                           :ARG0 s1.m
                           :ARG1 (s1.p / pizza)))
   :snt2 (s2.a2 / and
                :op1 (s2.w / wear-01
                           :ARG0 (s2.h / he
                                       :same-as s1.m)
                           :ARG1 (s2.h2 / hoodie
                                        :mod (s2.b / blue)))
                :op2 (s2.p2 / process-02
                            :ARG0 s2.h
                            :ARG1 (s2.a / add-02
                                        :ARG0 s2.h
                                        :ARG1 (s2.p / pizza
                                                    :mod (s2.c / continent
                                                               :name (s2.n / name
                                                                           :op2 "Health"))
                                                    :same-as s1.p))))
   :snt3 (s3.e / equip-01
               :ARG1 (s3.k / kitchen
                           :same-as s1.k)
               :ARG2 (s3.a / and
                           :op1 (s3.r / refrigerator)
                           :op2 (s3.o / oven)
                           :op3 (s3.s / sink))
               :manner (s3.w / well))
   :snt4 (s4.a / and
               :op1 (s4.a2 / and
                           :op1 (s4.p3 / pound
                                       :quant (s4.s / several))
                           :op2 (s4.s2 / spoon))
               :op2 (s4.b / be-located-at-91
                          :ARG1 s4.a2
                          :ARG2 (s4.c / counter))
               :op2 (s4.p / plant
                          :ARG1-of (s4.p2 / plant-01)
                          :location (s4.n / nearby))))