# ::id val2014~COCO_val2014_000000185221
# ::doc_file val2014~COCO_val2014_000000185221
# ::tok A person is eating a slice of pizza in a restaurant . <next_sent> There are two pizzas on the table , one of which is larger and has a lot of toppings . <next_sent> The person is using a fork and knife to eat the pizza . <next_sent> There are also two cups on the table , one near the person and the other further away .
(d / document
   :snt1 (s1.e / eat-01
               :ARG0 (s1.p / person)
               :ARG1 (s1.s / slice
                           :quant-of (s1.p2 / pizza))
               :location (s1.r / restaurant))
   :snt2 (s2.t / table-01
               :ARG1 (s2.p / pizzeria
                           :ARG2-of (s2.i / include-91
                                          :ARG1 (s2.p2 / pizzeria
                                                       :ARG0-of (s2.h / have-03
                                                                      :ARG1 (s2.f / food-dish
                                                                                  :quant (s2.l2 / lot)))
                                                       :ARG1-of (s2.h2 / have-degree-91
                                                                       :ARG2 (s2.l / large)
                                                                       :ARG3 (s2.m / more))
                                                       :quant "1"))
                           :quant "2")
               :rel (s2.s / sunday))
   :snt3 (s3.u / use-01
               :ARG0 (s3.p / person
                           :same-as s1.p)
               :ARG1 (s3.a / and
                           :op1 (s3.f / fork)
                           :op2 (s3.k / knife))
               :ARG2 (s3.e / eat-01
                           :ARG0 s3.p
                           :ARG1 (s3.p2 / pizza
                                        :same-as s1.s)))
   :snt4 (s4.b / be-located-at-91
               :ARG1 (s4.c / cup
                           :ARG1-of (s4.n / near-02
                                          :ARG2 (s4.p / person
                                                      :same-as s1.p))
                           :domain (s4.a2 / and
                                          :op2 (s4.c2 / cup
                                                      :ARG1-of (s4.n2 / near-02
                                                                      :ARG2 (s4.f / far
                                                                                  :ARG3 (s4.m / more)))))
                           :op1-of s4.a2
                           :mod (s4.a / also)
                           :quant "1"
                           :quant "2")
               :ARG2 (s4.t / table
                           :same-as s2.t)))