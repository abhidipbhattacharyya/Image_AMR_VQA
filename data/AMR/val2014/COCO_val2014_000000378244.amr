# ::id val2014~COCO_val2014_000000378244
# ::doc_file val2014~COCO_val2014_000000378244
# ::tok A person is skiing down a snowy slope , kicking up snow as they go . <next_sent> The person is wearing a black jacket and a black helmet . <next_sent> The slope is surrounded by trees , with one tree in the foreground and two others in the background . <next_sent> The person is skiing down the hill , making their way towards the trees .
(d / document
   :snt1 (s1.s / ski-01
               :ARG0 (s1.p / person)
               :ARG0-of (s1.k / kick-01
                              :ARG1 (s1.s3 / snow)
                              :ARG1-of (s1.u / up-01)
                              :time (s1.g / go-02
                                          :ARG0 s1.p))
               :direction (s1.d / down
                                :op1 (s1.s2 / slope
                                            :ARG1-of (s1.s4 / snowy-02))))
   :snt2 (s2.w / wear-01
               :ARG0 (s2.p / person
                           :same-as s1.p)
               :ARG1 (s2.a / and
                           :op1 (s2.j / jacket
                                      :ARG1-of (s2.b / black-04))
                           :op2 (s2.h / helmet
                                      :ARG1-of (s2.b2 / black-04))))
   :snt3 (s3.s2 / surround-01
                :ARG1 (s3.t / tree
                            :part (s3.a / and
                                        :op1 (s3.t2 / tree
                                                    :location (s3.f / foreground)
                                                    :quant "1")
                                        :op2 (s3.t3 / tree
                                                    :location (s3.b / background)
                                                    :mod (s3.o / other)
                                                    :quant "2")))
                :ARG2 (s3.s / slope
                            :same-as s1.s2))
   :snt4 (s4.s / ski-01
               :ARG0 (s4.p / person
                           :ARG0-of (s4.m / make-19
                                          :ARG1 (s4.w / way
                                                      :poss s4.p)
                                          :ARG2 (s4.t / tree
                                                      :same-as s3.t))
                           :same-as s1.p)
               :direction (s4.d / down)
               :path (s4.h / hill)))