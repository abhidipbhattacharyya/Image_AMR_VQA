# ::id val2014~COCO_val2014_000000066468
# ::doc_file val2014~COCO_val2014_000000066468
# ::tok A person is sitting at a table with a large pizza in front of them . <next_sent> The pizza is cut into slices and has a knife and a spatula on the table . <next_sent> There are also a few cups on the table , one near the top right corner and another one near the top left corner . <next_sent> The table has a white cloth on it .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.p / person
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.p2 / pizza
                                                       :location (s1.i / in-front-of
                                                                       :op1 s1.p)
                                                       :mod (s1.l / large))))
               :ARG2 (s1.t / table))
   :snt2 (s2.a / and
               :op1 (s2.c / cut-01
                          :ARG1 (s2.p / pizza
                                      :same-as s1.l)
                          :ARG2 (s2.s / slice))
               :op2 (s2.h / have-03
                          :ARG0 s2.p
                          :ARG1 (s2.a2 / and
                                       :op1 (s2.k / knife)
                                       :op2 (s2.s2 / spatula))
                          :location (s2.t / table
                                          :same-as s1.t)))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.c3 / cup
                            :quant (s3.f / few)
                            :example (s3.a2 / and
                                            :op1 (s3.c4 / cup
                                                        :ARG1-of (s3.n / near-02
                                                                       :ARG2 (s3.c / corner
                                                                                   :ARG1-of (s3.r / right-04)
                                                                                   :mod (s3.t2 / top)))
                                                        :ARG1-of (s3.n2 / near-02
                                                                        :ARG2 (s3.c2 / corner
                                                                                     :ARG1-of (s3.l / left-20)
                                                                                     :mod (s3.t3 / top)))
                                                        :mod (s3.a3 / another)
                                                        :op2-of s3.a2
                                                        :quant "1"))
                            :mod (s3.a / also))
               :ARG2 (s3.t / table
                           :same-as s1.t))
   :snt4 (s4.h / have-03
               :ARG0 (s4.t / table
                           :same-as s1.t)
               :ARG1 (s4.c / cloth
                           :ARG1-of (s4.w / white-03))))