# ::id val2014~COCO_val2014_000000283070
# ::doc_file val2014~COCO_val2014_000000283070
# ::tok Four orange slices are laid out on a wooden table . <next_sent> The first slice is on the left side , the second slice is in the middle , the third slice is on the right side , and the fourth slice is on the far right . <next_sent> The slices are arranged in a straight line , with the first slice being the largest and the fourth slice being the smallest .
(d / document
   :snt1 (s1.l / lay-01
               :ARG1 (s1.s / slice
                           :mod (s1.o / orange)
                           :quant "4")
               :ARG2 (s1.t / table
                           :consist-of (s1.w / wood)))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.s3 / slice
                                       :li "1")
                          :ARG2 (s2.s / side
                                      :ARG1-of (s2.l / left-20)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.s4 / slice
                                        :li "2")
                           :ARG2 (s2.m / middle))
               :op3 (s2.b3 / be-located-at-91
                           :ARG1 (s2.s5 / slice
                                        :ord (s2.o / ordinal-entity
                                                   :value "3"))
                           :ARG2 (s2.s2 / side
                                        :ARG1-of (s2.r / right-04)))
               :op4 (s2.b4 / be-located-at-91
                           :ARG1 (s2.s6 / slice
                                        :ord (s2.o2 / ordinal-entity
                                                    :value "4"))
                           :ARG2 (s2.r2 / right-04
                                        :mod (s2.f / far))))
   :snt3 (s3.a2 / arrange-01
                :ARG1 (s3.s / slice
                            :same-as s1.s)
                :example (s3.a / and
                               :op1 (s3.s2 / slice
                                           :ARG1-of (s3.h / have-degree-91
                                                          :ARG2 (s3.l / large)
                                                          :ARG3 (s3.m / most))
                                           :ord (s3.o / ordinal-entity
                                                      :value "1"
                                                      :same-as s2.s3))
                               :op2 (s3.s3 / slice
                                           :ARG1-of (s3.h2 / have-degree-91
                                                           :ARG2 (s3.s4 / small)
                                                           :ARG3 (s3.m2 / most))
                                           :ord (s3.o2 / ordinal-entity
                                                       :value "4"
                                                       :same-as s2.s6)))
                :manner (s3.l2 / line
                               :ARG1-of (s3.s5 / straight-04))))