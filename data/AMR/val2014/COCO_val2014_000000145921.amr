# ::id val2014~COCO_val2014_000000145921
# ::doc_file val2014~COCO_val2014_000000145921
# ::tok A large airplane with a red and white tail is parked on the runway . <next_sent> There are two other airplanes in the background , one on the left and one on the right . <next_sent> The airplanes are parked in a row , with the first one being the largest . <next_sent> There are several cars and trucks around the airplanes , possibly for maintenance or transportation purposes .
(d / document
   :snt1 (s1.p / park-01
               :ARG1 (s1.a / airplane
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.a2 / and
                                                       :op1 (s1.t / tail
                                                                  :ARG1-of (s1.r / red-02))
                                                       :op2 (s1.t2 / tail
                                                                   :ARG1-of (s1.w / white-03))))
                           :mod (s1.l / large))
               :ARG2 (s1.r2 / runway))
   :snt2 (s2.a4 / and
                :op1 (s2.a / airplane
                           :location (s2.b / background)
                           :mod (s2.o / other)
                           :quant "2")
                :op2 (s2.a3 / airplane
                            :location (s2.r / right-08)
                            :quant "1")
                :rel (s2.a2 / airplane
                            :ARG1-of (s2.l / left-19)
                            :quant "1"))
   :snt3 (s3.p / park-01
               :ARG1 (s3.a / airplane
                           :ARG2-of (s3.i / include-91
                                          :ARG1 (s3.a2 / airplane
                                                       :ARG1-of (s3.h / have-degree-91
                                                                      :ARG2 (s3.l / large)
                                                                      :ARG3 (s3.m / most))
                                                       :ord (s3.o / ordinal-entity
                                                                  :value "1"
                                                                  :same-as s1.a))))
               :ARG2 (s3.r / row))
   :snt4 (s4.a2 / and
                :purpose (s4.o / or
                               :ARG1-of (s4.p / possible-01)
                               :op1 (s4.m / maintain-01
                                          :ARG1 s4.a2)
                               :op2 (s4.t / transport-01))
                :quant (s4.s / several)
                :location (s4.a3 / around
                                 :op1 (s4.a / airplane
                                            :same-as s3.a))
                :op1 (s4.c / car)
                :op2 (s4.t2 / truck)))