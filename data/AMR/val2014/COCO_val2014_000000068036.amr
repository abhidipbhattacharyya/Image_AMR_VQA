# ::id val2014~COCO_val2014_000000068036
# ::doc_file val2014~COCO_val2014_000000068036
# ::tok Three red and yellow trains are parked on a train track . <next_sent> The first train is on the left side of the track , the second train is in the middle , and the third train is on the right side . <next_sent> The trains are parked next to each other , with the first train being the closest to the camera .
(d / document
   :snt1 (s1.p / park-01
               :ARG1 (s1.a / and
                           :op1 (s1.t2 / train
                                       :ARG1-of (s1.r / red-02))
                           :op2 (s1.t3 / train
                                       :ARG1-of (s1.y / yellow-02))
                           :quant "3")
               :ARG2 (s1.t / track
                           :purpose (s1.t4 / train)))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.t2 / train
                                       :ord (s2.o / ordinal-entity
                                                  :value "1"))
                          :ARG2 (s2.s / side
                                      :ARG1-of (s2.l / left-20)
                                      :part-of (s2.t / track
                                                     :same-as s1.t)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.t3 / train
                                        :li "2")
                           :ARG2 (s2.m / middle))
               :op3 (s2.b3 / be-located-at-91
                           :ARG1 (s2.t4 / train
                                        :ord (s2.o2 / ordinal-entity
                                                    :value "3"))
                           :ARG2 (s2.s2 / side
                                        :ARG1-of (s2.r / right-04))))
   :snt3 (s3.p / park-01
               :ARG1 (s3.t / train
                           :example (s3.t2 / train
                                           :ARG1-of (s3.h / have-degree-91
                                                          :ARG2 (s3.c2 / close-10
                                                                       :ARG1 s3.t2
                                                                       :ARG2 (s3.c / camera))
                                                          :ARG3 (s3.m / most))
                                           :ord (s3.o / ordinal-entity
                                                      :value "1"
                                                      :same-as s2.t2))
                           :same-as s1.a)
               :ARG2 (s3.n / next-to
                           :op1 (s3.e / each
                                      :mod (s3.o2 / other)))))