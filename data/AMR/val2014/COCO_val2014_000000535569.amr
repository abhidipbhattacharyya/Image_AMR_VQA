# ::id val2014~COCO_val2014_000000535569
# ::doc_file val2014~COCO_val2014_000000535569
# ::tok A table is full of food , including pizza , salad , and a bowl of beans . <next_sent> There are two pizzas , one with olives and tomatoes and the other with peppers . <next_sent> A salad is also present on the table . <next_sent> A bottle of wine is placed on the table , and a fork is visible on the left side of the table .
(d / document
   :snt1 (s1.f2 / full-09
                :ARG1 (s1.t / table)
                :ARG2 (s1.f / food
                            :ARG2-of (s1.i / include-01
                                           :ARG1 (s1.a / and
                                                       :op1 (s1.p / pizza)
                                                       :op2 (s1.s / salad)
                                                       :op3 (s1.b2 / bowl
                                                                   :consist-of (s1.b / bean))))))
   :snt2 (s2.a3 / and
                :op1 (s2.a / and
                           :op1 (s2.f2 / food-dish
                                       :ARG0-of (s2.h / have-03
                                                      :ARG1 (s2.a2 / and
                                                                   :op1 (s2.l / Olive)
                                                                   :op2 (s2.t / tomato)))
                                       :quant "1")
                           :op2 s2.f2)
                :op2 (s2.h2 / have-03
                            :ARG0 (s2.f / food
                                        :mod (s2.o / other))
                            :ARG1 (s2.p / pepper-spray))
                :rel (s2.p2 / pizzeria
                            :quant "2"))
   :snt3 (s3.p / present-02
               :ARG1 (s3.s / salad)
               :ARG2 (s3.t / table
                           :same-as s1.t)
               :mod (s3.a / also))
   :snt4 (s4.a / and
               :op1 (s4.p / place-01
                          :ARG1 (s4.w / wine
                                      :quant (s4.b / bottle))
                          :ARG2 (s4.t / table
                                      :part (s4.s2 / side
                                                   :ARG1-of (s4.l / left-20))
                                      :same-as s1.t))
               :op2 (s4.p2 / possible-01
                           :ARG1 (s4.s / see-01
                                       :ARG1 (s4.f / fork)
                                       :location s4.s2))))