# ::id val2014~COCO_val2014_000000434463
# ::doc_file val2014~COCO_val2014_000000434463
# ::tok A pizza with sauce and cheese is cut into two pieces . <next_sent> The pizza is placed on a white plate . <next_sent> One piece of pizza is on the left side of the plate and the other piece is on the right side . <next_sent> There are two green leaves on top of the pizza , one on the left side and the other on the right side . <next_sent> The pizza is on a table .
(d / document
   :snt1 (s1.c2 / cut-01
                :ARG1 (s1.p2 / pizza
                             :ARG0-of (s1.h / have-03
                                            :ARG1 (s1.a / and
                                                        :op1 (s1.s / sauce)
                                                        :op2 (s1.c / cheese))))
                :ARG2 (s1.p / piece
                            :quant "2"))
   :snt2 (s2.p2 / place-01
                :ARG1 (s2.p / pizza
                            :same-as s1.p2)
                :ARG2 (s2.p3 / plate
                             :ARG1-of (s2.w / white-03)))
   :snt3 (s3.a / and
               :op1 (s3.b / be-located-at-91
                          :ARG1 (s3.p / piece
                                      :quant (s3.o / one)
                                      :part-of (s3.p3 / pizza))
                          :ARG2 (s3.s / side
                                      :ARG1-of (s3.l / left-20)
                                      :part-of (s3.p4 / plate
                                                      :same-as s2.p3)))
               :op2 (s3.b2 / be-located-at-91
                           :ARG1 (s3.p2 / piece
                                        :mod (s3.o2 / other))
                           :ARG2 (s3.s2 / side
                                        :ARG1-of (s3.r / right-04))))
   :snt4 (s4.a / and
               :op1 (s4.l / leaf
                          :ARG1-of (s4.g / green-02)
                          :location (s4.t / top
                                          :op1 (s4.p / pizza
                                                     :same-as s1.p2))
                          :location (s4.s / side
                                          :ARG1-of (s4.l3 / left-20)
                                          :same-as s3.s)
                          :quant "1"
                          :quant "2")
               :op2 (s4.l2 / leaf
                           :mod (s4.o / other))
               :rel (s4.s2 / side
                           :ARG1-of (s4.r / right-04
                                          :same-as s3.s2)))
   :snt5 (s5.b / be-located-at-91
               :ARG1 (s5.p / pizza
                           :same-as s1.p2)
               :ARG2 (s5.t / table)))