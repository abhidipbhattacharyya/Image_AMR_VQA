# ::id val2014~COCO_val2014_000000499835
# ::doc_file val2014~COCO_val2014_000000499835
# ::tok Two UPS trucks are parked in front of a building . <next_sent> The first truck is on the left side of the image and the second truck is on the right side . <next_sent> The first truck has its headlights on , and the second truck has its brake lights on . <next_sent> The building is a large brick structure with many windows .
(d / document
   :snt1 (s1.p / park-01
               :ARG1 (s1.t / truck
                           :mod (s1.c / company
                                      :name (s1.n / name
                                                  :op1 "UPS"))
                           :quant "2")
               :ARG2 (s1.i / in-front-of
                           :op1 (s1.b / building)))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.t / truck
                                      :ord (s2.o / ordinal-entity
                                                 :value "1"))
                          :ARG2 (s2.s / side
                                      :ARG1-of (s2.l / left-20)
                                      :part-of (s2.i / image)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.t2 / truck
                                        :ord (s2.o2 / ordinal-entity
                                                    :value "2"))
                           :ARG2 s2.s
                           :ARG3 (s2.s2 / side
                                        :ARG1-of (s2.r / right-04))))
   :snt3 (s3.a / and
               :op1 (s3.o / on-01
                          :ARG1 (s3.b2 / bulb
                                       :ARG0-of (s3.s / speed-01)))
               :op2 (s3.o2 / on-01
                           :ARG1 (s3.l / light
                                       :instrument-of (s3.b / brake-01)
                                       :poss (s3.t2 / truck
                                                    :ord (s3.o3 / ordinal-entity
                                                                :value "2")
                                                    :same-as s2.t2)))
               :rel (s3.t / truck
                          :part s3.b2
                          :li "1"))
   :snt4 (s4.s / structure
               :ARG0-of (s4.h / have-03
                              :ARG1 (s4.w / window
                                          :quant (s4.m / many)))
               :consist-of (s4.b / brick)
               :domain (s4.b2 / building
                              :same-as s1.b)
               :mod (s4.l / large)))