# ::id val2014~COCO_val2014_000000275744
# ::doc_file val2014~COCO_val2014_000000275744
# ::tok Two trains are parked on the tracks at a train station . <next_sent> The first train is yellow and red , with a yellow front and red back . <next_sent> The second train is silver and red , with a silver front and red back . <next_sent> The trains are parked next to each other , with the first train on the left and the second train on the right .
(d / document
   :snt1 (s1.p / park-01
               :ARG1 (s1.t2 / train
                            :quant "2")
               :ARG2 (s1.t / track
                           :location (s1.s / station
                                           :mod (s1.t3 / train))))
   :snt2 (s2.t / train
               :ARG0-of (s2.h / have-03
                              :ARG1 (s2.a2 / and
                                           :op1 (s2.f / front)
                                           :op2 (s2.b / back
                                                      :ARG1-of (s2.r2 / red-02))))
               :consist-of (s2.a / and
                                 :op1 (s2.y / yellow-02
                                            :ARG1 s2.f)
                                 :op2 (s2.r / red-02))
               :ord (s2.o / ordinal-entity
                          :value "1"))
   :snt3 (s3.t / train
               :ARG0-of (s3.h / have-03
                              :ARG1 (s3.a / and
                                          :op1 (s3.f / front)
                                          :op2 (s3.b / back)
                                          :topic (s3.a2 / and
                                                        :op1 (s3.s / silver)
                                                        :op2 (s3.r / red-02))))
               :ord (s3.o / ordinal-entity
                          :value "2"))
   :snt4 (s4.p / park-01
               :ARG1 (s4.t / train
                           :example (s4.a / and
                                          :op1 (s4.t2 / train
                                                      :ARG1-of (s4.l / left-20)
                                                      :ord (s4.o / ordinal-entity
                                                                 :value "1"
                                                                 :same-as s2.o))
                                          :op2 (s4.t3 / train
                                                      :ARG1-of (s4.r / right-04)
                                                      :ord (s4.o2 / ordinal-entity
                                                                  :value "2"
                                                                  :same-as s3.o)))
                           :same-as s1.t2)
               :ARG2 (s4.n / next-to
                           :op1 (s4.e / each
                                      :mod (s4.o3 / other)))))