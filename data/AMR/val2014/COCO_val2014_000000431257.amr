# ::id val2014~COCO_val2014_000000431257
# ::doc_file val2014~COCO_val2014_000000431257
# ::tok A model train is traveling on a track that goes through a tunnel . <next_sent> The train is on the left side of the track and is moving towards the tunnel . <next_sent> There are also two cars on the right side of the track , one behind the other . <next_sent> The cars are positioned close to each other and are also moving in the same direction as the train .
(d / document
   :snt1 (s1.t3 / travel-01
                :ARG0 (s1.t2 / train
                             :ARG0-of (s1.m / model-01))
                :ARG1 (s1.t / track
                            :ARG1-of (s1.g / go-01
                                           :path (s1.t4 / tunnel))))
   :snt2 (s2.a / and
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.t2 / train
                                       :same-as s1.t2)
                          :ARG2 (s2.s / side
                                      :ARG1-of (s2.l / left-20)
                                      :part-of (s2.t / track
                                                     :same-as s1.t)))
               :op2 (s2.m / move-01
                          :ARG1 s2.t2
                          :ARG2 (s2.t3 / tunnel
                                       :same-as s1.t4)))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.c / car
                           :location (s3.b2 / behind
                                            :op1 (s3.c2 / car
                                                        :mod (s3.o / other)
                                                        :quant "1"))
                           :mod (s3.a / also)
                           :quant "2")
               :ARG2 (s3.s / side
                           :ARG1-of (s3.r / right-04)
                           :part-of (s3.t / track
                                          :same-as s1.t)))
   :snt4 (s4.a2 / and
                :op1 (s4.p / position-01
                           :ARG1 (s4.c / car
                                       :same-as s3.s)
                           :ARG2 (s4.c2 / close-10
                                        :ARG1 s4.c
                                        :ARG2 (s4.e / each)))
                :op2 (s4.m / move-01
                           :ARG1 s4.c
                           :direction (s4.d / direction
                                            :ARG1-of (s4.s / same-01
                                                           :ARG2 (s4.t / train
                                                                       :same-as s1.t2)))
                           :mod (s4.a / also))))