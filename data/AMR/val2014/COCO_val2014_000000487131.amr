# ::id val2014~COCO_val2014_000000487131
# ::doc_file val2014~COCO_val2014_000000487131
# ::tok Three green dump trucks are parked in a parking lot . <next_sent> The first truck is on the left side , the second truck is in the middle , and the third truck is on the right side . <next_sent> The trucks are parked in a row , with the first truck being closest to the building , the second truck being in the middle , and the third truck being furthest away .
(d / document
   :snt1 (s1.p / park-01
               :ARG1 (s1.t / truck
                           :ARG0-of (s1.d / dump-01)
                           :ARG1-of (s1.g / green-02)
                           :quant "3")
               :ARG2 (s1.l / lot
                           :ARG2-of (s1.p2 / park-01)))
   :snt2 (s2.a / and
               :ARG1-of (s2.b3 / be-located-at-91
                               :ARG2 (s2.s2 / side
                                            :ARG1-of (s2.r / right-04)))
               :op1 (s2.b / be-located-at-91
                          :ARG1 (s2.t / truck
                                      :ord (s2.o / ordinal-entity
                                                 :value "1"))
                          :ARG2 (s2.s / side
                                      :ARG1-of (s2.l / left-20)))
               :op2 (s2.b2 / be-located-at-91
                           :ARG1 (s2.t2 / truck
                                        :ord (s2.o2 / ordinal-entity
                                                    :value "2"))
                           :ARG2 (s2.m / middle))
               :op3 (s2.t3 / truck
                           :ord (s2.o3 / ordinal-entity
                                       :value "3")))
   :snt3 (s3.p / park-01
               :ARG1 (s3.t / truck
                           :ARG0-of (s3.h / have-03
                                          :ARG1 (s3.a / and
                                                      :op1 (s3.h2 / have-degree-91
                                                                  :ARG1 (s3.t2 / truck
                                                                               :ord (s3.o / ordinal-entity
                                                                                          :value "1")
                                                                               :same-as s2.t)
                                                                  :ARG2 (s3.c / close-10
                                                                              :ARG1 s3.t2
                                                                              :ARG2 (s3.b3 / building))
                                                                  :ARG3 (s3.m2 / most))
                                                      :op2 (s3.b / be-located-at-91
                                                                 :ARG1 (s3.t3 / truck
                                                                              :ord (s3.o2 / ordinal-entity
                                                                                          :value "2"))
                                                                 :ARG2 (s3.m / middle))
                                                      :op3 (s3.b2 / be-located-at-91
                                                                  :ARG1 (s3.t4 / truck
                                                                               :ord (s3.o3 / ordinal-entity
                                                                                           :value "3")
                                                                               :same-as s2.t3)
                                                                  :ARG2 (s3.a2 / away
                                                                               :ARG1-of (s3.h3 / have-degree-91
                                                                                               :ARG2 (s3.f / far)
                                                                                               :ARG3 (s3.m3 / most))))))
                           :same-as s1.t)
               :location (s3.r / row)))