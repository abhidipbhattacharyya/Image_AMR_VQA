# ::id val2014~COCO_val2014_000000209388
# ::doc_file val2014~COCO_val2014_000000209388
# ::tok A train is traveling down the tracks with many cars behind it . <next_sent> The train is yellow and green and is pulling many cars behind it . <next_sent> The train is traveling down the tracks with many cars behind it . <next_sent> The train is yellow and green and is pulling many cars behind it .
(d / document
   :snt1 (s1.t3 / travel-01
                :ARG0 (s1.t2 / train)
                :accompanier (s1.c / car
                                   :quant (s1.m / many)
                                   :location (s1.b / behind
                                                   :op1 s1.t2))
                :direction (s1.d / down)
                :path (s1.t / track))
   :snt2 (s2.a2 / and
                :op1 (s2.a / and
                           :op1 (s2.y / yellow-02
                                      :ARG1 (s2.t / train
                                                  :same-as s1.t2))
                           :op2 (s2.g / green-02
                                      :ARG1 s2.t))
                :op2 (s2.p / pull-01
                           :ARG0 s2.t
                           :ARG1 (s2.c / car
                                       :quant (s2.m / many))
                           :ARG2 (s2.b / behind
                                       :op1 s2.t)))
   :snt3 (s3.t3 / travel-01
                :ARG0 (s3.t2 / train
                             :same-as s1.t2)
                :ARG1 (s3.t / track
                            :same-as s1.t)
                :accompanier (s3.c / car
                                   :quant (s3.m / many)
                                   :location (s3.b / behind
                                                   :op1 s3.t2))
                :direction (s3.d / down))
   :snt4 (s4.a2 / and
                :op1 (s4.a / and
                           :op1 (s4.y / yellow-02
                                      :ARG1 (s4.t / train
                                                  :same-as s1.t2))
                           :op2 (s4.g / green-02
                                      :ARG1 s4.t))
                :op2 (s4.p / pull-01
                           :ARG0 s4.t
                           :ARG1 (s4.c / car
                                       :quant (s4.m / many))
                           :ARG2 (s4.b / behind
                                       :op1 s4.t))))