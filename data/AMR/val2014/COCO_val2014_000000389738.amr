# ::id val2014~COCO_val2014_000000389738
# ::doc_file val2014~COCO_val2014_000000389738
# ::tok Three people are skiing on a snowy slope . <next_sent> One person is wearing a yellow jacket and is standing on skis . <next_sent> The other two people are also on skis , one of them wearing a red jacket . <next_sent> The skiers are scattered across the slope , with one person closer to the left side , another in the middle , and the third person on the right side .
(d / document
   :snt1 (s1.s / ski-01
               :ARG0 (s1.p / person
                           :quant "3")
               :location (s1.s2 / slope
                                :ARG1-of (s1.s3 / snowy-02)))
   :snt2 (s2.a / and
               :op1 (s2.w / wear-01
                          :ARG0 (s2.p / person
                                      :quant "1")
                          :ARG1 (s2.j / jacket
                                      :ARG1-of (s2.y / yellow-02)))
               :op2 (s2.s2 / stand-01
                           :ARG1 s2.p
                           :manner (s2.s / ski-01
                                         :ARG0 s2.p)))
   :snt3 (s3.s / ski-01
               :ARG0 (s3.p / person
                           :ARG2-of (s3.i / include-91
                                          :ARG1 (s3.p2 / person
                                                       :ARG0-of (s3.w / wear-01
                                                                      :ARG1 (s3.j / jacket
                                                                                  :ARG1-of (s3.r / red-02)))
                                                       :quant "1"))
                           :mod (s3.o / other)
                           :quant "2")
               :mod (s3.a / also))
   :snt4 (s4.s / scatter-01
               :ARG1 (s4.p / person
                           :ARG0-of (s4.s4 / ski-01)
                           :same-as s1.p)
               :ARG2 (s4.s5 / slope
                            :same-as s1.s2)
               :example (s4.a / and
                              :op1 (s4.p2 / person
                                          :ARG1-of (s4.h / have-degree-91
                                                         :ARG2 (s4.c / close-10
                                                                     :ARG1 s4.p2
                                                                     :ARG2 (s4.s2 / side
                                                                                  :ARG1-of (s4.l / left-20)))
                                                         :ARG3 (s4.m2 / more))
                                          :quant "1")
                              :op2 (s4.p3 / person
                                          :location (s4.m / middle)
                                          :mod (s4.a2 / another))
                              :op3 (s4.p4 / person
                                          :location (s4.s3 / side
                                                           :ARG1-of (s4.r / right-04))
                                          :ord (s4.o / ordinal-entity
                                                     :value "3")))))