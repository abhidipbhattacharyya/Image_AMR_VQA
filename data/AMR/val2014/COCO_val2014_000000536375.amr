# ::id val2014~COCO_val2014_000000536375
# ::doc_file val2014~COCO_val2014_000000536375
# ::tok A large display of apples is arranged in a pyramid shape . <next_sent> The apples are in various stages of ripeness , with some being yellow and others being red . <next_sent> The display is located in a grocery store , and there are several apples in different sections of the display . <next_sent> The apples are arranged in a way that makes it easy for shoppers to see and choose the apples they want to purchase .
(d / document
   :snt1 (s1.a2 / arrange-01
                :ARG1 (s1.d / display-01
                            :ARG1 (s1.a / apple)
                            :mod (s1.l / large))
                :manner (s1.s / shape
                              :mod (s1.p / pyramid)))
   :snt2 (s2.r2 / rip-01
                :ARG1 (s2.a2 / apple
                             :same-as s1.a)
                :mod (s2.s2 / stage
                            :mod (s2.v / various))
                :rel (s2.i / include-91
                           :ARG1 (s2.a / and
                                       :op1 (s2.a3 / apple
                                                   :quant (s2.s / some)
                                                   :ARG1-of (s2.y / yellow-02)
                                                   :ARG2-of s2.i
                                                   :mod (s2.o / other))
                                       :op2 (s2.r / red-02
                                                  :ARG1 s2.a3))))
   :snt3 (s3.a / and
               :op1 (s3.b / be-located-at-91
                          :ARG1 (s3.d2 / display
                                       :part (s3.s / section
                                                   :ARG1-of (s3.d / differ-02))
                                       :same-as s1.d)
                          :ARG2 (s3.s3 / store
                                       :mod (s3.g / grocery)))
               :op2 (s3.b2 / be-located-at-91
                           :ARG1 (s3.a2 / apple
                                        :quant (s3.s2 / several))
                           :ARG2 s3.s))
   :snt4 (s4.a4 / arrange-01
                :ARG0-of (s4.m / make-02
                               :ARG1 (s4.e / easy-05
                                           :ARG1 (s4.a / and
                                                       :op1 (s4.s / see-01
                                                                  :ARG0 (s4.p / person
                                                                              :ARG0-of (s4.s2 / shop-01))
                                                                  :ARG1 (s4.a3 / apple
                                                                               :ARG1-of (s4.p2 / purchase-01
                                                                                               :ARG0 s4.p
                                                                                               :ARG1-of (s4.w / want-01
                                                                                                              :ARG0 s4.p))))
                                                       :op2 (s4.c / choose-01
                                                                  :ARG0 s4.p
                                                                  :ARG1 s4.a3))))
                :ARG1 (s4.a2 / apple
                             :same-as s1.a)))