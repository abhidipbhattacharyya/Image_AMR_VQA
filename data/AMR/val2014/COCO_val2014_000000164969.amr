# ::id val2014~COCO_val2014_000000164969
# ::doc_file val2014~COCO_val2014_000000164969
# ::tok A pizza with various toppings is cut into four slices . <next_sent> The pizza is placed in a box , and the slices are arranged in a way that they are all visible . <next_sent> The pizza is topped with cheese , and the slices are arranged in a way that they are all visible . <next_sent> The pizza is placed in a box , and the slices are arranged in a way that they are all visible .
(d / document
   :snt1 (s1.c / cut-01
               :ARG1 (s1.p / pizza
                           :ARG0-of (s1.h / have-03
                                          :ARG1 (s1.p2 / portion
                                                       :mod (s1.v / various))))
               :ARG2 (s1.s / slice
                           :quant "4"))
   :snt2 (s2.a2 / and
                :op1 (s2.p2 / place-01
                            :ARG1 (s2.p / pizza
                                        :same-as s1.p)
                            :ARG2 (s2.b / box))
                :op2 (s2.a3 / arrange-01
                            :ARG1 (s2.s2 / slice
                                         :mod (s2.a / all)
                                         :same-as s1.s)
                            :manner (s2.w / way
                                          :manner-of (s2.p3 / possible-01
                                                            :ARG1 (s2.s / see-01
                                                                        :ARG1 s2.s2)))))
   :snt3 (s3.a2 / and
                :op1 (s3.t / top-01
                           :ARG1 (s3.p / pizza
                                       :same-as s1.p)
                           :ARG2 (s3.c / cheese))
                :op2 (s3.a3 / arrange-01
                            :ARG1 (s3.s2 / slice
                                         :mod (s3.a / all)
                                         :same-as s1.s)
                            :manner (s3.w / way
                                          :manner-of (s3.p2 / possible-01
                                                            :ARG1 (s3.s / see-01
                                                                        :ARG1 s3.s2)))))
   :snt4 (s4.a2 / and
                :op1 (s4.p2 / place-01
                            :ARG1 (s4.p / pizza
                                        :same-as s1.p)
                            :ARG2 (s4.b / box))
                :op2 (s4.a3 / arrange-01
                            :ARG1 (s4.s2 / slice
                                         :mod (s4.a / all)
                                         :same-as s1.s)
                            :manner (s4.w / way
                                          :manner-of (s4.p3 / possible-01
                                                            :ARG1 (s4.s / see-01
                                                                        :ARG1 s4.s2))))))