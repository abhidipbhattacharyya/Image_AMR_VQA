# ::id val2014~COCO_val2014_000000262228
# ::doc_file val2014~COCO_val2014_000000262228
# ::tok A row of bicycles are parked on a brick sidewalk in front of a building . <next_sent> There are four bicycles in total , with the first one being on the left side of the image , the second one in the middle , the third one on the right side , and the fourth one further to the right . <next_sent> The bicycles are parked in a rack , with the first one being closer to the left side of the rack , the second one in the middle , the third one on the right side , and the fourth one further to the right . <next_sent> The bicycles are all black , and they are parked in a neat row , making it easy for people to find a spot to park their bikes .
(d / document
   :snt1 (s1.p / park-01
               :ARG1 (s1.b / bicycle
                           :quant (s1.r / row))
               :ARG2 (s1.s / sidewalk
                           :consist-of (s1.b2 / brick)
                           :location (s1.i / in-front-of
                                           :op1 (s1.b3 / building))))
   :snt2 (s2.b2 / bicycle
                :ARG2-of (s2.t / total-01)
                :domain (s2.a / and
                              :op1 (s2.b / be-located-at-91
                                         :ARG1 (s2.b3 / bicycle
                                                      :ord (s2.o2 / ordinal-entity
                                                                  :value "1"))
                                         :ARG2 (s2.s / side
                                                     :ARG1-of (s2.l / left-20)
                                                     :part-of (s2.i / image)))
                              :op2 (s2.b4 / bicycle
                                          :location (s2.m / middle)
                                          :location (s2.s2 / side
                                                           :ARG1-of (s2.r / right-04))
                                          :ord (s2.o3 / ordinal-entity
                                                      :value "2")
                                          :ord (s2.o4 / ordinal-entity
                                                      :value "3"))
                              :op3 (s2.o / one
                                         :ARG1-of (s2.r2 / right-04
                                                         :degree (s2.f / further))
                                         :ord (s2.o5 / ordinal-entity
                                                     :value "4")))
                :quant "4")
   :snt3 (s3.p / park-01
               :ARG1 (s3.b2 / bicycle
                            :ARG1-of (s3.h / have-degree-91
                                           :ARG2 (s3.c / close-10
                                                       :ARG1 s3.b2
                                                       :ARG2 (s3.s / side
                                                                   :ARG1-of (s3.l / left-20)
                                                                   :part-of (s3.r2 / rack
                                                                                   :same-as s3.r)
                                                                   :same-as s2.s))
                                           :ARG3 (s3.m2 / more))
                            :example (s3.a / and
                                           :op2 (s3.b3 / bicycle
                                                       :location (s3.m / middle
                                                                       :same-as s2.m)
                                                       :ord (s3.o2 / ordinal-entity
                                                                   :value "2"
                                                                   :same-as s2.o3))
                                           :op3 (s3.b4 / bicycle
                                                       :location (s3.s2 / side
                                                                        :ARG1-of (s3.r3 / right-04)
                                                                        :same-as s2.s2)
                                                       :ord (s3.o3 / ordinal-entity
                                                                   :value "3"
                                                                   :same-as s2.o4))
                                           :op4 (s3.b / be-located-at-91
                                                      :ARG1 s3.b4
                                                      :ARG2 s3.a))
                            :op1-of s3.a)
               :ARG2 (s3.r / rack)
               :rel (s3.o / ordinal-entity
                          :value "1"
                          :same-as s2.o2)
               :rel (s3.o4 / ordinal-entity
                           :value "4"
                           :same-as s2.o5)
               :rel (s3.f / further
                          :op1 (s3.t / thing
                                     :ARG1-of (s3.r4 / right-04))))
   :snt4 (s4.a2 / and
                :ARG0-of (s4.m / make-02
                               :ARG1 (s4.e / easy-05
                                           :ARG1 (s4.f / find-01
                                                       :ARG0 (s4.p3 / person)
                                                       :ARG1 (s4.s / spot
                                                                   :location-of (s4.p2 / park-01
                                                                                       :ARG0 s4.p3
                                                                                       :ARG1 (s4.b2 / bike-01
                                                                                                    :ARG0 s4.p3))))))
                :op1 (s4.b3 / black-04
                            :ARG1 (s4.b / bicycle
                                        :mod (s4.a / all)))
                :op2 (s4.p / park-01
                           :ARG1 s4.b
                           :ARG2 (s4.r / row
                                       :mod (s4.n / neat)))))