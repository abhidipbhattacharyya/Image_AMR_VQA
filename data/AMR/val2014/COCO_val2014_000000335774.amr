# ::id val2014~COCO_val2014_000000335774
# ::doc_file val2014~COCO_val2014_000000335774
# ::tok A white plate filled with a variety of food items sits on a wooden table . <next_sent> The plate contains meat , cheese , and vegetables , including tomatoes and peppers . <next_sent> There are also several carrots on the plate . <next_sent> A person is sitting at the table , and there are a couple of cups and a fork nearby .
(d / document
   :snt1 (s1.s / sit-01
               :ARG1 (s1.p / plate
                           :ARG1-of (s1.w / white-03)
                           :ARG1-of (s1.f / fill-01
                                          :ARG2 (s1.i / item
                                                      :mod (s1.f2 / food)
                                                      :mod (s1.v / variety))))
               :ARG2 (s1.t / table
                           :consist-of (s1.w2 / wood)))
   :snt2 (s2.c2 / contain-01
                :ARG0 (s2.p2 / plate
                             :same-as s1.p)
                :ARG1 (s2.a / and
                            :ARG2-of (s2.i / include-01
                                           :ARG1 (s2.a2 / and
                                                        :op1 (s2.t / tomato)
                                                        :op2 (s2.p / pepper-spray)))
                            :op1 (s2.m / meat)
                            :op2 (s2.c / cheese)
                            :op3 (s2.v / vegetable)))
   :snt3 (s3.b / be-located-at-91
               :ARG1 (s3.c / carrot
                           :quant (s3.s / several))
               :ARG2 (s3.p / plate
                           :same-as s1.p)
               :mod (s3.a / also))
   :snt4 (s4.a / and
               :op1 (s4.s / sit-01
                          :ARG1 (s4.p / person)
                          :ARG2 (s4.t / table
                                      :same-as s1.t))
               :op2 (s4.n / near-02
                          :ARG1 (s4.a2 / and
                                       :op1 (s4.c2 / cup
                                                   :quant (s4.c / couple))
                                       :op2 (s4.f / fork)))))