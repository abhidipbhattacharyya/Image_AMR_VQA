# ::id val2014~COCO_val2014_000000529102
# ::doc_file val2014~COCO_val2014_000000529102
# ::tok A breakfast plate with eggs , fruit , and bread is on a table . <next_sent> The plate is white , and the food is colorful . <next_sent> There are two bowls , one containing fruit and the other containing bread . <next_sent> There are also two cups , one containing water and the other containing juice . <next_sent> A person is sitting at the table , and there is a fork and a knife on the table as well .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.p / plate
                           :consist-of (s1.a / and
                                             :op1 (s1.e / egg)
                                             :op2 (s1.f / fruit)
                                             :op3 (s1.b2 / bread))
                           :mod (s1.b3 / breakfast-01))
               :ARG2 (s1.t / table))
   :snt2 (s2.a / and
               :op1 (s2.w / white-03
                          :ARG1 (s2.p / plate
                                      :same-as s1.p))
               :op2 (s2.c / colorful
                          :domain (s2.f / food
                                        :same-as s1.a)))
   :snt3 (s3.a / and
               :op1 (s3.p / pound
                          :part (s3.o / one
                                      :ARG0-of (s3.c / contain-01
                                                     :ARG1 (s3.f / fruit)))
                          :quant "2")
               :op2 (s3.p2 / pound
                           :part (s3.o2 / other
                                        :ARG0-of (s3.c2 / contain-01
                                                        :ARG1 (s3.b / bread)))))
   :snt4 (s4.a2 / and
                :op1 (s4.c3 / cup
                            :ARG2-of (s4.i / include-91)
                            :ARG1-of s4.i
                            :ARG2-of (s4.i2 / include-91
                                            :ARG1 (s4.c4 / cup
                                                         :ARG0-of (s4.c / contain-01
                                                                        :ARG1 (s4.w / water))
                                                         :ARG0-of (s4.c2 / contain-01
                                                                         :ARG1 (s4.j / juice))
                                                         :mod (s4.o / other)
                                                         :quant "1"))
                            :mod (s4.a / also)
                            :quant "2")
                :op2 s4.c4)
   :snt5 (s5.a / and
               :op1 (s5.s / sit-01
                          :ARG1 (s5.p / person)
                          :ARG2 (s5.t / table
                                      :same-as s1.t))
               :op2 (s5.a2 / and
                           :location s5.t
                           :mod (s5.a3 / as-well)
                           :op1 (s5.f / fork)
                           :op2 (s5.k / knife))))