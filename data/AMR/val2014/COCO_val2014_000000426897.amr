# ::id val2014~COCO_val2014_000000426897
# ::doc_file val2014~COCO_val2014_000000426897
# ::tok A man is sitting at a table in a restaurant , enjoying a slice of pizza and a can of Pepsi . <next_sent> The table is surrounded by chairs , and there are other people in the background . <next_sent> The man is smiling and holding the pizza slice up to his face , ready to take a bite .
(d / document
   :snt1 (s1.a / and
               :op1 (s1.s / sit-01
                          :ARG1 (s1.m / man)
                          :ARG2 (s1.t / table
                                      :location (s1.r / restaurant)))
               :op2 (s1.e / enjoy-01
                          :ARG0 s1.m
                          :ARG1 (s1.a2 / and
                                       :op1 (s1.s2 / slice
                                                   :consist-of (s1.p / pizza))
                                       :op2 (s1.c2 / company
                                                   :name (s1.n / name
                                                               :op1 "Pepsi")
                                                   :quant (s1.c / can
                                                                :quant "1")))))
   :snt2 (s2.a / and
               :op1 (s2.s / surround-01
                          :ARG1 (s2.c / chair)
                          :ARG2 (s2.t / table
                                      :same-as s1.t))
               :op2 (s2.p / person
                          :location (s2.b / background)
                          :mod (s2.o / other)))
   :snt3 (s3.a / and
               :op1 (s3.s2 / smile-01
                           :ARG0 (s3.m / man
                                       :ARG1-of (s3.r / ready-02
                                                      :ARG2 (s3.b / bite-01
                                                                  :ARG0 s3.m
                                                                  :ARG1 (s3.s / slice
                                                                              :consist-of (s3.p / pizza)
                                                                              :same-as s1.s2)))
                                       :part (s3.f / face)
                                       :same-as s1.m))
               :op2 (s3.h / hold-01
                          :ARG0 s3.m
                          :ARG1 s3.s
                          :direction (s3.u / up-to
                                           :op1 s3.f))))