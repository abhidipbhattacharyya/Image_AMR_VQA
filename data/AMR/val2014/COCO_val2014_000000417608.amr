# ::id val2014~COCO_val2014_000000417608
# ::doc_file val2014~COCO_val2014_000000417608
# ::tok A sandwich cut in half is on a plate , with lettuce and tomato in the middle . <next_sent> There are two cups , one on the left and one on the right , and a spoon is located on the left side . <next_sent> There are also two chairs , one behind the sandwich and one on the right side .
(d / document
   :snt1 (s1.b / be-located-at-91
               :ARG1 (s1.s / sandwich
                           :ARG0-of (s1.h2 / have-03
                                           :ARG1 (s1.a / and
                                                       :location (s1.m / middle
                                                                       :op1 s1.s)
                                                       :op1 (s1.l / lettuce)
                                                       :op2 (s1.t / tomato)))
                           :ARG1-of (s1.c / cut-02
                                          :manner (s1.h / half)))
               :ARG2 (s1.p / plate))
   :snt2 (s2.a2 / and
                :op1 (s2.a / and
                           :op1 (s2.c / cup
                                      :quant "2")
                           :op2 (s2.c2 / cup
                                       :ARG1-of (s2.r / right-04)
                                       :ARG1-of (s2.r2 / right-04)))
                :op2 (s2.b / be-located-at-91
                           :ARG1 (s2.s2 / spoon)
                           :ARG2 (s2.s / side
                                       :ARG1-of (s2.l / left-20))))
   :snt3 (s3.a2 / and
                :op1 (s3.c / chair
                           :ARG2-of (s3.i / include-91)
                           :ARG2-of (s3.i2 / include-91
                                           :ARG1 (s3.c2 / chair
                                                        :location (s3.b / behind
                                                                        :op1 (s3.s / sandwich
                                                                                   :same-as s1.c))
                                                        :quant "1")
                                           :location (s3.s2 / side
                                                            :ARG1-of (s3.r / right-04)))
                           :mod (s3.a / also)
                           :quant "2")
                :op2 s3.c2))