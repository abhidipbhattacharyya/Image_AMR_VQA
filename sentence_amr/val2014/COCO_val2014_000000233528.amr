# ::tok On a table a computer , a laptop , papers , books , some eatables in a tray and other things are kept .
# ::node	t	table	2-3
# ::node	c	computer	4-5
# ::node	l	laptop	7-8
# ::node	p	paper	9-10
# ::node	b	book	11-12
# ::node	s	some	13-14
# ::node	t2	thing	14-15
# ::node	e	eat-01	14-15
# ::node	p2	possible-01	14-15
# ::node	t4	tray	17-18
# ::node	a	and	18-19
# ::node	o	other	19-20
# ::node	t3	thing	20-21
# ::node	k	keep-01	22-23
# ::root	k	keep-01
# ::edge	thing	mod	some	t2	s	
# ::edge	thing	ARG1-of	eat-01	t2	e	
# ::edge	eat-01	ARG1-of	possible-01	e	p2	
# ::edge	and	op6	tray	a	t4	
# ::edge	and	op5	book	a	b	
# ::edge	and	op4	book	a	b	
# ::edge	and	op3	paper	a	p	
# ::edge	and	op2	laptop	a	l	
# ::edge	and	op1	computer	a	c	
# ::edge	thing	mod	other	t3	o	
# ::edge	and	op7	thing	a	t3	
# ::edge	keep-01	ARG1	and	k	a	
# ::edge	keep-01	location	table	k	t	
# ::edge	keep-01	rel	thing	k	t2	
(k / keep-01
    :ARG1 (a / and
        :op1 (c / computer)
        :op2 (l / laptop)
        :op3 (p / paper)
        :op4 (b / book)
        :op5 b
        :op6 (t4 / tray)
        :op7 (t3 / thing
            :mod (o / other)))
    :location (t / table)
    :rel (t2 / thing
        :ARG1-of (e / eat-01
            :ARG1-of (p2 / possible-01))
        :mod (s / some)))
