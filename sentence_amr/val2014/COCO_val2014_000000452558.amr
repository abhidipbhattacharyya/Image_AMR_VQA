# ::tok A warmer with several pizzas under it and plates and boxes stacked above , under a sign that says " Pizza and Pasta " .
# ::node	w	warm-01	1-2
# ::node	t	thing	2-3
# ::node	s2	several	3-4
# ::node	p	pizzeria	4-5
# ::node	u	under	5-6
# ::node	p3	plate	8-9
# ::node	a3	and	9-10
# ::node	b	box	10-11
# ::node	s4	stack-01	11-12
# ::node	a2	above	12-13
# ::node	c	cause-01	13-14
# ::node	u2	under	14-15
# ::node	s3	sign	16-17
# ::node	s	say-01	18-19
# ::node	p2	pizzeria	20-21
# ::node	a4	and	21-22
# ::node	i	internet	22-23
# ::node	a	Pasta	22-23
# ::root	t	thing
# ::edge	thing	ARG0-of	warm-01	t	w	
# ::edge	pizzeria	quant	several	p	s2	
# ::edge	pizzeria	location	under	p	u	
# ::edge	under	op1	thing	u	t	
# ::edge	and	op1	plate	a3	p3	
# ::edge	and	op2	box	a3	b	
# ::edge	stack-01	ARG1	and	s4	a3	
# ::edge	stack-01	location	above	s4	a2	
# ::edge	cause-01	ARG1	stack-01	c	s4	
# ::edge	thing	ARG0-of	cause-01	t	c	
# ::edge	stack-01	location	under	s4	u2	
# ::edge	under	op1	sign	u2	s3	
# ::edge	sign	ARG0-of	say-01	s3	s	
# ::edge	and	op1	pizzeria	a4	p2	
# ::edge	say-01	ARG1	and	s	a4	
# ::edge	warm-01	mod	internet	w	i	
# ::edge	and	op2	Pasta	a4	a	
# ::edge	thing	rel	pizzeria	t	p	
(t / thing
    :ARG0-of (w / warm-01
        :mod (i / internet))
    :ARG0-of (c / cause-01
        :ARG1 (s4 / stack-01
            :ARG1 (a3 / and
                :op1 (p3 / plate)
                :op2 (b / box))
            :location (a2 / above)
            :location (u2 / under
                :op1 (s3 / sign
                    :ARG0-of (s / say-01
                        :ARG1 (a4 / and
                            :op1 (p2 / pizzeria)
                            :op2 (a / Pasta)))))))
    :rel (p / pizzeria
        :quant (s2 / several)
        :location (u / under
            :op1 t)))
