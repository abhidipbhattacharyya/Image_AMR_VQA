# ::tok A man smiling at the camera with a large case in front of him
# ::node	m	man	1-2
# ::node	s	smile-01	2-3
# ::node	c	camera	5-6
# ::node	h	have-03	6-7
# ::node	l	large	8-9
# ::node	c2	case	9-10
# ::node	i	in-front-of	11-12
# ::root	m	man
# ::edge	man	ARG0-of	smile-01	m	s	
# ::edge	smile-01	ARG2	camera	s	c	
# ::edge	man	ARG0-of	have-03	m	h	
# ::edge	case	mod	large	c2	l	
# ::edge	have-03	ARG1	case	h	c2	
# ::edge	case	location	in-front-of	c2	i	
# ::edge	in-front-of	op1	man	i	m	
(m / man
    :ARG0-of (s / smile-01
        :ARG2 (c / camera))
    :ARG0-of (h / have-03
        :ARG1 (c2 / case
            :location (i / in-front-of
                :op1 m)
            :mod (l / large))))
