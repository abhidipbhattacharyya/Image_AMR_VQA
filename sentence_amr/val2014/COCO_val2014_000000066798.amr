# ::tok A zebra standing on the fields looking up and howling .
# ::node	z	zebra	1-2
# ::node	s	stand-01	2-3
# ::node	f	field	5-6
# ::node	l	look-01	6-7
# ::node	u	up	7-8
# ::node	a	and	8-9
# ::node	h	howl-01	9-10
# ::root	a	and
# ::edge	stand-01	ARG1	zebra	s	z	
# ::edge	stand-01	ARG2	field	s	f	
# ::edge	look-01	ARG0	zebra	l	z	
# ::edge	look-01	ARG1	up	l	u	
# ::edge	and	op1	look-01	a	l	
# ::edge	and	op2	howl-01	a	h	
# ::edge	howl-01	ARG0	zebra	h	z	
# ::edge	and	rel	stand-01	a	s	
(a / and
    :op1 (l / look-01
        :ARG0 (z / zebra)
        :ARG1 (u / up))
    :op2 (h / howl-01
        :ARG0 z)
    :rel (s / stand-01
        :ARG1 z
        :ARG2 (f / field)))
