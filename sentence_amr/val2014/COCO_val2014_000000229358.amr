# ::tok A man holds an object as he looks at himself in the mirror .
# ::node	m	man	1-2
# ::node	h	hold-01	2-3
# ::node	o	object	4-5
# ::node	l	look-01	7-8
# ::node	m2	mirror	12-13
# ::root	h	hold-01
# ::edge	hold-01	ARG0	man	h	m	
# ::edge	hold-01	ARG1	object	h	o	
# ::edge	hold-01	time	look-01	h	l	
# ::edge	look-01	ARG1	man	l	m	
# ::edge	look-01	ARG0	man	l	m	
# ::edge	look-01	location	mirror	l	m2	
(h / hold-01
    :ARG0 (m / man)
    :ARG1 (o / object)
    :time (l / look-01
        :ARG0 m
        :ARG1 m
        :location (m2 / mirror)))
