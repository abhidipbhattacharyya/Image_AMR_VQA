# ::tok Trees mark the far side of a fence that encloses a large environment space with man made rocks and two giraffes , one close up and very large , the other small , and seemingly far away .
# ::node	t	tree	0-1
# ::node	m3	mark-01	1-2
# ::node	f	far	3-4
# ::node	s2	side	4-5
# ::node	f3	fence	7-8
# ::node	e	enclose-01	9-10
# ::node	l	large	11-12
# ::node	e2	environment	12-13
# ::node	s4	space	13-14
# ::node	m2	man	15-16
# ::node	m	make-01	16-17
# ::node	r	rock	17-18
# ::node	a	and	18-19
# ::node	0	2	19-20
# ::node	1	2	19-20
# ::node	g	giraffe	20-21
# ::node	c	close-10	23-24
# ::node	a2	and	25-26
# ::node	v	very	26-27
# ::node	l2	large	27-28
# ::node	s3	small	31-32
# ::node	a3	and	33-34
# ::node	s	seem-01	34-35
# ::node	f2	far	35-36
# ::node	a4	away	36-37
# ::root	m3	mark-01
# ::edge	mark-01	ARG0	tree	m3	t	
# ::edge	side	mod	far	s2	f	
# ::edge	mark-01	ARG1	side	m3	s2	
# ::edge	side	part-of	fence	s2	f3	
# ::edge	fence	ARG1-of	enclose-01	f3	e	
# ::edge	space	mod	environment	s4	e2	
# ::edge	space	mod	large	s4	l	
# ::edge	enclose-01	ARG2	space	e	s4	
# ::edge	make-01	ARG0	man	m	m2	
# ::edge	rock	ARG1-of	make-01	r	m	
# ::edge	and	op1	rock	a	r	
# ::edge	space	location-of	and	s4	a	
# ::edge	giraffe	quant	2	g	0	
# ::edge	and	op2	giraffe	a	g	
# ::edge	close-10	ARG1	giraffe	c	g	
# ::edge	and	op1	close-10	a2	c	
# ::edge	giraffe	part	and	g	a2	
# ::edge	large	degree	very	l2	v	
# ::edge	close-10	ARG2	large	c	l2	
# ::edge	and	op1	small	a3	s3	
# ::edge	giraffe	mod	and	g	a3	
# ::edge	away	mod	far	a4	f2	
# ::edge	away	ARG1-of	seem-01	a4	s	
# ::edge	and	op2	away	a3	a4	
# ::edge	mark-01	rel	2	m3	1	
(m3 / mark-01
    :ARG0 (t / tree)
    :ARG1 (s2 / side
        :mod (f / far)
        :part-of (f3 / fence
            :ARG1-of (e / enclose-01
                :ARG2 (s4 / space
                    :location-of (a / and
                        :op1 (r / rock
                            :ARG1-of (m / make-01
                                :ARG0 (m2 / man)))
                        :op2 (g / giraffe
                            :quant 2
                            :mod (a3 / and
                                :op1 (s3 / small)
                                :op2 (a4 / away
                                    :ARG1-of (s / seem-01)
                                    :mod (f2 / far)))
                            :part (a2 / and
                                :op1 (c / close-10
                                    :ARG1 g
                                    :ARG2 (l2 / large
                                        :degree (v / very))))))
                    :mod (e2 / environment)
                    :mod (l / large)))))
    :rel 2)
