# ::tok Two pizza with noodles on one and a mushroom on the other sitting on a plate with a worm sitting on top of them .
# ::node	0	2	0-1
# ::node	p	pizza	1-2
# ::node	h	have-03	2-3
# ::node	n	noodle	3-4
# ::node	o	one	5-6
# ::node	a	and	6-7
# ::node	a2	and	6-7
# ::node	m	mushroom	8-9
# ::node	o2	other	11-12
# ::node	s	sit-01	12-13
# ::node	p2	plate	15-16
# ::node	w	worm	18-19
# ::node	s2	sit-01	19-20
# ::node	t	top	21-22
# ::root	a	and
# ::edge	pizza	quant	2	p	0	
# ::edge	pizza	ARG0-of	have-03	p	h	
# ::edge	noodle	location	one	n	o	
# ::edge	and	op1	pizza	a	p	
# ::edge	and	op1	noodle	a2	n	
# ::edge	have-03	ARG1	and	h	a2	
# ::edge	and	op2	mushroom	a2	m	
# ::edge	mushroom	mod	other	m	o2	
# ::edge	and	ARG1-of	sit-01	a2	s	
# ::edge	sit-01	ARG2	plate	s	p2	
# ::edge	sit-01	ARG1	worm	s2	w	
# ::edge	and	ARG2-of	sit-01	a	s2	
# ::edge	sit-01	ARG2	top	s2	t	
# ::edge	top	op1	and	t	a2	
(a / and
    :ARG2-of (s2 / sit-01
        :ARG1 (w / worm)
        :ARG2 (t / top
            :op1 (a2 / and
                :ARG1-of (s / sit-01
                    :ARG2 (p2 / plate))
                :op1 (n / noodle
                    :location (o / one))
                :op2 (m / mushroom
                    :mod (o2 / other)))))
    :op1 (p / pizza
        :quant 2
        :ARG0-of (h / have-03
            :ARG1 a2)))
