# ::tok a yellow taxi riding down a street that has a building with clock
# ::node	y	yellow-02	1-2
# ::node	t	taxi	2-3
# ::node	r	ride-01	3-4
# ::node	d	down	4-5
# ::node	s	street	6-7
# ::node	h	have-03	8-9
# ::node	b	building	10-11
# ::node	h2	have-03	11-12
# ::node	c	clock	12-13
# ::root	r	ride-01
# ::edge	taxi	ARG1-of	yellow-02	t	y	
# ::edge	ride-01	ARG0	taxi	r	t	
# ::edge	ride-01	direction	down	r	d	
# ::edge	ride-01	ARG1	street	r	s	
# ::edge	street	ARG0-of	have-03	s	h	
# ::edge	have-03	ARG1	building	h	b	
# ::edge	building	ARG0-of	have-03	b	h2	
# ::edge	have-03	ARG1	clock	h2	c	
(r / ride-01
    :ARG0 (t / taxi
        :ARG1-of (y / yellow-02))
    :ARG1 (s / street
        :ARG0-of (h / have-03
            :ARG1 (b / building
                :ARG0-of (h2 / have-03
                    :ARG1 (c / clock)))))
    :direction (d / down))
