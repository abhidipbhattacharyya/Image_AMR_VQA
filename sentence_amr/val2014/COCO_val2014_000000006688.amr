# ::tok Two zebra 's standing in a grassy field and one is eating grass .
# ::node	1	2	0-1
# ::node	z	zebra	1-2
# ::node	z2	zebra	1-2
# ::node	s	stand-01	3-4
# ::node	g	grass	6-7
# ::node	f	field	7-8
# ::node	a	and	8-9
# ::node	0	1	9-10
# ::node	e	eat-01	11-12
# ::root	a	and
# ::edge	zebra	quant	2	z	1	
# ::edge	stand-01	ARG0	zebra	s	z	
# ::edge	field	consist-of	grass	f	g	
# ::edge	stand-01	ARG2	field	s	f	
# ::edge	and	op1	stand-01	a	s	
# ::edge	zebra	quant	1	z2	0	
# ::edge	and	op2	eat-01	a	e	
# ::edge	eat-01	ARG1	zebra	e	z2	
# ::edge	eat-01	ARG0	zebra	e	z2	
(a / and
    :op1 (s / stand-01
        :ARG0 (z / zebra
            :quant 2)
        :ARG2 (f / field
            :consist-of (g / grass)))
    :op2 (e / eat-01
        :ARG0 (z2 / zebra
            :quant 1)
        :ARG1 z2))
