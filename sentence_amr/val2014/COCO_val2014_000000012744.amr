# ::tok one motorcycle rider riding going up the mountain two going down
# ::node	0	1	0-1
# ::node	m	motorcycle	1-2
# ::node	p	person	2-3
# ::node	r	ride-01	2-3
# ::node	p2	person	2-3
# ::node	r2	ride-01	2-3
# ::node	r3	ride-01	3-4
# ::node	g	go-02	4-5
# ::node	u	up-03	5-6
# ::node	m2	mountain	7-8
# ::node	1	2	8-9
# ::node	d	down-03	10-11
# ::root	r3	ride-01
# ::edge	person	quant	1	p	0	
# ::edge	person	ARG0-of	ride-01	p	r	
# ::edge	ride-01	ARG1	motorcycle	r	m	
# ::edge	person	ARG0-of	ride-01	p2	r2	
# ::edge	ride-01	ARG1	person	r3	p	
# ::edge	ride-01	ARG0	person	r3	p	
# ::edge	person	ARG0-of	go-02	p	g	
# ::edge	go-02	direction	up-03	g	u	
# ::edge	up-03	ARG2	mountain	u	m2	
# ::edge	person	quant	2	p2	1	
# ::edge	person	direction	down-03	p2	d	
# ::edge	ride-01	rel	person	r3	p2	
(r3 / ride-01
    :ARG0 (p / person
        :quant 1
        :ARG0-of (r / ride-01
            :ARG1 (m / motorcycle))
        :ARG0-of (g / go-02
            :direction (u / up-03
                :ARG2 (m2 / mountain))))
    :ARG1 p
    :rel (p2 / person
        :quant 2
        :ARG0-of (r2 / ride-01)
        :direction (d / down-03)))
