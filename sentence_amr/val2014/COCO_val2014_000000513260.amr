# ::tok A row of blue and white train cars that read " stobart rail . "
# ::node	r3	row	1-2
# ::node	b	blue	3-4
# ::node	a	and	4-5
# ::node	w	white-03	5-6
# ::node	t	train	6-7
# ::node	c	car	7-8
# ::node	c2	car	7-8
# ::node	r2	read-01	9-10
# ::node	r	rail	12-13
# ::root	r3	row
# ::edge	row	consist-of	and	r3	a	
# ::edge	car	mod	train	c	t	
# ::edge	and	op1	car	a	c	
# ::edge	car	mod	blue	c	b	
# ::edge	car	mod	white-03	c2	w	
# ::edge	car	ARG1-of	white-03	c2	w	
# ::edge	and	op2	car	a	c2	
# ::edge	and	ARG1-of	read-01	a	r2	
# ::edge	read-01	ARG3	rail	r2	r	
(r3 / row
    :consist-of (a / and
        :ARG1-of (r2 / read-01
            :ARG3 (r / rail))
        :op1 (c / car
            :mod (t / train)
            :mod (b / blue))
        :op2 (c2 / car
            :ARG1-of (w / white-03)
            :mod w)))
