# ::tok A bathroom counter with two sinks under two mirrors .
# ::node	b	bathroom	1-2
# ::node	c	counter	2-3
# ::node	h	have-03	3-4
# ::node	0	2	4-5
# ::node	s	sink-01	5-6
# ::node	t	thing	6-7
# ::node	u	under	6-7
# ::node	1	2	7-8
# ::node	m	mirror	8-9
# ::root	c	counter
# ::edge	counter	location	bathroom	c	b	
# ::edge	counter	ARG0-of	have-03	c	h	
# ::edge	sink-01	quant	2	s	0	
# ::edge	thing	ARG2-of	sink-01	t	s	
# ::edge	have-03	ARG1	thing	h	t	
# ::edge	thing	location	under	t	u	
# ::edge	mirror	quant	2	m	1	
# ::edge	under	op1	mirror	u	m	
(c / counter
    :ARG0-of (h / have-03
        :ARG1 (t / thing
            :ARG2-of (s / sink-01
                :quant 2)
            :location (u / under
                :op1 (m / mirror
                    :quant 2))))
    :location (b / bathroom))
