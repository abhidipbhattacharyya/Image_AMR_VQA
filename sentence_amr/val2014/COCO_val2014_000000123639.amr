# ::tok A parking meter that reads " fail " and a white car sits across from it .
# ::node	p	park-01	1-2
# ::node	m	meter	2-3
# ::node	r	read-01	4-5
# ::node	f	fail-01	6-7
# ::node	a2	and	8-9
# ::node	w	white-03	10-11
# ::node	c	car	11-12
# ::node	s	sit-01	12-13
# ::node	a	across	13-14
# ::root	a2	and
# ::edge	meter	purpose	park-01	m	p	
# ::edge	meter	ARG1-of	read-01	m	r	
# ::edge	read-01	ARG3	fail-01	r	f	
# ::edge	and	op1	meter	a2	m	
# ::edge	car	ARG1-of	white-03	c	w	
# ::edge	sit-01	ARG1	car	s	c	
# ::edge	and	op2	sit-01	a2	s	
# ::edge	sit-01	ARG2	across	s	a	
# ::edge	across	op1	meter	a	m	
(a2 / and
    :op1 (m / meter
        :purpose (p / park-01)
        :ARG1-of (r / read-01
            :ARG3 (f / fail-01)))
    :op2 (s / sit-01
        :ARG1 (c / car
            :ARG1-of (w / white-03))
        :ARG2 (a / across
            :op1 m)))
