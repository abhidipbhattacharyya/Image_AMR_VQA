# ::tok The two signs give directions to upcoming cars .
# ::node	0	2	1-2
# ::node	s	sign	2-3
# ::node	d	direct-01	4-5
# ::node	u	upcoming	6-7
# ::node	c	car	7-8
# ::root	d	direct-01
# ::edge	sign	quant	2	s	0	
# ::edge	direct-01	ARG0	sign	d	s	
# ::edge	car	time	upcoming	c	u	
# ::edge	direct-01	ARG2	car	d	c	
(d / direct-01
    :ARG0 (s / sign
        :quant 2)
    :ARG2 (c / car
        :time (u / upcoming)))
