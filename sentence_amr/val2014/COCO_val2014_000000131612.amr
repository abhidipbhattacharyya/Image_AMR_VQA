# ::tok The man is on the horse and is racing to jump over the barrier .
# ::node	m	man	1-2
# ::node	b2	be-located-at-91	3-4
# ::node	h	horse	5-6
# ::node	a	and	6-7
# ::node	r	race-02	8-9
# ::node	j	jump-03	10-11
# ::node	o	over	11-12
# ::node	b	barrier	13-14
# ::root	a	and
# ::edge	be-located-at-91	ARG1	man	b2	m	
# ::edge	be-located-at-91	ARG2	horse	b2	h	
# ::edge	and	op1	be-located-at-91	a	b2	
# ::edge	and	op2	race-02	a	r	
# ::edge	race-02	ARG0	man	r	m	
# ::edge	race-02	ARG2	jump-03	r	j	
# ::edge	jump-03	ARG0	man	j	m	
# ::edge	jump-03	path	over	j	o	
# ::edge	over	op1	barrier	o	b	
(a / and
    :op1 (b2 / be-located-at-91
        :ARG1 (m / man)
        :ARG2 (h / horse))
    :op2 (r / race-02
        :ARG0 m
        :ARG2 (j / jump-03
            :ARG0 m
            :path (o / over
                :op1 (b / barrier)))))
