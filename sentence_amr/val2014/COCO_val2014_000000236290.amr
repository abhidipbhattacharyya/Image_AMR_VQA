# ::tok a person holding their suitcase and riding an escalator down
# ::node	p	person	1-2
# ::node	h	hold-01	2-3
# ::node	s	suitcase	4-5
# ::node	a	and	5-6
# ::node	r	ride-01	6-7
# ::node	e	escalator	8-9
# ::node	d	down	9-10
# ::root	a	and
# ::edge	person	ARG0-of	hold-01	p	h	
# ::edge	hold-01	ARG1	suitcase	h	s	
# ::edge	suitcase	poss	person	s	p	
# ::edge	and	op1	person	a	p	
# ::edge	and	op2	ride-01	a	r	
# ::edge	ride-01	ARG0	person	r	p	
# ::edge	ride-01	ARG1	escalator	r	e	
# ::edge	ride-01	direction	down	r	d	
(a / and
    :op1 (p / person
        :ARG0-of (h / hold-01
            :ARG1 (s / suitcase
                :poss p)))
    :op2 (r / ride-01
        :ARG0 p
        :ARG1 (e / escalator)
        :direction (d / down)))
