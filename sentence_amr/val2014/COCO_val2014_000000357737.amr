# ::tok Man laughing standing next to his motorcycle with his bicycle attached to it .
# ::node	m	man	0-1
# ::node	l	laugh-01	1-2
# ::node	s	stand-01	2-3
# ::node	n	next-to	3-4
# ::node	m2	motorcycle	6-7
# ::node	b	bicycle	9-10
# ::node	a	attach-01	10-11
# ::root	l	laugh-01
# ::edge	laugh-01	ARG0	man	l	m	
# ::edge	man	ARG1-of	stand-01	m	s	
# ::edge	stand-01	ARG2	next-to	s	n	
# ::edge	next-to	op1	motorcycle	n	m2	
# ::edge	motorcycle	poss	man	m2	m	
# ::edge	bicycle	poss	man	b	m	
# ::edge	attach-01	ARG1	bicycle	a	b	
# ::edge	motorcycle	ARG2-of	attach-01	m2	a	
(l / laugh-01
    :ARG0 (m / man
        :ARG1-of (s / stand-01
            :ARG2 (n / next-to
                :op1 (m2 / motorcycle
                    :ARG2-of (a / attach-01
                        :ARG1 (b / bicycle
                            :poss m))
                    :poss m)))))
