# ::tok Three people are at a skate park and one is on their skate board and the other two are resting and one is sitting on their skateboard .
# ::node	0	3	0-1
# ::node	p2	person	1-2
# ::node	b	be-located-at-91	3-4
# ::node	s2	skate-01	5-6
# ::node	p	park	6-7
# ::node	o	one	8-9
# ::node	b2	be-located-at-91	10-11
# ::node	b3	board	13-14
# ::node	o2	other	16-17
# ::node	t	two	17-18
# ::node	r	rest-01	19-20
# ::node	a	and	20-21
# ::node	s	sit-01	23-24
# ::root	a	and
# ::edge	person	quant	3	p2	0	
# ::edge	be-located-at-91	ARG1	person	b	p2	
# ::edge	park	mod	skate-01	p	s2	
# ::edge	be-located-at-91	ARG2	park	b	p	
# ::edge	be-located-at-91	ARG1	one	b2	o	
# ::edge	be-located-at-91	ARG2	board	b2	b3	
# ::edge	board	poss	one	b3	o	
# ::edge	board	mod	skate-01	b3	s2	
# ::edge	two	mod	other	t	o2	
# ::edge	rest-01	ARG0	two	r	t	
# ::edge	and	op2	rest-01	a	r	
# ::edge	and	op1	be-located-at-91	a	b	
# ::edge	and	op3	sit-01	a	s	
# ::edge	sit-01	ARG2	two	s	t	
# ::edge	sit-01	ARG1	one	s	o	
# ::edge	and	rel	be-located-at-91	a	b2	
(a / and
    :op1 (b / be-located-at-91
        :ARG1 (p2 / person
            :quant 3)
        :ARG2 (p / park
            :mod (s2 / skate-01)))
    :op2 (r / rest-01
        :ARG0 (t / two
            :mod (o2 / other)))
    :op3 (s / sit-01
        :ARG1 (o / one)
        :ARG2 t)
    :rel (b2 / be-located-at-91
        :ARG1 o
        :ARG2 (b3 / board
            :mod s2
            :poss o)))
