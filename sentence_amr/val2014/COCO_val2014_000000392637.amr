# ::tok Two pieces of fried chicken and a side of macaroni and cheese arranged on a table .
# ::node	0	2	0-1
# ::node	p	piece	1-2
# ::node	f	fry-01	3-4
# ::node	c2	chicken	4-5
# ::node	a	and	5-6
# ::node	s	side	7-8
# ::node	m	macaroni	9-10
# ::node	a2	and	10-11
# ::node	c	cheese	11-12
# ::node	a3	arrange-01	12-13
# ::node	t	table	15-16
# ::root	a3	arrange-01
# ::edge	piece	quant	2	p	0	
# ::edge	chicken	ARG1-of	fry-01	c2	f	
# ::edge	piece	consist-of	chicken	p	c2	
# ::edge	and	op1	piece	a	p	
# ::edge	and	op2	side	a	s	
# ::edge	and	op1	macaroni	a2	m	
# ::edge	side	consist-of	and	s	a2	
# ::edge	and	op2	cheese	a2	c	
# ::edge	arrange-01	ARG1	and	a3	a	
# ::edge	arrange-01	location	table	a3	t	
(a3 / arrange-01
    :ARG1 (a / and
        :op1 (p / piece
            :quant 2
            :consist-of (c2 / chicken
                :ARG1-of (f / fry-01)))
        :op2 (s / side
            :consist-of (a2 / and
                :op1 (m / macaroni)
                :op2 (c / cheese))))
    :location (t / table))
