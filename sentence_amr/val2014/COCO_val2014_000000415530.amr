# ::tok Blue and white electric train running through an older looking city .
# ::node	l	Blue	0-1
# ::node	w	white-03	2-3
# ::node	e	electric	3-4
# ::node	t	train	4-5
# ::node	r	run-04	5-6
# ::node	h	have-degree-91	8-9
# ::node	o	old	8-9
# ::node	m	more	8-9
# ::node	l2	look-02	9-10
# ::node	c	city	10-11
# ::root	t	train
# ::edge	train	mod	electric	t	e	
# ::edge	train	ARG1-of	white-03	t	w	
# ::edge	train	mod	Blue	t	l	
# ::edge	train	ARG1-of	run-04	t	r	
# ::edge	have-degree-91	ARG2	old	h	o	
# ::edge	have-degree-91	ARG3	more	h	m	
# ::edge	look-02	ARG1	have-degree-91	l2	h	
# ::edge	city	ARG0-of	look-02	c	l2	
# ::edge	run-04	path	city	r	c	
(t / train
    :ARG1-of (w / white-03)
    :ARG1-of (r / run-04
        :path (c / city
            :ARG0-of (l2 / look-02
                :ARG1 (h / have-degree-91
                    :ARG2 (o / old)
                    :ARG3 (m / more)))))
    :mod (e / electric)
    :mod (l / Blue))
