# ::tok A slice of pizza with meat and cheese on a paper plate on a red and white checkerboard table .
# ::node	s	slice	1-2
# ::node	p2	pizza	3-4
# ::node	h	have-03	4-5
# ::node	m	meat	5-6
# ::node	a	and	6-7
# ::node	c2	cheese	7-8
# ::node	p	paper	10-11
# ::node	p3	plate	11-12
# ::node	r	red-02	14-15
# ::node	a2	and	15-16
# ::node	w	white-03	16-17
# ::node	c	checkerboard	17-18
# ::node	t	table	18-19
# ::node	t2	table	18-19
# ::root	p2	pizza
# ::edge	pizza	consist-of	slice	p2	s	
# ::edge	pizza	ARG0-of	have-03	p2	h	
# ::edge	and	op1	meat	a	m	
# ::edge	have-03	ARG1	and	h	a	
# ::edge	and	op2	cheese	a	c2	
# ::edge	plate	consist-of	paper	p3	p	
# ::edge	slice	location	plate	s	p3	
# ::edge	plate	location	and	p3	a2	
# ::edge	table	mod	checkerboard	t	c	
# ::edge	and	op1	table	a2	t	
# ::edge	table	ARG1-of	red-02	t	r	
# ::edge	table	part	checkerboard	t2	c	
# ::edge	table	ARG1-of	white-03	t2	w	
# ::edge	and	op2	table	a2	t2	
(p2 / pizza
    :ARG0-of (h / have-03
        :ARG1 (a / and
            :op1 (m / meat)
            :op2 (c2 / cheese)))
    :consist-of (s / slice
        :location (p3 / plate
            :consist-of (p / paper)
            :location (a2 / and
                :op1 (t / table
                    :ARG1-of (r / red-02)
                    :mod (c / checkerboard))
                :op2 (t2 / table
                    :ARG1-of (w / white-03)
                    :part c)))))
