# ::tok A cat looking down at a book .
# ::node	c	cat	1-2
# ::node	l	look-01	2-3
# ::node	d	down	3-4
# ::node	b	book	6-7
# ::root	l	look-01
# ::edge	look-01	ARG0	cat	l	c	
# ::edge	look-01	direction	down	l	d	
# ::edge	look-01	ARG1	book	l	b	
(l / look-01
    :ARG0 (c / cat)
    :ARG1 (b / book)
    :direction (d / down))


# ::tok It appears to be reading it .
# ::node	i	it	0-1
# ::node	a	appear-02	1-2
# ::node	r	read-01	4-5
# ::node	i2	it	5-6
# ::root	a	appear-02
# ::edge	appear-02	ARG1	read-01	a	r	
# ::edge	read-01	ARG0	it	r	i	
# ::edge	read-01	ARG1	it	r	i2	
(a / appear-02
    :ARG1 (r / read-01
        :ARG0 (i / it)
        :ARG1 (i2 / it)))
