# ::tok A bike parked up against a fence with a bag over
# ::node	b2	bike	1-2
# ::node	p	park-01	2-3
# ::node	a	against	4-5
# ::node	f	fence	6-7
# ::node	b	bag	9-10
# ::node	c	cause-01	10-11
# ::node	o	over	10-11
# ::root	p	park-01
# ::edge	park-01	ARG1	bike	p	b2	
# ::edge	park-01	ARG2	against	p	a	
# ::edge	against	op1	fence	a	f	
# ::edge	cause-01	ARG0	bag	c	b	
# ::edge	bike	ARG1-of	cause-01	b2	c	
# ::edge	bag	location	over	b	o	
(p / park-01
    :ARG1 (b2 / bike
        :ARG1-of (c / cause-01
            :ARG0 (b / bag
                :location (o / over))))
    :ARG2 (a / against
        :op1 (f / fence)))


# ::tok it 's seat .
# ::node	i	it	0-1
# ::node	s	seat	2-3
# ::root	s	seat
# ::edge	seat	domain	it	s	i	
(s / seat
    :domain (i / it))
