# ::tok A black and white car peeping through a glass window
# ::node	b	black-04	1-2
# ::node	w	white-03	3-4
# ::node	c	car	4-5
# ::node	p	peep-02	5-6
# ::node	t	through	6-7
# ::node	g	glass	8-9
# ::node	w2	window	9-10
# ::root	p	peep-02
# ::edge	car	ARG1-of	white-03	c	w	
# ::edge	car	ARG1-of	black-04	c	b	
# ::edge	peep-02	ARG0	car	p	c	
# ::edge	peep-02	location	through	p	t	
# ::edge	window	consist-of	glass	w2	g	
# ::edge	through	op1	window	t	w2	
(p / peep-02
    :ARG0 (c / car
        :ARG1-of (w / white-03)
        :ARG1-of (b / black-04))
    :location (t / through
        :op1 (w2 / window
            :consist-of (g / glass))))
