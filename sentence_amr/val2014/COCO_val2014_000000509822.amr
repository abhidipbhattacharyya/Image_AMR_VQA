# ::tok The bicycle is locked on the green , metal wall .
# ::node	b	bicycle	1-2
# ::node	l	lock-01	3-4
# ::node	g	green-02	6-7
# ::node	m	metal	8-9
# ::node	w	wall	9-10
# ::root	l	lock-01
# ::edge	lock-01	ARG1	bicycle	l	b	
# ::edge	wall	consist-of	metal	w	m	
# ::edge	wall	ARG1-of	green-02	w	g	
# ::edge	lock-01	ARG3	wall	l	w	
(l / lock-01
    :ARG1 (b / bicycle)
    :ARG3 (w / wall
        :ARG1-of (g / green-02)
        :consist-of (m / metal)))
