# ::tok A dish with a cheesy pizza with different toppings and a slice or two missing .
# ::node	d2	dish	1-2
# ::node	h	have-03	2-3
# ::node	c	cheesy	4-5
# ::node	p	pizza	5-6
# ::node	h2	have-03	6-7
# ::node	d	differ-02	7-8
# ::node	c2	continent	8-9
# ::node	t	top-01	8-9
# ::node	0	1	10-11
# ::node	s	slice	11-12
# ::node	s2	slice	11-12
# ::node	o	or	12-13
# ::node	1	2	13-14
# ::node	m	miss-01	14-15
# ::root	d2	dish
# ::edge	dish	ARG0-of	have-03	d2	h	
# ::edge	pizza	mod	cheesy	p	c	
# ::edge	have-03	ARG1	pizza	h2	p	
# ::edge	dish	ARG0-of	have-03	d2	h2	
# ::edge	continent	ARG1-of	differ-02	c2	d	
# ::edge	pizza	mod	continent	p	c2	
# ::edge	pizza	ARG2-of	top-01	p	t	
# ::edge	slice	quant	1	s	0	
# ::edge	or	op2	slice	o	s2	
# ::edge	or	op1	slice	o	s	
# ::edge	slice	quant	2	s2	1	
# ::edge	miss-01	ARG1	or	m	o	
# ::edge	pizza	ARG2-of	miss-01	p	m	
(d2 / dish
    :ARG0-of (h / have-03)
    :ARG0-of (h2 / have-03
        :ARG1 (p / pizza
            :ARG2-of (t / top-01)
            :ARG2-of (m / miss-01
                :ARG1 (o / or
                    :op1 (s / slice
                        :quant 1)
                    :op2 (s2 / slice
                        :quant 2)))
            :mod (c / cheesy)
            :mod (c2 / continent
                :ARG1-of (d / differ-02)))))
