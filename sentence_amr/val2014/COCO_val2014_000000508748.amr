# ::tok Plate of food consisting of meat and two different types of vegetables .
# ::node	p	plate	0-1
# ::node	f	food	2-3
# ::node	c	consist-01	3-4
# ::node	m	meat	5-6
# ::node	a	and	6-7
# ::node	0	2	7-8
# ::node	d	differ-02	8-9
# ::node	t	type	9-10
# ::node	v	vegetable	11-12
# ::root	p	plate
# ::edge	plate	consist-of	food	p	f	
# ::edge	food	ARG1-of	consist-01	f	c	
# ::edge	and	op1	meat	a	m	
# ::edge	consist-01	ARG2	and	c	a	
# ::edge	type	ARG1-of	differ-02	t	d	
# ::edge	type	quant	2	t	0	
# ::edge	vegetable	mod	type	v	t	
# ::edge	and	op2	vegetable	a	v	
(p / plate
    :consist-of (f / food
        :ARG1-of (c / consist-01
            :ARG2 (a / and
                :op1 (m / meat)
                :op2 (v / vegetable
                    :mod (t / type
                        :quant 2
                        :ARG1-of (d / differ-02)))))))
