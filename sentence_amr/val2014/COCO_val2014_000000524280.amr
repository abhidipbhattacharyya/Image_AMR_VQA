# ::tok A cat outside looking straight ahead with a tree behind it .
# ::node	c	cat	1-2
# ::node	o	outside	2-3
# ::node	l	look-01	3-4
# ::node	s	straight-04	4-5
# ::node	a	ahead	5-6
# ::node	t	tree	8-9
# ::node	b	behind	9-10
# ::root	l	look-01
# ::edge	look-01	location	outside	l	o	
# ::edge	look-01	ARG0	cat	l	c	
# ::edge	ahead	ARG1-of	straight-04	a	s	
# ::edge	look-01	ARG1	ahead	l	a	
# ::edge	behind	location-of	tree	b	t	
# ::edge	look-01	location	behind	l	b	
# ::edge	behind	op1	cat	b	c	
(l / look-01
    :ARG0 (c / cat)
    :ARG1 (a / ahead
        :ARG1-of (s / straight-04))
    :location (o / outside)
    :location (b / behind
        :location-of (t / tree)
        :op1 c))
