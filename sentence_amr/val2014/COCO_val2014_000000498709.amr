# ::tok a black and green parked motorcycle some cars and buildings
# ::node	b	black-04	1-2
# ::node	a	and	2-3
# ::node	g	green-02	3-4
# ::node	p	park-01	4-5
# ::node	m	motorcycle	5-6
# ::node	s	some	6-7
# ::node	c	car	7-8
# ::node	b2	building	9-10
# ::root	a	and
# ::edge	and	op1	park-01	a	p	
# ::edge	park-01	ARG1	motorcycle	p	m	
# ::edge	motorcycle	ARG1-of	black-04	m	b	
# ::edge	car	quant	some	c	s	
# ::edge	and	op2	car	a	c	
# ::edge	building	quant	some	b2	s	
# ::edge	and	op3	building	a	b2	
# ::edge	and	rel	green-02	a	g	
(a / and
    :op1 (p / park-01
        :ARG1 (m / motorcycle
            :ARG1-of (b / black-04)))
    :op2 (c / car
        :quant (s / some))
    :op3 (b2 / building
        :quant s)
    :rel (g / green-02))
