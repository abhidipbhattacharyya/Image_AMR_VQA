# ::tok Three giraffes gather .
# ::node	0	3	0-1
# ::node	g2	giraffe	1-2
# ::node	g	gather-03	2-3
# ::root	g	gather-03
# ::edge	giraffe	quant	3	g2	0	
# ::edge	gather-03	ARG0	giraffe	g	g2	
(g / gather-03
    :ARG0 (g2 / giraffe
        :quant 3))


# ::tok Y the fence in order to reach the taller trees
# ::node	y	yay	0-1
# ::node	f	fence	2-3
# ::node	r	reach-01	6-7
# ::node	h	have-degree-91	8-9
# ::node	t	tall	8-9
# ::node	m	more	8-9
# ::node	t2	tree	9-10
# ::root	y	yay
# ::edge	yay	op1	fence	y	f	
# ::edge	yay	purpose	reach-01	y	r	
# ::edge	have-degree-91	ARG2	tall	h	t	
# ::edge	have-degree-91	ARG3	more	h	m	
# ::edge	tree	ARG1-of	have-degree-91	t2	h	
# ::edge	reach-01	ARG1	tree	r	t2	
(y / yay
    :purpose (r / reach-01
        :ARG1 (t2 / tree
            :ARG1-of (h / have-degree-91
                :ARG2 (t / tall)
                :ARG3 (m / more))))
    :op1 (f / fence))
