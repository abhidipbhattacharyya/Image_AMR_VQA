# ::tok A street scene shows a red and white bus with trees , a bus stop area , and a brick tower around the periphery .
# ::node	s4	street	1-2
# ::node	s	scene	2-3
# ::node	s2	show-01	3-4
# ::node	r	red-02	5-6
# ::node	a	and	6-7
# ::node	w	white-03	7-8
# ::node	b2	bus	8-9
# ::node	b3	bus	8-9
# ::node	h	have-03	9-10
# ::node	t2	tree	10-11
# ::node	b4	bus	13-14
# ::node	s3	stop-01	14-15
# ::node	a2	area	15-16
# ::node	b	brick	19-20
# ::node	t	tower	20-21
# ::node	a3	around	21-22
# ::node	p	periphery	23-24
# ::root	s2	show-01
# ::edge	scene	mod	street	s	s4	
# ::edge	show-01	ARG0	scene	s2	s	
# ::edge	show-01	ARG1	and	s2	a	
# ::edge	and	op1	bus	a	b2	
# ::edge	bus	ARG1-of	red-02	b2	r	
# ::edge	bus	ARG1-of	white-03	b3	w	
# ::edge	and	op2	bus	a	b3	
# ::edge	bus	ARG0-of	have-03	b3	h	
# ::edge	have-03	ARG1	tree	h	t2	
# ::edge	stop-01	ARG1	bus	s3	b4	
# ::edge	area	location-of	stop-01	a2	s3	
# ::edge	and	op3	area	a	a2	
# ::edge	tower	consist-of	brick	t	b	
# ::edge	and	op4	tower	a	t	
# ::edge	tower	location	around	t	a3	
# ::edge	around	op1	periphery	a3	p	
(s2 / show-01
    :ARG0 (s / scene
        :mod (s4 / street))
    :ARG1 (a / and
        :op1 (b2 / bus
            :ARG1-of (r / red-02))
        :op2 (b3 / bus
            :ARG0-of (h / have-03
                :ARG1 (t2 / tree))
            :ARG1-of (w / white-03))
        :op3 (a2 / area
            :location-of (s3 / stop-01
                :ARG1 (b4 / bus)))
        :op4 (t / tower
            :consist-of (b / brick)
            :location (a3 / around
                :op1 (p / periphery)))))
