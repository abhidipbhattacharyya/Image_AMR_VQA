# ::tok Where is surfing
# ::node	a	amr-unknown	0-1
# ::node	s	surf-01	2-3
# ::root	s	surf-01
# ::edge	surf-01	location	amr-unknown	s	a	
(s / surf-01
    :location (a / amr-unknown))


# ::tok but he looks to be attached to something else .
# ::node	c	contrast-01	0-1
# ::node	h	he	1-2
# ::node	l	look-02	2-3
# ::node	a	attach-01	5-6
# ::node	s	something	7-8
# ::node	e	else	8-9
# ::root	c	contrast-01
# ::edge	look-02	ARG0	he	l	h	
# ::edge	contrast-01	ARG2	look-02	c	l	
# ::edge	look-02	ARG1	attach-01	l	a	
# ::edge	attach-01	ARG1	he	a	h	
# ::edge	attach-01	ARG2	something	a	s	
# ::edge	something	mod	else	s	e	
(c / contrast-01
    :ARG2 (l / look-02
        :ARG0 (h / he)
        :ARG1 (a / attach-01
            :ARG1 h
            :ARG2 (s / something
                :mod (e / else)))))
