# ::tok A train is coming downt he track
# ::node	t2	train	1-2
# ::node	c	come-01	3-4
# ::node	d	downt	4-5
# ::node	t	track	6-7
# ::root	c	come-01
# ::edge	come-01	ARG1	train	c	t2	
# ::edge	come-01	direction	downt	c	d	
# ::edge	downt	op1	track	d	t	
(c / come-01
    :ARG1 (t2 / train)
    :direction (d / downt
        :op1 (t / track)))


# ::tok and it is full of steam .
# ::node	a	and	0-1
# ::node	i	it	1-2
# ::node	f	full-09	3-4
# ::node	s	steam-02	5-6
# ::root	a	and
# ::edge	full-09	ARG1	it	f	i	
# ::edge	and	op2	full-09	a	f	
# ::edge	full-09	ARG2	steam-02	f	s	
(a / and
    :op2 (f / full-09
        :ARG1 (i / it)
        :ARG2 (s / steam-02)))
