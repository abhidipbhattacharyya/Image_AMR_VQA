# ::tok A gray , black , and white cat looking up next to a window .
# ::node	g	gray-02	1-2
# ::node	b	black-04	3-4
# ::node	w	white-03	6-7
# ::node	c	cat	7-8
# ::node	l	look-01	8-9
# ::node	u	up	9-10
# ::node	n	next-to	10-11
# ::node	w2	window	13-14
# ::root	l	look-01
# ::edge	cat	ARG1-of	white-03	c	w	
# ::edge	cat	ARG1-of	black-04	c	b	
# ::edge	cat	ARG1-of	gray-02	c	g	
# ::edge	look-01	ARG0	cat	l	c	
# ::edge	look-01	direction	up	l	u	
# ::edge	look-01	location	next-to	l	n	
# ::edge	next-to	op1	window	n	w2	
(l / look-01
    :ARG0 (c / cat
        :ARG1-of (w / white-03)
        :ARG1-of (b / black-04)
        :ARG1-of (g / gray-02))
    :direction (u / up)
    :location (n / next-to
        :op1 (w2 / window)))
