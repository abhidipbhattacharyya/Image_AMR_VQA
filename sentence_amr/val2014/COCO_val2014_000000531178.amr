# ::tok People sitting at a table with two different topping pizzas .
# ::node	p	person	0-1
# ::node	s	sit-01	1-2
# ::node	t	table	4-5
# ::node	0	2	6-7
# ::node	d	differ-02	7-8
# ::node	t2	top-01	8-9
# ::node	p2	pizzeria	9-10
# ::root	s	sit-01
# ::edge	sit-01	ARG1	person	s	p	
# ::edge	sit-01	ARG2	table	s	t	
# ::edge	pizzeria	ARG2-of	top-01	p2	t2	
# ::edge	pizzeria	ARG1-of	differ-02	p2	d	
# ::edge	pizzeria	quant	2	p2	0	
# ::edge	person	accompanier	pizzeria	p	p2	
(s / sit-01
    :ARG1 (p / person
        :accompanier (p2 / pizzeria
            :quant 2
            :ARG1-of (d / differ-02)
            :ARG2-of (t2 / top-01)))
    :ARG2 (t / table))
