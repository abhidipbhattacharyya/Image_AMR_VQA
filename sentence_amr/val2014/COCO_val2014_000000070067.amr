# ::tok A clock with no hands which reads " too late " is affixed to a window .
# ::node	c	clock	1-2
# ::node	0	-	3-4
# ::node	h	hand	4-5
# ::node	r	read-01	6-7
# ::node	h2	have-degree-91	8-9
# ::node	t	too	8-9
# ::node	l	late	9-10
# ::node	a	affix-01	12-13
# ::node	w	window	15-16
# ::root	a	affix-01
# ::edge	hand	polarity	-	h	0	
# ::edge	clock	mod	hand	c	h	
# ::edge	clock	ARG0-of	read-01	c	r	
# ::edge	have-degree-91	ARG1	read-01	h2	r	
# ::edge	have-degree-91	ARG3	too	h2	t	
# ::edge	late	ARG2-of	have-degree-91	l	h2	
# ::edge	read-01	ARG3	late	r	l	
# ::edge	affix-01	ARG1	clock	a	c	
# ::edge	affix-01	ARG2	window	a	w	
(a / affix-01
    :ARG1 (c / clock
        :ARG0-of (r / read-01
            :ARG3 (l / late
                :ARG2-of (h2 / have-degree-91
                    :ARG1 r
                    :ARG3 (t / too))))
        :mod (h / hand
            :polarity -))
    :ARG2 (w / window))
