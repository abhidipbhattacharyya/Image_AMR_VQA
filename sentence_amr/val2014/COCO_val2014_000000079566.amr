# ::tok The side of a train showing the entrance and two doors .
# ::node	s2	side	1-2
# ::node	t	train	4-5
# ::node	s	show-01	5-6
# ::node	e	entrance	7-8
# ::node	a	and	8-9
# ::node	0	2	9-10
# ::node	d	door	10-11
# ::root	s	show-01
# ::edge	side	part-of	train	s2	t	
# ::edge	show-01	ARG0	side	s	s2	
# ::edge	and	op1	entrance	a	e	
# ::edge	show-01	ARG1	and	s	a	
# ::edge	door	quant	2	d	0	
# ::edge	and	op2	door	a	d	
(s / show-01
    :ARG0 (s2 / side
        :part-of (t / train))
    :ARG1 (a / and
        :op1 (e / entrance)
        :op2 (d / door
            :quant 2)))
