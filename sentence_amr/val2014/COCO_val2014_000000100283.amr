# ::tok A stop sign on the corner in front of a row of stores .
# ::node	s2	stop-01	1-2
# ::node	s	signal-07	2-3
# ::node	c	corner	5-6
# ::node	i	in-front-of	7-8
# ::node	r	row	10-11
# ::node	s3	store	12-13
# ::root	s	signal-07
# ::edge	signal-07	ARG1	stop-01	s	s2	
# ::edge	signal-07	location	corner	s	c	
# ::edge	corner	location	in-front-of	c	i	
# ::edge	in-front-of	op1	row	i	r	
# ::edge	row	consist-of	store	r	s3	
(s / signal-07
    :ARG1 (s2 / stop-01)
    :location (c / corner
        :location (i / in-front-of
            :op1 (r / row
                :consist-of (s3 / store)))))
