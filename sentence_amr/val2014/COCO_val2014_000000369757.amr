# ::tok Three different types of pizzas and other items on display at a pizzeria .
# ::node	0	3	0-1
# ::node	d	differ-02	1-2
# ::node	t	type	2-3
# ::node	p	pizzeria	4-5
# ::node	a	and	5-6
# ::node	o	other	6-7
# ::node	i	item	7-8
# ::node	d2	display-01	9-10
# ::node	p2	pizzeria	12-13
# ::root	d2	display-01
# ::edge	type	ARG1-of	differ-02	t	d	
# ::edge	type	quant	3	t	0	
# ::edge	pizzeria	mod	type	p	t	
# ::edge	and	op1	pizzeria	a	p	
# ::edge	item	mod	other	i	o	
# ::edge	and	op2	item	a	i	
# ::edge	display-01	ARG1	and	d2	a	
# ::edge	display-01	location	pizzeria	d2	p2	
(d2 / display-01
    :ARG1 (a / and
        :op1 (p / pizzeria
            :mod (t / type
                :quant 3
                :ARG1-of (d / differ-02)))
        :op2 (i / item
            :mod (o / other)))
    :location (p2 / pizzeria))
