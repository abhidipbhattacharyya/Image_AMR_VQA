# ::tok A breakfast bagel with eggs and bacon sits on a counter .
# ::node	b3	breakfast-01	1-2
# ::node	b2	bagel	2-3
# ::node	h	have-03	3-4
# ::node	e	egg	4-5
# ::node	a	and	5-6
# ::node	b	bacon	6-7
# ::node	s	sit-01	7-8
# ::node	c	counter	10-11
# ::root	s	sit-01
# ::edge	bagel	ARG1-of	breakfast-01	b2	b3	
# ::edge	bagel	ARG0-of	have-03	b2	h	
# ::edge	and	op1	egg	a	e	
# ::edge	have-03	ARG1	and	h	a	
# ::edge	and	op2	bacon	a	b	
# ::edge	sit-01	ARG1	bagel	s	b2	
# ::edge	sit-01	ARG2	counter	s	c	
(s / sit-01
    :ARG1 (b2 / bagel
        :ARG0-of (h / have-03
            :ARG1 (a / and
                :op1 (e / egg)
                :op2 (b / bacon)))
        :ARG1-of (b3 / breakfast-01))
    :ARG2 (c / counter))
