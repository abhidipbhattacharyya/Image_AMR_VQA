# ::tok Bunches of bananas hanging from a wire in front of a store .
# ::node	l	load	0-1
# ::node	b	banana	2-3
# ::node	h	hanging-07	3-4
# ::node	w	wire	6-7
# ::node	i	in-front-of	8-9
# ::node	s	store	11-12
# ::root	h	hanging-07
# ::edge	load	consist-of	banana	l	b	
# ::edge	hanging-07	ARG1	load	h	l	
# ::edge	hanging-07	ARG2	wire	h	w	
# ::edge	hanging-07	location	in-front-of	h	i	
# ::edge	in-front-of	op1	store	i	s	
(h / hanging-07
    :ARG1 (l / load
        :consist-of (b / banana))
    :ARG2 (w / wire)
    :location (i / in-front-of
        :op1 (s / store)))
