# ::tok A child kneeling in front of an open refrigerator and looking in at an empty lower shelf .
# ::node	c	child	1-2
# ::node	k	kneel-01	2-3
# ::node	i	in-front-of	4-5
# ::node	o	open-01	7-8
# ::node	r	refrigerator	8-9
# ::node	a	and	9-10
# ::node	l	look-01	10-11
# ::node	e	empty-02	14-15
# ::node	h	have-degree-91	15-16
# ::node	l2	low-04	15-16
# ::node	m	more	15-16
# ::node	s	shelf	16-17
# ::root	a	and
# ::edge	kneel-01	ARG0	child	k	c	
# ::edge	kneel-01	location	in-front-of	k	i	
# ::edge	refrigerator	ARG1-of	open-01	r	o	
# ::edge	in-front-of	op1	refrigerator	i	r	
# ::edge	and	op1	kneel-01	a	k	
# ::edge	and	op2	look-01	a	l	
# ::edge	look-01	ARG0	child	l	c	
# ::edge	have-degree-91	ARG2	low-04	h	l2	
# ::edge	have-degree-91	ARG3	more	h	m	
# ::edge	low-04	ARG1	shelf	l2	s	
# ::edge	shelf	ARG1-of	have-degree-91	s	h	
# ::edge	shelf	ARG1-of	empty-02	s	e	
# ::edge	look-01	ARG1	shelf	l	s	
(a / and
    :op1 (k / kneel-01
        :ARG0 (c / child)
        :location (i / in-front-of
            :op1 (r / refrigerator
                :ARG1-of (o / open-01))))
    :op2 (l / look-01
        :ARG0 c
        :ARG1 (s / shelf
            :ARG1-of (h / have-degree-91
                :ARG2 (l2 / low-04
                    :ARG1 s)
                :ARG3 (m / more))
            :ARG1-of (e / empty-02))))
