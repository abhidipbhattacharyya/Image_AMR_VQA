# ::tok The view of a train entering a tunnel taken from one of the cars
# ::node	v	view-01	1-2
# ::node	t2	train	4-5
# ::node	e	enter-01	5-6
# ::node	t3	tunnel	7-8
# ::node	t	take-01	8-9
# ::node	0	1	10-11
# ::node	i	include-91	11-12
# ::node	c	car	13-14
# ::node	c2	car	13-14
# ::root	v	view-01
# ::edge	enter-01	ARG0	train	e	t2	
# ::edge	view-01	ARG1	enter-01	v	e	
# ::edge	enter-01	ARG1	tunnel	e	t3	
# ::edge	view-01	ARG1-of	take-01	v	t	
# ::edge	car	ARG1-of	include-91	c	i	
# ::edge	car	quant	1	c	0	
# ::edge	take-01	ARG2	car	t	c	
# ::edge	include-91	ARG2	car	i	c2	
(v / view-01
    :ARG1 (e / enter-01
        :ARG0 (t2 / train)
        :ARG1 (t3 / tunnel))
    :ARG1-of (t / take-01
        :ARG2 (c / car
            :quant 1
            :ARG1-of (i / include-91
                :ARG2 (c2 / car)))))
