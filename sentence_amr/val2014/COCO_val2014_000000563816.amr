# ::tok two slices of pizza with different toppings sit in a paper pizzas box with paper plates in it .
# ::node	0	2	0-1
# ::node	s2	slice	1-2
# ::node	p2	pizza	3-4
# ::node	h	have-03	4-5
# ::node	d	differ-02	5-6
# ::node	i	ingredient	6-7
# ::node	t	top-01	6-7
# ::node	s	sit-01	7-8
# ::node	p	paper	10-11
# ::node	b	box	12-13
# ::node	h2	have-03	13-14
# ::node	p3	plate	15-16
# ::root	s	sit-01
# ::edge	slice	quant	2	s2	0	
# ::edge	slice	mod	pizza	s2	p2	
# ::edge	slice	ARG0-of	have-03	s2	h	
# ::edge	ingredient	ARG1-of	differ-02	i	d	
# ::edge	have-03	ARG1	ingredient	h	i	
# ::edge	ingredient	ARG2-of	top-01	i	t	
# ::edge	sit-01	ARG1	slice	s	s2	
# ::edge	box	consist-of	paper	b	p	
# ::edge	sit-01	ARG2	box	s	b	
# ::edge	box	mod	pizza	b	p2	
# ::edge	box	ARG0-of	have-03	b	h2	
# ::edge	have-03	ARG1	plate	h2	p3	
# ::edge	plate	consist-of	paper	p3	p	
(s / sit-01
    :ARG1 (s2 / slice
        :quant 2
        :ARG0-of (h / have-03
            :ARG1 (i / ingredient
                :ARG1-of (d / differ-02)
                :ARG2-of (t / top-01)))
        :mod (p2 / pizza))
    :ARG2 (b / box
        :ARG0-of (h2 / have-03
            :ARG1 (p3 / plate
                :consist-of (p / paper)))
        :consist-of p
        :mod p2))
