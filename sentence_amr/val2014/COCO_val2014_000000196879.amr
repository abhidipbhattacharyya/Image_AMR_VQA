# ::tok A zebra is standing on gravel , facing the camera ,
# ::node	z	zebra	1-2
# ::node	s	stand-01	3-4
# ::node	g	gravel	5-6
# ::node	a	and	6-7
# ::node	f	face-01	7-8
# ::node	c	camera	9-10
# ::root	a	and
# ::edge	stand-01	ARG0	zebra	s	z	
# ::edge	stand-01	ARG2	gravel	s	g	
# ::edge	and	op1	stand-01	a	s	
# ::edge	and	op2	face-01	a	f	
# ::edge	face-01	ARG0	zebra	f	z	
# ::edge	face-01	ARG1	camera	f	c	
(a / and
    :op1 (s / stand-01
        :ARG0 (z / zebra)
        :ARG2 (g / gravel))
    :op2 (f / face-01
        :ARG0 z
        :ARG1 (c / camera)))
