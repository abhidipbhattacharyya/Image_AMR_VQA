# ::tok two zebra drinking wwater while a third one looks somewhere else
# ::node	0	2	0-1
# ::node	z	zebra	1-2
# ::node	z2	zebra	1-2
# ::node	d	drink-01	2-3
# ::node	w	wwater	3-4
# ::node	c	contrast-01	4-5
# ::node	o	ordinal-entity	6-7
# ::node	1	3	6-7
# ::node	l	look-01	8-9
# ::node	s	somewhere	9-10
# ::node	e	else	10-11
# ::root	c	contrast-01
# ::edge	zebra	quant	2	z	0	
# ::edge	drink-01	ARG0	zebra	d	z	
# ::edge	drink-01	ARG1	wwater	d	w	
# ::edge	contrast-01	ARG1	drink-01	c	d	
# ::edge	zebra	ord	ordinal-entity	z2	o	
# ::edge	ordinal-entity	value	3	o	1	
# ::edge	contrast-01	ARG2	look-01	c	l	
# ::edge	look-01	ARG0	zebra	l	z2	
# ::edge	look-01	ARG1	somewhere	l	s	
# ::edge	somewhere	mod	else	s	e	
(c / contrast-01
    :ARG1 (d / drink-01
        :ARG0 (z / zebra
            :quant 2)
        :ARG1 (w / wwater))
    :ARG2 (l / look-01
        :ARG0 (z2 / zebra
            :ord (o / ordinal-entity
                :value 3))
        :ARG1 (s / somewhere
            :mod (e / else))))
