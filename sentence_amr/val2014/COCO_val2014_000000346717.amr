# ::tok a skateboarder jumps over a stone dome with silver domes in front of it and bicycler behind him .
# ::node	p	person	1-2
# ::node	b3	board-05	1-2
# ::node	j	jump-03	2-3
# ::node	o	over	3-4
# ::node	s2	stone	5-6
# ::node	d	dome	6-7
# ::node	h	have-03	7-8
# ::node	s	silver	8-9
# ::node	t	top	9-10
# ::node	i	in-front-of	11-12
# ::node	a	and	14-15
# ::node	b2	bicycle-01	15-16
# ::node	p2	person	16-17
# ::node	b	behind	16-17
# ::root	a	and
# ::edge	person	ARG0-of	board-05	p	b3	
# ::edge	jump-03	ARG0	person	j	p	
# ::edge	jump-03	path	over	j	o	
# ::edge	dome	consist-of	stone	d	s2	
# ::edge	over	op1	dome	o	d	
# ::edge	dome	ARG0-of	have-03	d	h	
# ::edge	top	mod	silver	t	s	
# ::edge	have-03	ARG1	top	h	t	
# ::edge	top	location	in-front-of	t	i	
# ::edge	in-front-of	op1	dome	i	d	
# ::edge	and	op1	jump-03	a	j	
# ::edge	person	ARG0-of	bicycle-01	p2	b2	
# ::edge	and	op2	person	a	p2	
# ::edge	person	location	behind	p2	b	
# ::edge	behind	op1	dome	b	d	
(a / and
    :op1 (j / jump-03
        :ARG0 (p / person
            :ARG0-of (b3 / board-05))
        :path (o / over
            :op1 (d / dome
                :ARG0-of (h / have-03
                    :ARG1 (t / top
                        :location (i / in-front-of
                            :op1 d)
                        :mod (s / silver)))
                :consist-of (s2 / stone))))
    :op2 (p2 / person
        :ARG0-of (b2 / bicycle-01)
        :location (b / behind
            :op1 d)))
