# ::tok One large elephant holds up his trunk near a herd of elephants that includes several , small baby elephants .
# ::node	0	1	0-1
# ::node	l	large	1-2
# ::node	e	elephant	2-3
# ::node	h2	hold-up-10	3-4
# ::node	t	trunk	6-7
# ::node	n	near-02	7-8
# ::node	h	herd	9-10
# ::node	e2	elephant	11-12
# ::node	i	include-01	13-14
# ::node	s	several	14-15
# ::node	s2	small	16-17
# ::node	b	baby	17-18
# ::node	e3	elephant	18-19
# ::root	h2	hold-up-10
# ::edge	elephant	mod	large	e	l	
# ::edge	elephant	quant	1	e	0	
# ::edge	hold-up-10	ARG0	elephant	h2	e	
# ::edge	hold-up-10	ARG1	trunk	h2	t	
# ::edge	elephant	part	trunk	e	t	
# ::edge	hold-up-10	ARG1-of	near-02	h2	n	
# ::edge	near-02	ARG2	herd	n	h	
# ::edge	herd	consist-of	elephant	h	e2	
# ::edge	herd	ARG2-of	include-01	h	i	
# ::edge	elephant	mod	baby	e3	b	
# ::edge	elephant	mod	small	e3	s2	
# ::edge	elephant	quant	several	e3	s	
# ::edge	include-01	ARG1	elephant	i	e3	
(h2 / hold-up-10
    :ARG0 (e / elephant
        :quant 1
        :mod (l / large)
        :part (t / trunk))
    :ARG1 t
    :ARG1-of (n / near-02
        :ARG2 (h / herd
            :ARG2-of (i / include-01
                :ARG1 (e3 / elephant
                    :quant (s / several)
                    :mod (b / baby)
                    :mod (s2 / small)))
            :consist-of (e2 / elephant))))
