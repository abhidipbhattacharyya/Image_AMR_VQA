# ::tok Two giraffes one giraffe 's head is facing out and the other giraffee 's face is facing the opposite way .
# ::node	1	2	0-1
# ::node	g	giraffe	1-2
# ::node	0	1	2-3
# ::node	g2	giraffe	3-4
# ::node	h	head	5-6
# ::node	f2	face-01	7-8
# ::node	o3	out	8-9
# ::node	a	and	9-10
# ::node	o2	other	11-12
# ::node	g3	giraffee	12-13
# ::node	f	face	14-15
# ::node	f3	face-01	16-17
# ::node	o	opposite-01	18-19
# ::node	w	way	19-20
# ::root	a	and
# ::edge	giraffe	quant	2	g	1	
# ::edge	giraffe	quant	1	g2	0	
# ::edge	head	part-of	giraffe	h	g2	
# ::edge	face-01	ARG0	head	f2	h	
# ::edge	face-01	direction	out	f2	o3	
# ::edge	and	op1	face-01	a	f2	
# ::edge	and	domain	giraffe	a	g	
# ::edge	giraffee	mod	other	g3	o2	
# ::edge	face	part-of	giraffee	f	g3	
# ::edge	face-01	ARG0	face	f3	f	
# ::edge	and	op2	face-01	a	f3	
# ::edge	way	ARG1-of	opposite-01	w	o	
# ::edge	face-01	ARG1	way	f3	w	
(a / and
    :domain (g / giraffe
        :quant 2)
    :op1 (f2 / face-01
        :ARG0 (h / head
            :part-of (g2 / giraffe
                :quant 1))
        :direction (o3 / out))
    :op2 (f3 / face-01
        :ARG0 (f / face
            :part-of (g3 / giraffee
                :mod (o2 / other)))
        :ARG1 (w / way
            :ARG1-of (o / opposite-01))))
