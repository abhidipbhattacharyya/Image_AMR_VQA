# ::tok This is a dog jumping through the air to catch a red Frisbee .
# ::node	t	this	0-1
# ::node	d2	dog	3-4
# ::node	j	jump-03	4-5
# ::node	a	air	7-8
# ::node	c	catch-01	9-10
# ::node	r	red-02	11-12
# ::node	d	disc	12-13
# ::node	n	name	12-13
# ::node	0	Frisbee	12-13
# ::root	d2	dog
# ::edge	dog	domain	this	d2	t	
# ::edge	dog	ARG0-of	jump-03	d2	j	
# ::edge	jump-03	path	air	j	a	
# ::edge	jump-03	purpose	catch-01	j	c	
# ::edge	catch-01	ARG0	dog	c	d2	
# ::edge	disc	ARG1-of	red-02	d	r	
# ::edge	catch-01	ARG1	disc	c	d	
# ::edge	disc	name	name	d	n	
# ::edge	name	op1	Frisbee	n	0	
(d2 / dog
    :ARG0-of (j / jump-03
        :purpose (c / catch-01
            :ARG0 d2
            :ARG1 (d / disc
                :name (n / name
                    :op1 "Frisbee")
                :ARG1-of (r / red-02)))
        :path (a / air))
    :domain (t / this))
