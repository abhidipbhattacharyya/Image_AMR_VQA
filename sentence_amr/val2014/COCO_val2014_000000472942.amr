# ::tok A power company worker works while another worker directs traffic .
# ::node	p3	power-01	1-2
# ::node	c	company	2-3
# ::node	p	person	3-4
# ::node	w	work-01	3-4
# ::node	w2	work-01	4-5
# ::node	a2	another	6-7
# ::node	p2	person	7-8
# ::node	w3	work-01	7-8
# ::node	d	direct-01	8-9
# ::node	t	traffic	9-10
# ::node	a	and	10-11
# ::root	a	and
# ::edge	company	ARG0-of	power-01	c	p3	
# ::edge	person	ARG0-of	work-01	p	w	
# ::edge	work-01	ARG2	company	w	c	
# ::edge	work-01	ARG0	person	w2	p	
# ::edge	person	mod	another	p2	a2	
# ::edge	person	ARG0-of	work-01	p2	w3	
# ::edge	direct-01	ARG0	person	d	p2	
# ::edge	direct-01	ARG1	traffic	d	t	
# ::edge	and	op2	direct-01	a	d	
# ::edge	and	op1	work-01	a	w2	
(a / and
    :op1 (w2 / work-01
        :ARG0 (p / person
            :ARG0-of (w / work-01
                :ARG2 (c / company
                    :ARG0-of (p3 / power-01)))))
    :op2 (d / direct-01
        :ARG0 (p2 / person
            :ARG0-of (w3 / work-01)
            :mod (a2 / another))
        :ARG1 (t / traffic)))
