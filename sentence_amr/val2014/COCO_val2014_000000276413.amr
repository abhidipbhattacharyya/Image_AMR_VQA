# ::tok One small cake is next to a bigger one designed like a old teddy bear
# ::node	0	1	0-1
# ::node	s	small	1-2
# ::node	c	cake	2-3
# ::node	c2	cake	2-3
# ::node	b	be-located-at-91	4-5
# ::node	n	next-to	4-5
# ::node	h	have-degree-91	7-8
# ::node	b3	big	7-8
# ::node	m	more	7-8
# ::node	d	design-01	9-10
# ::node	r	resemble-01	10-11
# ::node	o	old	12-13
# ::node	t	teddy	13-14
# ::node	b2	bear	14-15
# ::root	b	be-located-at-91
# ::edge	cake	mod	small	c	s	
# ::edge	cake	quant	1	c	0	
# ::edge	be-located-at-91	ARG1	cake	b	c	
# ::edge	be-located-at-91	ARG2	next-to	b	n	
# ::edge	next-to	op2	cake	n	c2	
# ::edge	next-to	op1	cake	n	c	
# ::edge	cake	ARG1-of	have-degree-91	c2	h	
# ::edge	have-degree-91	ARG2	big	h	b3	
# ::edge	have-degree-91	ARG3	more	h	m	
# ::edge	cake	ARG1-of	design-01	c2	d	
# ::edge	design-01	ARG1-of	resemble-01	d	r	
# ::edge	bear	mod	teddy	b2	t	
# ::edge	bear	mod	old	b2	o	
# ::edge	resemble-01	ARG2	bear	r	b2	
(b / be-located-at-91
    :ARG1 (c / cake
        :quant 1
        :mod (s / small))
    :ARG2 (n / next-to
        :op1 c
        :op2 (c2 / cake
            :ARG1-of (h / have-degree-91
                :ARG2 (b3 / big)
                :ARG3 (m / more))
            :ARG1-of (d / design-01
                :ARG1-of (r / resemble-01
                    :ARG2 (b2 / bear
                        :mod (t / teddy)
                        :mod (o / old)))))))
