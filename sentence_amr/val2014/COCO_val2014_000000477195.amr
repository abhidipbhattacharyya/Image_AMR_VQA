# ::tok Glass of dark beer next to a plate and tray of fresh pizza
# ::node	d2	drink-01	0-1
# ::node	i	i	0-1
# ::node	m	multiple	0-1
# ::node	v	volume-quantity	0-1
# ::node	g	globe	0-1
# ::node	0	1	0-1
# ::node	d	dark-02	2-3
# ::node	b	beer	3-4
# ::node	n	next-to	4-5
# ::node	p2	plate	7-8
# ::node	a	and	8-9
# ::node	t	tray	9-10
# ::node	f	fresh-04	11-12
# ::node	p	pizza	12-13
# ::root	d2	drink-01
# ::edge	drink-01	ARG0	i	d2	i	
# ::edge	drink-01	quant	multiple	d2	m	
# ::edge	multiple	op1	volume-quantity	m	v	
# ::edge	volume-quantity	unit	globe	v	g	
# ::edge	volume-quantity	quant	1	v	0	
# ::edge	beer	ARG1-of	dark-02	b	d	
# ::edge	drink-01	ARG1	beer	d2	b	
# ::edge	drink-01	location	next-to	d2	n	
# ::edge	and	op1	plate	a	p2	
# ::edge	next-to	op1	and	n	a	
# ::edge	and	op2	tray	a	t	
# ::edge	pizza	ARG1-of	fresh-04	p	f	
# ::edge	tray	consist-of	pizza	t	p	
(d2 / drink-01
    :quant (m / multiple
        :op1 (v / volume-quantity
            :quant 1
            :unit (g / globe)))
    :ARG0 (i / i)
    :ARG1 (b / beer
        :ARG1-of (d / dark-02))
    :location (n / next-to
        :op1 (a / and
            :op1 (p2 / plate)
            :op2 (t / tray
                :consist-of (p / pizza
                    :ARG1-of (f / fresh-04))))))
