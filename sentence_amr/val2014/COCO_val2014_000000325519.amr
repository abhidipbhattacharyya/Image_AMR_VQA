# ::tok A red , black and yellow train coming down the tracks by a body of water .
# ::node	r	red-02	1-2
# ::node	b	black-04	3-4
# ::node	a	and	4-5
# ::node	y	yellow-02	5-6
# ::node	t2	train	6-7
# ::node	t3	train	6-7
# ::node	t4	train	6-7
# ::node	c	come-01	7-8
# ::node	d	down	8-9
# ::node	t	track	10-11
# ::node	b2	body	13-14
# ::node	w	water	15-16
# ::root	c	come-01
# ::edge	and	op1	train	a	t2	
# ::edge	train	ARG1-of	red-02	t2	r	
# ::edge	and	op2	train	a	t3	
# ::edge	train	ARG1-of	black-04	t3	b	
# ::edge	train	ARG1-of	yellow-02	t4	y	
# ::edge	and	op3	train	a	t4	
# ::edge	come-01	ARG1	and	c	a	
# ::edge	come-01	direction	down	c	d	
# ::edge	come-01	path	track	c	t	
# ::edge	come-01	path	body	c	b2	
# ::edge	body	consist-of	water	b2	w	
(c / come-01
    :ARG1 (a / and
        :op1 (t2 / train
            :ARG1-of (r / red-02))
        :op2 (t3 / train
            :ARG1-of (b / black-04))
        :op3 (t4 / train
            :ARG1-of (y / yellow-02)))
    :direction (d / down)
    :path (t / track)
    :path (b2 / body
        :consist-of (w / water)))
