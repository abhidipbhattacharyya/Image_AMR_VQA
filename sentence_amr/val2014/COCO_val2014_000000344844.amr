# ::tok three concrete dividers stacked up and sitting in front of trees
# ::node	0	3	0-1
# ::node	c	concrete	1-2
# ::node	t	thing	2-3
# ::node	d	divide-02	2-3
# ::node	s2	stack-01	3-4
# ::node	a	and	5-6
# ::node	s	sit-01	6-7
# ::node	i	in-front-of	8-9
# ::node	t2	tree	10-11
# ::root	a	and
# ::edge	thing	consist-of	concrete	t	c	
# ::edge	thing	quant	3	t	0	
# ::edge	thing	ARG0-of	divide-02	t	d	
# ::edge	stack-01	ARG1	thing	s2	t	
# ::edge	and	op1	stack-01	a	s2	
# ::edge	and	op2	sit-01	a	s	
# ::edge	sit-01	ARG1	thing	s	t	
# ::edge	sit-01	ARG2	in-front-of	s	i	
# ::edge	in-front-of	op1	tree	i	t2	
(a / and
    :op1 (s2 / stack-01
        :ARG1 (t / thing
            :quant 3
            :ARG0-of (d / divide-02)
            :consist-of (c / concrete)))
    :op2 (s / sit-01
        :ARG1 t
        :ARG2 (i / in-front-of
            :op1 (t2 / tree))))
