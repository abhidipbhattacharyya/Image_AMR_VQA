# ::tok Red train at a stop and a man that is waiting .
# ::node	r	red-02	0-1
# ::node	t	train	1-2
# ::node	s	stop-01	4-5
# ::node	a	and	5-6
# ::node	m	man	7-8
# ::node	w	wait-01	10-11
# ::root	a	and
# ::edge	train	ARG1-of	red-02	t	r	
# ::edge	train	location	stop-01	t	s	
# ::edge	and	op1	train	a	t	
# ::edge	and	op2	man	a	m	
# ::edge	man	ARG1-of	wait-01	m	w	
# ::edge	wait-01	ARG2	train	w	t	
(a / and
    :op1 (t / train
        :ARG1-of (r / red-02)
        :location (s / stop-01))
    :op2 (m / man
        :ARG1-of (w / wait-01
            :ARG2 t)))
