# ::tok A large zebra and baby zebra standing inside an enclosure eating .
# ::node	l	large	1-2
# ::node	z	zebra	2-3
# ::node	a	and	3-4
# ::node	b	baby	4-5
# ::node	z2	zebra	5-6
# ::node	s	stand-01	6-7
# ::node	i	inside	7-8
# ::node	e2	enclosure	9-10
# ::node	e	eat-01	10-11
# ::root	e	eat-01
# ::edge	zebra	mod	large	z	l	
# ::edge	and	op1	zebra	a	z	
# ::edge	zebra	mod	baby	z2	b	
# ::edge	and	op2	zebra	a	z2	
# ::edge	stand-01	ARG1	and	s	a	
# ::edge	stand-01	ARG2	inside	s	i	
# ::edge	inside	op1	enclosure	i	e2	
# ::edge	eat-01	ARG0	and	e	a	
# ::edge	eat-01	rel	stand-01	e	s	
(e / eat-01
    :ARG0 (a / and
        :op1 (z / zebra
            :mod (l / large))
        :op2 (z2 / zebra
            :mod (b / baby)))
    :rel (s / stand-01
        :ARG1 a
        :ARG2 (i / inside
            :op1 (e2 / enclosure))))
