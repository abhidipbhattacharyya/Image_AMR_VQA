# ::tok Two dogs and one that is white is in a cage and someone is putting their finger in the cage while the black dog is sitting out on a wooden floor .
# ::node	1	2	0-1
# ::node	d	dog	1-2
# ::node	d2	dog	1-2
# ::node	a	and	2-3
# ::node	0	1	3-4
# ::node	w	white-03	6-7
# ::node	b	be-located-at-91	8-9
# ::node	c	cage	10-11
# ::node	a2	and	11-12
# ::node	s2	someone	12-13
# ::node	p	put-01	14-15
# ::node	f	finger	16-17
# ::node	b2	black-04	22-23
# ::node	d3	dog	23-24
# ::node	s	sit-01	25-26
# ::node	o	out	26-27
# ::node	w2	wood	29-30
# ::node	f2	floor	30-31
# ::root	a2	and
# ::edge	dog	quant	2	d	1	
# ::edge	and	op2	dog	a	d2	
# ::edge	and	op1	dog	a	d	
# ::edge	dog	quant	1	d2	0	
# ::edge	dog	ARG1-of	white-03	d2	w	
# ::edge	be-located-at-91	ARG1	and	b	a	
# ::edge	be-located-at-91	ARG2	cage	b	c	
# ::edge	and	op1	be-located-at-91	a2	b	
# ::edge	put-01	ARG0	someone	p	s2	
# ::edge	and	op2	put-01	a2	p	
# ::edge	put-01	ARG2	cage	p	c	
# ::edge	put-01	ARG1	finger	p	f	
# ::edge	someone	part	finger	s2	f	
# ::edge	dog	ARG1-of	black-04	d3	b2	
# ::edge	sit-01	ARG1	dog	s	d3	
# ::edge	put-01	time	sit-01	p	s	
# ::edge	sit-01	ARG2	out	s	o	
# ::edge	floor	consist-of	wood	f2	w2	
# ::edge	sit-01	location	floor	s	f2	
(a2 / and
    :op1 (b / be-located-at-91
        :ARG1 (a / and
            :op1 (d / dog
                :quant 2)
            :op2 (d2 / dog
                :quant 1
                :ARG1-of (w / white-03)))
        :ARG2 (c / cage))
    :op2 (p / put-01
        :ARG0 (s2 / someone
            :part (f / finger))
        :ARG1 f
        :ARG2 c
        :time (s / sit-01
            :ARG1 (d3 / dog
                :ARG1-of (b2 / black-04))
            :ARG2 (o / out)
            :location (f2 / floor
                :consist-of (w2 / wood)))))
