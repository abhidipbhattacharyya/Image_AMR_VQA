# ::tok A courtyard , full of poles , pigeons , and garbage cans , also has benches on either side of it , one of which shows the back of a large person facing in the direction of the pigeons .
# ::node	c2	courtyard	1-2
# ::node	f2	full-09	3-4
# ::node	p2	pole	5-6
# ::node	b3	bird	7-8
# ::node	a2	and	9-10
# ::node	g	garbage	10-11
# ::node	c	can	11-12
# ::node	a	also	13-14
# ::node	h	have-03	14-15
# ::node	b2	bench	15-16
# ::node	e	either	17-18
# ::node	s2	side	18-19
# ::node	i	include-91	22-23
# ::node	o	one	22-23
# ::node	s	show-01	25-26
# ::node	b	back	27-28
# ::node	l	large	30-31
# ::node	p	person	31-32
# ::node	f	face-01	32-33
# ::root	h	have-03
# ::edge	courtyard	ARG1-of	full-09	c2	f2	
# ::edge	and	op2	bird	a2	b3	
# ::edge	and	op1	pole	a2	p2	
# ::edge	full-09	ARG2	and	f2	a2	
# ::edge	can	mod	garbage	c	g	
# ::edge	and	op3	can	a2	c	
# ::edge	have-03	mod	also	h	a	
# ::edge	have-03	ARG0	courtyard	h	c2	
# ::edge	have-03	ARG1	bench	h	b2	
# ::edge	side	mod	either	s2	e	
# ::edge	bench	location	side	b2	s2	
# ::edge	courtyard	part	side	c2	s2	
# ::edge	bench	ARG2-of	include-91	b2	i	
# ::edge	include-91	ARG1	one	i	o	
# ::edge	one	ARG0-of	show-01	o	s	
# ::edge	show-01	ARG1	back	s	b	
# ::edge	person	mod	large	p	l	
# ::edge	back	part-of	person	b	p	
# ::edge	person	ARG0-of	face-01	p	f	
# ::edge	face-01	direction	bird	f	b3	
(h / have-03
    :ARG0 (c2 / courtyard
        :ARG1-of (f2 / full-09
            :ARG2 (a2 / and
                :op1 (p2 / pole)
                :op2 (b3 / bird)
                :op3 (c / can
                    :mod (g / garbage))))
        :part (s2 / side
            :mod (e / either)))
    :ARG1 (b2 / bench
        :ARG2-of (i / include-91
            :ARG1 (o / one
                :ARG0-of (s / show-01
                    :ARG1 (b / back
                        :part-of (p / person
                            :ARG0-of (f / face-01
                                :direction b3)
                            :mod (l / large))))))
        :location s2)
    :mod (a / also))
