# ::tok Several zebra 's standing at attention as a group of deer look on .
# ::node	s	several	0-1
# ::node	z	zebra	1-2
# ::node	s2	stand-01	3-4
# ::node	a	attend-02	5-6
# ::node	g	group	8-9
# ::node	d	deer	10-11
# ::node	l	look-01	11-12
# ::root	s2	stand-01
# ::edge	zebra	quant	several	z	s	
# ::edge	stand-01	ARG1	zebra	s2	z	
# ::edge	stand-01	ARG2	attend-02	s2	a	
# ::edge	attend-02	ARG0	zebra	a	z	
# ::edge	group	consist-of	deer	g	d	
# ::edge	look-01	ARG0	group	l	g	
# ::edge	stand-01	time	look-01	s2	l	
(s2 / stand-01
    :ARG1 (z / zebra
        :quant (s / several))
    :ARG2 (a / attend-02
        :ARG0 z)
    :time (l / look-01
        :ARG0 (g / group
            :consist-of (d / deer))))
