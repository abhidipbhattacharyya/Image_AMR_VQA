# ::tok A little girl stands at a little red table , with a birthday cake shaped like a gators head on it , with friends and family around her .
# ::node	l	little	1-2
# ::node	g	girl	2-3
# ::node	s2	stand-01	3-4
# ::node	l2	little	6-7
# ::node	r	red-02	7-8
# ::node	t	table	8-9
# ::node	h	have-03	10-11
# ::node	b	birthday	12-13
# ::node	c	cake	13-14
# ::node	s	shape-01	14-15
# ::node	a2	animal	17-18
# ::node	s3	state	17-18
# ::node	n	name	17-18
# ::node	0	gee	17-18
# ::node	h4	head	18-19
# ::node	p	person	23-24
# ::node	h3	have-rel-role-91	23-24
# ::node	f2	friend	23-24
# ::node	a	and	24-25
# ::node	f	family	25-26
# ::node	h2	have-org-role-91	25-26
# ::node	m	member	25-26
# ::node	a3	around	26-27
# ::root	s2	stand-01
# ::edge	girl	mod	little	g	l	
# ::edge	stand-01	ARG1	girl	s2	g	
# ::edge	table	ARG1-of	red-02	t	r	
# ::edge	table	mod	little	t	l2	
# ::edge	stand-01	ARG2	table	s2	t	
# ::edge	table	ARG0-of	have-03	t	h	
# ::edge	cake	mod	birthday	c	b	
# ::edge	have-03	ARG1	cake	h	c	
# ::edge	cake	ARG1-of	shape-01	c	s	
# ::edge	animal	mod	state	a2	s3	
# ::edge	state	name	name	s3	n	
# ::edge	name	op1	gee	n	0	
# ::edge	head	part-of	animal	h4	a2	
# ::edge	shape-01	ARG2	head	s	h4	
# ::edge	person	ARG0-of	have-rel-role-91	p	h3	
# ::edge	have-rel-role-91	ARG1	girl	h3	g	
# ::edge	have-rel-role-91	ARG2	friend	h3	f2	
# ::edge	and	op1	person	a	p	
# ::edge	and	op2	family	a	f	
# ::edge	family	ARG1-of	have-org-role-91	f	h2	
# ::edge	have-org-role-91	ARG0	girl	h2	g	
# ::edge	have-org-role-91	ARG2	member	h2	m	
# ::edge	around	location-of	and	a3	a	
# ::edge	girl	location	around	g	a3	
# ::edge	around	op1	girl	a3	g	
(s2 / stand-01
    :ARG1 (g / girl
        :location (a3 / around
            :location-of (a / and
                :op1 (p / person
                    :ARG0-of (h3 / have-rel-role-91
                        :ARG1 g
                        :ARG2 (f2 / friend)))
                :op2 (f / family
                    :ARG1-of (h2 / have-org-role-91
                        :ARG0 g
                        :ARG2 (m / member))))
            :op1 g)
        :mod (l / little))
    :ARG2 (t / table
        :ARG0-of (h / have-03
            :ARG1 (c / cake
                :ARG1-of (s / shape-01
                    :ARG2 (h4 / head
                        :part-of (a2 / animal
                            :mod (s3 / state
                                :name (n / name
                                    :op1 "gee")))))
                :mod (b / birthday)))
        :ARG1-of (r / red-02)
        :mod (l2 / little)))
