# ::tok A set of five train tracks in front of a graffiti covered wall .
# ::node	s	set	1-2
# ::node	0	5	3-4
# ::node	t2	train	4-5
# ::node	t	track	5-6
# ::node	b	be-located-at-91	6-7
# ::node	i	in-front-of	7-8
# ::node	g	graffiti-01	10-11
# ::node	c	cover-02	11-12
# ::node	w	wall	12-13
# ::root	b	be-located-at-91
# ::edge	track	purpose	train	t	t2	
# ::edge	track	quant	5	t	0	
# ::edge	set	consist-of	track	s	t	
# ::edge	be-located-at-91	ARG1	set	b	s	
# ::edge	be-located-at-91	ARG2	in-front-of	b	i	
# ::edge	cover-02	ARG2	graffiti-01	c	g	
# ::edge	wall	ARG1-of	cover-02	w	c	
# ::edge	in-front-of	op1	wall	i	w	
(b / be-located-at-91
    :ARG1 (s / set
        :consist-of (t / track
            :purpose (t2 / train)
            :quant 5))
    :ARG2 (i / in-front-of
        :op1 (w / wall
            :ARG1-of (c / cover-02
                :ARG2 (g / graffiti-01)))))
