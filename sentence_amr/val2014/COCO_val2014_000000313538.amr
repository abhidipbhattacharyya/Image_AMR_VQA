# ::tok The pizza sitting on the counter next to the fork and plate looks burn .
# ::node	p	pizza	1-2
# ::node	s	sit-01	2-3
# ::node	c	counter	5-6
# ::node	n	next-to	6-7
# ::node	f	fork	9-10
# ::node	a	and	10-11
# ::node	p2	plate	11-12
# ::node	l	look-02	12-13
# ::node	b	burn-01	13-14
# ::root	l	look-02
# ::edge	pizza	ARG1-of	sit-01	p	s	
# ::edge	sit-01	ARG2	counter	s	c	
# ::edge	sit-01	ARG2	next-to	s	n	
# ::edge	and	op1	fork	a	f	
# ::edge	next-to	op1	and	n	a	
# ::edge	and	op2	plate	a	p2	
# ::edge	look-02	ARG0	pizza	l	p	
# ::edge	look-02	ARG1	burn-01	l	b	
# ::edge	burn-01	ARG1	pizza	b	p	
(l / look-02
    :ARG0 (p / pizza
        :ARG1-of (s / sit-01
            :ARG2 (c / counter)
            :ARG2 (n / next-to
                :op1 (a / and
                    :op1 (f / fork)
                    :op2 (p2 / plate)))))
    :ARG1 (b / burn-01
        :ARG1 p))
