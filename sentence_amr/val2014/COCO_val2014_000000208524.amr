# ::tok A train that is sitting on the tracks in gravel .
# ::node	t2	train	1-2
# ::node	s	sit-01	4-5
# ::node	t	track	7-8
# ::node	g	gravel	9-10
# ::root	s	sit-01
# ::edge	sit-01	ARG1	train	s	t2	
# ::edge	sit-01	ARG2	track	s	t	
# ::edge	track	consist-of	gravel	t	g	
(s / sit-01
    :ARG1 (t2 / train)
    :ARG2 (t / track
        :consist-of (g / gravel)))
