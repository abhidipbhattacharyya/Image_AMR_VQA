# ::tok A train makes its way down a track next to an open field .
# ::node	t2	train	1-2
# ::node	m	make-19	2-3
# ::node	d	down	5-6
# ::node	t	track	7-8
# ::node	n	next-to	8-9
# ::node	o	open-06	11-12
# ::node	f	field	12-13
# ::root	m	make-19
# ::edge	make-19	ARG0	train	m	t2	
# ::edge	make-19	direction	down	m	d	
# ::edge	make-19	ARG1	track	m	t	
# ::edge	track	location	next-to	t	n	
# ::edge	field	ARG1-of	open-06	f	o	
# ::edge	next-to	op1	field	n	f	
(m / make-19
    :ARG0 (t2 / train)
    :ARG1 (t / track
        :location (n / next-to
            :op1 (f / field
                :ARG1-of (o / open-06))))
    :direction (d / down))
