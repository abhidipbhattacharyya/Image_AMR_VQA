# ::tok A display case of many different kinds of a donuts .
# ::node	d2	display-01	1-2
# ::node	c	case	2-3
# ::node	m	many	4-5
# ::node	d	differ-02	5-6
# ::node	k	kind	6-7
# ::node	d3	donut	9-10
# ::root	c	case
# ::edge	case	ARG0-of	display-01	c	d2	
# ::edge	kind	ARG1-of	differ-02	k	d	
# ::edge	kind	quant	many	k	m	
# ::edge	donut	mod	kind	d3	k	
# ::edge	case	consist-of	donut	c	d3	
(c / case
    :ARG0-of (d2 / display-01)
    :consist-of (d3 / donut
        :mod (k / kind
            :quant (m / many)
            :ARG1-of (d / differ-02))))
