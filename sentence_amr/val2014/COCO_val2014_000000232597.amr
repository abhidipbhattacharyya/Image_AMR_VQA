# ::tok A man who looks like a train conductor coming out of a door
# ::node	m	man	1-2
# ::node	l	look-02	3-4
# ::node	t	train	6-7
# ::node	p	person	7-8
# ::node	h	have-org-role-91	7-8
# ::node	c2	conduct-01	7-8
# ::node	c	come-01	8-9
# ::node	o	out-of	9-10
# ::node	d	door	12-13
# ::root	m	man
# ::edge	man	ARG0-of	look-02	m	l	
# ::edge	look-02	ARG1	person	l	p	
# ::edge	person	ARG0-of	have-org-role-91	p	h	
# ::edge	have-org-role-91	ARG1	train	h	t	
# ::edge	have-org-role-91	ARG3	conduct-01	h	c2	
# ::edge	conduct-01	ARG0	person	c2	p	
# ::edge	man	ARG1-of	come-01	m	c	
# ::edge	come-01	direction	out-of	c	o	
# ::edge	out-of	op1	door	o	d	
(m / man
    :ARG0-of (l / look-02
        :ARG1 (p / person
            :ARG0-of (h / have-org-role-91
                :ARG1 (t / train)
                :ARG3 (c2 / conduct-01
                    :ARG0 p))))
    :ARG1-of (c / come-01
        :direction (o / out-of
            :op1 (d / door))))
