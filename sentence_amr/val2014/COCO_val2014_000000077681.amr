# ::tok A table with a deep dish pizza in a pan and a dish with one slice and fork on it .
# ::node	t	table	1-2
# ::node	h	have-03	2-3
# ::node	d	deep-02	4-5
# ::node	d2	dish	5-6
# ::node	p2	pizza	6-7
# ::node	p	pan	9-10
# ::node	a	and	10-11
# ::node	d3	dish	12-13
# ::node	h2	have-03	13-14
# ::node	0	1	14-15
# ::node	s	slice	15-16
# ::node	a2	and	16-17
# ::node	f	fork	17-18
# ::root	a	and
# ::edge	table	ARG0-of	have-03	t	h	
# ::edge	dish	ARG1-of	deep-02	d2	d	
# ::edge	pizza	mod	dish	p2	d2	
# ::edge	pizza	location	pan	p2	p	
# ::edge	and	op1	pizza	a	p2	
# ::edge	have-03	ARG1	and	h	a	
# ::edge	and	op2	dish	a	d3	
# ::edge	dish	ARG0-of	have-03	d3	h2	
# ::edge	slice	quant	1	s	0	
# ::edge	and	op1	slice	a2	s	
# ::edge	have-03	ARG1	and	h2	a2	
# ::edge	and	op2	fork	a2	f	
# ::edge	and	rel	table	a	t	
(a / and
    :op1 (p2 / pizza
        :location (p / pan)
        :mod (d2 / dish
            :ARG1-of (d / deep-02)))
    :op2 (d3 / dish
        :ARG0-of (h2 / have-03
            :ARG1 (a2 / and
                :op1 (s / slice
                    :quant 1)
                :op2 (f / fork))))
    :rel (t / table
        :ARG0-of (h / have-03
            :ARG1 a)))
