# ::tok The red stop sign says stop in two languages there are also cars passing .
# ::node	r	red-02	1-2
# ::node	s3	stop-01	2-3
# ::node	s2	signal-07	3-4
# ::node	s	say-01	4-5
# ::node	s4	stop-01	5-6
# ::node	0	2	7-8
# ::node	l	language	8-9
# ::node	a	also	11-12
# ::node	c	car	12-13
# ::node	p	pass-03	13-14
# ::root	s	say-01
# ::edge	signal-07	ARG1	stop-01	s2	s3	
# ::edge	signal-07	ARG1-of	red-02	s2	r	
# ::edge	say-01	ARG0	signal-07	s	s2	
# ::edge	say-01	ARG1	stop-01	s	s4	
# ::edge	language	quant	2	l	0	
# ::edge	say-01	medium	language	s	l	
# ::edge	car	mod	also	c	a	
# ::edge	pass-03	ARG1	car	p	c	
# ::edge	say-01	time	pass-03	s	p	
(s / say-01
    :ARG0 (s2 / signal-07
        :ARG1 (s3 / stop-01)
        :ARG1-of (r / red-02))
    :ARG1 (s4 / stop-01)
    :medium (l / language
        :quant 2)
    :time (p / pass-03
        :ARG1 (c / car
            :mod (a / also))))
