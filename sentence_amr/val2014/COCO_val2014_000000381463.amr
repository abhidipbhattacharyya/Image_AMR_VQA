# ::tok A street with cars and bus at a stop sign , with an elevated track over road with a commuter train on it against blue sky .
# ::node	s4	street	1-2
# ::node	c	car	3-4
# ::node	a	and	4-5
# ::node	b2	bus	5-6
# ::node	s3	stop-01	8-9
# ::node	s	signal-07	9-10
# ::node	h	have-03	11-12
# ::node	e	elevate-01	13-14
# ::node	t	track	14-15
# ::node	o	over	15-16
# ::node	r	road	16-17
# ::node	c2	commute-01	19-20
# ::node	t2	train	20-21
# ::node	b	blue	24-25
# ::node	s2	sky	25-26
# ::root	s4	street
# ::edge	and	op1	car	a	c	
# ::edge	street	location-of	and	s4	a	
# ::edge	and	op2	bus	a	b2	
# ::edge	signal-07	ARG1	stop-01	s	s3	
# ::edge	street	location	signal-07	s4	s	
# ::edge	street	ARG0-of	have-03	s4	h	
# ::edge	track	ARG1-of	elevate-01	t	e	
# ::edge	have-03	ARG1	track	h	t	
# ::edge	track	location	over	t	o	
# ::edge	over	op1	road	o	r	
# ::edge	train	ARG0-of	commute-01	t2	c2	
# ::edge	track	location-of	train	t	t2	
# ::edge	sky	mod	blue	s2	b	
# ::edge	track	prep-against	sky	t	s2	
(s4 / street
    :ARG0-of (h / have-03
        :ARG1 (t / track
            :ARG1-of (e / elevate-01)
            :location (o / over
                :op1 (r / road))
            :location-of (t2 / train
                :ARG0-of (c2 / commute-01))
            :prep-against (s2 / sky
                :mod (b / blue))))
    :location (s / signal-07
        :ARG1 (s3 / stop-01))
    :location-of (a / and
        :op1 (c / car)
        :op2 (b2 / bus)))
