# ::tok This breakfast has an egg , two sausage , tomatoes , potatoes , bacon , and ham .
# ::node	t	this	0-1
# ::node	b2	breakfast-01	1-2
# ::node	h2	have-03	2-3
# ::node	e	egg	4-5
# ::node	0	2	6-7
# ::node	s	sausage	7-8
# ::node	a	and	8-9
# ::node	t2	tomato	9-10
# ::node	p	potato	11-12
# ::node	b	bacon	13-14
# ::node	h	ham	16-17
# ::root	h2	have-03
# ::edge	breakfast-01	mod	this	b2	t	
# ::edge	have-03	ARG0	breakfast-01	h2	b2	
# ::edge	sausage	quant	2	s	0	
# ::edge	and	op2	sausage	a	s	
# ::edge	and	op1	egg	a	e	
# ::edge	have-03	ARG1	and	h2	a	
# ::edge	and	op3	tomato	a	t2	
# ::edge	and	op4	potato	a	p	
# ::edge	and	op5	bacon	a	b	
# ::edge	and	op6	ham	a	h	
(h2 / have-03
    :ARG0 (b2 / breakfast-01
        :mod (t / this))
    :ARG1 (a / and
        :op1 (e / egg)
        :op2 (s / sausage
            :quant 2)
        :op3 (t2 / tomato)
        :op4 (p / potato)
        :op5 (b / bacon)
        :op6 (h / ham)))
