# ::tok This young fellow is so proud of his tray of drinks that he jammed candy canes into each and every one .
# ::node	t2	this	0-1
# ::node	y	young	1-2
# ::node	f	fellow	2-3
# ::node	h	have-degree-91	4-5
# ::node	s	so	4-5
# ::node	p	pride-01	5-6
# ::node	t3	tray	8-9
# ::node	t	thing	10-11
# ::node	d	drink-01	10-11
# ::node	j	jam-01	13-14
# ::node	c2	candy	14-15
# ::node	c	can	15-16
# ::node	e	each	17-18
# ::node	a	and	18-19
# ::node	e2	every	19-20
# ::node	o	one	20-21
# ::root	h	have-degree-91
# ::edge	fellow	mod	young	f	y	
# ::edge	fellow	mod	this	f	t2	
# ::edge	have-degree-91	ARG1	fellow	h	f	
# ::edge	have-degree-91	ARG3	so	h	s	
# ::edge	have-degree-91	ARG2	pride-01	h	p	
# ::edge	pride-01	ARG0	fellow	p	f	
# ::edge	pride-01	ARG1	tray	p	t3	
# ::edge	tray	poss	fellow	t3	f	
# ::edge	tray	consist-of	thing	t3	t	
# ::edge	thing	ARG1-of	drink-01	t	d	
# ::edge	have-degree-91	ARG6	jam-01	h	j	
# ::edge	jam-01	ARG0	fellow	j	f	
# ::edge	can	mod	candy	c	c2	
# ::edge	jam-01	ARG1	can	j	c	
# ::edge	and	op1	each	a	e	
# ::edge	jam-01	ARG2	and	j	a	
# ::edge	and	op2	every	a	e2	
# ::edge	every	mod	one	e2	o	
(h / have-degree-91
    :ARG1 (f / fellow
        :mod (y / young)
        :mod (t2 / this))
    :ARG2 (p / pride-01
        :ARG0 f
        :ARG1 (t3 / tray
            :consist-of (t / thing
                :ARG1-of (d / drink-01))
            :poss f))
    :ARG3 (s / so)
    :ARG6 (j / jam-01
        :ARG0 f
        :ARG1 (c / can
            :mod (c2 / candy))
        :ARG2 (a / and
            :op1 (e / each)
            :op2 (e2 / every
                :mod (o / one)))))
