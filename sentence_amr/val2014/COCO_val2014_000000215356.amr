# ::tok there is a corner store on the corner of an intersection .
# ::node	c	corner	3-4
# ::node	s	store	4-5
# ::node	c2	corner	7-8
# ::node	i	intersect-01	10-11
# ::root	s	store
# ::edge	store	mod	corner	s	c	
# ::edge	store	location	corner	s	c2	
# ::edge	corner	part-of	intersect-01	c2	i	
(s / store
    :location (c2 / corner
        :part-of (i / intersect-01))
    :mod (c / corner))


# ::tok its sign reads , " COMMERCE " .
# ::node	i	it	0-1
# ::node	s	sign	1-2
# ::node	r	read-01	2-3
# ::node	c	community	5-6
# ::root	r	read-01
# ::edge	sign	poss	it	s	i	
# ::edge	read-01	ARG1	sign	r	s	
# ::edge	read-01	ARG3	community	r	c	
(r / read-01
    :ARG1 (s / sign
        :poss (i / it))
    :ARG3 (c / community))
