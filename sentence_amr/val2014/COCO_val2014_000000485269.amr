# ::tok A sign that says to New York left for Track 2 and right for Track 4 and the light rail is waiting at Track 4 .
# ::node	s2	sign	1-2
# ::node	s	say-01	3-4
# ::node	n	name	5-6
# ::node	2	New	5-6
# ::node	c	city	6-7
# ::node	3	York	6-7
# ::node	l	leave-11	7-8
# ::node	t	track	9-10
# ::node	0	2	10-11
# ::node	a	and	11-12
# ::node	r2	right-04	12-13
# ::node	t2	track	14-15
# ::node	1	4	15-16
# ::node	a2	and	16-17
# ::node	l2	light	18-19
# ::node	r	rail	19-20
# ::node	w	wait-01	21-22
# ::root	s2	sign
# ::edge	sign	ARG0-of	say-01	s2	s	
# ::edge	name	op1	New	n	2	
# ::edge	city	name	name	c	n	
# ::edge	say-01	ARG2	city	s	c	
# ::edge	name	op2	York	n	3	
# ::edge	leave-11	ARG1	track	l	t	
# ::edge	track	mod	2	t	0	
# ::edge	and	op1	leave-11	a	l	
# ::edge	and	op2	right-04	a	r2	
# ::edge	right-04	ARG2	track	r2	t2	
# ::edge	track	mod	4	t2	1	
# ::edge	and	op1	and	a2	a	
# ::edge	say-01	ARG1	and	s	a2	
# ::edge	rail	mod	light	r	l2	
# ::edge	wait-01	ARG1	rail	w	r	
# ::edge	and	op2	wait-01	a2	w	
# ::edge	wait-01	location	track	w	t2	
(s2 / sign
    :ARG0-of (s / say-01
        :ARG1 (a2 / and
            :op1 (a / and
                :op1 (l / leave-11
                    :ARG1 (t / track
                        :mod 2))
                :op2 (r2 / right-04
                    :ARG2 (t2 / track
                        :mod 4)))
            :op2 (w / wait-01
                :ARG1 (r / rail
                    :mod (l2 / light))
                :location t2))
        :ARG2 (c / city
            :name (n / name
                :op1 "New"
                :op2 "York"))))
