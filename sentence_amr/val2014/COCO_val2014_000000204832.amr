# ::tok a black and white counter a sink mirror and a light
# ::node	b	black-04	1-2
# ::node	a	and	2-3
# ::node	w	white-03	3-4
# ::node	c	counter	4-5
# ::node	c2	counter	4-5
# ::node	s	sink	6-7
# ::node	m	mirror	7-8
# ::node	l	light	10-11
# ::root	a	and
# ::edge	and	op1	counter	a	c	
# ::edge	counter	ARG1-of	black-04	c	b	
# ::edge	counter	ARG1-of	white-03	c2	w	
# ::edge	and	op2	counter	a	c2	
# ::edge	mirror	mod	sink	m	s	
# ::edge	and	op3	mirror	a	m	
# ::edge	and	op4	light	a	l	
(a / and
    :op1 (c / counter
        :ARG1-of (b / black-04))
    :op2 (c2 / counter
        :ARG1-of (w / white-03))
    :op3 (m / mirror
        :mod (s / sink))
    :op4 (l / light))
