# ::tok One zebra stands still while another one lays down in a pen .
# ::node	0	1	0-1
# ::node	z	zebra	1-2
# ::node	z2	zebra	1-2
# ::node	s	stand-01	2-3
# ::node	s2	still	3-4
# ::node	c	contrast-01	4-5
# ::node	a	another	5-6
# ::node	l	lay-01	7-8
# ::node	d	down	8-9
# ::node	p	pen	11-12
# ::root	c	contrast-01
# ::edge	zebra	quant	1	z	0	
# ::edge	stand-01	ARG1	zebra	s	z	
# ::edge	stand-01	mod	still	s	s2	
# ::edge	contrast-01	ARG1	stand-01	c	s	
# ::edge	zebra	mod	another	z2	a	
# ::edge	contrast-01	ARG2	lay-01	c	l	
# ::edge	lay-01	ARG0	zebra	l	z2	
# ::edge	lay-01	ARG2	down	l	d	
# ::edge	lay-01	location	pen	l	p	
(c / contrast-01
    :ARG1 (s / stand-01
        :ARG1 (z / zebra
            :quant 1)
        :mod (s2 / still))
    :ARG2 (l / lay-01
        :ARG0 (z2 / zebra
            :mod (a / another))
        :ARG2 (d / down)
        :location (p / pen)))
