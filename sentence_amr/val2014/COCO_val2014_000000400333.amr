# ::tok A plate with two slices of pizza on a table with another plate and glass .
# ::node	p2	plate	1-2
# ::node	h	have-03	2-3
# ::node	0	2	3-4
# ::node	s	slice	4-5
# ::node	p	pizza	6-7
# ::node	t	table	9-10
# ::node	a	accompany-01	10-11
# ::node	a3	another	11-12
# ::node	p3	plate	12-13
# ::node	a2	and	13-14
# ::node	g	glass	14-15
# ::root	a	accompany-01
# ::edge	have-03	ARG0	plate	h	p2	
# ::edge	slice	quant	2	s	0	
# ::edge	pizza	quant	slice	p	s	
# ::edge	have-03	ARG1	pizza	h	p	
# ::edge	accompany-01	ARG2	table	a	t	
# ::edge	accompany-01	ARG0	have-03	a	h	
# ::edge	and	op1	plate	a2	p3	
# ::edge	and	mod	another	a2	a3	
# ::edge	accompany-01	ARG1	and	a	a2	
# ::edge	and	op2	glass	a2	g	
(a / accompany-01
    :ARG0 (h / have-03
        :ARG0 (p2 / plate)
        :ARG1 (p / pizza
            :quant (s / slice
                :quant 2)))
    :ARG1 (a2 / and
        :mod (a3 / another)
        :op1 (p3 / plate)
        :op2 (g / glass))
    :ARG2 (t / table))
