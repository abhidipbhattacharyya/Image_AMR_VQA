# ::tok The people overlook the conveyer at the airport as they await return of their luggage .
# ::node	p	person	1-2
# ::node	o	overlook-01	2-3
# ::node	c	conveyer	4-5
# ::node	a	airport	7-8
# ::node	a2	await-01	10-11
# ::node	r	return-01	11-12
# ::node	l	luggage	14-15
# ::root	o	overlook-01
# ::edge	overlook-01	ARG0	person	o	p	
# ::edge	overlook-01	ARG1	conveyer	o	c	
# ::edge	conveyer	location	airport	c	a	
# ::edge	overlook-01	time	await-01	o	a2	
# ::edge	await-01	ARG1	person	a2	p	
# ::edge	await-01	ARG2	return-01	a2	r	
# ::edge	return-01	ARG1	luggage	r	l	
# ::edge	luggage	poss	person	l	p	
(o / overlook-01
    :ARG0 (p / person)
    :ARG1 (c / conveyer
        :location (a / airport))
    :time (a2 / await-01
        :ARG1 p
        :ARG2 (r / return-01
            :ARG1 (l / luggage
                :poss p))))
