# ::tok a cake in the form of a train sits on a cook tray
# ::node	c	cake	1-2
# ::node	f	form-01	4-5
# ::node	t	train	7-8
# ::node	s	sit-01	8-9
# ::node	p	person	11-12
# ::node	c2	cook-01	11-12
# ::node	t2	tray	12-13
# ::root	s	sit-01
# ::edge	cake	ARG1-of	form-01	c	f	
# ::edge	form-01	ARG2	train	f	t	
# ::edge	sit-01	ARG1	cake	s	c	
# ::edge	person	ARG0-of	cook-01	p	c2	
# ::edge	tray	mod	person	t2	p	
# ::edge	sit-01	ARG2	tray	s	t2	
(s / sit-01
    :ARG1 (c / cake
        :ARG1-of (f / form-01
            :ARG2 (t / train)))
    :ARG2 (t2 / tray
        :mod (p / person
            :ARG0-of (c2 / cook-01))))
