# ::tok Two people on top of a ski slop , one with skies and one with a snowboard .
# ::node	2	2	0-1
# ::node	p	person	1-2
# ::node	b	be-located-at-91	2-3
# ::node	t	top	3-4
# ::node	s	ski-01	6-7
# ::node	s3	slop	7-8
# ::node	i	include-91	9-10
# ::node	i2	include-91	9-10
# ::node	0	1	9-10
# ::node	1	1	9-10
# ::node	p2	person	10-11
# ::node	h	have-03	10-11
# ::node	s2	sky	11-12
# ::node	p3	person	13-14
# ::node	h2	have-03	14-15
# ::node	s4	snowboard	16-17
# ::root	b	be-located-at-91
# ::edge	person	quant	2	p	2	
# ::edge	be-located-at-91	ARG1	person	b	p	
# ::edge	be-located-at-91	ARG2	top	b	t	
# ::edge	slop	mod	ski-01	s3	s	
# ::edge	top	op1	slop	t	s3	
# ::edge	slop	ARG2-of	include-91	s3	i	
# ::edge	person	ARG2-of	include-91	p	i2	
# ::edge	person	quant	1	p2	0	
# ::edge	include-91	ARG1	person	i	p2	
# ::edge	person	ARG0-of	have-03	p2	h	
# ::edge	have-03	ARG1	sky	h	s2	
# ::edge	person	quant	1	p3	1	
# ::edge	include-91	ARG1	person	i2	p3	
# ::edge	person	ARG0-of	have-03	p3	h2	
# ::edge	have-03	ARG1	snowboard	h2	s4	
(b / be-located-at-91
    :ARG1 (p / person
        :quant 2
        :ARG2-of (i2 / include-91
            :ARG1 (p3 / person
                :quant 1
                :ARG0-of (h2 / have-03
                    :ARG1 (s4 / snowboard)))))
    :ARG2 (t / top
        :op1 (s3 / slop
            :ARG2-of (i / include-91
                :ARG1 (p2 / person
                    :quant 1
                    :ARG0-of (h / have-03
                        :ARG1 (s2 / sky))))
            :mod (s / ski-01))))
