# ::tok Lone zebra as seen through narrow opening in enclosed area .
# ::node	0	1	0-1
# ::node	z	zebra	1-2
# ::node	s	see-01	3-4
# ::node	n	narrow-02	5-6
# ::node	o	open-01	6-7
# ::node	c	confine-01	8-9
# ::node	a	area	9-10
# ::root	s	see-01
# ::edge	zebra	quant	1	z	0	
# ::edge	see-01	ARG1	zebra	s	z	
# ::edge	open-01	ARG1-of	narrow-02	o	n	
# ::edge	see-01	path	open-01	s	o	
# ::edge	area	ARG1-of	confine-01	a	c	
# ::edge	open-01	location	area	o	a	
(s / see-01
    :ARG1 (z / zebra
        :quant 1)
    :path (o / open-01
        :ARG1-of (n / narrow-02)
        :location (a / area
            :ARG1-of (c / confine-01))))
