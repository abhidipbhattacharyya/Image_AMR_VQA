# ::tok Two slices of pizza are on a blue and white plate on a coffee table .
# ::node	0	2	0-1
# ::node	s	slice	1-2
# ::node	p	pizza	3-4
# ::node	b	be-located-at-91	5-6
# ::node	b2	blue	7-8
# ::node	a	and	8-9
# ::node	w	white-03	9-10
# ::node	p2	plate	10-11
# ::node	p3	plate	10-11
# ::node	c	coffee	13-14
# ::node	t	table	14-15
# ::root	b	be-located-at-91
# ::edge	slice	quant	2	s	0	
# ::edge	slice	mod	pizza	s	p	
# ::edge	be-located-at-91	ARG1	slice	b	s	
# ::edge	be-located-at-91	ARG2	and	b	a	
# ::edge	and	op1	plate	a	p2	
# ::edge	plate	mod	blue	p2	b2	
# ::edge	plate	ARG1-of	white-03	p3	w	
# ::edge	and	op2	plate	a	p3	
# ::edge	table	mod	coffee	t	c	
# ::edge	and	location	table	a	t	
(b / be-located-at-91
    :ARG1 (s / slice
        :quant 2
        :mod (p / pizza))
    :ARG2 (a / and
        :location (t / table
            :mod (c / coffee))
        :op1 (p2 / plate
            :mod (b2 / blue))
        :op2 (p3 / plate
            :ARG1-of (w / white-03))))
