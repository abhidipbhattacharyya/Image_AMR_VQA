# ::tok YELLOW AND BROWN TRAIN ON THE TRACKS LOOKS IT HAS EYES
# ::node	r	Brown	0-1
# ::node	a	and	1-2
# ::node	r2	Brown	2-3
# ::node	t3	train-01	3-4
# ::node	t2	track-01	6-7
# ::node	t	track	6-7
# ::node	l	look-02	7-8
# ::node	h	have-03	9-10
# ::node	e	eye	10-11
# ::root	l	look-02
# ::edge	and	op1	Brown	a	r	
# ::edge	and	op2	Brown	a	r2	
# ::edge	and	ARG0-of	train-01	a	t3	
# ::edge	and	location	track-01	a	t2	
# ::edge	track-01	ARG3	track	t2	t	
# ::edge	look-02	ARG0	and	l	a	
# ::edge	look-02	ARG1	have-03	l	h	
# ::edge	have-03	ARG0	train-01	h	t3	
# ::edge	have-03	ARG1	eye	h	e	
(l / look-02
    :ARG0 (a / and
        :ARG0-of (t3 / train-01)
        :location (t2 / track-01
            :ARG3 (t / track))
        :op1 (r / Brown)
        :op2 (r2 / Brown))
    :ARG1 (h / have-03
        :ARG0 t3
        :ARG1 (e / eye)))
