# ::tok A couple of cars at a traffic light by a sign saying Keep Moving .
# ::node	c2	couple	1-2
# ::node	c	car	3-4
# ::node	t	traffic	6-7
# ::node	l	light	7-8
# ::node	b	be-located-at-91	8-9
# ::node	s2	sign	10-11
# ::node	s	say-01	11-12
# ::node	k	keep-02	12-13
# ::node	y	you	12-13
# ::node	0	imperative	12-13
# ::node	m	move-01	13-14
# ::root	b	be-located-at-91
# ::edge	car	quant	couple	c	c2	
# ::edge	light	mod	traffic	l	t	
# ::edge	be-located-at-91	ARG2	light	b	l	
# ::edge	be-located-at-91	ARG1	car	b	c	
# ::edge	be-located-at-91	prep-by	sign	b	s2	
# ::edge	sign	ARG0-of	say-01	s2	s	
# ::edge	say-01	ARG1	keep-02	s	k	
# ::edge	keep-02	ARG0	you	k	y	
# ::edge	keep-02	mode	imperative	k	0	
# ::edge	move-01	ARG1	you	m	y	
# ::edge	keep-02	ARG1	move-01	k	m	
(b / be-located-at-91
    :ARG1 (c / car
        :quant (c2 / couple))
    :ARG2 (l / light
        :mod (t / traffic))
    :prep-by (s2 / sign
        :ARG0-of (s / say-01
            :ARG1 (k / keep-02
                :ARG0 (y / you)
                :ARG1 (m / move-01
                    :ARG1 y)
                :mode imperative))))
