# ::tok Three red double decker buses that are parked and one green bus .
# ::node	1	3	0-1
# ::node	r	red-02	1-2
# ::node	d2	double	2-3
# ::node	d	deck	3-4
# ::node	b	bus	4-5
# ::node	p	park-01	7-8
# ::node	a	and	8-9
# ::node	0	1	9-10
# ::node	g	green-02	10-11
# ::node	b2	bus	11-12
# ::root	a	and
# ::edge	deck	mod	double	d	d2	
# ::edge	bus	mod	deck	b	d	
# ::edge	bus	ARG1-of	red-02	b	r	
# ::edge	bus	quant	3	b	1	
# ::edge	bus	ARG1-of	park-01	b	p	
# ::edge	and	op1	bus	a	b	
# ::edge	bus	ARG1-of	green-02	b2	g	
# ::edge	bus	quant	1	b2	0	
# ::edge	and	op2	bus	a	b2	
(a / and
    :op1 (b / bus
        :quant 3
        :ARG1-of (r / red-02)
        :ARG1-of (p / park-01)
        :mod (d / deck
            :mod (d2 / double)))
    :op2 (b2 / bus
        :quant 1
        :ARG1-of (g / green-02)))
