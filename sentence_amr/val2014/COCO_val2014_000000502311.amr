# ::tok Two giraffes , one is closer and larger then the other , appearing to be curious about the photographer .
# ::node	1	2	0-1
# ::node	g	giraffe	1-2
# ::node	i	include-91	3-4
# ::node	0	1	3-4
# ::node	c	close-10	5-6
# ::node	h	have-degree-91	5-6
# ::node	m	more	5-6
# ::node	a	and	6-7
# ::node	l	large	7-8
# ::node	h2	have-degree-91	7-8
# ::node	m2	more	7-8
# ::node	o	other	10-11
# ::node	a2	appear-02	12-13
# ::node	c2	curious-01	15-16
# ::node	p	person	18-19
# ::node	p2	photograph-01	18-19
# ::root	a2	appear-02
# ::edge	giraffe	quant	2	g	1	
# ::edge	giraffe	ARG2-of	include-91	g	i	
# ::edge	giraffe	quant	1	g	0	
# ::edge	close-10	ARG1	giraffe	c	g	
# ::edge	close-10	ARG2-of	have-degree-91	c	h	
# ::edge	have-degree-91	ARG1	giraffe	h	g	
# ::edge	have-degree-91	ARG3	more	h	m	
# ::edge	and	op1	close-10	a	c	
# ::edge	include-91	ARG1	and	i	a	
# ::edge	and	op2	large	a	l	
# ::edge	large	ARG2-of	have-degree-91	l	h2	
# ::edge	have-degree-91	ARG1	giraffe	h2	g	
# ::edge	have-degree-91	ARG3	more	h2	m2	
# ::edge	have-degree-91	ARG4	other	h2	o	
# ::edge	have-degree-91	ARG4	other	h	o	
# ::edge	appear-02	ARG1	giraffe	a2	g	
# ::edge	appear-02	ARG2	curious-01	a2	c2	
# ::edge	curious-01	ARG1	giraffe	c2	g	
# ::edge	curious-01	ARG0	person	c2	p	
# ::edge	person	ARG0-of	photograph-01	p	p2	
(a2 / appear-02
    :ARG1 (g / giraffe
        :quant 2
        :quant 1
        :ARG2-of (i / include-91
            :ARG1 (a / and
                :op1 (c / close-10
                    :ARG1 g
                    :ARG2-of (h / have-degree-91
                        :ARG1 g
                        :ARG3 (m / more)
                        :ARG4 (o / other)))
                :op2 (l / large
                    :ARG2-of (h2 / have-degree-91
                        :ARG1 g
                        :ARG3 (m2 / more)
                        :ARG4 o)))))
    :ARG2 (c2 / curious-01
        :ARG0 (p / person
            :ARG0-of (p2 / photograph-01))
        :ARG1 g))
