# ::tok One cat is looking out a window and another cat is out on the ledge .
# ::node	0	1	0-1
# ::node	c	cat	1-2
# ::node	l2	look-01	3-4
# ::node	w	window	6-7
# ::node	a	and	7-8
# ::node	a2	another	8-9
# ::node	c2	cat	9-10
# ::node	o	out-06	11-12
# ::node	l	ledge	14-15
# ::root	a	and
# ::edge	cat	quant	1	c	0	
# ::edge	look-01	ARG0	cat	l2	c	
# ::edge	look-01	ARG1	window	l2	w	
# ::edge	and	op1	look-01	a	l2	
# ::edge	cat	mod	another	c2	a2	
# ::edge	out-06	ARG1	cat	o	c2	
# ::edge	and	op2	out-06	a	o	
# ::edge	out-06	ARG2	ledge	o	l	
(a / and
    :op1 (l2 / look-01
        :ARG0 (c / cat
            :quant 1)
        :ARG1 (w / window))
    :op2 (o / out-06
        :ARG1 (c2 / cat
            :mod (a2 / another))
        :ARG2 (l / ledge)))
