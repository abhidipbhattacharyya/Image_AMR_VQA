# ::tok A bear in the top of a tree holding on so he does not fall out of it .
# ::node	b	bear	1-2
# ::node	t	top	4-5
# ::node	t2	tree	7-8
# ::node	h	hold-01	8-9
# ::node	0	-	13-14
# ::node	f	fall-01	14-15
# ::root	h	hold-01
# ::edge	bear	location	top	b	t	
# ::edge	top	part-of	tree	t	t2	
# ::edge	hold-01	ARG0	bear	h	b	
# ::edge	fall-01	polarity	-	f	0	
# ::edge	hold-01	purpose	fall-01	h	f	
# ::edge	fall-01	ARG3	tree	f	t2	
# ::edge	fall-01	ARG1	bear	f	b	
(h / hold-01
    :purpose (f / fall-01
        :ARG1 (b / bear
            :location (t / top
                :part-of (t2 / tree)))
        :ARG3 t2
        :polarity -)
    :ARG0 b)
