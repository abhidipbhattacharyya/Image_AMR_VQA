# ::tok Trains and buses in a town with a large mountain behind it .
# ::node	t2	train	0-1
# ::node	a	and	1-2
# ::node	b2	bus	2-3
# ::node	t	town	5-6
# ::node	h	have-03	6-7
# ::node	l	large	8-9
# ::node	m	mountain	9-10
# ::node	b	behind	10-11
# ::root	a	and
# ::edge	and	op1	train	a	t2	
# ::edge	and	op2	bus	a	b2	
# ::edge	and	location	town	a	t	
# ::edge	town	ARG0-of	have-03	t	h	
# ::edge	mountain	mod	large	m	l	
# ::edge	have-03	ARG1	mountain	h	m	
# ::edge	mountain	location	behind	m	b	
# ::edge	behind	op1	town	b	t	
(a / and
    :location (t / town
        :ARG0-of (h / have-03
            :ARG1 (m / mountain
                :location (b / behind
                    :op1 t)
                :mod (l / large))))
    :op1 (t2 / train)
    :op2 (b2 / bus))
