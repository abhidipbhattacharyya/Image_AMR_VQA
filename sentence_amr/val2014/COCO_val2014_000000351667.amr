# ::tok Two pans placed next to each other with fresh made pizza in them ready to be cooked
# ::node	0	2	0-1
# ::node	a	Pan	1-2
# ::node	p2	place-01	2-3
# ::node	n	next-to	3-4
# ::node	e	each	5-6
# ::node	o	other	6-7
# ::node	h	have-03	7-8
# ::node	f	fresh-04	8-9
# ::node	m	make-01	9-10
# ::node	p	pizza	10-11
# ::node	r	ready-02	13-14
# ::node	c	cook-01	16-17
# ::root	p2	place-01
# ::edge	Pan	quant	2	a	0	
# ::edge	place-01	ARG1	Pan	p2	a	
# ::edge	place-01	ARG2	next-to	p2	n	
# ::edge	next-to	op1	each	n	e	
# ::edge	other	mod	each	o	e	
# ::edge	next-to	op1	other	n	o	
# ::edge	Pan	ARG0-of	have-03	a	h	
# ::edge	make-01	ARG1-of	fresh-04	m	f	
# ::edge	pizza	ARG1-of	make-01	p	m	
# ::edge	have-03	ARG1	pizza	h	p	
# ::edge	Pan	ARG1-of	ready-02	a	r	
# ::edge	ready-02	ARG2	cook-01	r	c	
# ::edge	cook-01	ARG1	pizza	c	p	
(p2 / place-01
    :ARG1 (a / Pan
        :quant 2
        :ARG0-of (h / have-03
            :ARG1 (p / pizza
                :ARG1-of (m / make-01
                    :ARG1-of (f / fresh-04))))
        :ARG1-of (r / ready-02
            :ARG2 (c / cook-01
                :ARG1 p)))
    :ARG2 (n / next-to
        :op1 (e / each)
        :op1 (o / other
            :mod e)))
