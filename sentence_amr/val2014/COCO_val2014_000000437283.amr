# ::tok A wooden surface with place settings shows a graphic paper place mat under a patterned plate that holds a bowl with thin yellow soup that shows noodles and vegetables .
# ::node	w	wood	1-2
# ::node	s5	surface	2-3
# ::node	h	have-03	3-4
# ::node	p3	place	4-5
# ::node	s	set-01	5-6
# ::node	s2	show-01	6-7
# ::node	g	graphic	8-9
# ::node	p	paper	9-10
# ::node	p4	place-01	10-11
# ::node	m	mat	11-12
# ::node	u	under	12-13
# ::node	p2	pattern	14-15
# ::node	p5	plate	15-16
# ::node	h3	hold-01	17-18
# ::node	b	bowl	19-20
# ::node	h2	have-03	20-21
# ::node	t	thin-03	21-22
# ::node	y	yellow-02	22-23
# ::node	s4	soup	23-24
# ::node	s3	show-01	25-26
# ::node	n	noodle	26-27
# ::node	a	and	27-28
# ::node	v	vegetable	28-29
# ::root	s2	show-01
# ::edge	surface	consist-of	wood	s5	w	
# ::edge	surface	ARG0-of	have-03	s5	h	
# ::edge	set-01	ARG2	place	s	p3	
# ::edge	have-03	ARG1	set-01	h	s	
# ::edge	show-01	ARG0	surface	s2	s5	
# ::edge	paper	mod	graphic	p	g	
# ::edge	mat	purpose	place-01	m	p4	
# ::edge	mat	consist-of	paper	m	p	
# ::edge	show-01	ARG1	mat	s2	m	
# ::edge	mat	location	under	m	u	
# ::edge	plate	mod	pattern	p5	p2	
# ::edge	under	op1	plate	u	p5	
# ::edge	plate	ARG0-of	hold-01	p5	h3	
# ::edge	hold-01	ARG1	bowl	h3	b	
# ::edge	bowl	ARG0-of	have-03	b	h2	
# ::edge	soup	ARG1-of	yellow-02	s4	y	
# ::edge	soup	ARG1-of	thin-03	s4	t	
# ::edge	have-03	ARG1	soup	h2	s4	
# ::edge	soup	ARG0-of	show-01	s4	s3	
# ::edge	and	op1	noodle	a	n	
# ::edge	show-01	ARG1	and	s3	a	
# ::edge	and	op2	vegetable	a	v	
(s2 / show-01
    :ARG0 (s5 / surface
        :ARG0-of (h / have-03
            :ARG1 (s / set-01
                :ARG2 (p3 / place)))
        :consist-of (w / wood))
    :ARG1 (m / mat
        :purpose (p4 / place-01)
        :consist-of (p / paper
            :mod (g / graphic))
        :location (u / under
            :op1 (p5 / plate
                :ARG0-of (h3 / hold-01
                    :ARG1 (b / bowl
                        :ARG0-of (h2 / have-03
                            :ARG1 (s4 / soup
                                :ARG0-of (s3 / show-01
                                    :ARG1 (a / and
                                        :op1 (n / noodle)
                                        :op2 (v / vegetable)))
                                :ARG1-of (y / yellow-02)
                                :ARG1-of (t / thin-03)))))
                :mod (p2 / pattern)))))
