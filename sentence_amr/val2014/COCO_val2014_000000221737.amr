# ::tok A road with a red light indicating whether to cross a bridge or not .
# ::node	r2	road	1-2
# ::node	h	have-03	2-3
# ::node	r	red-02	4-5
# ::node	l	light	5-6
# ::node	i	indicate-01	6-7
# ::node	c	cross-02	9-10
# ::node	c2	cross-02	9-10
# ::node	b	bridge	11-12
# ::node	o	or	12-13
# ::node	0	-	13-14
# ::root	r2	road
# ::edge	road	ARG0-of	have-03	r2	h	
# ::edge	light	ARG1-of	red-02	l	r	
# ::edge	have-03	ARG1	light	h	l	
# ::edge	light	ARG0-of	indicate-01	l	i	
# ::edge	cross-02	ARG1	bridge	c2	b	
# ::edge	cross-02	ARG1	bridge	c	b	
# ::edge	or	op2	cross-02	o	c2	
# ::edge	or	op1	cross-02	o	c	
# ::edge	indicate-01	ARG1	or	i	o	
# ::edge	cross-02	polarity	-	c2	0	
(r2 / road
    :ARG0-of (h / have-03
        :ARG1 (l / light
            :ARG0-of (i / indicate-01
                :ARG1 (o / or
                    :op1 (c / cross-02
                        :ARG1 (b / bridge))
                    :op2 (c2 / cross-02
                        :ARG1 b
                        :polarity -)))
            :ARG1-of (r / red-02))))
