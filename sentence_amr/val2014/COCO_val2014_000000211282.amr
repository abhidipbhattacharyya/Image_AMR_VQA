# ::tok a buffalo chicken pizza is sitting on a paper plate and then it appears that someone ate it .
# ::node	b	buffalo	1-2
# ::node	c	chicken	2-3
# ::node	p2	pizza	3-4
# ::node	s	sit-01	5-6
# ::node	p	paper	8-9
# ::node	p3	plate	9-10
# ::node	a	and	10-11
# ::node	t	then	11-12
# ::node	a2	appear-02	13-14
# ::node	s2	someone	15-16
# ::node	e	eat-01	16-17
# ::root	a	and
# ::edge	chicken	mod	buffalo	c	b	
# ::edge	pizza	mod	chicken	p2	c	
# ::edge	sit-01	ARG1	pizza	s	p2	
# ::edge	plate	consist-of	paper	p3	p	
# ::edge	sit-01	ARG2	plate	s	p3	
# ::edge	and	op1	sit-01	a	s	
# ::edge	appear-02	time	then	a2	t	
# ::edge	and	op2	appear-02	a	a2	
# ::edge	eat-01	ARG0	someone	e	s2	
# ::edge	appear-02	ARG1	eat-01	a2	e	
# ::edge	eat-01	ARG1	pizza	e	p2	
(a / and
    :op1 (s / sit-01
        :ARG1 (p2 / pizza
            :mod (c / chicken
                :mod (b / buffalo)))
        :ARG2 (p3 / plate
            :consist-of (p / paper)))
    :op2 (a2 / appear-02
        :ARG1 (e / eat-01
            :ARG0 (s2 / someone)
            :ARG1 p2)
        :time (t / then)))
