# ::tok A red and white train riding through a city on elevated tracks .
# ::node	r	red-02	1-2
# ::node	a	and	2-3
# ::node	w	white-03	3-4
# ::node	t2	train	4-5
# ::node	t3	train	4-5
# ::node	r2	ride-01	5-6
# ::node	c	city	8-9
# ::node	e	elevate-01	10-11
# ::node	t	track	11-12
# ::root	r2	ride-01
# ::edge	and	op1	train	a	t2	
# ::edge	train	ARG1-of	red-02	t2	r	
# ::edge	train	ARG1-of	white-03	t3	w	
# ::edge	and	op2	train	a	t3	
# ::edge	ride-01	ARG0	and	r2	a	
# ::edge	ride-01	path	city	r2	c	
# ::edge	track	ARG1-of	elevate-01	t	e	
# ::edge	ride-01	location	track	r2	t	
(r2 / ride-01
    :ARG0 (a / and
        :op1 (t2 / train
            :ARG1-of (r / red-02))
        :op2 (t3 / train
            :ARG1-of (w / white-03)))
    :location (t / track
        :ARG1-of (e / elevate-01))
    :path (c / city))
