# ::tok A train crossing a stone bridge surrounded by trees .
# ::node	t	train	1-2
# ::node	c	cross-02	2-3
# ::node	s	stone	4-5
# ::node	b	bridge	5-6
# ::node	s2	surround-01	6-7
# ::node	t2	tree	8-9
# ::root	c	cross-02
# ::edge	cross-02	ARG0	train	c	t	
# ::edge	bridge	consist-of	stone	b	s	
# ::edge	cross-02	ARG1	bridge	c	b	
# ::edge	bridge	ARG2-of	surround-01	b	s2	
# ::edge	surround-01	ARG1	tree	s2	t2	
(c / cross-02
    :ARG0 (t / train)
    :ARG1 (b / bridge
        :ARG2-of (s2 / surround-01
            :ARG1 (t2 / tree))
        :consist-of (s / stone)))
