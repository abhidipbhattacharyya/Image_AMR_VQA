# ::tok One giraffe stands and grazes while bent over while another eats from a laying position .
# ::node	0	1	0-1
# ::node	g	giraffe	1-2
# ::node	g2	giraffe	1-2
# ::node	s	stand-01	2-3
# ::node	a	and	3-4
# ::node	a2	and	3-4
# ::node	g3	graze-01	4-5
# ::node	b	bend-01	6-7
# ::node	o	over	7-8
# ::node	a3	another	9-10
# ::node	e	eat-01	10-11
# ::node	l	lay-01	13-14
# ::node	p	position	14-15
# ::root	a	and
# ::edge	giraffe	quant	1	g	0	
# ::edge	stand-01	ARG1	giraffe	s	g	
# ::edge	and	op1	stand-01	a	s	
# ::edge	and	time	and	a	a2	
# ::edge	and	op2	graze-01	a	g3	
# ::edge	graze-01	ARG0	giraffe	g3	g	
# ::edge	and	op1	bend-01	a2	b	
# ::edge	bend-01	ARG1	giraffe	b	g2	
# ::edge	bend-01	mod	over	b	o	
# ::edge	giraffe	mod	another	g2	a3	
# ::edge	and	op2	eat-01	a2	e	
# ::edge	eat-01	ARG0	giraffe	e	g2	
# ::edge	position	ARG2-of	lay-01	p	l	
# ::edge	eat-01	manner	position	e	p	
(a / and
    :op1 (s / stand-01
        :ARG1 (g / giraffe
            :quant 1))
    :op2 (g3 / graze-01
        :ARG0 g)
    :time (a2 / and
        :op1 (b / bend-01
            :ARG1 (g2 / giraffe
                :mod (a3 / another))
            :mod (o / over))
        :op2 (e / eat-01
            :ARG0 g2
            :manner (p / position
                :ARG2-of (l / lay-01)))))
