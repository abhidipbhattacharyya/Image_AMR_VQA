# ::tok A street corner showing University Street , Gerard Schwarz Pl and 3rd Avenue , with a building in the background
# ::node	s2	street	1-2
# ::node	c	corner	2-3
# ::node	s	show-01	3-4
# ::node	n	name	4-5
# ::node	6	University	4-5
# ::node	s3	street	5-6
# ::node	5	Street	5-6
# ::node	2	Gerard	7-8
# ::node	4	Schwarz	8-9
# ::node	r	road	9-10
# ::node	n2	name	9-10
# ::node	s4	street	9-10
# ::node	3	Pl	9-10
# ::node	a	and	10-11
# ::node	n3	name	11-12
# ::node	0	3rd	11-12
# ::node	1	Avenue	12-13
# ::node	h	have-03	14-15
# ::node	b2	building	16-17
# ::node	b	background	19-20
# ::root	s	show-01
# ::edge	corner	mod	street	c	s2	
# ::edge	show-01	ARG0	corner	s	c	
# ::edge	name	op1	University	n	6	
# ::edge	street	name	name	s3	n	
# ::edge	name	op2	Street	n	5	
# ::edge	road	name	name	r	n2	
# ::edge	name	op2	Schwarz	n2	4	
# ::edge	name	op1	Gerard	n2	2	
# ::edge	name	op3	Pl	n2	3	
# ::edge	and	op3	street	a	s4	
# ::edge	and	op2	road	a	r	
# ::edge	and	op1	street	a	s3	
# ::edge	show-01	ARG1	and	s	a	
# ::edge	street	name	name	s4	n3	
# ::edge	name	op1	3rd	n3	0	
# ::edge	name	op2	Avenue	n3	1	
# ::edge	corner	ARG0-of	have-03	c	h	
# ::edge	have-03	ARG1	building	h	b2	
# ::edge	building	location	background	b2	b	
(s / show-01
    :ARG0 (c / corner
        :ARG0-of (h / have-03
            :ARG1 (b2 / building
                :location (b / background)))
        :mod (s2 / street))
    :ARG1 (a / and
        :op1 (s3 / street
            :name (n / name
                :op1 "University"
                :op2 "Street"))
        :op2 (r / road
            :name (n2 / name
                :op1 "Gerard"
                :op2 "Schwarz"
                :op3 "Pl"))
        :op3 (s4 / street
            :name (n3 / name
                :op1 "3rd"
                :op2 "Avenue"))))
