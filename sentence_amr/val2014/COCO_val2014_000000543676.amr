# ::tok The backside of a train that 's heading down the tracks .
# ::node	b	backside	1-2
# ::node	t2	train	4-5
# ::node	h	head-02	7-8
# ::node	d	down	8-9
# ::node	t	track	10-11
# ::root	b	backside
# ::edge	backside	part-of	train	b	t2	
# ::edge	train	ARG0-of	head-02	t2	h	
# ::edge	head-02	direction	down	h	d	
# ::edge	head-02	ARG1	track	h	t	
(b / backside
    :part-of (t2 / train
        :ARG0-of (h / head-02
            :ARG1 (t / track)
            :direction (d / down))))
