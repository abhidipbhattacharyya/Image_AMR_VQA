# ::tok One brush laying on top of another , with both having zebra patterns
# ::node	o	one	0-1
# ::node	b	brush	1-2
# ::node	b2	brush	1-2
# ::node	l	lay-01	2-3
# ::node	t	top	4-5
# ::node	a	another	6-7
# ::node	h	have-03	10-11
# ::node	z	zebra	11-12
# ::node	p	pattern	12-13
# ::root	l	lay-01
# ::edge	brush	quant	one	b	o	
# ::edge	lay-01	ARG1	brush	l	b	
# ::edge	lay-01	ARG2	top	l	t	
# ::edge	brush	mod	another	b2	a	
# ::edge	brush	ARG0-of	have-03	b2	h	
# ::edge	pattern	mod	zebra	p	z	
# ::edge	have-03	ARG1	pattern	h	p	
# ::edge	lay-01	rel	brush	l	b2	
(l / lay-01
    :ARG1 (b / brush
        :quant (o / one))
    :ARG2 (t / top)
    :rel (b2 / brush
        :ARG0-of (h / have-03
            :ARG1 (p / pattern
                :mod (z / zebra)))
        :mod (a / another)))
