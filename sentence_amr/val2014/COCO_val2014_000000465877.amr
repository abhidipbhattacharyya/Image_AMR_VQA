# ::tok A chef in a kitchen standing next to a counter with jars and containers .
# ::node	c2	chef	1-2
# ::node	k	kitchen	4-5
# ::node	s	stand-01	5-6
# ::node	n	next-to	6-7
# ::node	c4	counter	9-10
# ::node	c	can-01	11-12
# ::node	a	and	12-13
# ::node	c3	container	13-14
# ::root	s	stand-01
# ::edge	chef	location	kitchen	c2	k	
# ::edge	stand-01	ARG1	chef	s	c2	
# ::edge	stand-01	ARG2	next-to	s	n	
# ::edge	next-to	op1	counter	n	c4	
# ::edge	and	op1	can-01	a	c	
# ::edge	counter	consist-of	and	c4	a	
# ::edge	and	op2	container	a	c3	
(s / stand-01
    :ARG1 (c2 / chef
        :location (k / kitchen))
    :ARG2 (n / next-to
        :op1 (c4 / counter
            :consist-of (a / and
                :op1 (c / can-01)
                :op2 (c3 / container)))))
