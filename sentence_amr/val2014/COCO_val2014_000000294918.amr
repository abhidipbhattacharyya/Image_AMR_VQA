# ::tok a retail shop filled with all kinds of bicycles and a window
# ::node	r	retail-01	1-2
# ::node	s	shop	2-3
# ::node	f	fill-01	3-4
# ::node	a	all	5-6
# ::node	k	kind	6-7
# ::node	b	bicycle	8-9
# ::node	a2	and	9-10
# ::node	w	window	11-12
# ::root	s	shop
# ::edge	shop	purpose	retail-01	s	r	
# ::edge	shop	ARG1-of	fill-01	s	f	
# ::edge	kind	mod	all	k	a	
# ::edge	bicycle	mod	kind	b	k	
# ::edge	and	op1	bicycle	a2	b	
# ::edge	fill-01	ARG2	and	f	a2	
# ::edge	and	op2	window	a2	w	
(s / shop
    :purpose (r / retail-01)
    :ARG1-of (f / fill-01
        :ARG2 (a2 / and
            :op1 (b / bicycle
                :mod (k / kind
                    :mod (a / all)))
            :op2 (w / window))))
