# ::tok Two surfers in the water , one standing and one riding his surf board .
# ::node	1	2	0-1
# ::node	p	person	1-2
# ::node	s2	surf-01	1-2
# ::node	b	be-located-at-91	2-3
# ::node	w	water	4-5
# ::node	i	include-91	6-7
# ::node	i2	include-91	6-7
# ::node	0	1	6-7
# ::node	s	stand-01	7-8
# ::node	a2	and	8-9
# ::node	a3	and	8-9
# ::node	a	1	9-10
# ::node	r	ride-01	10-11
# ::node	p2	person	11-12
# ::node	b2	board	13-14
# ::root	a2	and
# ::edge	person	quant	2	p	1	
# ::edge	person	ARG0-of	surf-01	p	s2	
# ::edge	be-located-at-91	ARG1	person	b	p	
# ::edge	be-located-at-91	ARG2	water	b	w	
# ::edge	person	ARG2-of	include-91	p	i	
# ::edge	person	ARG2-of	include-91	p	i2	
# ::edge	and	op1	stand-01	a2	s	
# ::edge	and	op2	and	a2	a3	
# ::edge	and	op1	stand-01	a3	s	
# ::edge	and	quant	1	a3	0	
# ::edge	1	op2	ride-01	a	r	
# ::edge	ride-01	ARG0	person	r	p2	
# ::edge	stand-01	ARG1	person	s	p2	
# ::edge	person	ARG1-of	1	p2	0	
# ::edge	board	poss	person	b2	p2	
# ::edge	ride-01	ARG1	board	r	b2	
# ::edge	board	mod	surf-01	b2	s2	
# ::edge	and	rel	be-located-at-91	a2	b	
# ::edge	and	rel	1	a2	a	
(a2 / and
    :op1 (s / stand-01
        :ARG1 (p2 / person
            :ARG1-of 1))
    :op2 (a3 / and
        :quant 1
        :op1 s)
    :rel (b / be-located-at-91
        :ARG1 (p / person
            :quant 2
            :ARG0-of (s2 / surf-01)
            :ARG2-of (i / include-91)
            :ARG2-of (i2 / include-91))
        :ARG2 (w / water))
    :rel (a / 1
        :op2 (r / ride-01
            :ARG0 p2
            :ARG1 (b2 / board
                :mod s2
                :poss p2))))
