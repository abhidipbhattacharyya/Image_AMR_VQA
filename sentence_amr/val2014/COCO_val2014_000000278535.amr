# ::tok A distorted picture of a store is shown with an island in front of it .
# ::node	d	distort-01	1-2
# ::node	p	picture	2-3
# ::node	s2	store	5-6
# ::node	s	show-01	7-8
# ::node	h	have-03	8-9
# ::node	i2	island	10-11
# ::node	i	in-front-of	12-13
# ::root	s	show-01
# ::edge	picture	ARG1-of	distort-01	p	d	
# ::edge	picture	topic	store	p	s2	
# ::edge	show-01	ARG1	picture	s	p	
# ::edge	picture	ARG0-of	have-03	p	h	
# ::edge	have-03	ARG1	island	h	i2	
# ::edge	island	location	in-front-of	i2	i	
# ::edge	in-front-of	op1	store	i	s2	
(s / show-01
    :ARG1 (p / picture
        :ARG0-of (h / have-03
            :ARG1 (i2 / island
                :location (i / in-front-of
                    :op1 (s2 / store))))
        :ARG1-of (d / distort-01)
        :topic s2))
