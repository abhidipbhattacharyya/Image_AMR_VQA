# ::tok A cat looking at its reflection in a mirror next to a shelf .
# ::node	c	cat	1-2
# ::node	l	look-01	2-3
# ::node	r	reflect-01	5-6
# ::node	m	mirror	8-9
# ::node	n	next-to	9-10
# ::node	s	shelf	12-13
# ::root	l	look-01
# ::edge	look-01	ARG0	cat	l	c	
# ::edge	look-01	ARG1	reflect-01	l	r	
# ::edge	reflect-01	ARG1	cat	r	c	
# ::edge	reflect-01	ARG2	mirror	r	m	
# ::edge	mirror	location	next-to	m	n	
# ::edge	next-to	op1	shelf	n	s	
(l / look-01
    :ARG0 (c / cat)
    :ARG1 (r / reflect-01
        :ARG1 c
        :ARG2 (m / mirror
            :location (n / next-to
                :op1 (s / shelf)))))
