# ::tok A train that is going over a bridge overlooking the city .
# ::node	t	train	1-2
# ::node	g	go-01	4-5
# ::node	o	over	5-6
# ::node	b	bridge	7-8
# ::node	o2	overlook-02	8-9
# ::node	c	city	10-11
# ::root	t	train
# ::edge	train	ARG1-of	go-01	t	g	
# ::edge	go-01	path	over	g	o	
# ::edge	over	op1	bridge	o	b	
# ::edge	bridge	ARG0-of	overlook-02	b	o2	
# ::edge	overlook-02	ARG1	city	o2	c	
(t / train
    :ARG1-of (g / go-01
        :path (o / over
            :op1 (b / bridge
                :ARG0-of (o2 / overlook-02
                    :ARG1 (c / city))))))
