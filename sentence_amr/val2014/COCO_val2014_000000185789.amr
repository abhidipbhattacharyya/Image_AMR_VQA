# ::tok A train passes in front of a building as it comes down the tracks .
# ::node	t2	train	1-2
# ::node	p	pass-02	2-3
# ::node	i	in-front-of	4-5
# ::node	b	building	7-8
# ::node	c	come-01	10-11
# ::node	d	down	11-12
# ::node	t	track	13-14
# ::root	p	pass-02
# ::edge	pass-02	ARG0	train	p	t2	
# ::edge	pass-02	ARG1	in-front-of	p	i	
# ::edge	in-front-of	op1	building	i	b	
# ::edge	pass-02	time	come-01	p	c	
# ::edge	come-01	ARG1	train	c	t2	
# ::edge	come-01	direction	down	c	d	
# ::edge	come-01	path	track	c	t	
(p / pass-02
    :ARG0 (t2 / train)
    :ARG1 (i / in-front-of
        :op1 (b / building))
    :time (c / come-01
        :ARG1 t2
        :direction (d / down)
        :path (t / track)))
