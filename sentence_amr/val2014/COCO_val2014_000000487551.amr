# ::tok a stop sign and a white and green street sign and some trees
# ::node	s5	stop-01	1-2
# ::node	s3	signal-07	2-3
# ::node	w	white-03	5-6
# ::node	a	and	6-7
# ::node	g	green-02	7-8
# ::node	s6	street	8-9
# ::node	s	sign	9-10
# ::node	s2	sign	9-10
# ::node	s4	some	11-12
# ::node	t	tree	12-13
# ::root	a	and
# ::edge	signal-07	ARG1	stop-01	s3	s5	
# ::edge	and	op1	signal-07	a	s3	
# ::edge	sign	mod	street	s	s6	
# ::edge	and	op1	sign	a	s	
# ::edge	sign	ARG1-of	white-03	s	w	
# ::edge	sign	mod	street	s2	s6	
# ::edge	sign	ARG1-of	green-02	s2	g	
# ::edge	and	op2	sign	a	s2	
# ::edge	tree	quant	some	t	s4	
# ::edge	and	op3	tree	a	t	
(a / and
    :op1 (s3 / signal-07
        :ARG1 (s5 / stop-01))
    :op1 (s / sign
        :ARG1-of (w / white-03)
        :mod (s6 / street))
    :op2 (s2 / sign
        :ARG1-of (g / green-02)
        :mod s6)
    :op3 (t / tree
        :quant (s4 / some)))
