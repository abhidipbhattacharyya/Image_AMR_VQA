# ::tok A man stands on a skateboard with an unoccupied skateboard next to him as a younger man looks on with two people on a bench in the background
# ::node	m	man	1-2
# ::node	s2	stand-01	2-3
# ::node	h	have-03	6-7
# ::node	o	occupy-01	8-9
# ::node	0	-	8-9
# ::node	s	skateboard	9-10
# ::node	n	next-to	10-11
# ::node	h2	have-degree-91	15-16
# ::node	y	young	15-16
# ::node	m3	more	15-16
# ::node	m2	man	16-17
# ::node	l	look-01	17-18
# ::node	1	2	20-21
# ::node	p	person	21-22
# ::node	b2	be-located-at-91	22-23
# ::node	b3	bench	24-25
# ::node	a	and	25-26
# ::node	b	background	27-28
# ::root	a	and
# ::edge	stand-01	ARG1	man	s2	m	
# ::edge	man	ARG0-of	have-03	m	h	
# ::edge	occupy-01	polarity	-	o	0	
# ::edge	skateboard	ARG1-of	occupy-01	s	o	
# ::edge	have-03	ARG1	skateboard	h	s	
# ::edge	occupy-01	location	next-to	o	n	
# ::edge	next-to	op1	man	n	m	
# ::edge	have-degree-91	ARG2	young	h2	y	
# ::edge	have-degree-91	ARG3	more	h2	m3	
# ::edge	man	ARG1-of	have-degree-91	m2	h2	
# ::edge	look-01	ARG0	man	l	m2	
# ::edge	person	quant	2	p	1	
# ::edge	be-located-at-91	ARG1	person	b2	p	
# ::edge	be-located-at-91	ARG2	bench	b2	b3	
# ::edge	and	op2	be-located-at-91	a	b2	
# ::edge	and	op1	stand-01	a	s2	
# ::edge	bench	location	background	b3	b	
# ::edge	and	rel	look-01	a	l	
(a / and
    :op1 (s2 / stand-01
        :ARG1 (m / man
            :ARG0-of (h / have-03
                :ARG1 (s / skateboard
                    :ARG1-of (o / occupy-01
                        :location (n / next-to
                            :op1 m)
                        :polarity -)))))
    :op2 (b2 / be-located-at-91
        :ARG1 (p / person
            :quant 2)
        :ARG2 (b3 / bench
            :location (b / background)))
    :rel (l / look-01
        :ARG0 (m2 / man
            :ARG1-of (h2 / have-degree-91
                :ARG2 (y / young)
                :ARG3 (m3 / more)))))
