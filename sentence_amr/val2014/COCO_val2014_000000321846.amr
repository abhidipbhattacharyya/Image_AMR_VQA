# ::tok A counter with a row of plates with a single unique doughnut on each one .
# ::node	c	counter	1-2
# ::node	r	row	4-5
# ::node	p	plate	6-7
# ::node	h	have-03	7-8
# ::node	s	single-02	9-10
# ::node	u	unique-01	10-11
# ::node	d	doughnut	11-12
# ::node	e	each	13-14
# ::root	c	counter
# ::edge	counter	consist-of	row	c	r	
# ::edge	row	consist-of	plate	r	p	
# ::edge	plate	ARG0-of	have-03	p	h	
# ::edge	doughnut	ARG1-of	unique-01	d	u	
# ::edge	doughnut	ARG1-of	single-02	d	s	
# ::edge	have-03	ARG1	doughnut	h	d	
# ::edge	plate	mod	each	p	e	
(c / counter
    :consist-of (r / row
        :consist-of (p / plate
            :ARG0-of (h / have-03
                :ARG1 (d / doughnut
                    :ARG1-of (u / unique-01)
                    :ARG1-of (s / single-02)))
            :mod (e / each))))
