# ::tok A pair of giraffe in a park .
# ::node	p	pair	1-2
# ::node	g	giraffe	3-4
# ::node	p2	park	6-7
# ::root	g	giraffe
# ::edge	giraffe	quant	pair	g	p	
# ::edge	giraffe	location	park	g	p2	
(g / giraffe
    :quant (p / pair)
    :location (p2 / park))


# ::tok One of them is sitting and one of them is standing .
# ::node	0	1	0-1
# ::node	i	include-91	1-2
# ::node	t	they	2-3
# ::node	s	sit-01	4-5
# ::node	a	and	5-6
# ::node	o	one	6-7
# ::node	s2	stand-01	10-11
# ::root	a	and
# ::edge	include-91	ARG2	they	i	t	
# ::edge	sit-01	ARG1	1	s	0	
# ::edge	and	op1	sit-01	a	s	
# ::edge	one	ARG1-of	include-91	o	i	
# ::edge	one	quant	1	o	0	
# ::edge	stand-01	ARG1	one	s2	o	
# ::edge	and	op2	stand-01	a	s2	
(a / and
    :op1 (s / sit-01
        :ARG1 1)
    :op2 (s2 / stand-01
        :ARG1 (o / one
            :quant 1
            :ARG1-of (i / include-91
                :ARG2 (t / they)))))
