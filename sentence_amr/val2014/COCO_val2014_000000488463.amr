# ::tok Bovine and handler await the result of the judges ' inspection .
# ::node	n	name	0-1
# ::node	0	Bovine	0-1
# ::node	a	and	1-2
# ::node	p	person	2-3
# ::node	p2	person	2-3
# ::node	h	handle-01	2-3
# ::node	a2	await-01	3-4
# ::node	r	result-01	5-6
# ::node	p3	person	8-9
# ::node	h2	have-org-role-91	8-9
# ::node	j	judge-01	8-9
# ::node	i	inspect-01	10-11
# ::root	a2	await-01
# ::edge	name	op1	Bovine	n	0	
# ::edge	and	op1	person	a	p	
# ::edge	person	name	name	p	n	
# ::edge	and	op2	person	a	p2	
# ::edge	person	ARG0-of	handle-01	p2	h	
# ::edge	await-01	ARG1	and	a2	a	
# ::edge	await-01	ARG2	result-01	a2	r	
# ::edge	person	ARG0-of	have-org-role-91	p3	h2	
# ::edge	have-org-role-91	ARG3	judge-01	h2	j	
# ::edge	inspect-01	ARG0	person	i	p3	
# ::edge	result-01	ARG1	inspect-01	r	i	
(a2 / await-01
    :ARG1 (a / and
        :op1 (p / person
            :name (n / name
                :op1 "Bovine"))
        :op2 (p2 / person
            :ARG0-of (h / handle-01)))
    :ARG2 (r / result-01
        :ARG1 (i / inspect-01
            :ARG0 (p3 / person
                :ARG0-of (h2 / have-org-role-91
                    :ARG3 (j / judge-01))))))
