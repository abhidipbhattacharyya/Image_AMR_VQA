# ::tok A train track with city on one side and mountain on the other .
# ::node	t2	train	1-2
# ::node	t	track	2-3
# ::node	h	have-03	3-4
# ::node	c	city	4-5
# ::node	o	one	6-7
# ::node	s	side	7-8
# ::node	s2	side	7-8
# ::node	a	and	8-9
# ::node	m	mountain	9-10
# ::node	o2	other	12-13
# ::root	t	track
# ::edge	track	purpose	train	t	t2	
# ::edge	track	ARG0-of	have-03	t	h	
# ::edge	side	mod	one	s	o	
# ::edge	city	location	side	c	s	
# ::edge	and	op1	city	a	c	
# ::edge	have-03	ARG1	and	h	a	
# ::edge	and	op2	mountain	a	m	
# ::edge	mountain	location	side	m	s2	
# ::edge	side	mod	other	s2	o2	
(t / track
    :purpose (t2 / train)
    :ARG0-of (h / have-03
        :ARG1 (a / and
            :op1 (c / city
                :location (s / side
                    :mod (o / one)))
            :op2 (m / mountain
                :location (s2 / side
                    :mod (o2 / other))))))
