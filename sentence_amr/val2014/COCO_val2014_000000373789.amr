# ::tok A plate holding a slice of bread with mayonnaise and chicken tenders and another piece of bread with nothing .
# ::node	p2	plate	1-2
# ::node	h3	hold-01	2-3
# ::node	s	slice	4-5
# ::node	b	bread	6-7
# ::node	h	have-03	7-8
# ::node	m	mayonnaise	8-9
# ::node	a	and	9-10
# ::node	c	chicken	10-11
# ::node	q	quantity	11-12
# ::node	t	tend-02	11-12
# ::node	a2	and	12-13
# ::node	a3	another	13-14
# ::node	p	piece	14-15
# ::node	b2	bread	16-17
# ::node	h2	have-03	17-18
# ::node	n	nothing	18-19
# ::root	a2	and
# ::edge	plate	ARG0-of	hold-01	p2	h3	
# ::edge	bread	quant	slice	b	s	
# ::edge	bread	ARG0-of	have-03	b	h	
# ::edge	and	op1	mayonnaise	a	m	
# ::edge	have-03	ARG1	and	h	a	
# ::edge	and	op2	quantity	a	q	
# ::edge	quantity	ARG1-of	tend-02	q	t	
# ::edge	tend-02	ARG2	chicken	t	c	
# ::edge	and	op1	plate	a2	p2	
# ::edge	plate	ARG1	and	p2	a2	
# ::edge	piece	mod	another	p	a3	
# ::edge	and	op2	piece	a2	p	
# ::edge	piece	mod	bread	p	b2	
# ::edge	piece	ARG0-of	have-03	p	h2	
# ::edge	have-03	ARG1	nothing	h2	n	
# ::edge	and	rel	bread	a2	b	
# ::edge	and	rel	plate	a2	p2	
(a2 / and
    :op1 (p2 / plate
        :ARG0-of (h3 / hold-01)
        :ARG1 a2)
    :op2 (p / piece
        :ARG0-of (h2 / have-03
            :ARG1 (n / nothing))
        :mod (a3 / another)
        :mod (b2 / bread))
    :rel (b / bread
        :quant (s / slice)
        :ARG0-of (h / have-03
            :ARG1 (a / and
                :op1 (m / mayonnaise)
                :op2 (q / quantity
                    :ARG1-of (t / tend-02
                        :ARG2 (c / chicken))))))
    :rel p2)
