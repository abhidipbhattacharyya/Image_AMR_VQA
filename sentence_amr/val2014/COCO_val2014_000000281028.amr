# ::tok A picture through a train window of another train .
# ::node	p	picture	1-2
# ::node	t	through	2-3
# ::node	w	window	5-6
# ::node	a	another	7-8
# ::node	t2	train	8-9
# ::root	p	picture
# ::edge	picture	path	through	p	t	
# ::edge	through	op1	window	t	w	
# ::edge	train	mod	window	t2	w	
# ::edge	window	part-of	train	w	t2	
# ::edge	picture	rel	another	p	a	
(p / picture
    :path (t / through
        :op1 (w / window
            :part-of (t2 / train
                :mod w)))
    :rel (a / another))
