# ::tok Engine train stopped at railway signal as the conductor interprets the signal 's indication .
# ::node	e	engineer-01	0-1
# ::node	t	train	1-2
# ::node	s3	stop-01	2-3
# ::node	r	railway	4-5
# ::node	s	signal-07	5-6
# ::node	c	conductor	8-9
# ::node	i2	interpret-01	9-10
# ::node	s2	signal-07	11-12
# ::node	i	indicate-01	13-14
# ::root	s3	stop-01
# ::edge	train	ARG0-of	engineer-01	t	e	
# ::edge	stop-01	ARG1	train	s3	t	
# ::edge	signal-07	ARG1	railway	s	r	
# ::edge	stop-01	location	signal-07	s3	s	
# ::edge	interpret-01	ARG0	conductor	i2	c	
# ::edge	stop-01	time	interpret-01	s3	i2	
# ::edge	indicate-01	ARG0	signal-07	i	s2	
# ::edge	interpret-01	ARG1	indicate-01	i2	i	
(s3 / stop-01
    :ARG1 (t / train
        :ARG0-of (e / engineer-01))
    :location (s / signal-07
        :ARG1 (r / railway))
    :time (i2 / interpret-01
        :ARG0 (c / conductor)
        :ARG1 (i / indicate-01
            :ARG0 (s2 / signal-07))))
