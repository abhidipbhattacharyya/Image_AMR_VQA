# ::tok two little tray of food - one with fruit and chocolate , the other with veggies
# ::node	0	2	0-1
# ::node	l	little	1-2
# ::node	t	tray	2-3
# ::node	f	food	4-5
# ::node	o	one	6-7
# ::node	h	have-03	7-8
# ::node	f2	fruit	8-9
# ::node	a2	and	9-10
# ::node	a3	and	9-10
# ::node	c	chocolate	10-11
# ::node	a	,	11-12
# ::node	o2	other	13-14
# ::node	h2	have-03	14-15
# ::node	v	vegetable	15-16
# ::root	a	,
# ::edge	tray	mod	little	t	l	
# ::edge	tray	quant	2	t	0	
# ::edge	tray	consist-of	food	t	f	
# ::edge	one	ARG0-of	have-03	o	h	
# ::edge	and	op1	one	a2	o	
# ::edge	have-03	ARG1	and	h	a2	
# ::edge	and	op1	fruit	a3	f2	
# ::edge	have-03	ARG1	and	h	a3	
# ::edge	and	op2	chocolate	a3	c	
# ::edge	,	op1	tray	a	t	
# ::edge	and	op2	other	a2	o2	
# ::edge	other	ARG0-of	have-03	o2	h2	
# ::edge	have-03	ARG1	vegetable	h2	v	
# ::edge	,	rel	have-03	a	h	
(a / ,
    :op1 (t / tray
        :quant 2
        :consist-of (f / food)
        :mod (l / little))
    :rel (h / have-03
        :ARG1 (a2 / and
            :op1 (o / one
                :ARG0-of h)
            :op2 (o2 / other
                :ARG0-of (h2 / have-03
                    :ARG1 (v / vegetable))))
        :ARG1 (a3 / and
            :op1 (f2 / fruit)
            :op2 (c / chocolate))))
