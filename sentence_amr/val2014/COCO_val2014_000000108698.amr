# ::tok a cat standing by a iron fence trying to sneak through it
# ::node	c	cat	1-2
# ::node	s2	stand-01	2-3
# ::node	b	by	3-4
# ::node	i	iron	5-6
# ::node	f	fence	6-7
# ::node	t2	try-01	7-8
# ::node	s	sneak-01	9-10
# ::node	t	through	10-11
# ::root	s2	stand-01
# ::edge	stand-01	ARG1	cat	s2	c	
# ::edge	stand-01	ARG2	by	s2	b	
# ::edge	fence	consist-of	iron	f	i	
# ::edge	by	op1	fence	b	f	
# ::edge	cat	ARG0-of	try-01	c	t2	
# ::edge	try-01	ARG1	sneak-01	t2	s	
# ::edge	sneak-01	ARG1	fence	s	f	
# ::edge	sneak-01	ARG0	cat	s	c	
# ::edge	sneak-01	path	through	s	t	
# ::edge	through	op1	fence	t	f	
(s2 / stand-01
    :ARG1 (c / cat
        :ARG0-of (t2 / try-01
            :ARG1 (s / sneak-01
                :ARG0 c
                :ARG1 (f / fence
                    :consist-of (i / iron))
                :path (t / through
                    :op1 f))))
    :ARG2 (b / by
        :op1 f))
