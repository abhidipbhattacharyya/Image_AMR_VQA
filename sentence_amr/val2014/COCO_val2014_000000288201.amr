# ::tok A person is smiling and looking at his sandwich .
# ::node	p	person	1-2
# ::node	s2	smile-01	3-4
# ::node	a	and	4-5
# ::node	l	look-01	5-6
# ::node	s	sandwich	8-9
# ::root	a	and
# ::edge	smile-01	ARG0	person	s2	p	
# ::edge	and	op1	smile-01	a	s2	
# ::edge	and	op2	look-01	a	l	
# ::edge	look-01	ARG0	person	l	p	
# ::edge	look-01	ARG1	sandwich	l	s	
# ::edge	sandwich	poss	person	s	p	
(a / and
    :op1 (s2 / smile-01
        :ARG0 (p / person))
    :op2 (l / look-01
        :ARG0 p
        :ARG1 (s / sandwich
            :poss p)))
