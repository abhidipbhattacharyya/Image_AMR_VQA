# ::tok A bluebird sitting on an empty mug , on a tray of dishes .
# ::node	b	bluebird	1-2
# ::node	s	sit-01	2-3
# ::node	e	empty-02	5-6
# ::node	m	mug	6-7
# ::node	a	and	7-8
# ::node	t	tray	10-11
# ::node	d	dish	12-13
# ::root	s	sit-01
# ::edge	sit-01	ARG1	bluebird	s	b	
# ::edge	mug	ARG1-of	empty-02	m	e	
# ::edge	and	op1	mug	a	m	
# ::edge	sit-01	ARG2	and	s	a	
# ::edge	and	op2	tray	a	t	
# ::edge	tray	consist-of	dish	t	d	
(s / sit-01
    :ARG1 (b / bluebird)
    :ARG2 (a / and
        :op1 (m / mug
            :ARG1-of (e / empty-02))
        :op2 (t / tray
            :consist-of (d / dish))))
