# ::tok Two pizzas are on a table and a person is on the other side of the table .
# ::node	0	2	0-1
# ::node	p2	pizzeria	1-2
# ::node	b	be-located-at-91	3-4
# ::node	t	table	5-6
# ::node	a	and	6-7
# ::node	p	person	8-9
# ::node	b2	be-located-at-91	10-11
# ::node	o	other	12-13
# ::node	s	side	13-14
# ::root	a	and
# ::edge	pizzeria	quant	2	p2	0	
# ::edge	be-located-at-91	ARG1	pizzeria	b	p2	
# ::edge	be-located-at-91	ARG2	table	b	t	
# ::edge	and	op1	be-located-at-91	a	b	
# ::edge	be-located-at-91	ARG1	person	b2	p	
# ::edge	and	op2	be-located-at-91	a	b2	
# ::edge	side	mod	other	s	o	
# ::edge	be-located-at-91	ARG2	side	b2	s	
# ::edge	table	part	side	t	s	
(a / and
    :op1 (b / be-located-at-91
        :ARG1 (p2 / pizzeria
            :quant 2)
        :ARG2 (t / table
            :part (s / side
                :mod (o / other))))
    :op2 (b2 / be-located-at-91
        :ARG1 (p / person)
        :ARG2 s))
