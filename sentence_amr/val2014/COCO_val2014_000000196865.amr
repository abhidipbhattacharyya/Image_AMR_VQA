# ::tok Two books - " SVG Essentials " and " Programming Ruby " - stacked together .
# ::node	0	2	0-1
# ::node	b	book	1-2
# ::node	b2	book	1-2
# ::node	n	name	1-2
# ::node	b3	book	1-2
# ::node	4	SVG	4-5
# ::node	1	Essentials	5-6
# ::node	a	and	7-8
# ::node	n2	name	9-10
# ::node	2	Programming	9-10
# ::node	3	Ruby	10-11
# ::node	s	stack-01	13-14
# ::node	t	together	14-15
# ::root	s	stack-01
# ::edge	book	quant	2	b	0	
# ::edge	book	name	name	b2	n	
# ::edge	name	op1	SVG	n	4	
# ::edge	name	op2	Essentials	n	1	
# ::edge	and	op2	book	a	b3	
# ::edge	and	op1	book	a	b2	
# ::edge	book	domain	and	b	a	
# ::edge	book	name	name	b3	n2	
# ::edge	name	op1	Programming	n2	2	
# ::edge	name	op2	Ruby	n2	3	
# ::edge	stack-01	ARG1	book	s	b	
# ::edge	stack-01	manner	together	s	t	
(s / stack-01
    :ARG1 (b / book
        :quant 2
        :domain (a / and
            :op1 (b2 / book
                :name (n / name
                    :op1 "SVG"
                    :op2 "Essentials"))
            :op2 (b3 / book
                :name (n2 / name
                    :op1 "Programming"
                    :op2 "Ruby"))))
    :manner (t / together))
