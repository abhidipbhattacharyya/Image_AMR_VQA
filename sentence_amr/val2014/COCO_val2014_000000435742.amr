# ::tok A pair of train carts making a transfer to a different set of tracks .
# ::node	p	pair	1-2
# ::node	t2	train	3-4
# ::node	c	cart	4-5
# ::node	t3	transfer-01	7-8
# ::node	d	differ-02	10-11
# ::node	s	set	11-12
# ::node	t	track	13-14
# ::root	t3	transfer-01
# ::edge	cart	mod	train	c	t2	
# ::edge	cart	quant	pair	c	p	
# ::edge	transfer-01	ARG0	cart	t3	c	
# ::edge	set	ARG1-of	differ-02	s	d	
# ::edge	transfer-01	ARG2	set	t3	s	
# ::edge	set	consist-of	track	s	t	
(t3 / transfer-01
    :ARG0 (c / cart
        :quant (p / pair)
        :mod (t2 / train))
    :ARG2 (s / set
        :ARG1-of (d / differ-02)
        :consist-of (t / track)))
