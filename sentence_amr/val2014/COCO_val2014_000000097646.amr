# ::tok two skateboarders walking up some steps one is holding two skateboards
# ::node	1	2	0-1
# ::node	p	person	1-2
# ::node	s	skate-01	1-2
# ::node	b	board	1-2
# ::node	w	walk-01	2-3
# ::node	u	up	3-4
# ::node	s3	some	4-5
# ::node	s4	step-01	5-6
# ::node	i	include-91	6-7
# ::node	0	1	6-7
# ::node	h	hold-01	8-9
# ::node	2	2	9-10
# ::node	p2	person	10-11
# ::node	s2	skate-01	10-11
# ::root	w	walk-01
# ::edge	person	quant	2	p	1	
# ::edge	person	ARG0-of	skate-01	p	s	
# ::edge	skate-01	ARG1	board	s	b	
# ::edge	walk-01	ARG0	person	w	p	
# ::edge	walk-01	direction	up	w	u	
# ::edge	step-01	quant	some	s4	s3	
# ::edge	up	op1	step-01	u	s4	
# ::edge	include-91	ARG2	person	i	p	
# ::edge	person	ARG0-of	hold-01	p2	h	
# ::edge	person	quant	1	p2	0	
# ::edge	person	ARG1-of	include-91	p2	i	
# ::edge	walk-01	ARG1	person	w	p2	
# ::edge	skate-01	ARG0	person	s2	p2	
# ::edge	skate-01	quant	2	s2	2	
# ::edge	include-91	ARG1	skate-01	i	s2	
(w / walk-01
    :ARG0 (p / person
        :quant 2
        :ARG0-of (s / skate-01
            :ARG1 (b / board)))
    :ARG1 (p2 / person
        :quant 1
        :ARG0-of (h / hold-01)
        :ARG1-of (i / include-91
            :ARG1 (s2 / skate-01
                :quant 2
                :ARG0 p2)
            :ARG2 p))
    :direction (u / up
        :op1 (s4 / step-01
            :quant (s3 / some))))
