# ::tok A white train traveling down the tracks with expo center on a sign on the front .
# ::node	w	white-03	1-2
# ::node	t2	train	2-3
# ::node	t3	travel-01	3-4
# ::node	d	down	4-5
# ::node	t	track	6-7
# ::node	h	have-03	7-8
# ::node	c2	convention	8-9
# ::node	c	center	9-10
# ::node	s	sign	12-13
# ::node	f	front	15-16
# ::root	t3	travel-01
# ::edge	train	ARG1-of	white-03	t2	w	
# ::edge	travel-01	ARG0	train	t3	t2	
# ::edge	travel-01	direction	down	t3	d	
# ::edge	down	path	track	d	t	
# ::edge	train	ARG0-of	have-03	t2	h	
# ::edge	center	mod	convention	c	c2	
# ::edge	have-03	ARG1	center	h	c	
# ::edge	center	location	sign	c	s	
# ::edge	sign	location	front	s	f	
# ::edge	train	part	front	t2	f	
(t3 / travel-01
    :ARG0 (t2 / train
        :ARG0-of (h / have-03
            :ARG1 (c / center
                :location (s / sign
                    :location (f / front))
                :mod (c2 / convention)))
        :ARG1-of (w / white-03)
        :part f)
    :direction (d / down
        :path (t / track)))
