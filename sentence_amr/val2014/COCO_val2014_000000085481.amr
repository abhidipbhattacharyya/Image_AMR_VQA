# ::tok A red tray topped with pancakes next to a cup of soup and a can of soda .
# ::node	r	red-02	1-2
# ::node	t2	tray	2-3
# ::node	t	top-01	3-4
# ::node	e	enzyme	5-6
# ::node	c3	cook-01	5-6
# ::node	n	next-to	6-7
# ::node	b	be-located-at-91	7-8
# ::node	v	volume-quantity	8-9
# ::node	0	1	8-9
# ::node	c4	cup	9-10
# ::node	s2	soup	11-12
# ::node	a	and	12-13
# ::node	c	can	14-15
# ::node	c2	contain-01	14-15
# ::node	s	soda	16-17
# ::root	b	be-located-at-91
# ::edge	tray	ARG1-of	red-02	t2	r	
# ::edge	tray	ARG1-of	top-01	t2	t	
# ::edge	top-01	ARG2	enzyme	t	e	
# ::edge	enzyme	ARG0-of	cook-01	e	c3	
# ::edge	be-located-at-91	ARG2	next-to	b	n	
# ::edge	be-located-at-91	ARG1	tray	b	t2	
# ::edge	volume-quantity	quant	1	v	0	
# ::edge	volume-quantity	unit	cup	v	c4	
# ::edge	soup	quant	volume-quantity	s2	v	
# ::edge	and	op1	soup	a	s2	
# ::edge	next-to	op1	and	n	a	
# ::edge	and	op2	can	a	c	
# ::edge	can	ARG0-of	contain-01	c	c2	
# ::edge	contain-01	ARG1	soda	c2	s	
(b / be-located-at-91
    :ARG1 (t2 / tray
        :ARG1-of (r / red-02)
        :ARG1-of (t / top-01
            :ARG2 (e / enzyme
                :ARG0-of (c3 / cook-01))))
    :ARG2 (n / next-to
        :op1 (a / and
            :op1 (s2 / soup
                :quant (v / volume-quantity
                    :quant 1
                    :unit (c4 / cup)))
            :op2 (c / can
                :ARG0-of (c2 / contain-01
                    :ARG1 (s / soda))))))
