# ::tok Suitcases stacked next to a train car entering a tunnel .
# ::node	c2	case	0-1
# ::node	s	stack-01	1-2
# ::node	n	next-to	2-3
# ::node	t	train	5-6
# ::node	c	car	6-7
# ::node	e	enter-01	7-8
# ::node	t2	tunnel	9-10
# ::root	s	stack-01
# ::edge	stack-01	ARG1	case	s	c2	
# ::edge	stack-01	ARG2	next-to	s	n	
# ::edge	car	mod	train	c	t	
# ::edge	next-to	op1	car	n	c	
# ::edge	car	ARG0-of	enter-01	c	e	
# ::edge	enter-01	ARG1	tunnel	e	t2	
(s / stack-01
    :ARG1 (c2 / case)
    :ARG2 (n / next-to
        :op1 (c / car
            :ARG0-of (e / enter-01
                :ARG1 (t2 / tunnel))
            :mod (t / train))))
