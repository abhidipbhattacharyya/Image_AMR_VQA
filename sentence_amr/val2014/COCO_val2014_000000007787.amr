# ::tok two plates of pizza with different toppings and a stack of white plates in the middle
# ::node	0	2	0-1
# ::node	p2	plate	1-2
# ::node	p	pizza	3-4
# ::node	h	have-03	4-5
# ::node	d	differ-02	5-6
# ::node	i	ingredient	6-7
# ::node	t	top-01	6-7
# ::node	a	and	7-8
# ::node	s	stack	9-10
# ::node	w	white-03	11-12
# ::node	p3	plate	12-13
# ::node	m	middle	15-16
# ::root	a	and
# ::edge	plate	quant	2	p2	0	
# ::edge	plate	consist-of	pizza	p2	p	
# ::edge	plate	ARG0-of	have-03	p2	h	
# ::edge	ingredient	ARG1-of	differ-02	i	d	
# ::edge	have-03	ARG1	ingredient	h	i	
# ::edge	ingredient	ARG2-of	top-01	i	t	
# ::edge	and	op1	plate	a	p2	
# ::edge	and	op2	stack	a	s	
# ::edge	plate	ARG1-of	white-03	p3	w	
# ::edge	stack	consist-of	plate	s	p3	
# ::edge	stack	location	middle	s	m	
# ::edge	middle	op1	pizza	m	p	
(a / and
    :op1 (p2 / plate
        :quant 2
        :ARG0-of (h / have-03
            :ARG1 (i / ingredient
                :ARG1-of (d / differ-02)
                :ARG2-of (t / top-01)))
        :consist-of (p / pizza))
    :op2 (s / stack
        :consist-of (p3 / plate
            :ARG1-of (w / white-03))
        :location (m / middle
            :op1 p)))
