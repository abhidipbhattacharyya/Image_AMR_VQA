# ::tok A broken Sprint flip phone that is in two separate pieces .
# ::node	b	break-01	1-2
# ::node	c	company	2-3
# ::node	n	name	2-3
# ::node	1	Sprint	2-3
# ::node	f	flip	3-4
# ::node	p	phone	4-5
# ::node	0	2	8-9
# ::node	s	separate-02	9-10
# ::node	p2	piece	10-11
# ::root	p	phone
# ::edge	company	name	name	c	n	
# ::edge	name	op1	Sprint	n	1	
# ::edge	phone	mod	flip	p	f	
# ::edge	phone	mod	company	p	c	
# ::edge	phone	ARG1-of	break-01	p	b	
# ::edge	piece	ARG1-of	separate-02	p2	s	
# ::edge	piece	quant	2	p2	0	
# ::edge	phone	part	piece	p	p2	
(p / phone
    :ARG1-of (b / break-01)
    :mod (f / flip)
    :mod (c / company
        :name (n / name
            :op1 "Sprint"))
    :part (p2 / piece
        :quant 2
        :ARG1-of (s / separate-02)))
