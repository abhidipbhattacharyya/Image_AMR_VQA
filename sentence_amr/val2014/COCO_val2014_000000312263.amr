# ::tok Black and white , looking up the side of a building , with a clock and with rows of windows .
# ::node	b	black-and-white	0-1
# ::node	a	and	1-2
# ::node	l	look-01	4-5
# ::node	u	up	5-6
# ::node	s	side	7-8
# ::node	b2	building	10-11
# ::node	h	have-03	12-13
# ::node	c	clock	14-15
# ::node	r	row	17-18
# ::node	w	window	19-20
# ::root	a	and
# ::edge	and	op1	black-and-white	a	b	
# ::edge	and	op2	look-01	a	l	
# ::edge	look-01	direction	up	l	u	
# ::edge	look-01	ARG1	side	l	s	
# ::edge	side	part-of	building	s	b2	
# ::edge	building	ARG0-of	have-03	b2	h	
# ::edge	have-03	ARG1	clock	h	c	
# ::edge	window	quant	row	w	r	
# ::edge	and	op3	window	a	w	
(a / and
    :op1 (b / black-and-white)
    :op2 (l / look-01
        :ARG1 (s / side
            :part-of (b2 / building
                :ARG0-of (h / have-03
                    :ARG1 (c / clock))))
        :direction (u / up))
    :op3 (w / window
        :quant (r / row)))
