# ::tok A zebra sticks his head into a car window and checks out a passenger .
# ::node	z	zebra	1-2
# ::node	s	stick-01	2-3
# ::node	h	head	4-5
# ::node	c	car	7-8
# ::node	w	window	8-9
# ::node	a	and	9-10
# ::node	c2	check-out-05	10-11
# ::node	p	passenger	13-14
# ::root	a	and
# ::edge	stick-01	ARG0	zebra	s	z	
# ::edge	stick-01	ARG1	head	s	h	
# ::edge	zebra	part	head	z	h	
# ::edge	window	part-of	car	w	c	
# ::edge	stick-01	ARG2	window	s	w	
# ::edge	and	op1	stick-01	a	s	
# ::edge	and	op2	check-out-05	a	c2	
# ::edge	check-out-05	ARG0	zebra	c2	z	
# ::edge	check-out-05	ARG1	passenger	c2	p	
(a / and
    :op1 (s / stick-01
        :ARG0 (z / zebra
            :part (h / head))
        :ARG1 h
        :ARG2 (w / window
            :part-of (c / car)))
    :op2 (c2 / check-out-05
        :ARG0 z
        :ARG1 (p / passenger)))
