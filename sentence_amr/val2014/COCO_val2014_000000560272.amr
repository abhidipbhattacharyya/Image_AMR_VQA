# ::tok Two planes - one flying right side up , the other flying upside down .
# ::node	1	2	0-1
# ::node	p	plane	1-2
# ::node	p2	plane	1-2
# ::node	0	1	3-4
# ::node	f	fly-01	4-5
# ::node	f2	fly-01	4-5
# ::node	r	right-04	5-6
# ::node	s	side	6-7
# ::node	u	up	7-8
# ::node	a	and	8-9
# ::node	o	other	10-11
# ::node	f3	fly-01	11-12
# ::node	u2	upside	12-13
# ::node	d	down-03	13-14
# ::root	a	and
# ::edge	plane	quant	2	p	1	
# ::edge	plane	quant	1	p	0	
# ::edge	plane	ARG0-of	fly-01	p	f	
# ::edge	plane	ARG0-of	fly-01	p2	f2	
# ::edge	side	ARG1-of	right-04	s	r	
# ::edge	fly-01	direction	side	f	s	
# ::edge	side	direction	up	s	u	
# ::edge	and	op2	plane	a	p2	
# ::edge	and	op1	plane	a	p	
# ::edge	plane	mod	other	p2	o	
# ::edge	plane	ARG0-of	fly-01	p2	f3	
# ::edge	fly-01	direction	upside	f3	u2	
# ::edge	upside	op1	down-03	u2	d	
(a / and
    :op1 (p / plane
        :quant 2
        :quant 1
        :ARG0-of (f / fly-01
            :direction (s / side
                :ARG1-of (r / right-04)
                :direction (u / up))))
    :op2 (p2 / plane
        :ARG0-of (f2 / fly-01)
        :ARG0-of (f3 / fly-01
            :direction (u2 / upside
                :op1 (d / down-03)))
        :mod (o / other)))
