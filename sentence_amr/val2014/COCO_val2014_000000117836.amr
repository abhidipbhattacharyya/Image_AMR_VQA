# ::tok A plate of odd looking pizza next to two wine glasses and eye glasses case .
# ::node	p2	plate	1-2
# ::node	o	odd	3-4
# ::node	l	look-02	4-5
# ::node	p	pizza	5-6
# ::node	n	next-to	6-7
# ::node	b	be-located-at-91	7-8
# ::node	0	2	8-9
# ::node	w	wine	9-10
# ::node	g	glass	10-11
# ::node	a	and	11-12
# ::node	e	eye	12-13
# ::node	g2	glasses	13-14
# ::node	c	case	14-15
# ::root	b	be-located-at-91
# ::edge	look-02	ARG1	odd	l	o	
# ::edge	pizza	ARG0-of	look-02	p	l	
# ::edge	plate	consist-of	pizza	p2	p	
# ::edge	be-located-at-91	ARG2	next-to	b	n	
# ::edge	be-located-at-91	ARG1	plate	b	p2	
# ::edge	glass	mod	wine	g	w	
# ::edge	glass	quant	2	g	0	
# ::edge	and	op1	glass	a	g	
# ::edge	next-to	op1	and	n	a	
# ::edge	glasses	mod	eye	g2	e	
# ::edge	case	mod	glasses	c	g2	
# ::edge	and	op2	case	a	c	
(b / be-located-at-91
    :ARG1 (p2 / plate
        :consist-of (p / pizza
            :ARG0-of (l / look-02
                :ARG1 (o / odd))))
    :ARG2 (n / next-to
        :op1 (a / and
            :op1 (g / glass
                :quant 2
                :mod (w / wine))
            :op2 (c / case
                :mod (g2 / glasses
                    :mod (e / eye))))))
