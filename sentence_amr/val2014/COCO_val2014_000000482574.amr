# ::tok a man standing and checking out a bunch of hanging fruit on display
# ::node	m	man	1-2
# ::node	s	stand-01	2-3
# ::node	a	and	3-4
# ::node	c	check-out-05	4-5
# ::node	b	bunch	7-8
# ::node	h	hang-01	9-10
# ::node	f	fruit	10-11
# ::node	d	display-01	12-13
# ::root	a	and
# ::edge	stand-01	ARG1	man	s	m	
# ::edge	and	op1	stand-01	a	s	
# ::edge	and	op2	check-out-05	a	c	
# ::edge	check-out-05	ARG0	man	c	m	
# ::edge	fruit	ARG1-of	hang-01	f	h	
# ::edge	fruit	quant	bunch	f	b	
# ::edge	check-out-05	ARG1	fruit	c	f	
# ::edge	fruit	ARG1-of	display-01	f	d	
(a / and
    :op1 (s / stand-01
        :ARG1 (m / man))
    :op2 (c / check-out-05
        :ARG0 m
        :ARG1 (f / fruit
            :quant (b / bunch)
            :ARG1-of (h / hang-01)
            :ARG1-of (d / display-01))))
