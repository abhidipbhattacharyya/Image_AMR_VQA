# ::tok three elephants next to each other on a dirt surface next to a stone ledge
# ::node	0	3	0-1
# ::node	e	elephant	1-2
# ::node	n	next-to	2-3
# ::node	b	be-located-at-91	3-4
# ::node	d	dirt	8-9
# ::node	s2	surface	9-10
# ::node	n2	next-to	10-11
# ::node	s	stone	13-14
# ::node	l	ledge	14-15
# ::root	b	be-located-at-91
# ::edge	elephant	quant	3	e	0	
# ::edge	next-to	op1	elephant	n	e	
# ::edge	be-located-at-91	ARG2	next-to	b	n	
# ::edge	be-located-at-91	ARG1	elephant	b	e	
# ::edge	surface	consist-of	dirt	s2	d	
# ::edge	be-located-at-91	location	surface	b	s2	
# ::edge	surface	location	next-to	s2	n2	
# ::edge	ledge	consist-of	stone	l	s	
# ::edge	next-to	op1	ledge	n2	l	
(b / be-located-at-91
    :ARG1 (e / elephant
        :quant 3)
    :ARG2 (n / next-to
        :op1 e)
    :location (s2 / surface
        :consist-of (d / dirt)
        :location (n2 / next-to
            :op1 (l / ledge
                :consist-of (s / stone)))))
