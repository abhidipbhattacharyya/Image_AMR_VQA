# ::tok A pizza sits on a pan on the counter and has been cut in slices .
# ::node	p2	pizza	1-2
# ::node	s	sit-01	2-3
# ::node	p	pan	5-6
# ::node	c	counter	8-9
# ::node	a	and	9-10
# ::node	c2	cut-01	12-13
# ::node	s2	slice	14-15
# ::root	a	and
# ::edge	sit-01	ARG1	pizza	s	p2	
# ::edge	sit-01	ARG2	pan	s	p	
# ::edge	pan	location	counter	p	c	
# ::edge	and	op1	sit-01	a	s	
# ::edge	and	op2	cut-01	a	c2	
# ::edge	cut-01	ARG1	pizza	c2	p2	
# ::edge	cut-01	manner	slice	c2	s2	
(a / and
    :op1 (s / sit-01
        :ARG1 (p2 / pizza)
        :ARG2 (p / pan
            :location (c / counter)))
    :op2 (c2 / cut-01
        :ARG1 p2
        :manner (s2 / slice)))
