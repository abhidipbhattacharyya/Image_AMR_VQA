# ::tok Two surfers on the same wave need to watch where they 're going .
# ::node	0	2	0-1
# ::node	p	person	1-2
# ::node	s2	surf-01	1-2
# ::node	s	same-01	4-5
# ::node	w2	wave	5-6
# ::node	o	obligate-01	6-7
# ::node	w	watch-01	8-9
# ::node	t	thing	9-10
# ::node	g	go-02	12-13
# ::root	o	obligate-01
# ::edge	person	quant	2	p	0	
# ::edge	person	ARG0-of	surf-01	p	s2	
# ::edge	wave	ARG1-of	same-01	w2	s	
# ::edge	person	location	wave	p	w2	
# ::edge	obligate-01	ARG1	person	o	p	
# ::edge	obligate-01	ARG2	watch-01	o	w	
# ::edge	watch-01	ARG0	person	w	p	
# ::edge	watch-01	ARG1	thing	w	t	
# ::edge	thing	ARG4-of	go-02	t	g	
# ::edge	go-02	ARG0	person	g	p	
(o / obligate-01
    :ARG1 (p / person
        :quant 2
        :ARG0-of (s2 / surf-01)
        :location (w2 / wave
            :ARG1-of (s / same-01)))
    :ARG2 (w / watch-01
        :ARG0 p
        :ARG1 (t / thing
            :ARG4-of (g / go-02
                :ARG0 p))))
