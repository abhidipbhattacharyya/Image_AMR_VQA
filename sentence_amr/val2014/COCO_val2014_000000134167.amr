# ::tok Two zebras in the zoo , with one lying down in the dirt and the other wandering near a fence .
# ::node	1	2	0-1
# ::node	e	elephant	1-2
# ::node	a2	animal	1-2
# ::node	a3	animal	1-2
# ::node	b	be-located-at-91	2-3
# ::node	z	zoo	4-5
# ::node	i	include-91	7-8
# ::node	0	1	7-8
# ::node	l	lie-down-09	8-9
# ::node	d	dirt	12-13
# ::node	a	and	13-14
# ::node	w	wander-01	16-17
# ::node	n	near-02	17-18
# ::node	f	fence	19-20
# ::root	b	be-located-at-91
# ::edge	elephant	quant	2	e	1	
# ::edge	be-located-at-91	ARG1	elephant	b	e	
# ::edge	be-located-at-91	ARG2	zoo	b	z	
# ::edge	include-91	ARG1	elephant	i	e	
# ::edge	elephant	ARG2-of	include-91	e	i	
# ::edge	animal	quant	1	a2	0	
# ::edge	animal	ARG1-of	lie-down-09	a2	l	
# ::edge	lie-down-09	ARG2	dirt	l	d	
# ::edge	and	op2	animal	a	a2	
# ::edge	and	op1	include-91	a	i	
# ::edge	animal	ARG0-of	wander-01	a2	w	
# ::edge	wander-01	ARG1-of	near-02	w	n	
# ::edge	near-02	ARG2	fence	n	f	
# ::edge	be-located-at-91	rel	and	b	a	
# ::edge	be-located-at-91	rel	animal	b	a3	
(b / be-located-at-91
    :ARG1 (e / elephant
        :quant 2
        :ARG2-of (i / include-91
            :ARG1 e))
    :ARG2 (z / zoo)
    :rel (a / and
        :op1 i
        :op2 (a2 / animal
            :quant 1
            :ARG0-of (w / wander-01
                :ARG1-of (n / near-02
                    :ARG2 (f / fence)))
            :ARG1-of (l / lie-down-09
                :ARG2 (d / dirt))))
    :rel (a3 / animal))
