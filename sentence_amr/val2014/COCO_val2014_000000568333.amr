# ::tok A man is standing and smiling for a photo while holding a racket .
# ::node	m	man	1-2
# ::node	s2	stand-01	3-4
# ::node	a	and	4-5
# ::node	s	smile-01	5-6
# ::node	p	photograph-01	8-9
# ::node	h	hold-01	10-11
# ::node	r	racket	12-13
# ::root	a	and
# ::edge	stand-01	ARG1	man	s2	m	
# ::edge	and	op1	stand-01	a	s2	
# ::edge	and	op2	smile-01	a	s	
# ::edge	smile-01	ARG0	man	s	m	
# ::edge	and	purpose	photograph-01	a	p	
# ::edge	and	time	hold-01	a	h	
# ::edge	hold-01	ARG0	man	h	m	
# ::edge	hold-01	ARG1	racket	h	r	
(a / and
    :purpose (p / photograph-01)
    :op1 (s2 / stand-01
        :ARG1 (m / man))
    :op2 (s / smile-01
        :ARG0 m)
    :time (h / hold-01
        :ARG0 m
        :ARG1 (r / racket)))
