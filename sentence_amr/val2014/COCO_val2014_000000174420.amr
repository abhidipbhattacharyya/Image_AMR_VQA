# ::tok A red train driving on a train train track next to an elevated stone sidewalk .
# ::node	r	red-02	1-2
# ::node	t2	train	2-3
# ::node	d	drive-01	3-4
# ::node	t3	train	7-8
# ::node	t	track	8-9
# ::node	n	next-to	9-10
# ::node	e	elevate-01	12-13
# ::node	s2	stone	13-14
# ::node	s	sidewalk	14-15
# ::root	d	drive-01
# ::edge	train	ARG1-of	red-02	t2	r	
# ::edge	drive-01	ARG0	train	d	t2	
# ::edge	train	mod	train	t2	t3	
# ::edge	track	mod	train	t	t3	
# ::edge	drive-01	ARG1	track	d	t	
# ::edge	drive-01	location	next-to	d	n	
# ::edge	stone	ARG1-of	elevate-01	s2	e	
# ::edge	sidewalk	consist-of	stone	s	s2	
# ::edge	next-to	op1	sidewalk	n	s	
(d / drive-01
    :ARG0 (t2 / train
        :ARG1-of (r / red-02)
        :mod (t3 / train))
    :ARG1 (t / track
        :mod t3)
    :location (n / next-to
        :op1 (s / sidewalk
            :consist-of (s2 / stone
                :ARG1-of (e / elevate-01)))))
