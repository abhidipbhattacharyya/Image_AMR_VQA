# ::tok Three people standing holding ski poles in snow , of which , a man and a woman are smiling into the camera , beside another woman looking away , with evergreens , and two people in distance .
# ::node	1	3	0-1
# ::node	p	person	1-2
# ::node	s4	stand-01	2-3
# ::node	h	hold-01	3-4
# ::node	s	ski-01	4-5
# ::node	p3	pole	5-6
# ::node	s3	snow	7-8
# ::node	i	include-91	9-10
# ::node	m	man	13-14
# ::node	a	and	14-15
# ::node	w	woman	16-17
# ::node	s2	smile-01	18-19
# ::node	c	camera	21-22
# ::node	b	beside	23-24
# ::node	a2	another	24-25
# ::node	w2	woman	25-26
# ::node	l	look-01	26-27
# ::node	a3	away	27-28
# ::node	y	Cypress	30-31
# ::node	0	2	33-34
# ::node	p2	person	34-35
# ::node	d	distant-02	36-37
# ::root	s4	stand-01
# ::edge	person	quant	3	p	1	
# ::edge	stand-01	ARG1	person	s4	p	
# ::edge	person	ARG0-of	hold-01	p	h	
# ::edge	pole	mod	ski-01	p3	s	
# ::edge	hold-01	ARG1	pole	h	p3	
# ::edge	pole	location	snow	p3	s3	
# ::edge	person	ARG2-of	include-91	p	i	
# ::edge	and	op1	man	a	m	
# ::edge	and	op2	woman	a	w	
# ::edge	and	ARG0-of	smile-01	a	s2	
# ::edge	smile-01	direction	camera	s2	c	
# ::edge	person	location	beside	p	b	
# ::edge	woman	mod	another	w2	a2	
# ::edge	beside	op1	woman	b	w2	
# ::edge	woman	ARG0-of	look-01	w2	l	
# ::edge	look-01	direction	away	l	a3	
# ::edge	woman	mod	Cypress	w2	y	
# ::edge	person	quant	2	p2	0	
# ::edge	and	op2	person	a	p2	
# ::edge	person	ARG1-of	distant-02	p2	d	
# ::edge	stand-01	rel	and	s4	a	
(s4 / stand-01
    :ARG1 (p / person
        :quant 3
        :ARG0-of (h / hold-01
            :ARG1 (p3 / pole
                :location (s3 / snow)
                :mod (s / ski-01)))
        :ARG2-of (i / include-91)
        :location (b / beside
            :op1 (w2 / woman
                :ARG0-of (l / look-01
                    :direction (a3 / away))
                :mod (a2 / another)
                :mod (y / Cypress))))
    :rel (a / and
        :ARG0-of (s2 / smile-01
            :direction (c / camera))
        :op1 (m / man)
        :op2 (w / woman)
        :op2 (p2 / person
            :quant 2
            :ARG1-of (d / distant-02))))
