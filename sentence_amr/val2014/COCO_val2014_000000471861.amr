# ::tok Two bottles of beer on the table , next to a container of noodles .
# ::node	0	2	0-1
# ::node	b3	bottle	1-2
# ::node	b2	beer	3-4
# ::node	b	be-located-at-91	4-5
# ::node	t	table	6-7
# ::node	n	next-to	8-9
# ::node	c2	container	11-12
# ::node	c	contain-01	11-12
# ::node	n2	noodle	13-14
# ::root	b	be-located-at-91
# ::edge	bottle	quant	2	b3	0	
# ::edge	beer	quant	bottle	b2	b3	
# ::edge	be-located-at-91	ARG1	beer	b	b2	
# ::edge	be-located-at-91	ARG2	table	b	t	
# ::edge	be-located-at-91	location	next-to	b	n	
# ::edge	next-to	op1	container	n	c2	
# ::edge	container	ARG0-of	contain-01	c2	c	
# ::edge	contain-01	ARG1	noodle	c	n2	
(b / be-located-at-91
    :ARG1 (b2 / beer
        :quant (b3 / bottle
            :quant 2))
    :ARG2 (t / table)
    :location (n / next-to
        :op1 (c2 / container
            :ARG0-of (c / contain-01
                :ARG1 (n2 / noodle)))))
