# ::tok A train engine that is being looked over by an train engineer .
# ::node	e	engine	2-3
# ::node	l	look-over-06	6-7
# ::node	t	train	10-11
# ::node	p	person	11-12
# ::node	e2	engineer-01	11-12
# ::root	e	engine
# ::edge	engine	ARG1-of	look-over-06	e	l	
# ::edge	engine	mod	train	e	t	
# ::edge	look-over-06	ARG0	person	l	p	
# ::edge	person	ARG0-of	engineer-01	p	e2	
# ::edge	engineer-01	ARG1	train	e2	t	
(e / engine
    :ARG1-of (l / look-over-06
        :ARG0 (p / person
            :ARG0-of (e2 / engineer-01
                :ARG1 (t / train))))
    :mod t)
