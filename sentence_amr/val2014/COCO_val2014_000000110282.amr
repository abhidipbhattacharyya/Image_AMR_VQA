# ::tok A metal pole with a traffic light attached , red right arrow illuminated , with green grass , green trees , and white sky in background .
# ::node	m	metal	1-2
# ::node	p	pole	2-3
# ::node	t	traffic	5-6
# ::node	l	light	6-7
# ::node	a3	attach-01	7-8
# ::node	r	red-02	9-10
# ::node	r2	right-04	10-11
# ::node	a2	arrow	11-12
# ::node	i	illuminate-01	12-13
# ::node	g2	green-02	15-16
# ::node	g	grass	16-17
# ::node	g3	green-02	18-19
# ::node	t2	tree	19-20
# ::node	a	and	21-22
# ::node	w	white-03	22-23
# ::node	s	sky	23-24
# ::node	b	background	25-26
# ::root	p	pole
# ::edge	pole	consist-of	metal	p	m	
# ::edge	light	mod	traffic	l	t	
# ::edge	attach-01	ARG1	light	a3	l	
# ::edge	pole	ARG2-of	attach-01	p	a3	
# ::edge	arrow	ARG1-of	right-04	a2	r2	
# ::edge	arrow	ARG1-of	red-02	a2	r	
# ::edge	illuminate-01	ARG1	arrow	i	a2	
# ::edge	pole	ARG0-of	illuminate-01	p	i	
# ::edge	grass	ARG1-of	green-02	g	g2	
# ::edge	tree	ARG1-of	green-02	t2	g3	
# ::edge	and	op2	tree	a	t2	
# ::edge	and	op1	grass	a	g	
# ::edge	pole	location-of	and	p	a	
# ::edge	sky	ARG1-of	white-03	s	w	
# ::edge	and	op3	sky	a	s	
# ::edge	and	location	background	a	b	
(p / pole
    :ARG0-of (i / illuminate-01
        :ARG1 (a2 / arrow
            :ARG1-of (r2 / right-04)
            :ARG1-of (r / red-02)))
    :ARG2-of (a3 / attach-01
        :ARG1 (l / light
            :mod (t / traffic)))
    :consist-of (m / metal)
    :location-of (a / and
        :location (b / background)
        :op1 (g / grass
            :ARG1-of (g2 / green-02))
        :op2 (t2 / tree
            :ARG1-of (g3 / green-02))
        :op3 (s / sky
            :ARG1-of (w / white-03))))
