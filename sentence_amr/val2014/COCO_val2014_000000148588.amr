# ::tok A brick oven with logs and a uncooked pizza next to it .
# ::node	b2	brick	1-2
# ::node	o	oven	2-3
# ::node	h	have-03	3-4
# ::node	l	log-03	4-5
# ::node	a	and	5-6
# ::node	0	-	6-7
# ::node	c	cook-01	7-8
# ::node	p	pizza	8-9
# ::node	n	next-to	9-10
# ::node	b	be-located-at-91	10-11
# ::root	b	be-located-at-91
# ::edge	oven	consist-of	brick	o	b2	
# ::edge	oven	ARG0-of	have-03	o	h	
# ::edge	and	op1	log-03	a	l	
# ::edge	have-03	ARG1	and	h	a	
# ::edge	cook-01	polarity	-	c	0	
# ::edge	pizza	ARG1-of	cook-01	p	c	
# ::edge	and	op2	pizza	a	p	
# ::edge	next-to	op1	oven	n	o	
# ::edge	be-located-at-91	ARG2	next-to	b	n	
# ::edge	be-located-at-91	ARG1	oven	b	o	
(b / be-located-at-91
    :ARG1 (o / oven
        :ARG0-of (h / have-03
            :ARG1 (a / and
                :op1 (l / log-03)
                :op2 (p / pizza
                    :ARG1-of (c / cook-01
                        :polarity -))))
        :consist-of (b2 / brick))
    :ARG2 (n / next-to
        :op1 o))
