# ::tok Two Giraffes one is standing and the other one is seated .
# ::node	1	2	0-1
# ::node	g	giraffe	1-2
# ::node	g2	giraffe	1-2
# ::node	0	1	2-3
# ::node	s2	stand-01	4-5
# ::node	a	and	5-6
# ::node	o	other	7-8
# ::node	s	seat-01	10-11
# ::root	a	and
# ::edge	giraffe	quant	2	g	1	
# ::edge	giraffe	quant	1	g	0	
# ::edge	stand-01	ARG1	giraffe	s2	g	
# ::edge	and	op1	stand-01	a	s2	
# ::edge	giraffe	mod	other	g2	o	
# ::edge	and	op2	seat-01	a	s	
# ::edge	seat-01	ARG1	giraffe	s	g2	
(a / and
    :op1 (s2 / stand-01
        :ARG1 (g / giraffe
            :quant 2
            :quant 1))
    :op2 (s / seat-01
        :ARG1 (g2 / giraffe
            :mod (o / other))))
