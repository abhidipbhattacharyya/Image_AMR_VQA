# ::tok a black cat lying in an empty suitcase peers out over the edge of the suitcase
# ::node	b	black-04	1-2
# ::node	c	cat	2-3
# ::node	l	lie-07	3-4
# ::node	e2	empty-02	6-7
# ::node	s	suitcase	7-8
# ::node	p	peer-01	8-9
# ::node	o	over	10-11
# ::node	e	edge	12-13
# ::root	p	peer-01
# ::edge	cat	ARG1-of	black-04	c	b	
# ::edge	cat	ARG1-of	lie-07	c	l	
# ::edge	suitcase	ARG1-of	empty-02	s	e2	
# ::edge	lie-07	ARG2	suitcase	l	s	
# ::edge	peer-01	ARG0	cat	p	c	
# ::edge	peer-01	ARG1	over	p	o	
# ::edge	over	op1	edge	o	e	
# ::edge	suitcase	part	edge	s	e	
(p / peer-01
    :ARG0 (c / cat
        :ARG1-of (b / black-04)
        :ARG1-of (l / lie-07
            :ARG2 (s / suitcase
                :ARG1-of (e2 / empty-02)
                :part (e / edge))))
    :ARG1 (o / over
        :op1 e))
