# ::tok Two cooks are cooking the food someone ordered at this restaurant
# ::node	0	2	0-1
# ::node	p	person	1-2
# ::node	c	cook-01	1-2
# ::node	c2	cook-01	3-4
# ::node	f	food	5-6
# ::node	s	someone	6-7
# ::node	o	order-02	7-8
# ::node	t	this	9-10
# ::node	r	restaurant	10-11
# ::root	c2	cook-01
# ::edge	person	quant	2	p	0	
# ::edge	person	ARG0-of	cook-01	p	c	
# ::edge	cook-01	ARG0	person	c2	p	
# ::edge	cook-01	ARG1	food	c2	f	
# ::edge	order-02	ARG0	someone	o	s	
# ::edge	food	ARG1-of	order-02	f	o	
# ::edge	restaurant	mod	this	r	t	
# ::edge	order-02	location	restaurant	o	r	
(c2 / cook-01
    :ARG0 (p / person
        :quant 2
        :ARG0-of (c / cook-01))
    :ARG1 (f / food
        :ARG1-of (o / order-02
            :ARG0 (s / someone)
            :location (r / restaurant
                :mod (t / this)))))
