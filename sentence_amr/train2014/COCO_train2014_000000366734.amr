# ::tok Blue and yellow double decker bus driving by brick building .
# ::node	l	Blue	0-1
# ::node	a	and	1-2
# ::node	y	yellow-02	2-3
# ::node	d2	double	3-4
# ::node	d	deck	4-5
# ::node	b3	bus	5-6
# ::node	b4	bus	5-6
# ::node	d3	drive-01	6-7
# ::node	b	brick	8-9
# ::node	b2	building	9-10
# ::root	a	and
# ::edge	deck	mod	double	d	d2	
# ::edge	deck	op1	bus	d	b3	
# ::edge	bus	mod	Blue	b3	l	
# ::edge	bus	mod	deck	b4	d	
# ::edge	bus	ARG1-of	yellow-02	b4	y	
# ::edge	and	op2	bus	a	b4	
# ::edge	and	ARG0-of	drive-01	a	d3	
# ::edge	building	consist-of	brick	b2	b	
# ::edge	drive-01	path	building	d3	b2	
(a / and
    :ARG0-of (d3 / drive-01
        :path (b2 / building
            :consist-of (b / brick)))
    :op2 (b4 / bus
        :ARG1-of (y / yellow-02)
        :mod (d / deck
            :mod (d2 / double)
            :op1 (b3 / bus
                :mod (l / Blue)))))
