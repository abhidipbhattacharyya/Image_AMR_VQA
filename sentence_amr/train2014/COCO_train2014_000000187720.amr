# ::tok One man stands on top of the train while another man stands on the platform .
# ::node	0	1	0-1
# ::node	m	man	1-2
# ::node	s	stand-01	2-3
# ::node	t	top	4-5
# ::node	t2	train	7-8
# ::node	c	contrast-01	8-9
# ::node	a	another	9-10
# ::node	m2	man	10-11
# ::node	s2	stand-01	11-12
# ::node	p	platform	14-15
# ::root	c	contrast-01
# ::edge	man	quant	1	m	0	
# ::edge	stand-01	ARG1	man	s	m	
# ::edge	stand-01	ARG2	top	s	t	
# ::edge	top	part-of	train	t	t2	
# ::edge	contrast-01	ARG1	stand-01	c	s	
# ::edge	man	mod	another	m2	a	
# ::edge	stand-01	ARG1	man	s2	m2	
# ::edge	contrast-01	ARG2	stand-01	c	s2	
# ::edge	stand-01	ARG2	platform	s2	p	
(c / contrast-01
    :ARG1 (s / stand-01
        :ARG1 (m / man
            :quant 1)
        :ARG2 (t / top
            :part-of (t2 / train)))
    :ARG2 (s2 / stand-01
        :ARG1 (m2 / man
            :mod (a / another))
        :ARG2 (p / platform)))
