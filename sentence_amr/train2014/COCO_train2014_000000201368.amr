# ::tok With a quick look this could be a two headed Zebra .
# ::node	q	quick-02	2-3
# ::node	l2	look-01	3-4
# ::node	t	this	4-5
# ::node	p	possible-01	5-6
# ::node	h	have-03	7-8
# ::node	0	2	8-9
# ::node	h2	head	9-10
# ::node	l	lion	10-11
# ::root	p	possible-01
# ::edge	look-01	ARG1-of	quick-02	l2	q	
# ::edge	possible-01	condition	look-01	p	l2	
# ::edge	head	quant	2	h2	0	
# ::edge	have-03	ARG1	head	h	h2	
# ::edge	lion	ARG0-of	have-03	l	h	
# ::edge	possible-01	ARG1	lion	p	l	
# ::edge	lion	domain	this	l	t	
(p / possible-01
    :ARG1 (l / lion
        :ARG0-of (h / have-03
            :ARG1 (h2 / head
                :quant 2))
        :domain (t / this))
    :condition (l2 / look-01
        :ARG1-of (q / quick-02)))
