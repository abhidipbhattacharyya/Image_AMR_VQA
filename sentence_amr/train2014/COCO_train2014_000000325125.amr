# ::tok A sign under a tree , in front of a brick building , points the way to two different streets on a sunny day .
# ::node	s	sign	1-2
# ::node	u	under	2-3
# ::node	t	tree	4-5
# ::node	i	in-front-of	7-8
# ::node	b	brick	10-11
# ::node	b2	building	11-12
# ::node	p	point-01	13-14
# ::node	w	way	15-16
# ::node	0	2	17-18
# ::node	d2	differ-02	18-19
# ::node	s2	street	19-20
# ::node	s3	sunny	22-23
# ::node	d	day	23-24
# ::root	p	point-01
# ::edge	sign	location	under	s	u	
# ::edge	under	op1	tree	u	t	
# ::edge	tree	location	in-front-of	t	i	
# ::edge	building	consist-of	brick	b2	b	
# ::edge	in-front-of	op1	building	i	b2	
# ::edge	point-01	ARG0	sign	p	s	
# ::edge	point-01	ARG1	way	p	w	
# ::edge	street	ARG1-of	differ-02	s2	d2	
# ::edge	street	quant	2	s2	0	
# ::edge	point-01	ARG2	street	p	s2	
# ::edge	day	mod	sunny	d	s3	
# ::edge	point-01	time	day	p	d	
(p / point-01
    :ARG0 (s / sign
        :location (u / under
            :op1 (t / tree
                :location (i / in-front-of
                    :op1 (b2 / building
                        :consist-of (b / brick))))))
    :ARG1 (w / way)
    :ARG2 (s2 / street
        :quant 2
        :ARG1-of (d2 / differ-02))
    :time (d / day
        :mod (s3 / sunny)))
