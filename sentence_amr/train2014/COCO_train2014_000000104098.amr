# ::tok The first zebra in the picture is standing , the second is walking , and the third zebra is running .
# ::node	0	1	1-2
# ::node	z	zebra	2-3
# ::node	o	ordinal-entity	2-3
# ::node	z2	zebra	2-3
# ::node	p	picture	5-6
# ::node	s	stand-01	7-8
# ::node	o2	ordinal-entity	10-11
# ::node	1	2	10-11
# ::node	w	walk-01	12-13
# ::node	a	and	14-15
# ::node	o3	ordinal-entity	16-17
# ::node	2	3	16-17
# ::node	z3	zebra	17-18
# ::node	r	run-02	19-20
# ::root	a	and
# ::edge	zebra	ord	ordinal-entity	z	o	
# ::edge	ordinal-entity	value	1	o	0	
# ::edge	zebra	medium	picture	z	p	
# ::edge	stand-01	ARG1	zebra	s	z	
# ::edge	zebra	ord	ordinal-entity	z2	o2	
# ::edge	ordinal-entity	value	2	o2	1	
# ::edge	walk-01	ARG0	zebra	w	z2	
# ::edge	and	op2	walk-01	a	w	
# ::edge	and	op1	stand-01	a	s	
# ::edge	ordinal-entity	value	3	o3	2	
# ::edge	zebra	ord	ordinal-entity	z3	o3	
# ::edge	run-02	ARG0	zebra	r	z3	
# ::edge	and	op3	run-02	a	r	
(a / and
    :op1 (s / stand-01
        :ARG1 (z / zebra
            :medium (p / picture)
            :ord (o / ordinal-entity
                :value 1)))
    :op2 (w / walk-01
        :ARG0 (z2 / zebra
            :ord (o2 / ordinal-entity
                :value 2)))
    :op3 (r / run-02
        :ARG0 (z3 / zebra
            :ord (o3 / ordinal-entity
                :value 3))))
