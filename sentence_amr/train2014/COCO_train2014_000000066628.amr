# ::tok A plate of sliced cheese , sliced applies , and something else .
# ::node	p	plate	1-2
# ::node	s	slice-01	3-4
# ::node	c	cheese	4-5
# ::node	a2	apply-02	7-8
# ::node	a	and	9-10
# ::node	s2	something	10-11
# ::node	e	else	11-12
# ::root	a	and
# ::edge	cheese	ARG1-of	slice-01	c	s	
# ::edge	plate	consist-of	cheese	p	c	
# ::edge	slice-01	ARG1-of	apply-02	s	a2	
# ::edge	and	op1	plate	a	p	
# ::edge	and	op2	something	a	s2	
# ::edge	something	mod	else	s2	e	
(a / and
    :op1 (p / plate
        :consist-of (c / cheese
            :ARG1-of (s / slice-01
                :ARG1-of (a2 / apply-02))))
    :op2 (s2 / something
        :mod (e / else)))
