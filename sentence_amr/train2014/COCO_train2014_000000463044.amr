# ::tok Who needs a carriage and horses when you have two dogs to pull you along on your skateboard ?
# ::node	a2	amr-unknown	0-1
# ::node	n	need-01	1-2
# ::node	c	carriage	3-4
# ::node	a3	and	4-5
# ::node	h2	horse	5-6
# ::node	y	you	7-8
# ::node	h	have-03	8-9
# ::node	0	2	9-10
# ::node	d	dog	10-11
# ::node	p	pull-01	12-13
# ::node	a	along	14-15
# ::node	s	skateboard	17-18
# ::root	n	need-01
# ::edge	need-01	ARG0	amr-unknown	n	a2	
# ::edge	and	op1	carriage	a3	c	
# ::edge	need-01	ARG1	and	n	a3	
# ::edge	and	op2	horse	a3	h2	
# ::edge	have-03	ARG0	you	h	y	
# ::edge	need-01	condition	have-03	n	h	
# ::edge	dog	quant	2	d	0	
# ::edge	have-03	ARG1	dog	h	d	
# ::edge	dog	ARG0-of	pull-01	d	p	
# ::edge	pull-01	ARG1	you	p	y	
# ::edge	pull-01	ARG2	along	p	a	
# ::edge	pull-01	instrument	skateboard	p	s	
# ::edge	skateboard	poss	you	s	y	
(n / need-01
    :ARG0 (a2 / amr-unknown)
    :ARG1 (a3 / and
        :op1 (c / carriage)
        :op2 (h2 / horse))
    :condition (h / have-03
        :ARG0 (y / you)
        :ARG1 (d / dog
            :quant 2
            :ARG0-of (p / pull-01
                :ARG1 y
                :ARG2 (a / along)
                :instrument (s / skateboard
                    :poss y)))))
