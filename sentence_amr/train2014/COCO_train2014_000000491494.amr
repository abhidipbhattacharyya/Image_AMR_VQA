# ::tok There two slices of pizza on one plate and a half eaten slice on another .
# ::node	0	2	1-2
# ::node	s	slice	2-3
# ::node	p	pizza	4-5
# ::node	o	one	6-7
# ::node	p2	plate	7-8
# ::node	p3	plate	7-8
# ::node	a	and	8-9
# ::node	h	half	10-11
# ::node	e	eat-01	11-12
# ::node	s2	slice	12-13
# ::node	a2	another	14-15
# ::root	a	and
# ::edge	slice	quant	2	s	0	
# ::edge	slice	mod	pizza	s	p	
# ::edge	plate	mod	one	p2	o	
# ::edge	slice	location	plate	s	p2	
# ::edge	and	op1	slice	a	s	
# ::edge	eat-01	degree	half	e	h	
# ::edge	slice	ARG1-of	eat-01	s2	e	
# ::edge	and	op2	slice	a	s2	
# ::edge	slice	location	plate	s2	p3	
# ::edge	plate	mod	another	p3	a2	
(a / and
    :op1 (s / slice
        :quant 2
        :location (p2 / plate
            :mod (o / one))
        :mod (p / pizza))
    :op2 (s2 / slice
        :ARG1-of (e / eat-01
            :degree (h / half))
        :location (p3 / plate
            :mod (a2 / another))))
