# ::tok A train going over a bridge with water underneath it .
# ::node	t	train	1-2
# ::node	g	go-01	2-3
# ::node	o	over	3-4
# ::node	b	bridge	5-6
# ::node	h	have-03	6-7
# ::node	w	water	7-8
# ::node	u	underneath	8-9
# ::root	t	train
# ::edge	train	ARG1-of	go-01	t	g	
# ::edge	go-01	path	over	g	o	
# ::edge	over	op1	bridge	o	b	
# ::edge	bridge	ARG0-of	have-03	b	h	
# ::edge	have-03	ARG1	water	h	w	
# ::edge	water	location	underneath	w	u	
# ::edge	underneath	op1	train	u	t	
(t / train
    :ARG1-of (g / go-01
        :path (o / over
            :op1 (b / bridge
                :ARG0-of (h / have-03
                    :ARG1 (w / water
                        :location (u / underneath
                            :op1 t)))))))
