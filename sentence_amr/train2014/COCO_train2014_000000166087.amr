# ::tok two plates with pizza one has one piece and the other has a few pieces left on it
# ::node	0	2	0-1
# ::node	p4	plate	1-2
# ::node	p5	plate	1-2
# ::node	h	have-03	2-3
# ::node	p3	pizza	3-4
# ::node	o	one	4-5
# ::node	h2	have-03	5-6
# ::node	o2	one	6-7
# ::node	p	piece	7-8
# ::node	a	and	8-9
# ::node	o3	other	10-11
# ::node	h3	have-03	11-12
# ::node	f	few	13-14
# ::node	p2	piece	14-15
# ::node	l	leave-17	15-16
# ::root	a	and
# ::edge	plate	quant	2	p4	0	
# ::edge	plate	ARG0-of	have-03	p4	h	
# ::edge	have-03	ARG1	pizza	h	p3	
# ::edge	plate	part	one	p4	o	
# ::edge	have-03	ARG0	one	h2	o	
# ::edge	piece	mod	one	p	o2	
# ::edge	have-03	ARG1	piece	h2	p	
# ::edge	and	op1	have-03	a	h2	
# ::edge	plate	mod	other	p5	o3	
# ::edge	and	op2	have-03	a	h3	
# ::edge	have-03	ARG0	plate	h3	p5	
# ::edge	piece	quant	few	p2	f	
# ::edge	have-03	ARG1	piece	h3	p2	
# ::edge	piece	location	plate	p2	p4	
# ::edge	piece	ARG1-of	leave-17	p2	l	
(a / and
    :op1 (h2 / have-03
        :ARG0 (o / one)
        :ARG1 (p / piece
            :mod (o2 / one)))
    :op2 (h3 / have-03
        :ARG0 (p5 / plate
            :mod (o3 / other))
        :ARG1 (p2 / piece
            :quant (f / few)
            :ARG1-of (l / leave-17)
            :location (p4 / plate
                :quant 2
                :ARG0-of (h / have-03
                    :ARG1 (p3 / pizza))
                :part o))))
