# ::tok A cat looks at himself in the mirror and has a funny look .
# ::node	c	cat	1-2
# ::node	l	look-01	2-3
# ::node	m	mirror	7-8
# ::node	a	and	8-9
# ::node	f	funny	11-12
# ::node	l2	look-01	12-13
# ::root	a	and
# ::edge	look-01	ARG1	cat	l	c	
# ::edge	look-01	ARG0	cat	l	c	
# ::edge	look-01	location	mirror	l	m	
# ::edge	and	op1	look-01	a	l	
# ::edge	look-01	ARG1	funny	l2	f	
# ::edge	and	op2	look-01	a	l2	
# ::edge	look-01	ARG0	cat	l2	c	
(a / and
    :op1 (l / look-01
        :ARG0 (c / cat)
        :ARG1 c
        :location (m / mirror))
    :op2 (l2 / look-01
        :ARG0 c
        :ARG1 (f / funny)))
