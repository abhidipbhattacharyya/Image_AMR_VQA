# ::tok one donut with a bite mark in it sitting next to a whole uneaten donut on a white plate .
# ::node	1	1	0-1
# ::node	d	donut	1-2
# ::node	h	have-03	2-3
# ::node	b	bite-01	4-5
# ::node	m	mark	5-6
# ::node	s	sit-01	8-9
# ::node	n	next-to	9-10
# ::node	w2	whole	12-13
# ::node	e	eat-01	13-14
# ::node	0	-	13-14
# ::node	d2	donut	14-15
# ::node	w	white-03	17-18
# ::node	p	plate	18-19
# ::root	s	sit-01
# ::edge	donut	quant	1	d	1	
# ::edge	donut	ARG0-of	have-03	d	h	
# ::edge	mark	mod	bite-01	m	b	
# ::edge	have-03	ARG1	mark	h	m	
# ::edge	sit-01	ARG1	donut	s	d	
# ::edge	sit-01	ARG2	next-to	s	n	
# ::edge	eat-01	polarity	-	e	0	
# ::edge	donut	ARG1-of	eat-01	d2	e	
# ::edge	donut	mod	whole	d2	w2	
# ::edge	next-to	op1	donut	n	d2	
# ::edge	plate	ARG1-of	white-03	p	w	
# ::edge	donut	location	plate	d2	p	
(s / sit-01
    :ARG1 (d / donut
        :quant 1
        :ARG0-of (h / have-03
            :ARG1 (m / mark
                :mod (b / bite-01))))
    :ARG2 (n / next-to
        :op1 (d2 / donut
            :ARG1-of (e / eat-01
                :polarity -)
            :location (p / plate
                :ARG1-of (w / white-03))
            :mod (w2 / whole))))
