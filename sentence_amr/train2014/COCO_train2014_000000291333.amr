# ::tok In the first picture there are stuffed sea animals , in the second there are stuffed monkeys , in the third there are stuffed tigers and elephants , and in the fourth there are stuffed dogs .
# ::node	o	ordinal-entity	2-3
# ::node	0	1	2-3
# ::node	p	picture	3-4
# ::node	p2	picture	3-4
# ::node	s2	stuff-01	6-7
# ::node	s	sea	7-8
# ::node	a3	animal	8-9
# ::node	a	and	9-10
# ::node	o2	ordinal-entity	12-13
# ::node	1	2	12-13
# ::node	s3	stuff-01	15-16
# ::node	m	monkey	16-17
# ::node	2	3	20-21
# ::node	s4	stuff-01	23-24
# ::node	t	tiger	24-25
# ::node	a2	and	25-26
# ::node	e	elephant	26-27
# ::node	3	4	31-32
# ::node	s5	stuff-01	34-35
# ::node	d	dog	35-36
# ::root	a	and
# ::edge	ordinal-entity	value	1	o	0	
# ::edge	picture	ord	ordinal-entity	p	o	
# ::edge	animal	mod	sea	a3	s	
# ::edge	animal	ARG1-of	stuff-01	a3	s2	
# ::edge	animal	location	picture	a3	p	
# ::edge	and	op1	animal	a	a3	
# ::edge	picture	ord	ordinal-entity	p2	o2	
# ::edge	ordinal-entity	value	2	o2	1	
# ::edge	monkey	ARG1-of	stuff-01	m	s3	
# ::edge	and	op2	monkey	a	m	
# ::edge	and	op1	tiger	a2	t	
# ::edge	and	ARG1-of	stuff-01	a2	s4	
# ::edge	and	li	3	a2	2	
# ::edge	and	op3	and	a	a2	
# ::edge	and	op2	elephant	a2	e	
# ::edge	dog	ARG1-of	stuff-01	d	s5	
# ::edge	dog	li	4	d	3	
# ::edge	and	op4	dog	a	d	
# ::edge	and	rel	picture	a	p2	
(a / and
    :op1 (a3 / animal
        :ARG1-of (s2 / stuff-01)
        :location (p / picture
            :ord (o / ordinal-entity
                :value 1))
        :mod (s / sea))
    :op2 (m / monkey
        :ARG1-of (s3 / stuff-01))
    :op3 (a2 / and
        :li 3
        :ARG1-of (s4 / stuff-01)
        :op1 (t / tiger)
        :op2 (e / elephant))
    :op4 (d / dog
        :li 4
        :ARG1-of (s5 / stuff-01))
    :rel (p2 / picture
        :ord (o2 / ordinal-entity
            :value 2)))
