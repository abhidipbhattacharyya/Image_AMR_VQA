# ::tok a park setting showing kids swings and a basketball goal and oddly enough a black bear strolling through .
# ::node	p	park	1-2
# ::node	s	set-01	2-3
# ::node	s2	show-01	3-4
# ::node	k	kid	4-5
# ::node	s4	swing-01	5-6
# ::node	a	and	6-7
# ::node	b	basketball	8-9
# ::node	g	goal	9-10
# ::node	o	odd	11-12
# ::node	h	have-degree-91	12-13
# ::node	e	enough	12-13
# ::node	b3	black-04	14-15
# ::node	b2	bear	15-16
# ::node	s3	stroll-01	16-17
# ::node	t	through	17-18
# ::root	s	set-01
# ::edge	set-01	ARG1	park	s	p	
# ::edge	set-01	ARG0-of	show-01	s	s2	
# ::edge	swing-01	ARG2	kid	s4	k	
# ::edge	and	op1	swing-01	a	s4	
# ::edge	show-01	ARG1	and	s2	a	
# ::edge	goal	purpose	basketball	g	b	
# ::edge	and	op2	goal	a	g	
# ::edge	odd	ARG2-of	have-degree-91	o	h	
# ::edge	have-degree-91	ARG3	enough	h	e	
# ::edge	bear	ARG1-of	black-04	b2	b3	
# ::edge	have-degree-91	ARG1	bear	h	b2	
# ::edge	bear	mod	odd	b2	o	
# ::edge	bear	ARG0-of	stroll-01	b2	s3	
# ::edge	stroll-01	location	through	s3	t	
# ::edge	set-01	rel	have-degree-91	s	h	
(s / set-01
    :ARG0-of (s2 / show-01
        :ARG1 (a / and
            :op1 (s4 / swing-01
                :ARG2 (k / kid))
            :op2 (g / goal
                :purpose (b / basketball))))
    :ARG1 (p / park)
    :rel (h / have-degree-91
        :ARG1 (b2 / bear
            :ARG0-of (s3 / stroll-01
                :location (t / through))
            :ARG1-of (b3 / black-04)
            :mod (o / odd
                :ARG2-of h))
        :ARG3 (e / enough)))
