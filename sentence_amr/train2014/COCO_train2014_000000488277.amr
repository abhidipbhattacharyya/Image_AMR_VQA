# ::tok One bird that is on the water and another that is flying over the water .
# ::node	0	1	0-1
# ::node	b2	bird	1-2
# ::node	b3	bird	1-2
# ::node	b	be-located-at-91	4-5
# ::node	w	water	6-7
# ::node	a	and	7-8
# ::node	a2	another	8-9
# ::node	f	fly-01	11-12
# ::node	o	over	12-13
# ::root	a	and
# ::edge	bird	quant	1	b2	0	
# ::edge	bird	ARG1-of	be-located-at-91	b2	b	
# ::edge	be-located-at-91	ARG2	water	b	w	
# ::edge	and	op2	bird	a	b3	
# ::edge	and	op1	bird	a	b2	
# ::edge	bird	mod	another	b3	a2	
# ::edge	bird	ARG1-of	fly-01	b3	f	
# ::edge	fly-01	path	over	f	o	
# ::edge	over	op1	water	o	w	
(a / and
    :op1 (b2 / bird
        :quant 1
        :ARG1-of (b / be-located-at-91
            :ARG2 (w / water)))
    :op2 (b3 / bird
        :ARG1-of (f / fly-01
            :path (o / over
                :op1 w))
        :mod (a2 / another)))
