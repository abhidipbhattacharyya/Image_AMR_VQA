# ::tok A plate of fresh vegetables on a blue plate with two different kinds of dip next to it .
# ::node	p	plate	1-2
# ::node	f	fresh-04	3-4
# ::node	v	vegetable	4-5
# ::node	b	blue	7-8
# ::node	h	have-03	9-10
# ::node	0	2	10-11
# ::node	d	differ-02	11-12
# ::node	k	kind	12-13
# ::node	d2	dip	14-15
# ::node	n	next-to	15-16
# ::root	h	have-03
# ::edge	vegetable	ARG1-of	fresh-04	v	f	
# ::edge	plate	consist-of	vegetable	p	v	
# ::edge	plate	mod	blue	p	b	
# ::edge	have-03	ARG0	plate	h	p	
# ::edge	kind	ARG1-of	differ-02	k	d	
# ::edge	kind	quant	2	k	0	
# ::edge	dip	mod	kind	d2	k	
# ::edge	have-03	ARG1	dip	h	d2	
# ::edge	dip	location	next-to	d2	n	
# ::edge	next-to	op1	plate	n	p	
(h / have-03
    :ARG0 (p / plate
        :consist-of (v / vegetable
            :ARG1-of (f / fresh-04))
        :mod (b / blue))
    :ARG1 (d2 / dip
        :location (n / next-to
            :op1 p)
        :mod (k / kind
            :quant 2
            :ARG1-of (d / differ-02))))
