# ::tok three double Decker buss parked next to each other in a parking spot
# ::node	0	3	0-1
# ::node	d	double	1-2
# ::node	n	name	2-3
# ::node	1	Decker	2-3
# ::node	c	car-make	3-4
# ::node	p	park-01	4-5
# ::node	n2	next-to	5-6
# ::node	p2	park-01	11-12
# ::node	s	spot	12-13
# ::root	p	park-01
# ::edge	name	op1	Decker	n	1	
# ::edge	car-make	name	name	c	n	
# ::edge	car-make	mod	double	c	d	
# ::edge	car-make	quant	3	c	0	
# ::edge	park-01	ARG1	car-make	p	c	
# ::edge	park-01	ARG2	next-to	p	n2	
# ::edge	spot	purpose	park-01	s	p2	
# ::edge	next-to	op1	spot	n2	s	
(p / park-01
    :ARG1 (c / car-make
        :name (n / name
            :op1 "Decker")
        :quant 3
        :mod (d / double))
    :ARG2 (n2 / next-to
        :op1 (s / spot
            :purpose (p2 / park-01))))
