# ::tok A car that has been smashed in an accident and is being towed away .
# ::node	c	car	1-2
# ::node	s	smash-01	5-6
# ::node	a	accident	8-9
# ::node	a2	and	9-10
# ::node	t	tow-01	12-13
# ::node	a3	away	13-14
# ::root	a2	and
# ::edge	car	ARG1-of	smash-01	c	s	
# ::edge	smash-01	time	accident	s	a	
# ::edge	and	op1	car	a2	c	
# ::edge	and	op2	tow-01	a2	t	
# ::edge	tow-01	ARG1	car	t	c	
# ::edge	tow-01	ARG2	away	t	a3	
(a2 / and
    :op1 (c / car
        :ARG1-of (s / smash-01
            :time (a / accident)))
    :op2 (t / tow-01
        :ARG1 c
        :ARG2 (a3 / away)))
