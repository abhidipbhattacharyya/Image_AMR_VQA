# ::tok A white tile floor with four rolling luggage pieces that have the handles extended and smaller backpacks or bags on top of each piece of luggage .
# ::node	w	white-03	1-2
# ::node	t	tile	2-3
# ::node	f	floor	3-4
# ::node	0	4	5-6
# ::node	r	roll-01	6-7
# ::node	l	luggage	7-8
# ::node	p	piece	8-9
# ::node	h2	have-03	10-11
# ::node	h	handle-01	12-13
# ::node	e2	extend-01	13-14
# ::node	a	and	14-15
# ::node	h3	have-degree-91	15-16
# ::node	s	small	15-16
# ::node	m	more	15-16
# ::node	b	back	16-17
# ::node	o	or	17-18
# ::node	b2	bag	18-19
# ::node	b3	be-located-at-91	19-20
# ::node	t2	top	20-21
# ::node	e	each	22-23
# ::node	p2	piece	23-24
# ::node	l2	luggage	25-26
# ::root	f	floor
# ::edge	tile	ARG1-of	white-03	t	w	
# ::edge	floor	consist-of	tile	f	t	
# ::edge	piece	mod	luggage	p	l	
# ::edge	piece	ARG1-of	roll-01	p	r	
# ::edge	piece	quant	4	p	0	
# ::edge	floor	consist-of	piece	f	p	
# ::edge	piece	ARG0-of	have-03	p	h2	
# ::edge	extend-01	ARG1	handle-01	e2	h	
# ::edge	and	op1	extend-01	a	e2	
# ::edge	have-03	ARG1	and	h2	a	
# ::edge	have-degree-91	ARG2	small	h3	s	
# ::edge	have-degree-91	ARG3	more	h3	m	
# ::edge	or	op1	back	o	b	
# ::edge	or	ARG1-of	have-degree-91	o	h3	
# ::edge	or	op2	bag	o	b2	
# ::edge	be-located-at-91	ARG1	or	b3	o	
# ::edge	and	op2	be-located-at-91	a	b3	
# ::edge	be-located-at-91	ARG2	top	b3	t2	
# ::edge	piece	mod	each	p2	e	
# ::edge	top	op1	piece	t2	p2	
# ::edge	piece	mod	luggage	p2	l2	
(f / floor
    :consist-of (t / tile
        :ARG1-of (w / white-03))
    :consist-of (p / piece
        :quant 4
        :ARG0-of (h2 / have-03
            :ARG1 (a / and
                :op1 (e2 / extend-01
                    :ARG1 (h / handle-01))
                :op2 (b3 / be-located-at-91
                    :ARG1 (o / or
                        :ARG1-of (h3 / have-degree-91
                            :ARG2 (s / small)
                            :ARG3 (m / more))
                        :op1 (b / back)
                        :op2 (b2 / bag))
                    :ARG2 (t2 / top
                        :op1 (p2 / piece
                            :mod (e / each)
                            :mod (l2 / luggage))))))
        :ARG1-of (r / roll-01)
        :mod (l / luggage)))
