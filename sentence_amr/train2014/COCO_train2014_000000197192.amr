# ::tok a zebra standing in front of a stone wall by some trees
# ::node	z	zebra	1-2
# ::node	s2	stand-01	2-3
# ::node	i	in-front-of	4-5
# ::node	s3	stone	7-8
# ::node	w	wall	8-9
# ::node	s	some	10-11
# ::node	t	tree	11-12
# ::root	s2	stand-01
# ::edge	stand-01	ARG1	zebra	s2	z	
# ::edge	stand-01	ARG2	in-front-of	s2	i	
# ::edge	wall	consist-of	stone	w	s3	
# ::edge	in-front-of	op1	wall	i	w	
# ::edge	tree	quant	some	t	s	
# ::edge	in-front-of	location	tree	i	t	
(s2 / stand-01
    :ARG1 (z / zebra)
    :ARG2 (i / in-front-of
        :location (t / tree
            :quant (s / some))
        :op1 (w / wall
            :consist-of (s3 / stone))))
