# ::tok Two people are out in a lake kayaking and a person on shore is watching them .
# ::node	0	2	0-1
# ::node	p	person	1-2
# ::node	l	lake	6-7
# ::node	k	kayak-01	7-8
# ::node	a	and	8-9
# ::node	p2	person	10-11
# ::node	s	shore	12-13
# ::node	w	watch-01	14-15
# ::root	a	and
# ::edge	person	quant	2	p	0	
# ::edge	kayak-01	location	lake	k	l	
# ::edge	kayak-01	ARG0	person	k	p	
# ::edge	and	op1	kayak-01	a	k	
# ::edge	person	location	shore	p2	s	
# ::edge	watch-01	ARG0	person	w	p2	
# ::edge	and	op2	watch-01	a	w	
# ::edge	watch-01	ARG1	kayak-01	w	k	
(a / and
    :op1 (k / kayak-01
        :ARG0 (p / person
            :quant 2)
        :location (l / lake))
    :op2 (w / watch-01
        :ARG0 (p2 / person
            :location (s / shore))
        :ARG1 k))
