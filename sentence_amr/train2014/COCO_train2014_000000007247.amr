# ::tok A white and orange cat and a black , orange and white cat sleeping in front of each other .
# ::node	w2	white-03	1-2
# ::node	a	and	2-3
# ::node	o	orange	3-4
# ::node	c	cat	4-5
# ::node	c2	cat	4-5
# ::node	a2	and	5-6
# ::node	b	black-04	7-8
# ::node	a3	and	10-11
# ::node	w	white-02	11-12
# ::node	c3	cat	12-13
# ::node	c4	cat	12-13
# ::node	c5	cat	12-13
# ::node	s	sleep-01	13-14
# ::node	i	in-front-of	15-16
# ::node	e	each	17-18
# ::node	o2	other	18-19
# ::root	a2	and
# ::edge	and	op1	cat	a	c	
# ::edge	cat	ARG1-of	white-03	c	w2	
# ::edge	cat	mod	orange	c2	o	
# ::edge	and	op2	cat	a	c2	
# ::edge	and	op1	and	a2	a	
# ::edge	and	op2	and	a2	a3	
# ::edge	and	op1	cat	a3	c3	
# ::edge	cat	ARG1-of	black-04	c3	b	
# ::edge	and	op2	cat	a3	c4	
# ::edge	cat	ARG1-of	black-04	c4	b	
# ::edge	cat	ARG1-of	white-02	c5	w	
# ::edge	and	op3	cat	a3	c5	
# ::edge	and	ARG0-of	sleep-01	a3	s	
# ::edge	sleep-01	location	in-front-of	s	i	
# ::edge	other	mod	each	o2	e	
# ::edge	in-front-of	op1	other	i	o2	
(a2 / and
    :op1 (a / and
        :op1 (c / cat
            :ARG1-of (w2 / white-03))
        :op2 (c2 / cat
            :mod (o / orange)))
    :op2 (a3 / and
        :ARG0-of (s / sleep-01
            :location (i / in-front-of
                :op1 (o2 / other
                    :mod (e / each))))
        :op1 (c3 / cat
            :ARG1-of (b / black-04))
        :op2 (c4 / cat
            :ARG1-of b)
        :op3 (c5 / cat
            :ARG1-of (w / white-02))))
