# ::tok A scooter parked in front of the door of a stone building .
# ::node	s	scooter	1-2
# ::node	p	park-01	2-3
# ::node	i	in-front-of	4-5
# ::node	d	door	7-8
# ::node	s2	stone	10-11
# ::node	b	building	11-12
# ::root	s	scooter
# ::edge	scooter	ARG1-of	park-01	s	p	
# ::edge	park-01	ARG2	in-front-of	p	i	
# ::edge	in-front-of	op1	door	i	d	
# ::edge	building	consist-of	stone	b	s2	
# ::edge	door	part-of	building	d	b	
(s / scooter
    :ARG1-of (p / park-01
        :ARG2 (i / in-front-of
            :op1 (d / door
                :part-of (b / building
                    :consist-of (s2 / stone))))))
