# ::tok A boy rides a cart with two horses , one large and one small , as it pulls a small cart filled with branches .
# ::node	b	boy	1-2
# ::node	r	ride-01	2-3
# ::node	c	cart	4-5
# ::node	1	2	6-7
# ::node	h	horse	7-8
# ::node	h2	horse	7-8
# ::node	h3	horse	7-8
# ::node	l	large	10-11
# ::node	a	and	11-12
# ::node	0	1	12-13
# ::node	s	small	13-14
# ::node	p	pull-01	17-18
# ::node	s2	small	19-20
# ::node	c2	cart	20-21
# ::node	f	fill-01	21-22
# ::node	b2	branch	23-24
# ::root	r	ride-01
# ::edge	ride-01	ARG0	boy	r	b	
# ::edge	ride-01	ARG1	cart	r	c	
# ::edge	horse	quant	2	h	1	
# ::edge	cart	accompanier	horse	c	h	
# ::edge	horse	mod	large	h2	l	
# ::edge	and	op2	horse	a	h3	
# ::edge	and	op1	horse	a	h2	
# ::edge	horse	domain	and	h	a	
# ::edge	horse	quant	1	h2	0	
# ::edge	horse	mod	small	h3	s	
# ::edge	pull-01	ARG0	cart	p	c	
# ::edge	ride-01	time	pull-01	r	p	
# ::edge	cart	mod	small	c2	s2	
# ::edge	pull-01	ARG1	cart	p	c2	
# ::edge	cart	ARG1-of	fill-01	c2	f	
# ::edge	fill-01	ARG2	branch	f	b2	
(r / ride-01
    :ARG0 (b / boy)
    :ARG1 (c / cart
        :accompanier (h / horse
            :quant 2
            :domain (a / and
                :op1 (h2 / horse
                    :quant 1
                    :mod (l / large))
                :op2 (h3 / horse
                    :mod (s / small)))))
    :time (p / pull-01
        :ARG0 c
        :ARG1 (c2 / cart
            :ARG1-of (f / fill-01
                :ARG2 (b2 / branch))
            :mod (s2 / small))))
