# ::tok A view of a bedpost , desk , two windows , and a computer .
# ::node	v	view-01	1-2
# ::node	b	bedpost	4-5
# ::node	a	and	5-6
# ::node	d	desk	6-7
# ::node	0	2	8-9
# ::node	w	window	9-10
# ::node	c	computer	13-14
# ::root	v	view-01
# ::edge	and	op1	bedpost	a	b	
# ::edge	view-01	ARG1	and	v	a	
# ::edge	and	op2	desk	a	d	
# ::edge	window	quant	2	w	0	
# ::edge	and	op3	window	a	w	
# ::edge	and	op4	computer	a	c	
(v / view-01
    :ARG1 (a / and
        :op1 (b / bedpost)
        :op2 (d / desk)
        :op3 (w / window
            :quant 2)
        :op4 (c / computer)))
