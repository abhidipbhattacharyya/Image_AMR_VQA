# ::tok Two birds standing on telephone wires , a third bird flying
# ::node	0	2	0-1
# ::node	b	bird	1-2
# ::node	s	stand-01	2-3
# ::node	t	telephone	4-5
# ::node	w	wire	5-6
# ::node	a	and	6-7
# ::node	o	ordinal-entity	8-9
# ::node	1	3	8-9
# ::node	b2	bird	9-10
# ::node	f	fly-01	10-11
# ::root	a	and
# ::edge	bird	quant	2	b	0	
# ::edge	stand-01	ARG1	bird	s	b	
# ::edge	wire	mod	telephone	w	t	
# ::edge	stand-01	ARG2	wire	s	w	
# ::edge	and	op1	stand-01	a	s	
# ::edge	ordinal-entity	value	3	o	1	
# ::edge	bird	ord	ordinal-entity	b2	o	
# ::edge	fly-01	ARG1	bird	f	b2	
# ::edge	and	op2	fly-01	a	f	
(a / and
    :op1 (s / stand-01
        :ARG1 (b / bird
            :quant 2)
        :ARG2 (w / wire
            :mod (t / telephone)))
    :op2 (f / fly-01
        :ARG1 (b2 / bird
            :ord (o / ordinal-entity
                :value 3))))
