# ::tok a child on a skateboard outdoors next to another child climbing a wooden fence
# ::node	c	child	1-2
# ::node	s	skate-01	4-5
# ::node	o	outdoors	5-6
# ::node	n	next-to	6-7
# ::node	h	have-purpose-91	7-8
# ::node	a	another	8-9
# ::node	c2	child	9-10
# ::node	c3	climb-01	10-11
# ::node	w	wood	12-13
# ::node	f	fence	13-14
# ::root	h	have-purpose-91
# ::edge	skate-01	ARG0	child	s	c	
# ::edge	child	location	next-to	c	n	
# ::edge	have-purpose-91	ARG2	skate-01	h	s	
# ::edge	have-purpose-91	ARG1	skate-01	h	s	
# ::edge	child	mod	another	c2	a	
# ::edge	next-to	op1	child	n	c2	
# ::edge	child	ARG0-of	climb-01	c2	c3	
# ::edge	fence	consist-of	wood	f	w	
# ::edge	climb-01	ARG1	fence	c3	f	
# ::edge	have-purpose-91	rel	outdoors	h	o	
(h / have-purpose-91
    :ARG1 (s / skate-01
        :ARG0 (c / child
            :location (n / next-to
                :op1 (c2 / child
                    :ARG0-of (c3 / climb-01
                        :ARG1 (f / fence
                            :consist-of (w / wood)))
                    :mod (a / another)))))
    :ARG2 s
    :rel (o / outdoors))
