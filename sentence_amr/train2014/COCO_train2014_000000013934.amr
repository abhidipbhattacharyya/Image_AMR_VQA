# ::tok A train is parked on the train tracks next to a guard rail .
# ::node	t3	train	1-2
# ::node	p	park-01	3-4
# ::node	t2	track	7-8
# ::node	n	next-to	8-9
# ::node	t	thing	10-11
# ::node	g	guard-01	11-12
# ::node	g2	guard-01	12-13
# ::root	p	park-01
# ::edge	park-01	ARG1	train	p	t3	
# ::edge	park-01	ARG2	track	p	t2	
# ::edge	train	consist	track	t3	t2	
# ::edge	park-01	location	next-to	p	n	
# ::edge	next-to	op1	thing	n	t	
# ::edge	thing	ARG0-of	guard-01	t	g	
# ::edge	thing	ARG0-of	guard-01	t	g2	
(p / park-01
    :ARG1 (t3 / train
        :consist (t2 / track))
    :ARG2 t2
    :location (n / next-to
        :op1 (t / thing
            :ARG0-of (g / guard-01)
            :ARG0-of (g2 / guard-01))))
