# ::tok The batter looks toward the catcher whose arm is extended .
# ::node	p	person	1-2
# ::node	b	batter-01	1-2
# ::node	l	look-01	2-3
# ::node	p2	person	5-6
# ::node	c	catch-01	5-6
# ::node	a	arm	7-8
# ::node	e	extend-01	9-10
# ::root	l	look-01
# ::edge	person	ARG2-of	batter-01	p	b	
# ::edge	look-01	ARG0	person	l	p	
# ::edge	look-01	ARG1	person	l	p2	
# ::edge	person	ARG0-of	catch-01	p2	c	
# ::edge	person	part	arm	p2	a	
# ::edge	arm	ARG1-of	extend-01	a	e	
(l / look-01
    :ARG0 (p / person
        :ARG2-of (b / batter-01))
    :ARG1 (p2 / person
        :ARG0-of (c / catch-01)
        :part (a / arm
            :ARG1-of (e / extend-01))))
