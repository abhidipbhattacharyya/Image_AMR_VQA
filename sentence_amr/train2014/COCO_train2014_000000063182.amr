# ::tok A pair of sheep , one looking down and one looking to its right .
# ::node	p	pair	1-2
# ::node	s	sheep	3-4
# ::node	l	look-01	6-7
# ::node	d	down	7-8
# ::node	a	and	8-9
# ::node	i	include-91	9-10
# ::node	0	1	9-10
# ::node	l2	look-01	10-11
# ::node	r	right-04	13-14
# ::node	t	thing	14-15
# ::root	a	and
# ::edge	sheep	quant	pair	s	p	
# ::edge	sheep	ARG0-of	look-01	s	l	
# ::edge	look-01	direction	down	l	d	
# ::edge	and	op1	sheep	a	s	
# ::edge	include-91	ARG2	sheep	i	s	
# ::edge	look-01	ARG0	1	l2	0	
# ::edge	look-01	direction	right-04	l2	r	
# ::edge	thing	ARG0-of	look-01	t	l2	
# ::edge	thing	quant	1	t	0	
# ::edge	thing	ARG1-of	include-91	t	i	
# ::edge	and	op2	thing	a	t	
(a / and
    :op1 (s / sheep
        :quant (p / pair)
        :ARG0-of (l / look-01
            :direction (d / down)))
    :op2 (t / thing
        :quant 1
        :ARG0-of (l2 / look-01
            :ARG0 1
            :direction (r / right-04))
        :ARG1-of (i / include-91
            :ARG2 s)))
