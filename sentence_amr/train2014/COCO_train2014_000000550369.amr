# ::tok A L shaped next with a laptop and monitor and storage shelf in the corner .
# ::node	s4	string-entity	1-2
# ::node	0	L	1-2
# ::node	s	shape-01	2-3
# ::node	n	next	3-4
# ::node	l	laptop	6-7
# ::node	m	monitor	8-9
# ::node	a	and	9-10
# ::node	a2	and	9-10
# ::node	s3	store-01	10-11
# ::node	s2	shelf	11-12
# ::node	b	be-located-at-91	12-13
# ::node	c	corner	14-15
# ::root	a	and
# ::edge	string-entity	value	L	s4	0	
# ::edge	shape-01	ARG2	string-entity	s	s4	
# ::edge	and	op2	next	a	n	
# ::edge	and	op1	shape-01	a	s	
# ::edge	and	op2	monitor	a2	m	
# ::edge	and	op1	laptop	a2	l	
# ::edge	shelf	purpose	store-01	s2	s3	
# ::edge	and	op3	shelf	a2	s2	
# ::edge	be-located-at-91	ARG1	and	b	a2	
# ::edge	next	ARG2-of	be-located-at-91	n	b	
# ::edge	shelf	location	corner	s2	c	
(a / and
    :op1 (s / shape-01
        :ARG2 (s4 / string-entity
            :value "L"))
    :op2 (n / next
        :ARG2-of (b / be-located-at-91
            :ARG1 (a2 / and
                :op1 (l / laptop)
                :op2 (m / monitor)
                :op3 (s2 / shelf
                    :purpose (s3 / store-01)
                    :location (c / corner))))))
