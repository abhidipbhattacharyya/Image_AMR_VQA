# ::tok An image of two different remote controls for a tv , one black and one white
# ::node	i	image	1-2
# ::node	d	differ-02	4-5
# ::node	r	remote	5-6
# ::node	r2	remote	5-6
# ::node	c	control-01	6-7
# ::node	c2	control-01	6-7
# ::node	t	television	9-10
# ::node	i2	include-91	11-12
# ::node	i3	include-91	11-12
# ::node	i4	include-91	11-12
# ::node	0	1	11-12
# ::node	b	black-04	12-13
# ::node	a	and	13-14
# ::node	1	1	14-15
# ::node	w	white-03	15-16
# ::root	i	image
# ::edge	control-01	mod	remote	c	r	
# ::edge	control-01	ARG1-of	differ-02	c	d	
# ::edge	image	topic	control-01	i	c	
# ::edge	control-01	mod	remote	c2	r2	
# ::edge	control-01	purpose	television	c	t	
# ::edge	control-01	ARG2-of	include-91	c	i2	
# ::edge	control-01	ARG2-of	include-91	c2	i3	
# ::edge	include-91	ARG1	control-01	i3	c2	
# ::edge	television	ARG2-of	include-91	t	i4	
# ::edge	include-91	ARG1	control-01	i4	c	
# ::edge	and	op1	black-04	a	b	
# ::edge	and	quant	1	a	0	
# ::edge	include-91	ARG1	and	i2	a	
# ::edge	image	rel	include-91	i	i3	
# ::edge	image	rel	1	i	1	
# ::edge	image	rel	white-03	i	w	
(i / image
    :rel (i3 / include-91
        :ARG1 (c2 / control-01
            :ARG2-of i3
            :mod (r2 / remote)))
    :rel 1
    :rel (w / white-03)
    :topic (c / control-01
        :purpose (t / television
            :ARG2-of (i4 / include-91
                :ARG1 c))
        :ARG1-of (d / differ-02)
        :ARG2-of (i2 / include-91
            :ARG1 (a / and
                :quant 1
                :op1 (b / black-04)))
        :mod (r / remote)))
