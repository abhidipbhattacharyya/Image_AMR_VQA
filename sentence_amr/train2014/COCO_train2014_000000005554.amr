# ::tok A bright red train is moving down the tracks with several cars following it .
# ::node	b	bright-02	1-2
# ::node	r	red-02	2-3
# ::node	t2	train	3-4
# ::node	m	move-01	5-6
# ::node	d	down	6-7
# ::node	t	track	8-9
# ::node	s	several	10-11
# ::node	c	car	11-12
# ::node	f	follow-02	12-13
# ::root	m	move-01
# ::edge	red-02	ARG1-of	bright-02	r	b	
# ::edge	train	ARG1-of	red-02	t2	r	
# ::edge	move-01	ARG1	train	m	t2	
# ::edge	move-01	direction	down	m	d	
# ::edge	move-01	path	track	m	t	
# ::edge	car	quant	several	c	s	
# ::edge	follow-02	ARG0	car	f	c	
# ::edge	train	ARG1-of	follow-02	t2	f	
(m / move-01
    :ARG1 (t2 / train
        :ARG1-of (r / red-02
            :ARG1-of (b / bright-02))
        :ARG1-of (f / follow-02
            :ARG0 (c / car
                :quant (s / several))))
    :direction (d / down)
    :path (t / track))
