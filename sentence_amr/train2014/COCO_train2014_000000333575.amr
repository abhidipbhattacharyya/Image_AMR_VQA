# ::tok Graffiti and the same person had its photo taken twice of him going up the stairs with his skateboard and of him jumping up on the wall and riding it down the wall .
# ::node	w2	work-of-art	0-1
# ::node	a	and	1-2
# ::node	s	same-01	3-4
# ::node	p	person	4-5
# ::node	h	have-04	5-6
# ::node	p2	photograph-01	7-8
# ::node	t	take-01	8-9
# ::node	0	2	9-10
# ::node	h2	he	11-12
# ::node	g	go-02	12-13
# ::node	u	up	13-14
# ::node	s3	stair	15-16
# ::node	s2	skateboard	18-19
# ::node	a2	and	19-20
# ::node	j	jump-03	22-23
# ::node	u2	up	23-24
# ::node	w	wall	26-27
# ::node	a3	and	27-28
# ::node	r	ride-01	28-29
# ::node	d	down-03	30-31
# ::root	a	and
# ::edge	and	op1	work-of-art	a	w2	
# ::edge	person	ARG1-of	same-01	p	s	
# ::edge	have-04	ARG0	person	h	p	
# ::edge	and	op2	have-04	a	h	
# ::edge	have-04	ARG1	photograph-01	h	p2	
# ::edge	photograph-01	ARG1	person	p2	p	
# ::edge	photograph-01	ARG1-of	take-01	p2	t	
# ::edge	take-01	frequency	2	t	0	
# ::edge	go-02	ARG0	he	g	h2	
# ::edge	go-02	direction	up	g	u	
# ::edge	go-02	location	stair	g	s3	
# ::edge	go-02	instrument	skateboard	g	s2	
# ::edge	skateboard	poss	he	s2	h2	
# ::edge	and	op1	go-02	a2	g	
# ::edge	photograph-01	consist-of	and	p2	a2	
# ::edge	jump-03	ARG0	he	j	h2	
# ::edge	jump-03	direction	up	j	u2	
# ::edge	jump-03	destination	wall	j	w	
# ::edge	and	op1	jump-03	a3	j	
# ::edge	and	op2	and	a2	a3	
# ::edge	and	op2	ride-01	a3	r	
# ::edge	ride-01	ARG1	wall	r	w	
# ::edge	ride-01	ARG0	he	r	h2	
# ::edge	ride-01	direction	down-03	r	d	
# ::edge	down-03	ARG1	wall	d	w	
(a / and
    :op1 (w2 / work-of-art)
    :op2 (h / have-04
        :ARG0 (p / person
            :ARG1-of (s / same-01))
        :ARG1 (p2 / photograph-01
            :ARG1 p
            :ARG1-of (t / take-01
                :frequency 2)
            :consist-of (a2 / and
                :op1 (g / go-02
                    :ARG0 (h2 / he)
                    :direction (u / up)
                    :instrument (s2 / skateboard
                        :poss h2)
                    :location (s3 / stair))
                :op2 (a3 / and
                    :op1 (j / jump-03
                        :ARG0 h2
                        :destination (w / wall)
                        :direction (u2 / up))
                    :op2 (r / ride-01
                        :ARG0 h2
                        :ARG1 w
                        :direction (d / down-03
                            :ARG1 w)))))))
