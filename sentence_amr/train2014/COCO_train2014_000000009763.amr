# ::tok Two poles , one with a lamp and a rainbow colored flag and another pole with a traffic light and a traffic sign .
# ::node	1	2	0-1
# ::node	p	pole	1-2
# ::node	0	1	3-4
# ::node	h	have-03	4-5
# ::node	l	lamp	6-7
# ::node	a	and	7-8
# ::node	a2	and	7-8
# ::node	r	rainbow	9-10
# ::node	c	color-01	10-11
# ::node	f	flag	11-12
# ::node	a4	another	13-14
# ::node	p2	pole	14-15
# ::node	h2	have-03	15-16
# ::node	t	traffic	17-18
# ::node	l2	light	18-19
# ::node	a3	and	19-20
# ::node	t2	traffic	21-22
# ::node	s	sign	22-23
# ::root	a	and
# ::edge	pole	quant	2	p	1	
# ::edge	pole	ARG0-of	have-03	p	h	
# ::edge	and	op1	pole	a	p	
# ::edge	and	op1	lamp	a2	l	
# ::edge	have-03	ARG1	and	h	a2	
# ::edge	color-01	ARG2	rainbow	c	r	
# ::edge	flag	ARG1-of	color-01	f	c	
# ::edge	and	op2	flag	a2	f	
# ::edge	pole	mod	another	p2	a4	
# ::edge	and	op2	pole	a	p2	
# ::edge	pole	ARG0-of	have-03	p2	h2	
# ::edge	light	mod	traffic	l2	t	
# ::edge	and	op1	light	a3	l2	
# ::edge	have-03	ARG1	and	h2	a3	
# ::edge	sign	mod	traffic	s	t2	
# ::edge	and	op2	sign	a3	s	
# ::edge	and	rel	1	a	0	
(a / and
    :op1 (p / pole
        :quant 2
        :ARG0-of (h / have-03
            :ARG1 (a2 / and
                :op1 (l / lamp)
                :op2 (f / flag
                    :ARG1-of (c / color-01
                        :ARG2 (r / rainbow))))))
    :op2 (p2 / pole
        :ARG0-of (h2 / have-03
            :ARG1 (a3 / and
                :op1 (l2 / light
                    :mod (t / traffic))
                :op2 (s / sign
                    :mod (t2 / traffic))))
        :mod (a4 / another))
    :rel 1)
