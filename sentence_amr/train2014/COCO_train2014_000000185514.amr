# ::tok A train station that is not underground marked " first class "
# ::node	t	train	1-2
# ::node	s	station	2-3
# ::node	0	-	5-6
# ::node	u	underground	6-7
# ::node	m	mark-02	7-8
# ::node	o	ordinal-entity	9-10
# ::node	1	1	9-10
# ::node	c	class	10-11
# ::root	m	mark-02
# ::edge	station	mod	train	s	t	
# ::edge	underground	polarity	-	u	0	
# ::edge	station	location	underground	s	u	
# ::edge	mark-02	ARG1	station	m	s	
# ::edge	ordinal-entity	value	1	o	1	
# ::edge	class	ord	ordinal-entity	c	o	
# ::edge	mark-02	ARG2	class	m	c	
(m / mark-02
    :ARG1 (s / station
        :location (u / underground
            :polarity -)
        :mod (t / train))
    :ARG2 (c / class
        :ord (o / ordinal-entity
            :value 1)))
