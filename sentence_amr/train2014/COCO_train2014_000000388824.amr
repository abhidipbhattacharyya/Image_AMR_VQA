# ::tok The car approaching the stop sign rides behind the other cars .
# ::node	c	car	1-2
# ::node	a	approach-01	2-3
# ::node	s2	stop-01	4-5
# ::node	s	signal-07	5-6
# ::node	r	ride-01	6-7
# ::node	b	behind	7-8
# ::node	o	other	9-10
# ::node	c2	car	10-11
# ::root	r	ride-01
# ::edge	car	ARG1-of	approach-01	c	a	
# ::edge	signal-07	ARG1	stop-01	s	s2	
# ::edge	approach-01	ARG2	signal-07	a	s	
# ::edge	ride-01	ARG0	car	r	c	
# ::edge	ride-01	location	behind	r	b	
# ::edge	car	mod	other	c2	o	
# ::edge	behind	op1	car	b	c2	
(r / ride-01
    :ARG0 (c / car
        :ARG1-of (a / approach-01
            :ARG2 (s / signal-07
                :ARG1 (s2 / stop-01))))
    :location (b / behind
        :op1 (c2 / car
            :mod (o / other))))
