# ::tok Two lines of trains are parallel as one boy walks on one side and another walks on the other side .
# ::node	1	2	0-1
# ::node	l	line	1-2
# ::node	t	train	3-4
# ::node	p	parallel	5-6
# ::node	0	1	7-8
# ::node	b	boy	8-9
# ::node	b2	boy	8-9
# ::node	w	walk-01	9-10
# ::node	o	one	11-12
# ::node	s	side	12-13
# ::node	s2	side	12-13
# ::node	a	and	13-14
# ::node	a2	another	14-15
# ::node	w2	walk-01	15-16
# ::node	o2	other	18-19
# ::root	p	parallel
# ::edge	line	quant	2	l	1	
# ::edge	line	consist-of	train	l	t	
# ::edge	parallel	domain	line	p	l	
# ::edge	boy	quant	1	b	0	
# ::edge	walk-01	ARG0	boy	w	b	
# ::edge	side	mod	one	s	o	
# ::edge	walk-01	location	side	w	s	
# ::edge	and	op1	walk-01	a	w	
# ::edge	parallel	time	and	p	a	
# ::edge	boy	mod	another	b2	a2	
# ::edge	and	op2	walk-01	a	w2	
# ::edge	walk-01	location	side	w2	s2	
# ::edge	walk-01	ARG0	boy	w2	b2	
# ::edge	side	mod	other	s2	o2	
(p / parallel
    :domain (l / line
        :quant 2
        :consist-of (t / train))
    :time (a / and
        :op1 (w / walk-01
            :ARG0 (b / boy
                :quant 1)
            :location (s / side
                :mod (o / one)))
        :op2 (w2 / walk-01
            :ARG0 (b2 / boy
                :mod (a2 / another))
            :location (s2 / side
                :mod (o2 / other)))))
