# ::tok A batter and catcher assume their stances as an umpire looks on .
# ::node	p	person	1-2
# ::node	b	batter-01	1-2
# ::node	a	and	2-3
# ::node	p2	person	3-4
# ::node	c	catch-01	3-4
# ::node	a2	assume-01	4-5
# ::node	s	stand-11	6-7
# ::node	p3	person	9-10
# ::node	u	umpire-01	9-10
# ::node	l	look-01	10-11
# ::root	a2	assume-01
# ::edge	person	ARG0-of	batter-01	p	b	
# ::edge	and	op1	person	a	p	
# ::edge	and	op2	person	a	p2	
# ::edge	person	ARG0-of	catch-01	p2	c	
# ::edge	assume-01	ARG0	and	a2	a	
# ::edge	assume-01	ARG1	stand-11	a2	s	
# ::edge	stand-11	ARG0	and	s	a	
# ::edge	person	ARG0-of	umpire-01	p3	u	
# ::edge	look-01	ARG0	person	l	p3	
# ::edge	assume-01	time	look-01	a2	l	
(a2 / assume-01
    :ARG0 (a / and
        :op1 (p / person
            :ARG0-of (b / batter-01))
        :op2 (p2 / person
            :ARG0-of (c / catch-01)))
    :ARG1 (s / stand-11
        :ARG0 a)
    :time (l / look-01
        :ARG0 (p3 / person
            :ARG0-of (u / umpire-01))))
