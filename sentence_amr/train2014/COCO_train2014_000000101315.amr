# ::tok Two tiers of a train scene in mountain setting birthday cake with name baby Herring ... on side with grass and track detail , on an aluminum wrapped disk .
# ::node	0	2	0-1
# ::node	t2	tier	1-2
# ::node	t4	train	4-5
# ::node	s	scene	5-6
# ::node	m	mountain	7-8
# ::node	s2	set-01	8-9
# ::node	b2	birthday	9-10
# ::node	c	cake	10-11
# ::node	n	name-01	12-13
# ::node	b	baby	13-14
# ::node	t	thing	14-15
# ::node	e	Herring	14-15
# ::node	s3	side	17-18
# ::node	g	grass	19-20
# ::node	a2	and	20-21
# ::node	t3	track	21-22
# ::node	d	detail	22-23
# ::node	a	aluminum	26-27
# ::node	w	wrap-01	27-28
# ::node	d2	disk	28-29
# ::node	a3	and	29-30
# ::root	a3	and
# ::edge	tier	quant	2	t2	0	
# ::edge	scene	mod	train	s	t4	
# ::edge	tier	part-of	scene	t2	s	
# ::edge	set-01	ARG2	mountain	s2	m	
# ::edge	cake	mod	birthday	c	b2	
# ::edge	cake	ARG1-of	set-01	c	s2	
# ::edge	tier	part-of	cake	t2	c	
# ::edge	cake	ARG1-of	name-01	c	n	
# ::edge	thing	mod	baby	t	b	
# ::edge	name-01	ARG2	thing	n	t	
# ::edge	cake	location	side	c	s3	
# ::edge	and	op1	grass	a2	g	
# ::edge	side	accompanier	and	s3	a2	
# ::edge	detail	mod	track	d	t3	
# ::edge	and	op2	detail	a2	d	
# ::edge	wrap-01	ARG2	aluminum	w	a	
# ::edge	disk	ARG1-of	wrap-01	d2	w	
# ::edge	cake	location	disk	c	d2	
# ::edge	and	op2	tier	a3	t2	
# ::edge	and	op1	tier	a3	t2	
# ::edge	and	rel	Herring	a3	e	
(a3 / and
    :op1 (t2 / tier
        :quant 2
        :part-of (s / scene
            :mod (t4 / train))
        :part-of (c / cake
            :ARG1-of (s2 / set-01
                :ARG2 (m / mountain))
            :ARG1-of (n / name-01
                :ARG2 (t / thing
                    :mod (b / baby)))
            :location (s3 / side
                :accompanier (a2 / and
                    :op1 (g / grass)
                    :op2 (d / detail
                        :mod (t3 / track))))
            :location (d2 / disk
                :ARG1-of (w / wrap-01
                    :ARG2 (a / aluminum)))
            :mod (b2 / birthday)))
    :op2 t2
    :rel (e / Herring))
