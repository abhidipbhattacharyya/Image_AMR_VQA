# ::tok A sleek double - decker bus is parked next to a second bus and a person 's shadow .
# ::node	s2	sleek	1-2
# ::node	d	double-decker	4-5
# ::node	b	bus	5-6
# ::node	p	park-01	7-8
# ::node	n	next-to	8-9
# ::node	o	ordinal-entity	11-12
# ::node	0	2	11-12
# ::node	b2	bus	12-13
# ::node	a	and	13-14
# ::node	p2	person	15-16
# ::node	s	shadow-01	17-18
# ::root	p	park-01
# ::edge	bus	mod	double-decker	b	d	
# ::edge	bus	mod	sleek	b	s2	
# ::edge	park-01	ARG1	bus	p	b	
# ::edge	park-01	ARG2	next-to	p	n	
# ::edge	ordinal-entity	value	2	o	0	
# ::edge	bus	ord	ordinal-entity	b2	o	
# ::edge	and	op1	bus	a	b2	
# ::edge	next-to	op1	and	n	a	
# ::edge	shadow-01	ARG1	person	s	p2	
# ::edge	and	op2	shadow-01	a	s	
(p / park-01
    :ARG1 (b / bus
        :mod (d / double-decker)
        :mod (s2 / sleek))
    :ARG2 (n / next-to
        :op1 (a / and
            :op1 (b2 / bus
                :ord (o / ordinal-entity
                    :value 2))
            :op2 (s / shadow-01
                :ARG1 (p2 / person)))))
