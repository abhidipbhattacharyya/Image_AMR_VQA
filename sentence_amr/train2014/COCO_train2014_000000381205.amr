# ::tok Two whole pizzas are sitting on a table , one with cheese and meat and the other with cheese and vegetables .
# ::node	1	2	0-1
# ::node	w	whole	1-2
# ::node	p	pizzeria	2-3
# ::node	p2	pizzeria	2-3
# ::node	s	sit-01	4-5
# ::node	t	table	7-8
# ::node	0	1	9-10
# ::node	c	cheese	11-12
# ::node	a	and	12-13
# ::node	a2	and	12-13
# ::node	m	meat	13-14
# ::node	o	other	16-17
# ::node	c2	cheese	18-19
# ::node	a3	and	19-20
# ::node	v	vegetable	20-21
# ::root	s	sit-01
# ::edge	pizzeria	mod	whole	p	w	
# ::edge	pizzeria	quant	2	p	1	
# ::edge	sit-01	ARG1	pizzeria	s	p	
# ::edge	sit-01	ARG2	table	s	t	
# ::edge	pizzeria	quant	1	p	0	
# ::edge	and	op1	cheese	a	c	
# ::edge	pizzeria	part	and	p	a	
# ::edge	and	op1	cheese	a2	c	
# ::edge	pizzeria	part	and	p2	a2	
# ::edge	and	op2	meat	a2	m	
# ::edge	pizzeria	mod	other	p2	o	
# ::edge	and	op1	cheese	a3	c2	
# ::edge	pizzeria	part	and	p2	a3	
# ::edge	and	op2	vegetable	a3	v	
# ::edge	sit-01	rel	pizzeria	s	p2	
(s / sit-01
    :ARG1 (p / pizzeria
        :quant 2
        :quant 1
        :mod (w / whole)
        :part (a / and
            :op1 (c / cheese)))
    :ARG2 (t / table)
    :rel (p2 / pizzeria
        :mod (o / other)
        :part (a2 / and
            :op1 c
            :op2 (m / meat))
        :part (a3 / and
            :op1 (c2 / cheese)
            :op2 (v / vegetable))))
