# ::tok Small saucer on the table with a fork and cake slice on it
# ::node	s3	small	0-1
# ::node	s	saucer	1-2
# ::node	b	be-located-at-91	2-3
# ::node	t	table	4-5
# ::node	f	fork	7-8
# ::node	a	and	8-9
# ::node	c	cake	9-10
# ::node	s2	slice	10-11
# ::root	b	be-located-at-91
# ::edge	saucer	mod	small	s	s3	
# ::edge	be-located-at-91	ARG1	saucer	b	s	
# ::edge	be-located-at-91	ARG2	table	b	t	
# ::edge	and	op1	fork	a	f	
# ::edge	saucer	location-of	and	s	a	
# ::edge	slice	consist-of	cake	s2	c	
# ::edge	and	op2	slice	a	s2	
(b / be-located-at-91
    :ARG1 (s / saucer
        :location-of (a / and
            :op1 (f / fork)
            :op2 (s2 / slice
                :consist-of (c / cake)))
        :mod (s3 / small))
    :ARG2 (t / table))
