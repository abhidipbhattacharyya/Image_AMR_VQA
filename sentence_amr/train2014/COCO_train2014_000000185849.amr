# ::tok Two trains cars that is blue and yellow and most of the scene cannot be seen .
# ::node	1	2	0-1
# ::node	t	train	1-2
# ::node	c	car	2-3
# ::node	b	blue	5-6
# ::node	y	yellow-02	7-8
# ::node	a	and	8-9
# ::node	m	most	9-10
# ::node	s	scene	12-13
# ::node	p	possible-01	13-14
# ::node	0	-	13-14
# ::node	s2	see-01	15-16
# ::root	p	possible-01
# ::edge	car	mod	train	c	t	
# ::edge	car	quant	2	c	1	
# ::edge	car	mod	blue	c	b	
# ::edge	car	ARG1-of	yellow-02	c	y	
# ::edge	and	op1	car	a	c	
# ::edge	scene	quant	most	s	m	
# ::edge	and	op2	scene	a	s	
# ::edge	possible-01	polarity	-	p	0	
# ::edge	possible-01	ARG1	see-01	p	s2	
# ::edge	see-01	ARG1	and	s2	a	
(p / possible-01
    :ARG1 (s2 / see-01
        :ARG1 (a / and
            :op1 (c / car
                :quant 2
                :ARG1-of (y / yellow-02)
                :mod (t / train)
                :mod (b / blue))
            :op2 (s / scene
                :quant (m / most))))
    :polarity -)
