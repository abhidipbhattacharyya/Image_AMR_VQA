# ::tok A group of pelicans are standing in a row while two other swim in front .
# ::node	g	group	1-2
# ::node	p	pelican	3-4
# ::node	p2	pelican	3-4
# ::node	s	stand-01	5-6
# ::node	r	row	8-9
# ::node	c	contrast-01	9-10
# ::node	0	2	10-11
# ::node	o	other	11-12
# ::node	s2	swim-01	12-13
# ::node	f	front	14-15
# ::root	c	contrast-01
# ::edge	group	consist-of	pelican	g	p	
# ::edge	stand-01	ARG1	group	s	g	
# ::edge	stand-01	ARG2	row	s	r	
# ::edge	contrast-01	ARG1	stand-01	c	s	
# ::edge	pelican	quant	2	p2	0	
# ::edge	pelican	mod	other	p2	o	
# ::edge	contrast-01	ARG2	swim-01	c	s2	
# ::edge	swim-01	ARG0	pelican	s2	p2	
# ::edge	swim-01	location	front	s2	f	
(c / contrast-01
    :ARG1 (s / stand-01
        :ARG1 (g / group
            :consist-of (p / pelican))
        :ARG2 (r / row))
    :ARG2 (s2 / swim-01
        :ARG0 (p2 / pelican
            :quant 2
            :mod (o / other))
        :location (f / front)))
