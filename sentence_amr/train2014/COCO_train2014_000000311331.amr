# ::tok A cat sits on a window ledge as a peers out from inside a white building
# ::node	c	cat	1-2
# ::node	s	sit-01	2-3
# ::node	w2	window	5-6
# ::node	l	ledge	6-7
# ::node	p	peer-01	9-10
# ::node	o	out	10-11
# ::node	i	inside	12-13
# ::node	w	white-03	14-15
# ::node	b	building	15-16
# ::root	s	sit-01
# ::edge	sit-01	ARG1	cat	s	c	
# ::edge	ledge	location	window	l	w2	
# ::edge	sit-01	ARG2	ledge	s	l	
# ::edge	cat	ARG0-of	peer-01	c	p	
# ::edge	peer-01	direction	out	p	o	
# ::edge	peer-01	source	inside	p	i	
# ::edge	building	ARG1-of	white-03	b	w	
# ::edge	inside	op1	building	i	b	
(s / sit-01
    :ARG1 (c / cat
        :ARG0-of (p / peer-01
            :direction (o / out)
            :source (i / inside
                :op1 (b / building
                    :ARG1-of (w / white-03)))))
    :ARG2 (l / ledge
        :location (w2 / window)))
