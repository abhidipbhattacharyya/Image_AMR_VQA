# ::tok Two single vehicles are stopped a red light near a True Value hardware store .
# ::node	0	2	0-1
# ::node	s	single-02	1-2
# ::node	v	vehicle	2-3
# ::node	s2	stop-01	4-5
# ::node	r	red-02	6-7
# ::node	l	light	7-8
# ::node	n2	near-02	8-9
# ::node	1	True	10-11
# ::node	2	Value	11-12
# ::node	h	hardware	12-13
# ::node	s3	store	13-14
# ::node	n	name	13-14
# ::root	s2	stop-01
# ::edge	vehicle	ARG1-of	single-02	v	s	
# ::edge	vehicle	quant	2	v	0	
# ::edge	stop-01	ARG1	vehicle	s2	v	
# ::edge	light	ARG1-of	red-02	l	r	
# ::edge	stop-01	location	light	s2	l	
# ::edge	stop-01	ARG1-of	near-02	s2	n2	
# ::edge	store	mod	hardware	s3	h	
# ::edge	near-02	ARG2	store	n2	s3	
# ::edge	store	name	name	s3	n	
# ::edge	name	op2	Value	n	2	
# ::edge	name	op1	True	n	1	
(s2 / stop-01
    :ARG1 (v / vehicle
        :quant 2
        :ARG1-of (s / single-02))
    :ARG1-of (n2 / near-02
        :ARG2 (s3 / store
            :name (n / name
                :op1 "True"
                :op2 "Value")
            :mod (h / hardware)))
    :location (l / light
        :ARG1-of (r / red-02)))
