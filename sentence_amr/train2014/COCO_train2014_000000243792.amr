# ::tok A float in the shape of an elephant with riders pulling another float .
# ::node	f	float	1-2
# ::node	s	shape-01	4-5
# ::node	e	elephant	7-8
# ::node	p	person	9-10
# ::node	r	ride-01	9-10
# ::node	p2	pull-01	10-11
# ::node	a	another	11-12
# ::node	f2	float	12-13
# ::root	f	float
# ::edge	float	ARG1-of	shape-01	f	s	
# ::edge	shape-01	ARG2	elephant	s	e	
# ::edge	person	ARG0-of	ride-01	p	r	
# ::edge	ride-01	ARG1	float	r	f	
# ::edge	pull-01	ARG0	person	p2	p	
# ::edge	float	ARG1-of	pull-01	f	p2	
# ::edge	float	mod	another	f2	a	
# ::edge	pull-01	ARG2	float	p2	f2	
(f / float
    :ARG1-of (s / shape-01
        :ARG2 (e / elephant))
    :ARG1-of (p2 / pull-01
        :ARG0 (p / person
            :ARG0-of (r / ride-01
                :ARG1 f))
        :ARG2 (f2 / float
            :mod (a / another))))
