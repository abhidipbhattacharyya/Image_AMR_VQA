# ::tok A zebra with its head turned while another zebra looks towards the grown .
# ::node	z	zebra	1-2
# ::node	h	head	4-5
# ::node	t	turn-01	5-6
# ::node	c	contrast-01	6-7
# ::node	a	another	7-8
# ::node	z2	zebra	8-9
# ::node	l	look-01	9-10
# ::node	p	person	11-12
# ::node	g	grow-01	12-13
# ::root	c	contrast-01
# ::edge	zebra	part	head	z	h	
# ::edge	turn-01	ARG1	head	t	h	
# ::edge	turn-01	ARG0	zebra	t	z	
# ::edge	contrast-01	ARG1	turn-01	c	t	
# ::edge	zebra	mod	another	z2	a	
# ::edge	look-01	ARG0	zebra	l	z2	
# ::edge	contrast-01	ARG2	look-01	c	l	
# ::edge	look-01	direction	person	l	p	
# ::edge	person	ARG1-of	grow-01	p	g	
(c / contrast-01
    :ARG1 (t / turn-01
        :ARG0 (z / zebra
            :part (h / head))
        :ARG1 h)
    :ARG2 (l / look-01
        :ARG0 (z2 / zebra
            :mod (a / another))
        :direction (p / person
            :ARG1-of (g / grow-01))))
