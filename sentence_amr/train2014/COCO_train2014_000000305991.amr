# ::tok Two sandwiches on English muffins featuring greens and cheddar cheese on one sandwich and Canadian bacon and an egg on the other sandwich .
# ::node	0	2	0-1
# ::node	s	sandwich	1-2
# ::node	c3	country	3-4
# ::node	n2	name	3-4
# ::node	2	England	3-4
# ::node	n	English	4-5
# ::node	f	feature-01	5-6
# ::node	r	Greens	6-7
# ::node	a	and	7-8
# ::node	a2	and	7-8
# ::node	c	cheddar	8-9
# ::node	c2	cheese	9-10
# ::node	o	one	11-12
# ::node	s2	sandwich	12-13
# ::node	c4	country	14-15
# ::node	n3	name	14-15
# ::node	1	Canada	14-15
# ::node	b	bacon	15-16
# ::node	e	egg	18-19
# ::node	o2	other	21-22
# ::node	s3	sandwich	22-23
# ::root	s	sandwich
# ::edge	sandwich	quant	2	s	0	
# ::edge	country	name	name	c3	n2	
# ::edge	name	op1	England	n2	2	
# ::edge	English	mod	country	n	c3	
# ::edge	sandwich	location	English	s	n	
# ::edge	sandwich	ARG2-of	feature-01	s	f	
# ::edge	feature-01	ARG1	and	f	a	
# ::edge	and	op1	and	a	a2	
# ::edge	and	op1	Greens	a2	r	
# ::edge	cheese	mod	cheddar	c2	c	
# ::edge	and	op2	cheese	a2	c2	
# ::edge	sandwich	mod	one	s2	o	
# ::edge	and	location	sandwich	a2	s2	
# ::edge	country	name	name	c4	n3	
# ::edge	name	op1	Canada	n3	1	
# ::edge	bacon	mod	country	b	c4	
# ::edge	and	op2	bacon	a	b	
# ::edge	and	op3	egg	a	e	
# ::edge	sandwich	mod	other	s3	o2	
# ::edge	egg	location	sandwich	e	s3	
(s / sandwich
    :quant 2
    :ARG2-of (f / feature-01
        :ARG1 (a / and
            :op1 (a2 / and
                :location (s2 / sandwich
                    :mod (o / one))
                :op1 (r / Greens)
                :op2 (c2 / cheese
                    :mod (c / cheddar)))
            :op2 (b / bacon
                :mod (c4 / country
                    :name (n3 / name
                        :op1 "Canada")))
            :op3 (e / egg
                :location (s3 / sandwich
                    :mod (o2 / other)))))
    :location (n / English
        :mod (c3 / country
            :name (n2 / name
                :op1 "England"))))
