# ::tok An engine sits on one track while another train sits on another .
# ::node	e	engine	1-2
# ::node	s	sit-01	2-3
# ::node	o	one	4-5
# ::node	t	track	5-6
# ::node	t2	track	5-6
# ::node	c	contrast-01	6-7
# ::node	a	another	7-8
# ::node	t3	train	8-9
# ::node	s2	sit-01	9-10
# ::node	a2	another	11-12
# ::root	c	contrast-01
# ::edge	sit-01	ARG1	engine	s	e	
# ::edge	track	mod	one	t	o	
# ::edge	sit-01	ARG2	track	s	t	
# ::edge	contrast-01	ARG1	sit-01	c	s	
# ::edge	train	mod	another	t3	a	
# ::edge	sit-01	ARG1	train	s2	t3	
# ::edge	contrast-01	ARG2	sit-01	c	s2	
# ::edge	sit-01	ARG2	track	s2	t2	
# ::edge	track	mod	another	t2	a2	
(c / contrast-01
    :ARG1 (s / sit-01
        :ARG1 (e / engine)
        :ARG2 (t / track
            :mod (o / one)))
    :ARG2 (s2 / sit-01
        :ARG1 (t3 / train
            :mod (a / another))
        :ARG2 (t2 / track
            :mod (a2 / another))))
