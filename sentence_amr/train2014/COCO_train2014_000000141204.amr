# ::tok The street signs indicate which way a car can and cannot turn while the signal light controls traffic .
# ::node	s3	street	1-2
# ::node	s	sign	2-3
# ::node	i	indicate-01	3-4
# ::node	w	way	5-6
# ::node	c	car	7-8
# ::node	p	possible-01	8-9
# ::node	a	and	9-10
# ::node	p2	possible-01	10-11
# ::node	0	-	10-11
# ::node	t2	turn-01	11-12
# ::node	s2	signal-07	14-15
# ::node	l	light	15-16
# ::node	c2	control-01	16-17
# ::node	t	traffic	17-18
# ::root	i	indicate-01
# ::edge	sign	mod	street	s	s3	
# ::edge	indicate-01	ARG0	sign	i	s	
# ::edge	indicate-01	ARG1	way	i	w	
# ::edge	and	op1	possible-01	a	p	
# ::edge	way	manner-of	and	w	a	
# ::edge	and	op2	possible-01	a	p2	
# ::edge	possible-01	polarity	-	p2	0	
# ::edge	possible-01	ARG1	turn-01	p2	t2	
# ::edge	possible-01	ARG1	turn-01	p	t2	
# ::edge	turn-01	ARG0	car	t2	c	
# ::edge	light	ARG0-of	signal-07	l	s2	
# ::edge	control-01	ARG0	light	c2	l	
# ::edge	indicate-01	time	control-01	i	c2	
# ::edge	control-01	ARG1	traffic	c2	t	
(i / indicate-01
    :ARG0 (s / sign
        :mod (s3 / street))
    :ARG1 (w / way
        :manner-of (a / and
            :op1 (p / possible-01
                :ARG1 (t2 / turn-01
                    :ARG0 (c / car)))
            :op2 (p2 / possible-01
                :ARG1 t2
                :polarity -)))
    :time (c2 / control-01
        :ARG0 (l / light
            :ARG0-of (s2 / signal-07))
        :ARG1 (t / traffic)))
