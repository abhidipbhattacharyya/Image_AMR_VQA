# ::tok A building with a stop sign next to it with a man on a horse .
# ::node	b	building	1-2
# ::node	h	have-03	2-3
# ::node	s2	stop-01	4-5
# ::node	s	signal-07	5-6
# ::node	n	next-to	6-7
# ::node	m	man	11-12
# ::node	h2	horse	14-15
# ::root	b	building
# ::edge	building	ARG0-of	have-03	b	h	
# ::edge	signal-07	ARG1	stop-01	s	s2	
# ::edge	have-03	ARG1	signal-07	h	s	
# ::edge	signal-07	location	next-to	s	n	
# ::edge	next-to	op1	building	n	b	
# ::edge	building	accompanier	man	b	m	
# ::edge	man	prep-on	horse	m	h2	
(b / building
    :ARG0-of (h / have-03
        :ARG1 (s / signal-07
            :ARG1 (s2 / stop-01)
            :location (n / next-to
                :op1 b)))
    :accompanier (m / man
        :prep-on (h2 / horse)))
