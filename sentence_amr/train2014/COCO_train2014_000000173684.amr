# ::tok That banana holder is holding two bananas and sitting on the counter .
# ::node	t	that	0-1
# ::node	b	banana	1-2
# ::node	p	person	2-3
# ::node	h	hold-01	2-3
# ::node	h2	hold-01	4-5
# ::node	0	2	5-6
# ::node	b2	banana	6-7
# ::node	a	and	7-8
# ::node	s	sit-01	8-9
# ::node	c	counter	11-12
# ::root	a	and
# ::edge	person	mod	that	p	t	
# ::edge	person	ARG0-of	hold-01	p	h	
# ::edge	hold-01	ARG1	banana	h	b	
# ::edge	hold-01	ARG0	person	h2	p	
# ::edge	banana	quant	2	b2	0	
# ::edge	hold-01	ARG1	banana	h2	b2	
# ::edge	and	op1	hold-01	a	h2	
# ::edge	and	op2	sit-01	a	s	
# ::edge	sit-01	ARG1	person	s	p	
# ::edge	sit-01	ARG2	counter	s	c	
(a / and
    :op1 (h2 / hold-01
        :ARG0 (p / person
            :ARG0-of (h / hold-01
                :ARG1 (b / banana))
            :mod (t / that))
        :ARG1 (b2 / banana
            :quant 2))
    :op2 (s / sit-01
        :ARG1 p
        :ARG2 (c / counter)))
