# ::tok A stop sign on a gate with a notice posted of a fine if you go around when the gate is down .
# ::node	s2	stop-01	1-2
# ::node	s	signal-07	2-3
# ::node	g	gate	5-6
# ::node	a	and	6-7
# ::node	n	notice-03	8-9
# ::node	p	post-01	9-10
# ::node	f	fine-01	12-13
# ::node	y	you	14-15
# ::node	g2	go-02	15-16
# ::node	a2	around	16-17
# ::node	d	down-01	21-22
# ::root	a	and
# ::edge	signal-07	ARG1	stop-01	s	s2	
# ::edge	signal-07	location	gate	s	g	
# ::edge	and	op1	signal-07	a	s	
# ::edge	post-01	ARG1	notice-03	p	n	
# ::edge	and	op2	post-01	a	p	
# ::edge	notice-03	ARG1	fine-01	n	f	
# ::edge	go-02	ARG0	you	g2	y	
# ::edge	fine-01	condition	go-02	f	g2	
# ::edge	go-02	ARG1	around	g2	a2	
# ::edge	go-02	time	down-01	g2	d	
# ::edge	down-01	ARG1	gate	d	g	
(a / and
    :op1 (s / signal-07
        :ARG1 (s2 / stop-01)
        :location (g / gate))
    :op2 (p / post-01
        :ARG1 (n / notice-03
            :ARG1 (f / fine-01
                :condition (g2 / go-02
                    :ARG0 (y / you)
                    :ARG1 (a2 / around)
                    :time (d / down-01
                        :ARG1 g))))))
