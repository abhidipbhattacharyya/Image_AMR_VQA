# ::tok A man is climbing up a silo because his truck is full .
# ::node	m	man	1-2
# ::node	c2	climb-01	3-4
# ::node	u	up	4-5
# ::node	s	silo	6-7
# ::node	c	cause-01	7-8
# ::node	t	truck	9-10
# ::node	f	full-09	11-12
# ::root	c2	climb-01
# ::edge	climb-01	ARG0	man	c2	m	
# ::edge	climb-01	direction	up	c2	u	
# ::edge	climb-01	ARG1	silo	c2	s	
# ::edge	climb-01	ARG1-of	cause-01	c2	c	
# ::edge	truck	poss	man	t	m	
# ::edge	full-09	ARG1	truck	f	t	
# ::edge	cause-01	ARG0	full-09	c	f	
(c2 / climb-01
    :ARG0 (m / man)
    :ARG1 (s / silo)
    :ARG1-of (c / cause-01
        :ARG0 (f / full-09
            :ARG1 (t / truck
                :poss m)))
    :direction (u / up))
