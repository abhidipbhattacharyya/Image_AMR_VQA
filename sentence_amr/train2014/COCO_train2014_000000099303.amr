# ::tok A white train car with AEG on the side stands on a track in the foreground with a lot of other , mainly blue and white , otherwise similar vehicles at some distance , behind it .
# ::node	w	white-03	1-2
# ::node	t2	train	2-3
# ::node	c	car	3-4
# ::node	h	have-03	4-5
# ::node	c2	company	5-6
# ::node	n	name	5-6
# ::node	0	AEG	5-6
# ::node	s	side	8-9
# ::node	s3	stand-01	9-10
# ::node	t	track	12-13
# ::node	f	foreground	15-16
# ::node	l	lot	18-19
# ::node	o	other	20-21
# ::node	m	main	22-23
# ::node	b2	blue	23-24
# ::node	a	and	24-25
# ::node	w2	white-03	25-26
# ::node	e	except-01	27-28
# ::node	r	resemble-01	28-29
# ::node	v	vehicle	29-30
# ::node	v2	vehicle	29-30
# ::node	s2	some	31-32
# ::node	d	distant-02	32-33
# ::node	b	behind	34-35
# ::root	s3	stand-01
# ::edge	car	mod	train	c	t2	
# ::edge	car	ARG1-of	white-03	c	w	
# ::edge	car	ARG0-of	have-03	c	h	
# ::edge	have-03	ARG1	company	h	c2	
# ::edge	company	name	name	c2	n	
# ::edge	name	op1	AEG	n	0	
# ::edge	car	location	side	c	s	
# ::edge	stand-01	ARG1	car	s3	c	
# ::edge	stand-01	ARG2	track	s3	t	
# ::edge	track	location	foreground	t	f	
# ::edge	and	mod	main	a	m	
# ::edge	and	quant	lot	a	l	
# ::edge	except-01	ARG2	and	e	a	
# ::edge	resemble-01	ARG1-of	except-01	r	e	
# ::edge	vehicle	ARG1-of	resemble-01	v	r	
# ::edge	and	op1	vehicle	a	v	
# ::edge	vehicle	mod	blue	v	b2	
# ::edge	resemble-01	ARG2	vehicle	r	v2	
# ::edge	vehicle	ARG1-of	white-03	v2	w2	
# ::edge	and	op2	vehicle	a	v2	
# ::edge	distant-02	mod	some	d	s2	
# ::edge	and	location	distant-02	a	d	
# ::edge	distant-02	ARG1	car	d	c	
# ::edge	and	location	behind	a	b	
# ::edge	behind	op1	car	b	c	
# ::edge	stand-01	rel	and	s3	a	
# ::edge	stand-01	rel	other	s3	o	
(s3 / stand-01
    :ARG1 (c / car
        :ARG0-of (h / have-03
            :ARG1 (c2 / company
                :name (n / name
                    :op1 "AEG")))
        :ARG1-of (w / white-03)
        :location (s / side)
        :mod (t2 / train))
    :ARG2 (t / track
        :location (f / foreground))
    :rel (a / and
        :quant (l / lot)
        :location (d / distant-02
            :ARG1 c
            :mod (s2 / some))
        :location (b / behind
            :op1 c)
        :mod (m / main)
        :op1 (v / vehicle
            :ARG1-of (r / resemble-01
                :ARG1-of (e / except-01
                    :ARG2 a)
                :ARG2 (v2 / vehicle
                    :ARG1-of (w2 / white-03)))
            :mod (b2 / blue))
        :op2 v2)
    :rel (o / other))
