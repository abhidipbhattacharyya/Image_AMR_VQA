# ::tok Four pairs of scissors hanging on a wall , each opened up a little more than the one next to it .
# ::node	0	4	0-1
# ::node	p	pair-01	1-2
# ::node	s	scissors	3-4
# ::node	h	hang-01	4-5
# ::node	w	wall	7-8
# ::node	w2	wall	7-8
# ::node	a	and	8-9
# ::node	e	each	9-10
# ::node	o	open-up-03	10-11
# ::node	o2	open-up-03	10-11
# ::node	l	little	13-14
# ::node	h2	have-quant-91	14-15
# ::node	m	more	14-15
# ::node	n	next-to	18-19
# ::root	a	and
# ::edge	pair-01	quant	4	p	0	
# ::edge	scissors	ARG1-of	pair-01	s	p	
# ::edge	scissors	ARG1-of	hang-01	s	h	
# ::edge	hang-01	ARG2	wall	h	w	
# ::edge	and	op1	scissors	a	s	
# ::edge	and	mod	each	a	e	
# ::edge	and	op2	open-up-03	a	o	
# ::edge	open-up-03	ARG1	scissors	o	s	
# ::edge	open-up-03	ARG1	wall	o2	w2	
# ::edge	have-quant-91	ARG4	open-up-03	h2	o2	
# ::edge	open-up-03	ARG1-of	have-quant-91	o	h2	
# ::edge	have-quant-91	ARG3	more	h2	m	
# ::edge	more	quant	little	m	l	
# ::edge	wall	location	next-to	w2	n	
# ::edge	next-to	op1	wall	n	w2	
(a / and
    :mod (e / each)
    :op1 (s / scissors
        :ARG1-of (p / pair-01
            :quant 4)
        :ARG1-of (h / hang-01
            :ARG2 (w / wall)))
    :op2 (o / open-up-03
        :ARG1 s
        :ARG1-of (h2 / have-quant-91
            :ARG3 (m / more
                :quant (l / little))
            :ARG4 (o2 / open-up-03
                :ARG1 (w2 / wall
                    :location (n / next-to
                        :op1 w2))))))
