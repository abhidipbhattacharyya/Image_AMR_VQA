# ::tok A plate full of gummy bears with a couple of them throwing a string down to lift up two woen below .
# ::node	p2	plate	1-2
# ::node	f	fill-01	2-3
# ::node	g	gummy	4-5
# ::node	b	bear	5-6
# ::node	b2	bear	5-6
# ::node	h	have-03	6-7
# ::node	c	couple	8-9
# ::node	t	throw-01	11-12
# ::node	s	string	13-14
# ::node	d	down	14-15
# ::node	l	lift-01	16-17
# ::node	0	2	18-19
# ::node	p	person	19-20
# ::node	b3	below	20-21
# ::node	e	event	21-22
# ::root	e	event
# ::edge	plate	ARG1-of	fill-01	p2	f	
# ::edge	bear	mod	gummy	b	g	
# ::edge	fill-01	ARG2	bear	f	b	
# ::edge	have-03	ARG1	bear	h	b2	
# ::edge	plate	ARG0-of	have-03	p2	h	
# ::edge	bear	quant	couple	b2	c	
# ::edge	bear	ARG0-of	throw-01	b2	t	
# ::edge	throw-01	ARG1	string	t	s	
# ::edge	throw-01	ARG2	down	t	d	
# ::edge	throw-01	purpose	lift-01	t	l	
# ::edge	lift-01	ARG0	bear	l	b2	
# ::edge	person	quant	2	p	0	
# ::edge	lift-01	ARG1	person	l	p	
# ::edge	person	location	below	p	b3	
# ::edge	event	mod	plate	e	p2	
(e / event
    :mod (p2 / plate
        :ARG0-of (h / have-03
            :ARG1 (b2 / bear
                :quant (c / couple)
                :ARG0-of (t / throw-01
                    :purpose (l / lift-01
                        :ARG0 b2
                        :ARG1 (p / person
                            :quant 2
                            :location (b3 / below)))
                    :ARG1 (s / string)
                    :ARG2 (d / down))))
        :ARG1-of (f / fill-01
            :ARG2 (b / bear
                :mod (g / gummy)))))
