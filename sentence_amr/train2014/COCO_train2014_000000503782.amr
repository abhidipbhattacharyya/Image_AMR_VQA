# ::tok A white Swiss airplane with a white cross on a red field symbol on its tail , flying .
# ::node	w	white-03	1-2
# ::node	c	country	2-3
# ::node	n	name	2-3
# ::node	0	Switzerland	2-3
# ::node	a	airplane	3-4
# ::node	h	have-03	4-5
# ::node	w2	white-03	6-7
# ::node	c2	cross	7-8
# ::node	r	red-02	10-11
# ::node	f	field	11-12
# ::node	t2	thing	12-13
# ::node	s	symbolize-01	12-13
# ::node	t	tail	15-16
# ::node	f2	fly-01	17-18
# ::root	f2	fly-01
# ::edge	country	name	name	c	n	
# ::edge	name	op1	Switzerland	n	0	
# ::edge	airplane	mod	country	a	c	
# ::edge	airplane	ARG1-of	white-03	a	w	
# ::edge	airplane	ARG0-of	have-03	a	h	
# ::edge	cross	ARG1-of	white-03	c2	w2	
# ::edge	have-03	ARG1	cross	h	c2	
# ::edge	field	ARG1-of	red-02	f	r	
# ::edge	thing	mod	field	t2	f	
# ::edge	cross	location	thing	c2	t2	
# ::edge	thing	ARG1-of	symbolize-01	t2	s	
# ::edge	airplane	location	tail	a	t	
# ::edge	airplane	part	tail	a	t	
# ::edge	fly-01	ARG1	airplane	f2	a	
(f2 / fly-01
    :ARG1 (a / airplane
        :ARG0-of (h / have-03
            :ARG1 (c2 / cross
                :ARG1-of (w2 / white-03)
                :location (t2 / thing
                    :ARG1-of (s / symbolize-01)
                    :mod (f / field
                        :ARG1-of (r / red-02)))))
        :ARG1-of (w / white-03)
        :location (t / tail)
        :mod (c / country
            :name (n / name
                :op1 "Switzerland"))
        :part t))
