# ::tok An assortment of different pizzas with different toppings laid out on a counter top .
# ::node	a	assortment	1-2
# ::node	d	differ-02	3-4
# ::node	p	pizzeria	4-5
# ::node	h	have-03	5-6
# ::node	i	ingredient	7-8
# ::node	d2	differ-02	7-8
# ::node	l	lay-01	8-9
# ::node	o	out	9-10
# ::node	c	counter	12-13
# ::node	t	top	13-14
# ::root	l	lay-01
# ::edge	pizzeria	ARG1-of	differ-02	p	d	
# ::edge	assortment	consist-of	pizzeria	a	p	
# ::edge	pizzeria	ARG0-of	have-03	p	h	
# ::edge	have-03	ARG1	ingredient	h	i	
# ::edge	ingredient	ARG1-of	differ-02	i	d2	
# ::edge	lay-01	ARG1	assortment	l	a	
# ::edge	lay-01	ARG2	out	l	o	
# ::edge	top	mod	counter	t	c	
# ::edge	lay-01	ARG2	top	l	t	
(l / lay-01
    :ARG1 (a / assortment
        :consist-of (p / pizzeria
            :ARG0-of (h / have-03
                :ARG1 (i / ingredient
                    :ARG1-of (d2 / differ-02)))
            :ARG1-of (d / differ-02)))
    :ARG2 (o / out)
    :ARG2 (t / top
        :mod (c / counter)))
