# ::tok Two cats find room to stretch out and rest themselves end to end , even on a cluttered desk .
# ::node	0	2	0-1
# ::node	c	cat	1-2
# ::node	f	find-01	2-3
# ::node	r2	room	3-4
# ::node	s	stretch-01	5-6
# ::node	o	out	6-7
# ::node	a	and	7-8
# ::node	r	rest-01	8-9
# ::node	e	end-01	10-11
# ::node	e2	end-01	12-13
# ::node	e3	even	14-15
# ::node	c2	clutch-01	17-18
# ::node	d	desk	18-19
# ::root	f	find-01
# ::edge	cat	quant	2	c	0	
# ::edge	find-01	ARG0	cat	f	c	
# ::edge	find-01	ARG1	room	f	r2	
# ::edge	stretch-01	ARG1	cat	s	c	
# ::edge	stretch-01	ARG0	cat	s	c	
# ::edge	stretch-01	ARG2	out	s	o	
# ::edge	and	op1	stretch-01	a	s	
# ::edge	find-01	purpose	and	f	a	
# ::edge	and	op2	rest-01	a	r	
# ::edge	rest-01	ARG1	cat	r	c	
# ::edge	rest-01	ARG0	cat	r	c	
# ::edge	rest-01	manner	end-01	r	e	
# ::edge	end-01	ARG2	end-01	e	e2	
# ::edge	desk	ARG1-of	clutch-01	d	c2	
# ::edge	desk	mod	even	d	e3	
# ::edge	rest-01	location	desk	r	d	
(f / find-01
    :purpose (a / and
        :op1 (s / stretch-01
            :ARG0 (c / cat
                :quant 2)
            :ARG1 c
            :ARG2 (o / out))
        :op2 (r / rest-01
            :ARG0 c
            :ARG1 c
            :location (d / desk
                :ARG1-of (c2 / clutch-01)
                :mod (e3 / even))
            :manner (e / end-01
                :ARG2 (e2 / end-01))))
    :ARG0 c
    :ARG1 (r2 / room))
