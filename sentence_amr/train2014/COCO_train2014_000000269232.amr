# ::tok Tall giraffe stretching up to eat leaves out of the tree
# ::node	t	tall	0-1
# ::node	g	giraffe	1-2
# ::node	s	stretch-01	2-3
# ::node	u	up	3-4
# ::node	e	eat-01	5-6
# ::node	l	leaf	6-7
# ::node	o	out-of	7-8
# ::node	t2	tree	10-11
# ::root	s	stretch-01
# ::edge	giraffe	mod	tall	g	t	
# ::edge	stretch-01	ARG1	giraffe	s	g	
# ::edge	stretch-01	mod	up	s	u	
# ::edge	stretch-01	purpose	eat-01	s	e	
# ::edge	eat-01	ARG0	giraffe	e	g	
# ::edge	eat-01	ARG1	leaf	e	l	
# ::edge	eat-01	direction	out-of	e	o	
# ::edge	out-of	op1	tree	o	t2	
(s / stretch-01
    :purpose (e / eat-01
        :ARG0 (g / giraffe
            :mod (t / tall))
        :ARG1 (l / leaf)
        :direction (o / out-of
            :op1 (t2 / tree)))
    :ARG1 g
    :mod (u / up))
