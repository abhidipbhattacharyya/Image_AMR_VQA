# ::tok A blue , red and yellow train traveling through a wide set of tracks .
# ::node	b	blue	1-2
# ::node	r	red-02	3-4
# ::node	a	and	4-5
# ::node	y	yellow-02	5-6
# ::node	t2	train	6-7
# ::node	t3	train	6-7
# ::node	t4	train	6-7
# ::node	t5	travel-01	7-8
# ::node	w	wide-02	10-11
# ::node	s	set	11-12
# ::node	t	track	13-14
# ::root	t5	travel-01
# ::edge	and	op1	train	a	t2	
# ::edge	train	mod	blue	t2	b	
# ::edge	and	op2	train	a	t3	
# ::edge	train	ARG1-of	red-02	t3	r	
# ::edge	train	ARG1-of	yellow-02	t4	y	
# ::edge	and	op3	train	a	t4	
# ::edge	travel-01	ARG0	and	t5	a	
# ::edge	set	ARG1-of	wide-02	s	w	
# ::edge	travel-01	path	set	t5	s	
# ::edge	set	consist-of	track	s	t	
(t5 / travel-01
    :ARG0 (a / and
        :op1 (t2 / train
            :mod (b / blue))
        :op2 (t3 / train
            :ARG1-of (r / red-02))
        :op3 (t4 / train
            :ARG1-of (y / yellow-02)))
    :path (s / set
        :ARG1-of (w / wide-02)
        :consist-of (t / track)))
