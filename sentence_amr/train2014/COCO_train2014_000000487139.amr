# ::tok two people riding an elephant and another elephant the has an empty seat on it
# ::node	0	2	0-1
# ::node	p	person	1-2
# ::node	r	ride-01	2-3
# ::node	r2	ride-01	2-3
# ::node	e	elephant	4-5
# ::node	a	and	5-6
# ::node	a2	another	6-7
# ::node	e2	elephant	7-8
# ::node	e3	empty-02	11-12
# ::node	s	seat	12-13
# ::root	a	and
# ::edge	person	quant	2	p	0	
# ::edge	ride-01	ARG0	person	r	p	
# ::edge	ride-01	ARG1	elephant	r	e	
# ::edge	and	op2	ride-01	a	r2	
# ::edge	and	op1	ride-01	a	r	
# ::edge	elephant	mod	another	e2	a2	
# ::edge	ride-01	ARG0	elephant	r2	e2	
# ::edge	seat	ARG1-of	empty-02	s	e3	
# ::edge	seat	location	elephant	s	e2	
# ::edge	ride-01	ARG1	seat	r2	s	
(a / and
    :op1 (r / ride-01
        :ARG0 (p / person
            :quant 2)
        :ARG1 (e / elephant))
    :op2 (r2 / ride-01
        :ARG0 (e2 / elephant
            :mod (a2 / another))
        :ARG1 (s / seat
            :ARG1-of (e3 / empty-02)
            :location e2)))
