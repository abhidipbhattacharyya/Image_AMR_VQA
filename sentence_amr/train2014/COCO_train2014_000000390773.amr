# ::tok Two skiers are going cross country in opposite directions , one taking the high road and other the low road .
# ::node	0	2	0-1
# ::node	p	person	1-2
# ::node	s	ski-01	1-2
# ::node	g	go-02	3-4
# ::node	c2	cross-02	4-5
# ::node	c	country	5-6
# ::node	o2	opposite-01	7-8
# ::node	d	direction	8-9
# ::node	o	one	10-11
# ::node	t	take-01	11-12
# ::node	t2	take-01	11-12
# ::node	h	high-02	13-14
# ::node	r	road	14-15
# ::node	r2	road	14-15
# ::node	a	and	15-16
# ::node	o3	other	16-17
# ::node	l	low-04	18-19
# ::root	g	go-02
# ::edge	person	quant	2	p	0	
# ::edge	person	ARG0-of	ski-01	p	s	
# ::edge	go-02	ARG0	person	g	p	
# ::edge	go-02	ARG0-of	cross-02	g	c2	
# ::edge	cross-02	ARG1	country	c2	c	
# ::edge	direction	ARG1-of	opposite-01	d	o2	
# ::edge	go-02	direction	direction	g	d	
# ::edge	take-01	ARG0	one	t	o	
# ::edge	road	ARG1-of	high-02	r	h	
# ::edge	take-01	ARG1	road	t	r	
# ::edge	take-01	ARG1	road	t2	r2	
# ::edge	and	op2	take-01	a	t2	
# ::edge	and	op1	take-01	a	t	
# ::edge	go-02	example	and	g	a	
# ::edge	road	ARG0	other	r2	o3	
# ::edge	road	ARG1-of	low-04	r2	l	
(g / go-02
    :ARG0 (p / person
        :quant 2
        :ARG0-of (s / ski-01))
    :ARG0-of (c2 / cross-02
        :ARG1 (c / country))
    :direction (d / direction
        :ARG1-of (o2 / opposite-01))
    :example (a / and
        :op1 (t / take-01
            :ARG0 (o / one)
            :ARG1 (r / road
                :ARG1-of (h / high-02)))
        :op2 (t2 / take-01
            :ARG1 (r2 / road
                :ARG0 (o3 / other)
                :ARG1-of (l / low-04)))))
