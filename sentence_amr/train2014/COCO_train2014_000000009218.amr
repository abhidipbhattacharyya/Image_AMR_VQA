# ::tok Side view of two standing elephants with a man on neck of one , both elephants with trunks to ground , in front of two long logs outside with hut and trees behind .
# ::node	s	side	0-1
# ::node	v	view-01	1-2
# ::node	0	2	3-4
# ::node	s2	stand-01	4-5
# ::node	e	elephant	5-6
# ::node	m	man	8-9
# ::node	n	neck	10-11
# ::node	o	one	12-13
# ::node	h	have-03	16-17
# ::node	t	trample-01	17-18
# ::node	g	ground	19-20
# ::node	i	in-front-of	22-23
# ::node	1	2	24-25
# ::node	l	long-03	25-26
# ::node	t2	tree	26-27
# ::node	o2	outside	27-28
# ::node	h2	have-03	28-29
# ::node	h3	hut	29-30
# ::node	a	and	30-31
# ::node	t3	tree	31-32
# ::node	b	behind	32-33
# ::root	v	view-01
# ::edge	view-01	location	side	v	s	
# ::edge	elephant	ARG1-of	stand-01	e	s2	
# ::edge	elephant	quant	2	e	0	
# ::edge	view-01	ARG1	elephant	v	e	
# ::edge	elephant	location-of	man	e	m	
# ::edge	man	location	neck	m	n	
# ::edge	neck	part-of	one	n	o	
# ::edge	elephant	ARG0-of	have-03	e	h	
# ::edge	have-03	ARG1	trample-01	h	t	
# ::edge	trample-01	ARG0	elephant	t	e	
# ::edge	trample-01	location	ground	t	g	
# ::edge	elephant	location	in-front-of	e	i	
# ::edge	tree	ARG1-of	long-03	t2	l	
# ::edge	tree	quant	2	t2	1	
# ::edge	in-front-of	op1	tree	i	t2	
# ::edge	tree	location	outside	t2	o2	
# ::edge	tree	ARG0-of	have-03	t2	h2	
# ::edge	and	op1	hut	a	h3	
# ::edge	have-03	ARG1	and	h2	a	
# ::edge	and	op2	tree	a	t3	
# ::edge	and	location	behind	a	b	
(v / view-01
    :ARG1 (e / elephant
        :quant 2
        :ARG0-of (h / have-03
            :ARG1 (t / trample-01
                :ARG0 e
                :location (g / ground)))
        :ARG1-of (s2 / stand-01)
        :location (i / in-front-of
            :op1 (t2 / tree
                :quant 2
                :ARG0-of (h2 / have-03
                    :ARG1 (a / and
                        :location (b / behind)
                        :op1 (h3 / hut)
                        :op2 (t3 / tree)))
                :ARG1-of (l / long-03)
                :location (o2 / outside)))
        :location-of (m / man
            :location (n / neck
                :part-of (o / one))))
    :location (s / side))
