# ::tok A view inside a store through a glass window of an employee working .
# ::node	v	view-01	1-2
# ::node	i	inside	2-3
# ::node	s	store	4-5
# ::node	t	through	5-6
# ::node	g	glass	7-8
# ::node	w	window	8-9
# ::node	p	person	11-12
# ::node	e	employ-01	11-12
# ::node	w2	work-01	12-13
# ::root	v	view-01
# ::edge	view-01	ARG1	inside	v	i	
# ::edge	inside	op1	store	i	s	
# ::edge	view-01	path	through	v	t	
# ::edge	window	consist-of	glass	w	g	
# ::edge	through	op1	window	t	w	
# ::edge	window	part-of	person	w	p	
# ::edge	person	ARG1-of	employ-01	p	e	
# ::edge	person	ARG0-of	work-01	p	w2	
(v / view-01
    :ARG1 (i / inside
        :op1 (s / store))
    :path (t / through
        :op1 (w / window
            :consist-of (g / glass)
            :part-of (p / person
                :ARG0-of (w2 / work-01)
                :ARG1-of (e / employ-01)))))
