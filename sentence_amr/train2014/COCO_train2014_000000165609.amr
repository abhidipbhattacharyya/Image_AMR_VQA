# ::tok A highway scene shows an oncoming car on one side of the line and the back of a truck with a gated cage holding what appears to be several wild cats , possibly tigers , in it , on the other side .
# ::node	h2	highway	1-2
# ::node	s	scene	2-3
# ::node	s3	show-01	3-4
# ::node	a3	approach-01	5-6
# ::node	c2	car	6-7
# ::node	0	1	8-9
# ::node	s4	side	9-10
# ::node	l	line	12-13
# ::node	a	and	13-14
# ::node	b	back	15-16
# ::node	t3	truck	18-19
# ::node	h	have-03	19-20
# ::node	g	gate-01	21-22
# ::node	c	cage	22-23
# ::node	h3	hold-01	23-24
# ::node	t	thing	24-25
# ::node	a2	appear-02	25-26
# ::node	s2	several	28-29
# ::node	w	wild	29-30
# ::node	c3	cat	30-31
# ::node	p	possible-01	32-33
# ::node	t2	tiger	33-34
# ::node	o	other	40-41
# ::node	s5	side	41-42
# ::root	s3	show-01
# ::edge	scene	mod	highway	s	h2	
# ::edge	show-01	ARG0	scene	s3	s	
# ::edge	car	ARG1-of	approach-01	c2	a3	
# ::edge	side	quant	1	s4	0	
# ::edge	car	location	side	c2	s4	
# ::edge	side	part-of	line	s4	l	
# ::edge	and	op1	car	a	c2	
# ::edge	show-01	ARG1	and	s3	a	
# ::edge	and	op2	back	a	b	
# ::edge	back	part-of	truck	b	t3	
# ::edge	truck	ARG0-of	have-03	t3	h	
# ::edge	cage	ARG1-of	gate-01	c	g	
# ::edge	have-03	ARG1	cage	h	c	
# ::edge	cage	ARG0-of	hold-01	c	h3	
# ::edge	hold-01	ARG1	thing	h3	t	
# ::edge	thing	ARG1-of	appear-02	t	a2	
# ::edge	cat	mod	wild	c3	w	
# ::edge	cat	quant	several	c3	s2	
# ::edge	thing	domain	cat	t	c3	
# ::edge	tiger	ARG1-of	possible-01	t2	p	
# ::edge	thing	mod	tiger	t	t2	
# ::edge	side	mod	other	s5	o	
# ::edge	back	location	side	b	s5	
(s3 / show-01
    :ARG0 (s / scene
        :mod (h2 / highway))
    :ARG1 (a / and
        :op1 (c2 / car
            :ARG1-of (a3 / approach-01)
            :location (s4 / side
                :quant 1
                :part-of (l / line)))
        :op2 (b / back
            :location (s5 / side
                :mod (o / other))
            :part-of (t3 / truck
                :ARG0-of (h / have-03
                    :ARG1 (c / cage
                        :ARG0-of (h3 / hold-01
                            :ARG1 (t / thing
                                :ARG1-of (a2 / appear-02)
                                :domain (c3 / cat
                                    :quant (s2 / several)
                                    :mod (w / wild))
                                :mod (t2 / tiger
                                    :ARG1-of (p / possible-01))))
                        :ARG1-of (g / gate-01)))))))
