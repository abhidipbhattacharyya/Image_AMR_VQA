# ::tok A black and white cat looking at its reflection in the mirror .
# ::node	b	black-04	1-2
# ::node	w	white-03	3-4
# ::node	c	cat	4-5
# ::node	l	look-01	5-6
# ::node	r	reflect-01	8-9
# ::node	m	mirror	11-12
# ::root	c	cat
# ::edge	cat	ARG1-of	white-03	c	w	
# ::edge	cat	ARG1-of	black-04	c	b	
# ::edge	cat	ARG0-of	look-01	c	l	
# ::edge	look-01	ARG1	reflect-01	l	r	
# ::edge	reflect-01	ARG1	cat	r	c	
# ::edge	reflect-01	ARG2	mirror	r	m	
(c / cat
    :ARG0-of (l / look-01
        :ARG1 (r / reflect-01
            :ARG1 c
            :ARG2 (m / mirror)))
    :ARG1-of (w / white-03)
    :ARG1-of (b / black-04))
