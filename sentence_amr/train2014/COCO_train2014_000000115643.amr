# ::tok a train making it 's way down a track with smoke coming out of the stack
# ::node	t2	train	1-2
# ::node	d	down	6-7
# ::node	t	track	8-9
# ::node	h	have-03	9-10
# ::node	s	smoke	10-11
# ::node	c	come-out-09	11-12
# ::node	s2	stack	15-16
# ::root	t2	train
# ::edge	train	path	down	t2	d	
# ::edge	down	op1	track	d	t	
# ::edge	train	ARG0-of	have-03	t2	h	
# ::edge	have-03	ARG1	smoke	h	s	
# ::edge	smoke	ARG1-of	come-out-09	s	c	
# ::edge	come-out-09	ARG0	stack	c	s2	
(t2 / train
    :ARG0-of (h / have-03
        :ARG1 (s / smoke
            :ARG1-of (c / come-out-09
                :ARG0 (s2 / stack))))
    :path (d / down
        :op1 (t / track)))
