# ::tok A slice of cake on a plate with the rest of the cake sitting behind it .
# ::node	s2	slice	1-2
# ::node	c	cake	3-4
# ::node	p	plate	6-7
# ::node	h	have-03	7-8
# ::node	r	rest	9-10
# ::node	c2	cake	12-13
# ::node	s	sit-01	13-14
# ::node	b	behind	14-15
# ::root	h	have-03
# ::edge	slice	consist-of	cake	s2	c	
# ::edge	slice	location	plate	s2	p	
# ::edge	have-03	ARG0	slice	h	s2	
# ::edge	cake	mod	rest	c2	r	
# ::edge	sit-01	ARG1	cake	s	c2	
# ::edge	have-03	ARG1	sit-01	h	s	
# ::edge	sit-01	ARG2	behind	s	b	
# ::edge	behind	op1	plate	b	p	
(h / have-03
    :ARG0 (s2 / slice
        :consist-of (c / cake)
        :location (p / plate))
    :ARG1 (s / sit-01
        :ARG1 (c2 / cake
            :mod (r / rest))
        :ARG2 (b / behind
            :op1 p)))
