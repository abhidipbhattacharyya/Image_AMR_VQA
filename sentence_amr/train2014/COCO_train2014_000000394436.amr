# ::tok A train stopped on the tracks with it 's conductor looking at the camera .
# ::node	t2	train	1-2
# ::node	s	stop-01	2-3
# ::node	t	track	5-6
# ::node	p	person	9-10
# ::node	c2	conduct-01	9-10
# ::node	l	look-01	10-11
# ::node	c	camera	13-14
# ::root	s	stop-01
# ::edge	stop-01	ARG1	train	s	t2	
# ::edge	stop-01	location	track	s	t	
# ::edge	person	ARG0-of	conduct-01	p	c2	
# ::edge	conduct-01	ARG1	train	c2	t2	
# ::edge	look-01	ARG0	person	l	p	
# ::edge	stop-01	time-of	look-01	s	l	
# ::edge	look-01	ARG1	camera	l	c	
(s / stop-01
    :ARG1 (t2 / train)
    :location (t / track)
    :time-of (l / look-01
        :ARG0 (p / person
            :ARG0-of (c2 / conduct-01
                :ARG1 t2))
        :ARG1 (c / camera)))
