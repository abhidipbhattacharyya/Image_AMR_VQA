# ::tok A blue , yellow and gray train riding on a track near a brick building .
# ::node	b	blue	1-2
# ::node	y	yellow-02	3-4
# ::node	a	and	4-5
# ::node	g	gray-02	5-6
# ::node	t2	train	6-7
# ::node	t3	train	6-7
# ::node	t4	train	6-7
# ::node	r	ride-01	7-8
# ::node	t	track	10-11
# ::node	n	near-02	11-12
# ::node	b2	brick	13-14
# ::node	b3	building	14-15
# ::root	r	ride-01
# ::edge	and	op1	train	a	t2	
# ::edge	train	mod	blue	t2	b	
# ::edge	and	op2	train	a	t3	
# ::edge	train	ARG1-of	yellow-02	t3	y	
# ::edge	train	ARG1-of	gray-02	t4	g	
# ::edge	and	op3	train	a	t4	
# ::edge	ride-01	ARG0	and	r	a	
# ::edge	ride-01	ARG1	track	r	t	
# ::edge	track	ARG1-of	near-02	t	n	
# ::edge	building	consist-of	brick	b3	b2	
# ::edge	near-02	ARG2	building	n	b3	
(r / ride-01
    :ARG0 (a / and
        :op1 (t2 / train
            :mod (b / blue))
        :op2 (t3 / train
            :ARG1-of (y / yellow-02))
        :op3 (t4 / train
            :ARG1-of (g / gray-02)))
    :ARG1 (t / track
        :ARG1-of (n / near-02
            :ARG2 (b3 / building
                :consist-of (b2 / brick)))))
