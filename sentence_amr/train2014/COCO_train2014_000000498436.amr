# ::tok Pizza on plates and empty glasses are on a table .
# ::node	f	food-dish	0-1
# ::node	p	plate	2-3
# ::node	a	and	3-4
# ::node	e	empty-02	4-5
# ::node	g	glass	5-6
# ::node	b	be-located-at-91	7-8
# ::node	t	table	9-10
# ::root	b	be-located-at-91
# ::edge	food-dish	location	plate	f	p	
# ::edge	and	op1	food-dish	a	f	
# ::edge	glass	ARG1-of	empty-02	g	e	
# ::edge	and	op2	glass	a	g	
# ::edge	be-located-at-91	ARG1	and	b	a	
# ::edge	be-located-at-91	ARG2	table	b	t	
(b / be-located-at-91
    :ARG1 (a / and
        :op1 (f / food-dish
            :location (p / plate))
        :op2 (g / glass
            :ARG1-of (e / empty-02)))
    :ARG2 (t / table))
