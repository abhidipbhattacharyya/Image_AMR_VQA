# ::tok A helicopter is turned on it 's side while in the air .
# ::node	h	helicopter	1-2
# ::node	t	turn-01	3-4
# ::node	s	side	7-8
# ::node	b	be-located-at-91	9-10
# ::node	a	air	11-12
# ::root	t	turn-01
# ::edge	turn-01	ARG1	helicopter	t	h	
# ::edge	turn-01	direction	side	t	s	
# ::edge	side	poss	helicopter	s	h	
# ::edge	turn-01	time	be-located-at-91	t	b	
# ::edge	be-located-at-91	ARG1	helicopter	b	h	
# ::edge	be-located-at-91	ARG2	air	b	a	
(t / turn-01
    :ARG1 (h / helicopter)
    :direction (s / side
        :poss h)
    :time (b / be-located-at-91
        :ARG1 h
        :ARG2 (a / air)))
