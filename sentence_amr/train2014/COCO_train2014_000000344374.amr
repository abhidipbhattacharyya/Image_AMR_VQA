# ::tok A door at the top of two sets of stairs that lead to it .
# ::node	d	door	1-2
# ::node	t	top	4-5
# ::node	0	2	6-7
# ::node	s	set	7-8
# ::node	s2	stair	9-10
# ::node	l	lead-01	11-12
# ::root	d	door
# ::edge	door	location	top	d	t	
# ::edge	set	quant	2	s	0	
# ::edge	stair	consist-of	set	s2	s	
# ::edge	top	part-of	stair	t	s2	
# ::edge	stair	ARG0-of	lead-01	s2	l	
# ::edge	lead-01	ARG4	door	l	d	
(d / door
    :location (t / top
        :part-of (s2 / stair
            :ARG0-of (l / lead-01
                :ARG4 d)
            :consist-of (s / set
                :quant 2))))
