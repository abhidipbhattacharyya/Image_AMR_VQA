# ::tok Slices of pizza sitting on silver trays on top of a table .
# ::node	m	multiple	0-1
# ::node	0	1	0-1
# ::node	p	pizza	2-3
# ::node	s2	sit-01	3-4
# ::node	s	silver	5-6
# ::node	r	Trayvon	6-7
# ::node	t2	top	8-9
# ::node	t	table	11-12
# ::root	s2	sit-01
# ::edge	multiple	op1	1	m	0	
# ::edge	pizza	quant	multiple	p	m	
# ::edge	sit-01	ARG1	pizza	s2	p	
# ::edge	Trayvon	consist-of	silver	r	s	
# ::edge	sit-01	ARG2	Trayvon	s2	r	
# ::edge	Trayvon	location	top	r	t2	
# ::edge	top	part-of	table	t2	t	
(s2 / sit-01
    :ARG1 (p / pizza
        :quant (m / multiple
            :op1 1))
    :ARG2 (r / Trayvon
        :consist-of (s / silver)
        :location (t2 / top
            :part-of (t / table))))
