# ::tok An outdoor area that has high fences , with two giraffe inside the fence area near trees and a feeding basket hanging up high .
# ::node	o	outdoor	1-2
# ::node	a2	area	2-3
# ::node	h2	have-03	4-5
# ::node	h4	high-02	5-6
# ::node	f2	fence	6-7
# ::node	h3	have-03	8-9
# ::node	0	2	9-10
# ::node	g	giraffe	10-11
# ::node	i	inside	11-12
# ::node	n	near-02	15-16
# ::node	t	tree	16-17
# ::node	a	and	17-18
# ::node	f	feed-01	19-20
# ::node	b	basket	20-21
# ::node	h	hang-01	21-22
# ::node	u	up	22-23
# ::node	h5	high-02	23-24
# ::root	a2	area
# ::edge	area	location	outdoor	a2	o	
# ::edge	area	ARG0-of	have-03	a2	h2	
# ::edge	fence	ARG1-of	high-02	f2	h4	
# ::edge	have-03	ARG1	fence	h2	f2	
# ::edge	area	ARG0-of	have-03	a2	h3	
# ::edge	giraffe	quant	2	g	0	
# ::edge	giraffe	location	inside	g	i	
# ::edge	inside	op1	area	i	a2	
# ::edge	inside	ARG1-of	near-02	i	n	
# ::edge	near-02	ARG2	tree	n	t	
# ::edge	and	op1	giraffe	a	g	
# ::edge	have-03	ARG1	and	h3	a	
# ::edge	basket	purpose	feed-01	b	f	
# ::edge	and	op2	basket	a	b	
# ::edge	basket	ARG1-of	hang-01	b	h	
# ::edge	hang-01	direction	up	h	u	
# ::edge	hang-01	ARG2	high-02	h	h5	
(a2 / area
    :ARG0-of (h2 / have-03
        :ARG1 (f2 / fence
            :ARG1-of (h4 / high-02)))
    :ARG0-of (h3 / have-03
        :ARG1 (a / and
            :op1 (g / giraffe
                :quant 2
                :location (i / inside
                    :ARG1-of (n / near-02
                        :ARG2 (t / tree))
                    :op1 a2))
            :op2 (b / basket
                :purpose (f / feed-01)
                :ARG1-of (h / hang-01
                    :ARG2 (h5 / high-02)
                    :direction (u / up)))))
    :location (o / outdoor))
