# ::tok A train curves around a mountain , overlooking a valley with a river and many trees .
# ::node	t	train	1-2
# ::node	c	curve-01	2-3
# ::node	a2	around	3-4
# ::node	m2	mountain	5-6
# ::node	o	overlook-02	7-8
# ::node	v	valley	9-10
# ::node	h	have-03	10-11
# ::node	r	river	12-13
# ::node	a	and	13-14
# ::node	m	many	14-15
# ::node	t2	tree	15-16
# ::root	c	curve-01
# ::edge	curve-01	ARG1	train	c	t	
# ::edge	curve-01	path	around	c	a2	
# ::edge	around	op1	mountain	a2	m2	
# ::edge	train	ARG0-of	overlook-02	t	o	
# ::edge	overlook-02	ARG1	valley	o	v	
# ::edge	valley	ARG0-of	have-03	v	h	
# ::edge	and	op1	river	a	r	
# ::edge	have-03	ARG1	and	h	a	
# ::edge	tree	quant	many	t2	m	
# ::edge	and	op2	tree	a	t2	
(c / curve-01
    :ARG1 (t / train
        :ARG0-of (o / overlook-02
            :ARG1 (v / valley
                :ARG0-of (h / have-03
                    :ARG1 (a / and
                        :op1 (r / river)
                        :op2 (t2 / tree
                            :quant (m / many)))))))
    :path (a2 / around
        :op1 (m2 / mountain)))
