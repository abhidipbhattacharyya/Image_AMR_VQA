# ::tok Two suitcases are stacked outside on a third suitcase that is upside down .
# ::node	0	2	0-1
# ::node	s2	suitcase	1-2
# ::node	s	stack-01	3-4
# ::node	o2	outside	4-5
# ::node	o	ordinal-entity	7-8
# ::node	1	3	7-8
# ::node	s3	suitcase	8-9
# ::node	u	upside	11-12
# ::node	d	down-03	12-13
# ::root	s	stack-01
# ::edge	suitcase	quant	2	s2	0	
# ::edge	stack-01	ARG1	suitcase	s	s2	
# ::edge	stack-01	location	outside	s	o2	
# ::edge	ordinal-entity	value	3	o	1	
# ::edge	suitcase	ord	ordinal-entity	s3	o	
# ::edge	stack-01	ARG2	suitcase	s	s3	
# ::edge	suitcase	direction	upside	s3	u	
# ::edge	upside	op1	down-03	u	d	
(s / stack-01
    :ARG1 (s2 / suitcase
        :quant 2)
    :ARG2 (s3 / suitcase
        :direction (u / upside
            :op1 (d / down-03))
        :ord (o / ordinal-entity
            :value 3))
    :location (o2 / outside))
