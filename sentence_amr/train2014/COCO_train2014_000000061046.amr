# ::tok He must be an expert skateboarder to be riding over that bench .
# ::node	h	he	0-1
# ::node	o	obligate-01	1-2
# ::node	e	expert-01	4-5
# ::node	p	person	5-6
# ::node	s	skate-01	5-6
# ::node	r	ride-01	8-9
# ::node	o2	over	9-10
# ::node	t	that	10-11
# ::node	b	bench	11-12
# ::root	o	obligate-01
# ::edge	person	ARG1-of	expert-01	p	e	
# ::edge	obligate-01	ARG1	person	o	p	
# ::edge	person	domain	he	p	h	
# ::edge	person	ARG0-of	skate-01	p	s	
# ::edge	obligate-01	ARG2	ride-01	o	r	
# ::edge	ride-01	ARG0	he	r	h	
# ::edge	ride-01	ARG1	over	r	o2	
# ::edge	bench	mod	that	b	t	
# ::edge	over	op1	bench	o2	b	
(o / obligate-01
    :ARG1 (p / person
        :ARG0-of (s / skate-01)
        :ARG1-of (e / expert-01)
        :domain (h / he))
    :ARG2 (r / ride-01
        :ARG0 h
        :ARG1 (o2 / over
            :op1 (b / bench
                :mod (t / that)))))
