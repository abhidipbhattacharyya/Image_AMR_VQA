# ::tok A giraffe with a long neck extends it fully and looks strait ahead .
# ::node	g	giraffe	1-2
# ::node	l	long-03	4-5
# ::node	n	neck	5-6
# ::node	e	extend-01	6-7
# ::node	f	full-09	8-9
# ::node	a2	and	9-10
# ::node	l2	look-01	10-11
# ::node	s	strait	11-12
# ::node	a	ahead	12-13
# ::root	a2	and
# ::edge	neck	ARG1-of	long-03	n	l	
# ::edge	giraffe	part	neck	g	n	
# ::edge	extend-01	ARG1	neck	e	n	
# ::edge	extend-01	ARG0	giraffe	e	g	
# ::edge	extend-01	extent	full-09	e	f	
# ::edge	and	op1	extend-01	a2	e	
# ::edge	and	op2	look-01	a2	l2	
# ::edge	look-01	ARG0	giraffe	l2	g	
# ::edge	ahead	mod	strait	a	s	
# ::edge	look-01	ARG1	ahead	l2	a	
(a2 / and
    :op1 (e / extend-01
        :ARG0 (g / giraffe
            :part (n / neck
                :ARG1-of (l / long-03)))
        :ARG1 n
        :extent (f / full-09))
    :op2 (l2 / look-01
        :ARG0 g
        :ARG1 (a / ahead
            :mod (s / strait))))
