# ::tok A older looking red train is traveling down the tracks .
# ::node	h	have-degree-91	1-2
# ::node	o	old	1-2
# ::node	m	more	1-2
# ::node	l	look-02	2-3
# ::node	r	red-02	3-4
# ::node	t2	train	4-5
# ::node	t3	travel-01	6-7
# ::node	d	down	7-8
# ::node	t	track	9-10
# ::root	t3	travel-01
# ::edge	have-degree-91	ARG2	old	h	o	
# ::edge	have-degree-91	ARG3	more	h	m	
# ::edge	look-02	ARG1	have-degree-91	l	h	
# ::edge	train	ARG1-of	red-02	t2	r	
# ::edge	train	ARG0-of	look-02	t2	l	
# ::edge	travel-01	ARG0	train	t3	t2	
# ::edge	travel-01	direction	down	t3	d	
# ::edge	travel-01	ARG1	track	t3	t	
(t3 / travel-01
    :ARG0 (t2 / train
        :ARG0-of (l / look-02
            :ARG1 (h / have-degree-91
                :ARG2 (o / old)
                :ARG3 (m / more)))
        :ARG1-of (r / red-02))
    :ARG1 (t / track)
    :direction (d / down))
