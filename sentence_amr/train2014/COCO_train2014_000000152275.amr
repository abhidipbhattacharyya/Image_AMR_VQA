# ::tok a blue and white boat is docked and some yellow green and red trees
# ::node	b	blue	1-2
# ::node	a	and	2-3
# ::node	w	white-03	3-4
# ::node	b2	boat	4-5
# ::node	b3	boat	4-5
# ::node	d	dock-01	6-7
# ::node	a2	and	7-8
# ::node	s	some	8-9
# ::node	y	yellow-02	9-10
# ::node	g	green-02	10-11
# ::node	a3	and	11-12
# ::node	r	red-02	12-13
# ::node	t	tree	13-14
# ::node	t2	tree	13-14
# ::root	a2	and
# ::edge	and	op1	boat	a	b2	
# ::edge	boat	mod	blue	b2	b	
# ::edge	boat	ARG1-of	white-03	b3	w	
# ::edge	and	op2	boat	a	b3	
# ::edge	dock-01	ARG1	and	d	a	
# ::edge	and	op1	dock-01	a2	d	
# ::edge	and	op2	and	a2	a3	
# ::edge	and	op1	tree	a3	t	
# ::edge	tree	ARG1-of	green-02	t	g	
# ::edge	tree	ARG1-of	yellow-02	t	y	
# ::edge	tree	quant	some	t	s	
# ::edge	and	op2	tree	a3	t2	
# ::edge	tree	ARG1-of	green-02	t2	g	
# ::edge	tree	ARG1-of	yellow-02	t2	y	
# ::edge	tree	quant	some	t2	s	
# ::edge	and	rel	red-02	a2	r	
(a2 / and
    :op1 (d / dock-01
        :ARG1 (a / and
            :op1 (b2 / boat
                :mod (b / blue))
            :op2 (b3 / boat
                :ARG1-of (w / white-03))))
    :op2 (a3 / and
        :op1 (t / tree
            :quant (s / some)
            :ARG1-of (g / green-02)
            :ARG1-of (y / yellow-02))
        :op2 (t2 / tree
            :quant s
            :ARG1-of g
            :ARG1-of y))
    :rel (r / red-02))
