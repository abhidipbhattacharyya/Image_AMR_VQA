# ::tok A person on a yellow and black snowboard has caught some air .
# ::node	p	person	1-2
# ::node	y	yellow-02	4-5
# ::node	a2	and	5-6
# ::node	b	black-04	6-7
# ::node	s	snowboard	7-8
# ::node	c	catch-01	9-10
# ::node	s2	some	10-11
# ::node	a	air	11-12
# ::root	c	catch-01
# ::edge	and	op1	yellow-02	a2	y	
# ::edge	and	op2	black-04	a2	b	
# ::edge	and	ARG1	snowboard	a2	s	
# ::edge	snowboard	ARG1-of	yellow-02	s	y	
# ::edge	person	part	snowboard	p	s	
# ::edge	catch-01	ARG0	person	c	p	
# ::edge	air	quant	some	a	s2	
# ::edge	catch-01	ARG1	air	c	a	
# ::edge	catch-01	rel	and	c	a2	
(c / catch-01
    :ARG0 (p / person
        :part (s / snowboard
            :ARG1-of (y / yellow-02)))
    :ARG1 (a / air
        :quant (s2 / some))
    :rel (a2 / and
        :ARG1 s
        :op1 y
        :op2 (b / black-04)))
