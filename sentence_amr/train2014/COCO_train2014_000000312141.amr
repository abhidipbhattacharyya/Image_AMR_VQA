# ::tok Three blue suitcases stacked on top of each other and three smaller bags on top of each other in a corner .
# ::node	0	3	0-1
# ::node	b3	blue	1-2
# ::node	s3	suitcase	2-3
# ::node	s2	stack-01	3-4
# ::node	t	top	5-6
# ::node	e	each	7-8
# ::node	a	and	9-10
# ::node	1	3	10-11
# ::node	h	have-degree-91	11-12
# ::node	s	small	11-12
# ::node	m	more	11-12
# ::node	b	bag	12-13
# ::node	b2	be-located-at-91	13-14
# ::node	t2	top	14-15
# ::node	c	corner	20-21
# ::root	a	and
# ::edge	suitcase	mod	blue	s3	b3	
# ::edge	suitcase	quant	3	s3	0	
# ::edge	stack-01	ARG1	suitcase	s2	s3	
# ::edge	stack-01	ARG2	top	s2	t	
# ::edge	top	op1	each	t	e	
# ::edge	and	op1	stack-01	a	s2	
# ::edge	have-degree-91	ARG2	small	h	s	
# ::edge	have-degree-91	ARG3	more	h	m	
# ::edge	bag	ARG1-of	have-degree-91	b	h	
# ::edge	bag	quant	3	b	1	
# ::edge	be-located-at-91	ARG1	bag	b2	b	
# ::edge	and	op2	be-located-at-91	a	b2	
# ::edge	be-located-at-91	ARG2	top	b2	t2	
# ::edge	top	op1	top	t2	t	
# ::edge	be-located-at-91	location	corner	b2	c	
(a / and
    :op1 (s2 / stack-01
        :ARG1 (s3 / suitcase
            :quant 3
            :mod (b3 / blue))
        :ARG2 (t / top
            :op1 (e / each)))
    :op2 (b2 / be-located-at-91
        :ARG1 (b / bag
            :quant 3
            :ARG1-of (h / have-degree-91
                :ARG2 (s / small)
                :ARG3 (m / more)))
        :ARG2 (t2 / top
            :op1 t)
        :location (c / corner)))
