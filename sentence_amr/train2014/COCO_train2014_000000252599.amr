# ::tok There are several ducks and swans swimming in the water .
# ::node	s	several	2-3
# ::node	s2	several	2-3
# ::node	d	duck	3-4
# ::node	a	and	4-5
# ::node	w	Switzerland	5-6
# ::node	s3	swim-01	6-7
# ::node	w2	water	9-10
# ::root	s3	swim-01
# ::edge	duck	quant	several	d	s	
# ::edge	and	op1	duck	a	d	
# ::edge	and	op2	Switzerland	a	w	
# ::edge	Switzerland	quant	several	w	s2	
# ::edge	swim-01	ARG0	and	s3	a	
# ::edge	swim-01	ARG1	water	s3	w2	
(s3 / swim-01
    :ARG0 (a / and
        :op1 (d / duck
            :quant (s / several))
        :op2 (w / Switzerland
            :quant (s2 / several)))
    :ARG1 (w2 / water))
