# ::tok Back diagonal view of a girl and back view of a boy , both on skis standing in snow , with a few trees , a shed , and a small building in background .
# ::node	b	back	0-1
# ::node	d	diagonal	1-2
# ::node	v	view-01	2-3
# ::node	g	girl	5-6
# ::node	a	and	6-7
# ::node	b2	back	7-8
# ::node	v2	view-01	8-9
# ::node	b5	boy	11-12
# ::node	b4	both	13-14
# ::node	s2	ski-01	15-16
# ::node	s5	stand-01	16-17
# ::node	h	have-03	17-18
# ::node	s4	snow	18-19
# ::node	h2	have-03	20-21
# ::node	f	few	22-23
# ::node	t	tree	23-24
# ::node	s	shed	26-27
# ::node	a2	and	28-29
# ::node	s3	small	30-31
# ::node	b6	building	31-32
# ::node	b3	background	33-34
# ::root	a	and
# ::edge	view-01	mod	diagonal	v	d	
# ::edge	view-01	direction	back	v	b	
# ::edge	view-01	ARG1	girl	v	g	
# ::edge	and	op1	view-01	a	v	
# ::edge	view-01	direction	back	v2	b2	
# ::edge	and	op2	view-01	a	v2	
# ::edge	view-01	ARG1	boy	v2	b5	
# ::edge	boy	ARG1-of	stand-01	b5	s5	
# ::edge	stand-01	ARG0-of	have-03	s5	h	
# ::edge	have-03	ARG1	ski-01	h	s2	
# ::edge	stand-01	ARG2	snow	s5	s4	
# ::edge	and	ARG0-of	have-03	a	h2	
# ::edge	tree	quant	few	t	f	
# ::edge	and	op2	shed	a2	s	
# ::edge	and	op1	tree	a2	t	
# ::edge	have-03	ARG1	and	h2	a2	
# ::edge	building	mod	small	b6	s3	
# ::edge	and	op3	building	a2	b6	
# ::edge	building	location	background	b6	b3	
# ::edge	and	rel	both	a	b4	
(a / and
    :ARG0-of (h2 / have-03
        :ARG1 (a2 / and
            :op1 (t / tree
                :quant (f / few))
            :op2 (s / shed)
            :op3 (b6 / building
                :location (b3 / background)
                :mod (s3 / small))))
    :op1 (v / view-01
        :ARG1 (g / girl)
        :direction (b / back)
        :mod (d / diagonal))
    :op2 (v2 / view-01
        :ARG1 (b5 / boy
            :ARG1-of (s5 / stand-01
                :ARG0-of (h / have-03
                    :ARG1 (s2 / ski-01))
                :ARG2 (s4 / snow)))
        :direction (b2 / back))
    :rel (b4 / both))
