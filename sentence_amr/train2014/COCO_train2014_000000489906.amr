# ::tok A horse bending it 's neck to eat hay in a caged in area .
# ::node	h2	horse	1-2
# ::node	b	bend-01	2-3
# ::node	n	neck	5-6
# ::node	e	eat-01	7-8
# ::node	h	hay	8-9
# ::node	c	confine-01	11-12
# ::node	a	area	13-14
# ::root	b	bend-01
# ::edge	bend-01	ARG0	horse	b	h2	
# ::edge	bend-01	ARG1	neck	b	n	
# ::edge	horse	part	neck	h2	n	
# ::edge	bend-01	purpose	eat-01	b	e	
# ::edge	eat-01	ARG0	horse	e	h2	
# ::edge	eat-01	ARG1	hay	e	h	
# ::edge	confine-01	ARG1	horse	c	h2	
# ::edge	area	ARG2-of	confine-01	a	c	
# ::edge	bend-01	location	area	b	a	
(b / bend-01
    :purpose (e / eat-01
        :ARG0 (h2 / horse
            :part (n / neck))
        :ARG1 (h / hay))
    :ARG0 h2
    :ARG1 n
    :location (a / area
        :ARG2-of (c / confine-01
            :ARG1 h2)))
