# ::tok Two black and white zebra 's eating grass with a castle in background .
# ::node	0	2	0-1
# ::node	b2	black-04	1-2
# ::node	a	and	2-3
# ::node	w	white-03	3-4
# ::node	z	zebra	4-5
# ::node	z2	zebra	4-5
# ::node	e	eat-01	6-7
# ::node	g	grass	7-8
# ::node	c	castle	10-11
# ::node	b	background	12-13
# ::root	a	and
# ::edge	and	op1	zebra	a	z	
# ::edge	zebra	ARG1-of	black-04	z	b2	
# ::edge	zebra	quant	2	z	0	
# ::edge	zebra	ARG1-of	white-03	z2	w	
# ::edge	and	op2	zebra	a	z2	
# ::edge	and	ARG0-of	eat-01	a	e	
# ::edge	eat-01	ARG1	grass	e	g	
# ::edge	and	prep-with	castle	a	c	
# ::edge	castle	location	background	c	b	
(a / and
    :ARG0-of (e / eat-01
        :ARG1 (g / grass))
    :op1 (z / zebra
        :quant 2
        :ARG1-of (b2 / black-04))
    :op2 (z2 / zebra
        :ARG1-of (w / white-03))
    :prep-with (c / castle
        :location (b / background)))
