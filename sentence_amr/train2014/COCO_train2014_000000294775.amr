# ::tok A green salad dish and a disk of some red sauce all lie on a dining table next to a glass of beer .
# ::node	g2	green-02	1-2
# ::node	s	salad	2-3
# ::node	d2	dish	3-4
# ::node	a2	and	4-5
# ::node	d3	disk	6-7
# ::node	s3	some	8-9
# ::node	r	red-02	9-10
# ::node	s2	sauce	10-11
# ::node	a	all	11-12
# ::node	l	lie-07	12-13
# ::node	d	dine-01	15-16
# ::node	t	table	16-17
# ::node	n	next-to	17-18
# ::node	0	1	19-20
# ::node	g	glass	20-21
# ::node	v	volume-quantity	21-22
# ::node	b	beer	22-23
# ::root	l	lie-07
# ::edge	dish	consist-of	salad	d2	s	
# ::edge	dish	ARG1-of	green-02	d2	g2	
# ::edge	and	op1	dish	a2	d2	
# ::edge	and	op2	disk	a2	d3	
# ::edge	sauce	ARG1-of	red-02	s2	r	
# ::edge	sauce	mod	some	s2	s3	
# ::edge	disk	consist-of	sauce	d3	s2	
# ::edge	and	mod	all	a2	a	
# ::edge	lie-07	ARG1	and	l	a2	
# ::edge	table	mod	dine-01	t	d	
# ::edge	lie-07	ARG2	table	l	t	
# ::edge	table	location-of	next-to	t	n	
# ::edge	volume-quantity	unit	glass	v	g	
# ::edge	volume-quantity	quant	1	v	0	
# ::edge	beer	quant	volume-quantity	b	v	
# ::edge	next-to	op1	beer	n	b	
(l / lie-07
    :ARG1 (a2 / and
        :mod (a / all)
        :op1 (d2 / dish
            :ARG1-of (g2 / green-02)
            :consist-of (s / salad))
        :op2 (d3 / disk
            :consist-of (s2 / sauce
                :ARG1-of (r / red-02)
                :mod (s3 / some))))
    :ARG2 (t / table
        :location-of (n / next-to
            :op1 (b / beer
                :quant (v / volume-quantity
                    :quant 1
                    :unit (g / glass))))
        :mod (d / dine-01)))
