# ::tok The surfer caught a nice wave and will ride it to shore .
# ::node	p	person	1-2
# ::node	s2	surf-01	1-2
# ::node	c	catch-01	2-3
# ::node	n	nice-01	4-5
# ::node	w	wave	5-6
# ::node	a	and	6-7
# ::node	r	ride-01	8-9
# ::node	s	shore	11-12
# ::root	a	and
# ::edge	person	ARG0-of	surf-01	p	s2	
# ::edge	catch-01	ARG0	person	c	p	
# ::edge	wave	ARG1-of	nice-01	w	n	
# ::edge	catch-01	ARG1	wave	c	w	
# ::edge	and	op1	catch-01	a	c	
# ::edge	and	op2	ride-01	a	r	
# ::edge	ride-01	ARG1	wave	r	w	
# ::edge	ride-01	ARG0	person	r	p	
# ::edge	ride-01	destination	shore	r	s	
(a / and
    :op1 (c / catch-01
        :ARG0 (p / person
            :ARG0-of (s2 / surf-01))
        :ARG1 (w / wave
            :ARG1-of (n / nice-01)))
    :op2 (r / ride-01
        :ARG0 p
        :ARG1 w
        :destination (s / shore)))
