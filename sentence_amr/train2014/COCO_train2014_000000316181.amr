# ::tok A man is leaping and holding a frisbee over his head in a park - like area that shows a perimeter of tall trees and in the back area a tennis court as well as an area under repair .
# ::node	m	man	1-2
# ::node	l	leap-03	3-4
# ::node	a	and	4-5
# ::node	h2	hold-01	5-6
# ::node	f	frisbee	7-8
# ::node	o	over	8-9
# ::node	h	head	10-11
# ::node	p	park	13-14
# ::node	r2	resemble-01	15-16
# ::node	a3	area	16-17
# ::node	s	show-01	18-19
# ::node	p2	perimeter	20-21
# ::node	t	tall	22-23
# ::node	t3	tree	23-24
# ::node	a2	and	24-25
# ::node	b	back	27-28
# ::node	a4	area	28-29
# ::node	t2	tennis	30-31
# ::node	c	court	31-32
# ::node	a5	area	36-37
# ::node	r	repair-01	38-39
# ::root	a	and
# ::edge	leap-03	ARG0	man	l	m	
# ::edge	and	op1	leap-03	a	l	
# ::edge	and	op2	hold-01	a	h2	
# ::edge	hold-01	ARG0	man	h2	m	
# ::edge	hold-01	ARG1	frisbee	h2	f	
# ::edge	hold-01	path	over	h2	o	
# ::edge	over	op1	head	o	h	
# ::edge	man	part	head	m	h	
# ::edge	resemble-01	ARG2	park	r2	p	
# ::edge	area	ARG1-of	resemble-01	a3	r2	
# ::edge	and	location	area	a	a3	
# ::edge	area	ARG0-of	show-01	a3	s	
# ::edge	tree	mod	tall	t3	t	
# ::edge	perimeter	consist-of	tree	p2	t3	
# ::edge	and	op1	perimeter	a2	p2	
# ::edge	show-01	ARG1	and	s	a2	
# ::edge	area	mod	back	a4	b	
# ::edge	court	mod	tennis	c	t2	
# ::edge	court	location	area	c	a4	
# ::edge	and	op2	court	a2	c	
# ::edge	and	op3	area	a2	a5	
# ::edge	area	ARG1-of	repair-01	a5	r	
(a / and
    :location (a3 / area
        :ARG0-of (s / show-01
            :ARG1 (a2 / and
                :op1 (p2 / perimeter
                    :consist-of (t3 / tree
                        :mod (t / tall)))
                :op2 (c / court
                    :location (a4 / area
                        :mod (b / back))
                    :mod (t2 / tennis))
                :op3 (a5 / area
                    :ARG1-of (r / repair-01))))
        :ARG1-of (r2 / resemble-01
            :ARG2 (p / park)))
    :op1 (l / leap-03
        :ARG0 (m / man
            :part (h / head)))
    :op2 (h2 / hold-01
        :ARG0 m
        :ARG1 (f / frisbee)
        :path (o / over
            :op1 h)))
