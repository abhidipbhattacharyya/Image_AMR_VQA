# ::tok this paper plat has the word cat and a cat drawn on it
# ::node	t	this	0-1
# ::node	p	paper	1-2
# ::node	p2	plat	2-3
# ::node	h	have-03	3-4
# ::node	s	string-entity	4-5
# ::node	w	word	5-6
# ::node	0	cat	6-7
# ::node	a	and	7-8
# ::node	c	cat	9-10
# ::node	d	draw-01	10-11
# ::root	h	have-03
# ::edge	plat	mod	paper	p2	p	
# ::edge	plat	mod	this	p2	t	
# ::edge	have-03	ARG0	plat	h	p2	
# ::edge	word	mod	string-entity	w	s	
# ::edge	string-entity	value	cat	s	0	
# ::edge	and	op1	word	a	w	
# ::edge	have-03	ARG1	and	h	a	
# ::edge	and	op2	cat	a	c	
# ::edge	and	ARG1-of	draw-01	a	d	
# ::edge	draw-01	location	plat	d	p2	
(h / have-03
    :ARG0 (p2 / plat
        :mod (p / paper)
        :mod (t / this))
    :ARG1 (a / and
        :ARG1-of (d / draw-01
            :location p2)
        :op1 (w / word
            :mod (s / string-entity
                :value "cat"))
        :op2 (c / cat)))
