# ::tok An elephant curls leaves up in it 's trunk to eat them .
# ::node	e2	elephant	1-2
# ::node	c	curl-up-02	2-3
# ::node	t2	trunk	8-9
# ::node	e	eat-01	10-11
# ::node	t	they	11-12
# ::root	c	curl-up-02
# ::edge	curl-up-02	ARG1	elephant	c	e2	
# ::edge	curl-up-02	location	trunk	c	t2	
# ::edge	elephant	part	trunk	e2	t2	
# ::edge	curl-up-02	purpose	eat-01	c	e	
# ::edge	eat-01	ARG0	elephant	e	e2	
# ::edge	eat-01	ARG1	they	e	t	
(c / curl-up-02
    :purpose (e / eat-01
        :ARG0 (e2 / elephant
            :part (t2 / trunk))
        :ARG1 (t / they))
    :ARG1 e2
    :location t2)
