# ::tok The snowboarder caught a bit of air while going down the hill .
# ::node	p	person	1-2
# ::node	s	ski-01	1-2
# ::node	c	catch-01	2-3
# ::node	b	bit	4-5
# ::node	a	air	6-7
# ::node	g	go-02	8-9
# ::node	d	down	9-10
# ::node	h	hill	11-12
# ::root	c	catch-01
# ::edge	person	ARG0-of	ski-01	p	s	
# ::edge	catch-01	ARG0	person	c	p	
# ::edge	air	quant	bit	a	b	
# ::edge	catch-01	ARG1	air	c	a	
# ::edge	catch-01	time	go-02	c	g	
# ::edge	go-02	ARG0	person	g	p	
# ::edge	go-02	direction	down	g	d	
# ::edge	go-02	ARG3	hill	g	h	
(c / catch-01
    :ARG0 (p / person
        :ARG0-of (s / ski-01))
    :ARG1 (a / air
        :quant (b / bit))
    :time (g / go-02
        :ARG0 p
        :ARG3 (h / hill)
        :direction (d / down)))
