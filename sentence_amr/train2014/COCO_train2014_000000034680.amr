# ::tok One man is catching a frisbee while another runs to catch up .
# ::node	0	1	0-1
# ::node	m	man	1-2
# ::node	m2	man	1-2
# ::node	c	catch-01	3-4
# ::node	f	frisbee	5-6
# ::node	c3	contrast-01	6-7
# ::node	a	another	7-8
# ::node	r	run-02	8-9
# ::node	c2	catch-up-04	10-11
# ::root	c3	contrast-01
# ::edge	man	quant	1	m	0	
# ::edge	catch-01	ARG0	man	c	m	
# ::edge	catch-01	ARG1	frisbee	c	f	
# ::edge	contrast-01	ARG1	catch-01	c3	c	
# ::edge	man	mod	another	m2	a	
# ::edge	contrast-01	ARG2	run-02	c3	r	
# ::edge	run-02	ARG0	man	r	m2	
# ::edge	run-02	purpose	catch-up-04	r	c2	
# ::edge	catch-up-04	ARG1	man	c2	m2	
(c3 / contrast-01
    :ARG1 (c / catch-01
        :ARG0 (m / man
            :quant 1)
        :ARG1 (f / frisbee))
    :ARG2 (r / run-02
        :purpose (c2 / catch-up-04
            :ARG1 (m2 / man
                :mod (a / another)))
        :ARG0 m2))
