# ::tok One horse has its mouth on the ground and the other horse is facing the opposite direction of the first .
# ::node	o	one	0-1
# ::node	h2	horse	1-2
# ::node	h3	horse	1-2
# ::node	h	have-06	2-3
# ::node	m	mouth	4-5
# ::node	g	ground	7-8
# ::node	a	and	8-9
# ::node	o4	other	10-11
# ::node	h4	horse	11-12
# ::node	f	face-01	13-14
# ::node	o2	opposite-01	15-16
# ::node	d	direction	16-17
# ::node	o3	ordinal-entity	19-20
# ::node	0	1	19-20
# ::root	a	and
# ::edge	horse	mod	one	h2	o	
# ::edge	have-06	ARG0	horse	h	h2	
# ::edge	have-06	ARG1	mouth	h	m	
# ::edge	horse	part	mouth	h2	m	
# ::edge	have-06	location	ground	h	g	
# ::edge	and	op1	have-06	a	h	
# ::edge	horse	mod	other	h4	o4	
# ::edge	face-01	ARG0	horse	f	h4	
# ::edge	and	op2	face-01	a	f	
# ::edge	direction	ARG1-of	opposite-01	d	o2	
# ::edge	face-01	ARG1	direction	f	d	
# ::edge	horse	ord	ordinal-entity	h3	o3	
# ::edge	ordinal-entity	value	1	o3	0	
# ::edge	and	rel	horse	a	h3	
(a / and
    :op1 (h / have-06
        :ARG0 (h2 / horse
            :mod (o / one)
            :part (m / mouth))
        :ARG1 m
        :location (g / ground))
    :op2 (f / face-01
        :ARG0 (h4 / horse
            :mod (o4 / other))
        :ARG1 (d / direction
            :ARG1-of (o2 / opposite-01)))
    :rel (h3 / horse
        :ord (o3 / ordinal-entity
            :value 1)))
