# ::tok a blue silver and yellow train some people and some buildings
# ::node	b	blue	1-2
# ::node	s	silver	2-3
# ::node	a	and	3-4
# ::node	y	yellow-02	4-5
# ::node	t	train	5-6
# ::node	t2	train	5-6
# ::node	s2	some	6-7
# ::node	p	person	7-8
# ::node	a2	and	8-9
# ::node	b2	building	10-11
# ::root	a	and
# ::edge	and	op1	train	a	t	
# ::edge	train	mod	silver	t	s	
# ::edge	train	mod	blue	t	b	
# ::edge	train	ARG1-of	yellow-02	t2	y	
# ::edge	and	op2	train	a	t2	
# ::edge	person	mod	some	p	s2	
# ::edge	and	op1	person	a2	p	
# ::edge	and	op3	and	a	a2	
# ::edge	and	op2	building	a2	b2	
# ::edge	building	quant	some	b2	s2	
(a / and
    :op1 (t / train
        :mod (s / silver)
        :mod (b / blue))
    :op2 (t2 / train
        :ARG1-of (y / yellow-02))
    :op3 (a2 / and
        :op1 (p / person
            :mod (s2 / some))
        :op2 (b2 / building
            :quant s2)))
