# ::tok Two ducks are sitting in a pond , one on top of a nest .
# ::node	1	2	0-1
# ::node	d	duck	1-2
# ::node	d2	duck	1-2
# ::node	s	sit-01	3-4
# ::node	p	pond	6-7
# ::node	a	and	7-8
# ::node	i	include-91	8-9
# ::node	0	1	8-9
# ::node	t	top	10-11
# ::node	n	nest	13-14
# ::root	a	and
# ::edge	duck	quant	2	d	1	
# ::edge	sit-01	ARG1	duck	s	d	
# ::edge	sit-01	ARG2	pond	s	p	
# ::edge	and	op1	sit-01	a	s	
# ::edge	include-91	ARG1	duck	i	d2	
# ::edge	duck	ARG2-of	include-91	d	i	
# ::edge	duck	quant	1	d2	0	
# ::edge	duck	location	top	d2	t	
# ::edge	top	part-of	nest	t	n	
(a / and
    :op1 (s / sit-01
        :ARG1 (d / duck
            :quant 2
            :ARG2-of (i / include-91
                :ARG1 (d2 / duck
                    :quant 1
                    :location (t / top
                        :part-of (n / nest)))))
        :ARG2 (p / pond)))
