# ::tok A green and yellow double decker bus that says " The Bath Tour " .
# ::node	g	green-02	1-2
# ::node	a	and	2-3
# ::node	y	yellow-02	3-4
# ::node	d2	double	4-5
# ::node	d	deck	5-6
# ::node	b	bus	6-7
# ::node	b2	bus	6-7
# ::node	s	say-01	8-9
# ::node	n	name	10-11
# ::node	0	Bath	11-12
# ::node	e	event	12-13
# ::node	1	Tour	12-13
# ::root	a	and
# ::edge	deck	mod	double	d	d2	
# ::edge	deck	op1	bus	d	b	
# ::edge	bus	ARG1-of	green-02	b	g	
# ::edge	bus	mod	deck	b2	d	
# ::edge	bus	ARG1-of	yellow-02	b2	y	
# ::edge	and	op2	bus	a	b2	
# ::edge	and	ARG0-of	say-01	a	s	
# ::edge	name	op1	Bath	n	0	
# ::edge	event	name	name	e	n	
# ::edge	say-01	ARG1	event	s	e	
# ::edge	name	op2	Tour	n	1	
(a / and
    :ARG0-of (s / say-01
        :ARG1 (e / event
            :name (n / name
                :op1 "Bath"
                :op2 "Tour")))
    :op2 (b2 / bus
        :ARG1-of (y / yellow-02)
        :mod (d / deck
            :mod (d2 / double)
            :op1 (b / bus
                :ARG1-of (g / green-02)))))
