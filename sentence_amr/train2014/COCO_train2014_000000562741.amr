# ::tok A train is stopped in its tracks next to a building and cars .
# ::node	t2	train	1-2
# ::node	s	stop-01	3-4
# ::node	t	track	6-7
# ::node	n	next-to	7-8
# ::node	b	building	10-11
# ::node	a	and	11-12
# ::node	c	car	12-13
# ::root	s	stop-01
# ::edge	stop-01	ARG1	train	s	t2	
# ::edge	stop-01	location	track	s	t	
# ::edge	track	poss	train	t	t2	
# ::edge	stop-01	location	next-to	s	n	
# ::edge	and	op1	building	a	b	
# ::edge	next-to	op1	and	n	a	
# ::edge	and	op2	car	a	c	
(s / stop-01
    :ARG1 (t2 / train)
    :location (t / track
        :poss t2)
    :location (n / next-to
        :op1 (a / and
            :op1 (b / building)
            :op2 (c / car))))
