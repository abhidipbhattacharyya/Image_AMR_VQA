# ::tok pizza meal all ready so he can make better copies now that he has ink
# ::node	p	pizza	0-1
# ::node	m2	meal	1-2
# ::node	a	already	2-3
# ::node	c	cause-01	4-5
# ::node	h3	he	5-6
# ::node	p2	possible-01	6-7
# ::node	m	make-01	7-8
# ::node	h2	have-degree-91	8-9
# ::node	g	good-02	8-9
# ::node	m3	more	8-9
# ::node	c2	copy-01	9-10
# ::node	n	now	10-11
# ::node	h	have-03	13-14
# ::node	i	ink	14-15
# ::root	c	cause-01
# ::edge	meal	mod	pizza	m2	p	
# ::edge	meal	time	already	m2	a	
# ::edge	cause-01	ARG1	meal	c	m2	
# ::edge	cause-01	ARG0	possible-01	c	p2	
# ::edge	possible-01	ARG1	make-01	p2	m	
# ::edge	make-01	ARG0	he	m	h3	
# ::edge	have-degree-91	ARG2	good-02	h2	g	
# ::edge	have-degree-91	ARG3	more	h2	m3	
# ::edge	good-02	ARG1	copy-01	g	c2	
# ::edge	copy-01	ARG1-of	have-degree-91	c2	h2	
# ::edge	make-01	ARG1	copy-01	m	c2	
# ::edge	make-01	time	now	m	n	
# ::edge	now	op1	have-03	n	h	
# ::edge	have-03	ARG0	he	h	h3	
# ::edge	have-03	ARG1	ink	h	i	
(c / cause-01
    :ARG0 (p2 / possible-01
        :ARG1 (m / make-01
            :ARG0 (h3 / he)
            :ARG1 (c2 / copy-01
                :ARG1-of (h2 / have-degree-91
                    :ARG2 (g / good-02
                        :ARG1 c2)
                    :ARG3 (m3 / more)))
            :time (n / now
                :op1 (h / have-03
                    :ARG0 h3
                    :ARG1 (i / ink)))))
    :ARG1 (m2 / meal
        :mod (p / pizza)
        :time (a / already)))
