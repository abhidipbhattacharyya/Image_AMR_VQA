# ::tok He has a red leash and he is laying next to the red car .
# ::node	h2	he	0-1
# ::node	h	have-03	1-2
# ::node	r	red-02	3-4
# ::node	l2	leash	4-5
# ::node	a	and	5-6
# ::node	l	lay-01	8-9
# ::node	n	next-to	9-10
# ::node	c	car	13-14
# ::root	a	and
# ::edge	have-03	ARG0	he	h	h2	
# ::edge	leash	ARG1-of	red-02	l2	r	
# ::edge	have-03	ARG1	leash	h	l2	
# ::edge	and	op1	have-03	a	h	
# ::edge	and	op2	lay-01	a	l	
# ::edge	lay-01	ARG1	he	l	h2	
# ::edge	lay-01	ARG2	next-to	l	n	
# ::edge	next-to	op1	car	n	c	
# ::edge	red-02	ARG1	car	r	c	
(a / and
    :op1 (h / have-03
        :ARG0 (h2 / he)
        :ARG1 (l2 / leash
            :ARG1-of (r / red-02
                :ARG1 (c / car))))
    :op2 (l / lay-01
        :ARG1 h2
        :ARG2 (n / next-to
            :op1 c)))
