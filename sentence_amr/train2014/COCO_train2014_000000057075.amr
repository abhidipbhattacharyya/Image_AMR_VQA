# ::tok Two birds eating on what looks like a load of bread in front of an old building .
# ::node	0	2	0-1
# ::node	b	bird	1-2
# ::node	e	eat-01	2-3
# ::node	t	thing	4-5
# ::node	l2	look-02	5-6
# ::node	l	load	8-9
# ::node	b2	bread	10-11
# ::node	i	in-front-of	12-13
# ::node	o	old	15-16
# ::node	b3	building	16-17
# ::root	e	eat-01
# ::edge	bird	quant	2	b	0	
# ::edge	eat-01	ARG0	bird	e	b	
# ::edge	eat-01	ARG1	thing	e	t	
# ::edge	thing	ARG0-of	look-02	t	l2	
# ::edge	look-02	ARG1	load	l2	l	
# ::edge	load	consist-of	bread	l	b2	
# ::edge	eat-01	location	in-front-of	e	i	
# ::edge	building	mod	old	b3	o	
# ::edge	in-front-of	op1	building	i	b3	
(e / eat-01
    :ARG0 (b / bird
        :quant 2)
    :ARG1 (t / thing
        :ARG0-of (l2 / look-02
            :ARG1 (l / load
                :consist-of (b2 / bread))))
    :location (i / in-front-of
        :op1 (b3 / building
            :mod (o / old))))
