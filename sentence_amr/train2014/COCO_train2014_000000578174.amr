# ::tok A street leading into an intersection with cars traveling on both street and a skateboarder on the side doing a jumping trick onto a side wall .
# ::node	s4	street	1-2
# ::node	l	lead-01	2-3
# ::node	i	intersect-01	5-6
# ::node	c	car	7-8
# ::node	t	travel-01	8-9
# ::node	b	both	10-11
# ::node	s5	street	11-12
# ::node	a	and	12-13
# ::node	p	person	14-15
# ::node	s3	skate-01	14-15
# ::node	s	side	17-18
# ::node	j	jump-03	20-21
# ::node	t2	trick-01	21-22
# ::node	s2	side	24-25
# ::node	w	wall	25-26
# ::root	s4	street
# ::edge	street	ARG0-of	lead-01	s4	l	
# ::edge	lead-01	destination	intersect-01	l	i	
# ::edge	car	ARG0-of	travel-01	c	t	
# ::edge	street	mod	both	s5	b	
# ::edge	travel-01	ARG1	street	t	s5	
# ::edge	and	op1	car	a	c	
# ::edge	street	consist-of	and	s4	a	
# ::edge	and	op2	person	a	p	
# ::edge	person	ARG0-of	skate-01	p	s3	
# ::edge	person	location	side	p	s	
# ::edge	jump-03	ARG0	person	j	p	
# ::edge	trick-01	mod	jump-03	t2	j	
# ::edge	person	ARG0-of	trick-01	p	t2	
# ::edge	wall	mod	side	w	s2	
# ::edge	jump-03	destination	wall	j	w	
(s4 / street
    :ARG0-of (l / lead-01
        :destination (i / intersect-01))
    :consist-of (a / and
        :op1 (c / car
            :ARG0-of (t / travel-01
                :ARG1 (s5 / street
                    :mod (b / both))))
        :op2 (p / person
            :ARG0-of (s3 / skate-01)
            :ARG0-of (t2 / trick-01
                :mod (j / jump-03
                    :ARG0 p
                    :destination (w / wall
                        :mod (s2 / side))))
            :location (s / side))))
