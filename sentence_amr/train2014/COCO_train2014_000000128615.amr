# ::tok one baseball player slides on the ground to the base as the other looks to be trying to catch a ball
# ::node	o	one	0-1
# ::node	b3	baseball	1-2
# ::node	p	person	2-3
# ::node	p3	play-01	2-3
# ::node	p2	person	2-3
# ::node	s	slide-01	3-4
# ::node	g	ground	6-7
# ::node	b2	base	9-10
# ::node	o2	other	12-13
# ::node	l	look-02	13-14
# ::node	t	try-01	16-17
# ::node	c	catch-01	18-19
# ::node	b	ball	20-21
# ::root	s	slide-01
# ::edge	person	quant	one	p	o	
# ::edge	person	ARG0-of	play-01	p	p3	
# ::edge	play-01	ARG1	baseball	p3	b3	
# ::edge	slide-01	ARG1	person	s	p	
# ::edge	slide-01	ARG0	person	s	p	
# ::edge	slide-01	ARG4	ground	s	g	
# ::edge	slide-01	destination	base	s	b2	
# ::edge	person	mod	other	p2	o2	
# ::edge	person	ARG0-of	look-02	p2	l	
# ::edge	look-02	ARG1	try-01	l	t	
# ::edge	try-01	ARG0	person	t	p2	
# ::edge	try-01	ARG1	catch-01	t	c	
# ::edge	catch-01	ARG0	person	c	p2	
# ::edge	catch-01	ARG1	ball	c	b	
# ::edge	slide-01	rel	look-02	s	l	
(s / slide-01
    :ARG0 (p / person
        :quant (o / one)
        :ARG0-of (p3 / play-01
            :ARG1 (b3 / baseball)))
    :ARG1 p
    :ARG4 (g / ground)
    :destination (b2 / base)
    :rel (l / look-02
        :ARG1 (t / try-01
            :ARG0 (p2 / person
                :ARG0-of l
                :mod (o2 / other))
            :ARG1 (c / catch-01
                :ARG0 p2
                :ARG1 (b / ball)))))
