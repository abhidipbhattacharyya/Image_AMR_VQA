# ::tok A malformed carrot has two sides that have forked in opposite directions .
# ::node	m	malformed	1-2
# ::node	c	carrot	2-3
# ::node	h	have-03	3-4
# ::node	0	2	4-5
# ::node	s	side	5-6
# ::node	f	fork-03	8-9
# ::node	o	opposite-01	10-11
# ::node	d	direction	11-12
# ::root	h	have-03
# ::edge	carrot	mod	malformed	c	m	
# ::edge	have-03	ARG0	carrot	h	c	
# ::edge	side	quant	2	s	0	
# ::edge	have-03	ARG1	side	h	s	
# ::edge	side	ARG0-of	fork-03	s	f	
# ::edge	direction	ARG1-of	opposite-01	d	o	
# ::edge	fork-03	direction	direction	f	d	
(h / have-03
    :ARG0 (c / carrot
        :mod (m / malformed))
    :ARG1 (s / side
        :quant 2
        :ARG0-of (f / fork-03
            :direction (d / direction
                :ARG1-of (o / opposite-01)))))
