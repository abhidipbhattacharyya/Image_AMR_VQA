# ::tok a red silver and white motorcycle is parked and some buildings
# ::node	r	red-02	1-2
# ::node	s	silver	2-3
# ::node	a	and	3-4
# ::node	w	white-03	4-5
# ::node	m	motorcycle	5-6
# ::node	m2	motorcycle	5-6
# ::node	p	park-01	7-8
# ::node	a2	and	8-9
# ::node	s2	some	9-10
# ::node	b	building	10-11
# ::root	a2	and
# ::edge	and	op1	motorcycle	a	m	
# ::edge	motorcycle	mod	silver	m	s	
# ::edge	motorcycle	ARG1-of	red-02	m	r	
# ::edge	motorcycle	ARG1-of	white-03	m2	w	
# ::edge	and	op2	motorcycle	a	m2	
# ::edge	park-01	ARG1	and	p	a	
# ::edge	and	op1	park-01	a2	p	
# ::edge	building	quant	some	b	s2	
# ::edge	and	op2	building	a2	b	
(a2 / and
    :op1 (p / park-01
        :ARG1 (a / and
            :op1 (m / motorcycle
                :ARG1-of (r / red-02)
                :mod (s / silver))
            :op2 (m2 / motorcycle
                :ARG1-of (w / white-03))))
    :op2 (b / building
        :quant (s2 / some)))
