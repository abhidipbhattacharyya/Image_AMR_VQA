# ::tok A man leans over to sniff an assortment of pizzas .
# ::node	m	man	1-2
# ::node	l	lean-01	2-3
# ::node	o	over	3-4
# ::node	s	sniff-01	5-6
# ::node	a	assortment	7-8
# ::node	p	pizzeria	9-10
# ::root	l	lean-01
# ::edge	lean-01	ARG1	man	l	m	
# ::edge	lean-01	ARG2	over	l	o	
# ::edge	lean-01	purpose	sniff-01	l	s	
# ::edge	sniff-01	ARG0	man	s	m	
# ::edge	pizzeria	quant	assortment	p	a	
# ::edge	sniff-01	ARG1	pizzeria	s	p	
(l / lean-01
    :purpose (s / sniff-01
        :ARG0 (m / man)
        :ARG1 (p / pizzeria
            :quant (a / assortment)))
    :ARG1 m
    :ARG2 (o / over))
