# ::tok A bowl of chicken and dumpling soup sitting on a table .
# ::node	b	bowl	1-2
# ::node	c	chicken	3-4
# ::node	a	and	4-5
# ::node	d	dumpling	5-6
# ::node	s2	soup	6-7
# ::node	s	sit-01	7-8
# ::node	t	table	10-11
# ::root	s	sit-01
# ::edge	and	op1	chicken	a	c	
# ::edge	and	op2	dumpling	a	d	
# ::edge	soup	consist-of	and	s2	a	
# ::edge	soup	quant	bowl	s2	b	
# ::edge	sit-01	ARG1	soup	s	s2	
# ::edge	sit-01	ARG2	table	s	t	
(s / sit-01
    :ARG1 (s2 / soup
        :quant (b / bowl)
        :consist-of (a / and
            :op1 (c / chicken)
            :op2 (d / dumpling)))
    :ARG2 (t / table))
