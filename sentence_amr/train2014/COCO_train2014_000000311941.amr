# ::tok A very long train with the word Canada on the side and at least one person is waiting by the side of the train .
# ::node	v	very	1-2
# ::node	l	long-03	2-3
# ::node	t	train	3-4
# ::node	h	have-03	4-5
# ::node	w2	word	6-7
# ::node	c	country	7-8
# ::node	n	name	7-8
# ::node	1	Canada	7-8
# ::node	s	side	10-11
# ::node	a	and	11-12
# ::node	a2	at-least	13-14
# ::node	0	1	14-15
# ::node	p	person	15-16
# ::node	w	wait-01	17-18
# ::node	s2	side	20-21
# ::root	a	and
# ::edge	long-03	degree	very	l	v	
# ::edge	train	ARG1-of	long-03	t	l	
# ::edge	train	ARG0-of	have-03	t	h	
# ::edge	have-03	ARG1	word	h	w2	
# ::edge	word	mod	country	w2	c	
# ::edge	country	name	name	c	n	
# ::edge	name	op1	Canada	n	1	
# ::edge	word	location	side	w2	s	
# ::edge	and	op1	train	a	t	
# ::edge	at-least	op1	1	a2	0	
# ::edge	person	quant	at-least	p	a2	
# ::edge	wait-01	ARG1	person	w	p	
# ::edge	and	op2	wait-01	a	w	
# ::edge	wait-01	location	side	w	s2	
# ::edge	side	part	side	s	s2	
(a / and
    :op1 (t / train
        :ARG0-of (h / have-03
            :ARG1 (w2 / word
                :location (s / side
                    :part (s2 / side))
                :mod (c / country
                    :name (n / name
                        :op1 "Canada"))))
        :ARG1-of (l / long-03
            :degree (v / very)))
    :op2 (w / wait-01
        :ARG1 (p / person
            :quant (a2 / at-least
                :op1 1))
        :location s2))
