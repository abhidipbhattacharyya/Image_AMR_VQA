# ::tok This shack has a small table to the left , a stove in the back , and a counter top on the right .
# ::node	t2	this	0-1
# ::node	s	shack	1-2
# ::node	h	have-03	2-3
# ::node	s2	small	4-5
# ::node	t	table	5-6
# ::node	l	left-20	8-9
# ::node	s3	stove	11-12
# ::node	b	back	14-15
# ::node	a	and	16-17
# ::node	c	counter	18-19
# ::node	t3	top	19-20
# ::node	r	right-04	22-23
# ::root	h	have-03
# ::edge	shack	mod	this	s	t2	
# ::edge	have-03	ARG0	shack	h	s	
# ::edge	table	mod	small	t	s2	
# ::edge	table	ARG1-of	left-20	t	l	
# ::edge	stove	location	back	s3	b	
# ::edge	and	op2	stove	a	s3	
# ::edge	and	op1	table	a	t	
# ::edge	have-03	ARG1	and	h	a	
# ::edge	top	mod	counter	t3	c	
# ::edge	and	op3	top	a	t3	
# ::edge	top	ARG1-of	right-04	t3	r	
(h / have-03
    :ARG0 (s / shack
        :mod (t2 / this))
    :ARG1 (a / and
        :op1 (t / table
            :ARG1-of (l / left-20)
            :mod (s2 / small))
        :op2 (s3 / stove
            :location (b / back))
        :op3 (t3 / top
            :ARG1-of (r / right-04)
            :mod (c / counter))))
