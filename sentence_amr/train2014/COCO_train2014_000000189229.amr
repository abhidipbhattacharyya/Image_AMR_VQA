# ::tok a square shaped flat , clear , glass plate with four different spaces of food on a white table .
# ::node	s3	square	1-2
# ::node	s	shape-01	2-3
# ::node	f	flat-06	3-4
# ::node	c	clear-08	5-6
# ::node	g	glass	7-8
# ::node	p	plate	8-9
# ::node	h	have-03	9-10
# ::node	0	4	10-11
# ::node	d	differ-02	11-12
# ::node	s2	space	12-13
# ::node	f2	food	14-15
# ::node	w	white-03	17-18
# ::node	t	table	18-19
# ::root	p	plate
# ::edge	shape-01	ARG2	square	s	s3	
# ::edge	plate	consist-of	glass	p	g	
# ::edge	plate	ARG1-of	clear-08	p	c	
# ::edge	plate	ARG1-of	flat-06	p	f	
# ::edge	plate	ARG1-of	shape-01	p	s	
# ::edge	plate	ARG0-of	have-03	p	h	
# ::edge	space	ARG1-of	differ-02	s2	d	
# ::edge	space	quant	4	s2	0	
# ::edge	have-03	ARG1	space	h	s2	
# ::edge	space	consist-of	food	s2	f2	
# ::edge	table	ARG1-of	white-03	t	w	
# ::edge	plate	location	table	p	t	
(p / plate
    :ARG0-of (h / have-03
        :ARG1 (s2 / space
            :quant 4
            :ARG1-of (d / differ-02)
            :consist-of (f2 / food)))
    :ARG1-of (c / clear-08)
    :ARG1-of (f / flat-06)
    :ARG1-of (s / shape-01
        :ARG2 (s3 / square))
    :consist-of (g / glass)
    :location (t / table
        :ARG1-of (w / white-03)))
