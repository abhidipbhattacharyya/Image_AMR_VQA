# ::tok a first prize sign next to a little cake with white frosting and some cherries on top
# ::node	o	ordinal-entity	1-2
# ::node	0	1	1-2
# ::node	p	prize-01	2-3
# ::node	s	sign	3-4
# ::node	n	next-to	4-5
# ::node	l	little	7-8
# ::node	c	cake	8-9
# ::node	h	have-03	9-10
# ::node	w	white-03	10-11
# ::node	f	frosting	11-12
# ::node	a	and	12-13
# ::node	s2	some	13-14
# ::node	c2	cherrypick-01	14-15
# ::node	t	thing	15-16
# ::node	t2	top	16-17
# ::root	s	sign
# ::edge	ordinal-entity	value	1	o	0	
# ::edge	prize-01	ord	ordinal-entity	p	o	
# ::edge	sign	mod	prize-01	s	p	
# ::edge	sign	location	next-to	s	n	
# ::edge	cake	mod	little	c	l	
# ::edge	next-to	op1	cake	n	c	
# ::edge	cake	ARG0-of	have-03	c	h	
# ::edge	frosting	ARG1-of	white-03	f	w	
# ::edge	and	op1	frosting	a	f	
# ::edge	have-03	ARG1	and	h	a	
# ::edge	cherrypick-01	quant	some	c2	s2	
# ::edge	thing	ARG2-of	cherrypick-01	t	c2	
# ::edge	and	op2	thing	a	t	
# ::edge	thing	location	top	t	t2	
(s / sign
    :location (n / next-to
        :op1 (c / cake
            :ARG0-of (h / have-03
                :ARG1 (a / and
                    :op1 (f / frosting
                        :ARG1-of (w / white-03))
                    :op2 (t / thing
                        :ARG2-of (c2 / cherrypick-01
                            :quant (s2 / some))
                        :location (t2 / top))))
            :mod (l / little)))
    :mod (p / prize-01
        :ord (o / ordinal-entity
            :value 1)))
