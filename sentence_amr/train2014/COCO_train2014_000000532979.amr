# ::tok A Juicerator sits on a counter and dispenses a yellow juice .
# ::node	p	person	1-2
# ::node	j	juice	1-2
# ::node	s	sit-01	2-3
# ::node	c	counter	5-6
# ::node	a	and	6-7
# ::node	d	dispatch-01	7-8
# ::node	y	yellow-02	9-10
# ::node	j2	juice	10-11
# ::root	a	and
# ::edge	sit-01	ARG1	person	s	p	
# ::edge	sit-01	ARG2	counter	s	c	
# ::edge	and	op1	sit-01	a	s	
# ::edge	and	op2	dispatch-01	a	d	
# ::edge	dispatch-01	ARG0	person	d	p	
# ::edge	juice	ARG1-of	yellow-02	j2	y	
# ::edge	dispatch-01	ARG1	juice	d	j2	
# ::edge	and	rel	juice	a	j	
(a / and
    :op1 (s / sit-01
        :ARG1 (p / person)
        :ARG2 (c / counter))
    :op2 (d / dispatch-01
        :ARG0 p
        :ARG1 (j2 / juice
            :ARG1-of (y / yellow-02)))
    :rel (j / juice))
