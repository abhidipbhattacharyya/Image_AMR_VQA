# ::tok On a red tray is silverware , a green plate with an egg muffin and potatoes , and a blue plate with a croissant .
# ::node	r	red-02	2-3
# ::node	t	tray	3-4
# ::node	s	silverware	5-6
# ::node	g	green-02	8-9
# ::node	p	plate	9-10
# ::node	p2	plate	9-10
# ::node	h	have-03	10-11
# ::node	h2	have-03	10-11
# ::node	e	egg	12-13
# ::node	m	muffin	13-14
# ::node	a	and	14-15
# ::node	a2	and	14-15
# ::node	p3	potato	15-16
# ::node	a3	and	17-18
# ::node	b	blue	19-20
# ::node	c	croissant	23-24
# ::root	a3	and
# ::edge	tray	ARG1-of	red-02	t	r	
# ::edge	plate	ARG1-of	green-02	p	g	
# ::edge	plate	ARG0-of	have-03	p	h	
# ::edge	plate	ARG0-of	have-03	p2	h2	
# ::edge	muffin	consist-of	egg	m	e	
# ::edge	and	op2	plate	a	p2	
# ::edge	and	op1	silverware	a	s	
# ::edge	and	location	tray	a	t	
# ::edge	and	op1	muffin	a2	m	
# ::edge	have-03	ARG1	and	h	a2	
# ::edge	and	op2	potato	a2	p3	
# ::edge	and	op2	and	a3	a	
# ::edge	and	op1	and	a3	a	
# ::edge	plate	mod	blue	p2	b	
# ::edge	have-03	ARG1	croissant	h2	c	
# ::edge	and	rel	plate	a3	p	
(a3 / and
    :op1 (a / and
        :location (t / tray
            :ARG1-of (r / red-02))
        :op1 (s / silverware)
        :op2 (p2 / plate
            :ARG0-of (h2 / have-03
                :ARG1 (c / croissant))
            :mod (b / blue)))
    :op2 a
    :rel (p / plate
        :ARG0-of (h / have-03
            :ARG1 (a2 / and
                :op1 (m / muffin
                    :consist-of (e / egg))
                :op2 (p3 / potato)))
        :ARG1-of (g / green-02)))
