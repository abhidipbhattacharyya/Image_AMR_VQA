# ::tok A woman in front of a bakery counter looking at baked goods on display behind glass , and a man in motion behind the counter , and a woman from the back , behind him , with some cannisters on high shelves on wall .
# ::node	w2	woman	1-2
# ::node	i	in-front-of	3-4
# ::node	b3	bakery	6-7
# ::node	c2	counter	7-8
# ::node	l	look-01	8-9
# ::node	b2	bake-01	10-11
# ::node	g2	good	11-12
# ::node	d	display-01	13-14
# ::node	b4	behind	14-15
# ::node	g	glass	15-16
# ::node	a	and	17-18
# ::node	m	man	19-20
# ::node	m2	move-01	21-22
# ::node	b5	behind	22-23
# ::node	b6	behind	22-23
# ::node	c3	counter	24-25
# ::node	w3	woman	28-29
# ::node	b	back	31-32
# ::node	h	have-03	36-37
# ::node	s2	some	37-38
# ::node	c	canister	38-39
# ::node	h2	high-02	40-41
# ::node	s	shelf	41-42
# ::node	w	wall	43-44
# ::root	a	and
# ::edge	woman	location	in-front-of	w2	i	
# ::edge	counter	mod	bakery	c2	b3	
# ::edge	in-front-of	op1	counter	i	c2	
# ::edge	woman	ARG0-of	look-01	w2	l	
# ::edge	good	ARG1-of	bake-01	g2	b2	
# ::edge	look-01	ARG1	good	l	g2	
# ::edge	good	ARG1-of	display-01	g2	d	
# ::edge	display-01	location	behind	d	b4	
# ::edge	behind	op1	glass	b4	g	
# ::edge	and	op1	woman	a	w2	
# ::edge	and	op2	man	a	m	
# ::edge	man	ARG1-of	move-01	m	m2	
# ::edge	move-01	ARG2	behind	m2	b5	
# ::edge	behind	op1	counter	b5	c3	
# ::edge	woman	location	behind	w3	b6	
# ::edge	and	op3	woman	a	w3	
# ::edge	behind	op1	back	b6	b	
# ::edge	woman	ARG0-of	have-03	w3	h	
# ::edge	canister	quant	some	c	s2	
# ::edge	have-03	ARG1	canister	h	c	
# ::edge	shelf	ARG1-of	high-02	s	h2	
# ::edge	woman	location	shelf	w3	s	
# ::edge	shelf	location	wall	s	w	
(a / and
    :op1 (w2 / woman
        :ARG0-of (l / look-01
            :ARG1 (g2 / good
                :ARG1-of (b2 / bake-01)
                :ARG1-of (d / display-01
                    :location (b4 / behind
                        :op1 (g / glass)))))
        :location (i / in-front-of
            :op1 (c2 / counter
                :mod (b3 / bakery))))
    :op2 (m / man
        :ARG1-of (m2 / move-01
            :ARG2 (b5 / behind
                :op1 (c3 / counter))))
    :op3 (w3 / woman
        :ARG0-of (h / have-03
            :ARG1 (c / canister
                :quant (s2 / some)))
        :location (b6 / behind
            :op1 (b / back))
        :location (s / shelf
            :ARG1-of (h2 / high-02)
            :location (w / wall))))
