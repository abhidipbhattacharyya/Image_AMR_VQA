# ::tok The two trains are moving in opposite directions on the tracks .
# ::node	0	2	1-2
# ::node	t2	train	2-3
# ::node	m	move-01	4-5
# ::node	o	opposite-01	6-7
# ::node	d	direction	7-8
# ::node	t	track	10-11
# ::root	m	move-01
# ::edge	train	quant	2	t2	0	
# ::edge	move-01	ARG1	train	m	t2	
# ::edge	direction	ARG1-of	opposite-01	d	o	
# ::edge	move-01	ARG2	direction	m	d	
# ::edge	move-01	location	track	m	t	
(m / move-01
    :ARG1 (t2 / train
        :quant 2)
    :ARG2 (d / direction
        :ARG1-of (o / opposite-01))
    :location (t / track))
