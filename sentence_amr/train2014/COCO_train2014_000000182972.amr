# ::tok A double decker bus is stopped behind the other car
# ::node	d	double-decker	2-3
# ::node	b2	bus	3-4
# ::node	s	stop-01	5-6
# ::node	b	behind	6-7
# ::node	o	other	8-9
# ::node	c	car	9-10
# ::root	s	stop-01
# ::edge	bus	mod	double-decker	b2	d	
# ::edge	stop-01	ARG1	bus	s	b2	
# ::edge	stop-01	location	behind	s	b	
# ::edge	car	mod	other	c	o	
# ::edge	behind	op1	car	b	c	
(s / stop-01
    :ARG1 (b2 / bus
        :mod (d / double-decker))
    :location (b / behind
        :op1 (c / car
            :mod (o / other))))
