# ::tok Two people in a kitchen , one at the sink and one at the counter next to her .
# ::node	2	2	0-1
# ::node	p	person	1-2
# ::node	b	be-located-at-91	2-3
# ::node	k	kitchen	4-5
# ::node	i	include-91	6-7
# ::node	i2	include-91	6-7
# ::node	0	1	6-7
# ::node	1	1	6-7
# ::node	p2	person	7-8
# ::node	s2	sink	9-10
# ::node	a	and	10-11
# ::node	p3	person	11-12
# ::node	c	counter	14-15
# ::node	n	next-to	15-16
# ::node	s	she	17-18
# ::root	a	and
# ::edge	person	quant	2	p	2	
# ::edge	be-located-at-91	ARG1	person	b	p	
# ::edge	be-located-at-91	ARG2	kitchen	b	k	
# ::edge	person	ARG2-of	include-91	p	i	
# ::edge	person	ARG2-of	include-91	p	i2	
# ::edge	person	quant	1	p2	0	
# ::edge	include-91	ARG1	person	i	p2	
# ::edge	person	location	sink	p2	s2	
# ::edge	and	op1	include-91	a	i2	
# ::edge	person	quant	1	p3	1	
# ::edge	include-91	ARG1	person	i2	p3	
# ::edge	person	ARG1-of	include-91	p3	i2	
# ::edge	include-91	ARG2	counter	i2	c	
# ::edge	counter	location	next-to	c	n	
# ::edge	next-to	op1	she	n	s	
# ::edge	and	rel	be-located-at-91	a	b	
(a / and
    :op1 (i2 / include-91
        :ARG1 (p3 / person
            :quant 1
            :ARG1-of i2)
        :ARG2 (c / counter
            :location (n / next-to
                :op1 (s / she))))
    :rel (b / be-located-at-91
        :ARG1 (p / person
            :quant 2
            :ARG2-of (i / include-91
                :ARG1 (p2 / person
                    :quant 1
                    :location (s2 / sink)))
            :ARG2-of i2)
        :ARG2 (k / kitchen)))
