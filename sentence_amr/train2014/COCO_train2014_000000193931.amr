# ::tok Two different pictures shows two different girls , one eating french toast , one eating pancakes .
# ::node	2	2	0-1
# ::node	d	differ-02	1-2
# ::node	p	picture	2-3
# ::node	s	show-01	3-4
# ::node	g	girl	6-7
# ::node	i	include-91	8-9
# ::node	i2	include-91	8-9
# ::node	0	1	8-9
# ::node	e	eat-01	9-10
# ::node	c	country	10-11
# ::node	n	name	10-11
# ::node	3	France	10-11
# ::node	t	toast	11-12
# ::node	a	and	12-13
# ::node	1	1	13-14
# ::node	e2	eat-01	14-15
# ::node	e3	egg	15-16
# ::node	p2	poppy	15-16
# ::root	s	show-01
# ::edge	picture	ARG1-of	differ-02	p	d	
# ::edge	picture	quant	2	p	2	
# ::edge	show-01	ARG0	picture	s	p	
# ::edge	show-01	ARG1	girl	s	g	
# ::edge	differ-02	ARG1	girl	d	g	
# ::edge	girl	quant	2	g	2	
# ::edge	girl	ARG2-of	include-91	g	i	
# ::edge	girl	ARG2-of	include-91	g	i2	
# ::edge	country	name	name	c	n	
# ::edge	name	op1	France	n	3	
# ::edge	toast	mod	country	t	c	
# ::edge	eat-01	ARG1	toast	e	t	
# ::edge	and	op1	eat-01	a	e	
# ::edge	include-91	ARG1	and	i	a	
# ::edge	and	op2	eat-01	a	e2	
# ::edge	eat-01	ARG1	egg	e2	e3	
# ::edge	egg	mod	country	e3	c	
# ::edge	eat-01	ARG1	poppy	e2	p2	
# ::edge	show-01	rel	1	s	0	
# ::edge	show-01	rel	1	s	1	
(s / show-01
    :ARG0 (p / picture
        :quant 2
        :ARG1-of (d / differ-02
            :ARG1 (g / girl
                :quant 2
                :ARG2-of (i / include-91
                    :ARG1 (a / and
                        :op1 (e / eat-01
                            :ARG1 (t / toast
                                :mod (c / country
                                    :name (n / name
                                        :op1 "France"))))
                        :op2 (e2 / eat-01
                            :ARG1 (e3 / egg
                                :mod c)
                            :ARG1 (p2 / poppy))))
                :ARG2-of (i2 / include-91))))
    :ARG1 g
    :rel 1
    :rel 1)
