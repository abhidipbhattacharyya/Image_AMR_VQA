# ::tok A traffic light that is green with a sign saying go sticking out of the side of it .
# ::node	t	traffic	1-2
# ::node	l	light	2-3
# ::node	g2	green-02	5-6
# ::node	h	have-03	6-7
# ::node	s3	sign	8-9
# ::node	s	say-01	9-10
# ::node	g	go-01	10-11
# ::node	s4	stick-out-02	11-12
# ::node	s2	side	15-16
# ::root	h	have-03
# ::edge	light	mod	traffic	l	t	
# ::edge	light	ARG1-of	green-02	l	g2	
# ::edge	have-03	ARG0	light	h	l	
# ::edge	have-03	ARG1	sign	h	s3	
# ::edge	sign	ARG0-of	say-01	s3	s	
# ::edge	say-01	ARG1	go-01	s	g	
# ::edge	go-01	ARG1-of	stick-out-02	g	s4	
# ::edge	stick-out-02	ARG2	side	s4	s2	
# ::edge	light	part	side	l	s2	
(h / have-03
    :ARG0 (l / light
        :ARG1-of (g2 / green-02)
        :mod (t / traffic)
        :part (s2 / side))
    :ARG1 (s3 / sign
        :ARG0-of (s / say-01
            :ARG1 (g / go-01
                :ARG1-of (s4 / stick-out-02
                    :ARG2 s2)))))
