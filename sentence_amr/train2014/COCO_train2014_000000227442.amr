# ::tok A row of green and yellow banana 's sitting on a counter .
# ::node	r	row	1-2
# ::node	g	green-02	3-4
# ::node	a	and	4-5
# ::node	y	yellow-02	5-6
# ::node	b	banana	6-7
# ::node	b2	banana	6-7
# ::node	s	sit-01	8-9
# ::node	c	counter	11-12
# ::root	s	sit-01
# ::edge	row	consist-of	and	r	a	
# ::edge	and	op1	banana	a	b	
# ::edge	banana	ARG1-of	green-02	b	g	
# ::edge	banana	ARG1-of	yellow-02	b2	y	
# ::edge	and	op2	banana	a	b2	
# ::edge	sit-01	ARG1	row	s	r	
# ::edge	sit-01	ARG2	counter	s	c	
(s / sit-01
    :ARG1 (r / row
        :consist-of (a / and
            :op1 (b / banana
                :ARG1-of (g / green-02))
            :op2 (b2 / banana
                :ARG1-of (y / yellow-02))))
    :ARG2 (c / counter))
