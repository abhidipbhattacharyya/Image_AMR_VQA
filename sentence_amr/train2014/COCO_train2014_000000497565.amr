# ::tok A black locomotive , parked on a track between a forested area and a rock , is right beside a water tower and also has a few alongside the track looking at it .
# ::node	b4	black-04	1-2
# ::node	l	locomotive	2-3
# ::node	p	park-01	4-5
# ::node	t2	track	7-8
# ::node	b3	between	8-9
# ::node	f2	forest-01	10-11
# ::node	a4	area	11-12
# ::node	r2	rock	14-15
# ::node	r	right	17-18
# ::node	b	be-located-at-91	18-19
# ::node	b2	beside	18-19
# ::node	w	water	20-21
# ::node	t	tower	21-22
# ::node	a3	and	22-23
# ::node	a2	also	23-24
# ::node	h	have-03	24-25
# ::node	f	few	26-27
# ::node	a	alongside	27-28
# ::node	l2	look-01	30-31
# ::root	a3	and
# ::edge	locomotive	ARG1-of	black-04	l	b4	
# ::edge	locomotive	ARG1-of	park-01	l	p	
# ::edge	park-01	ARG2	track	p	t2	
# ::edge	track	location	between	t2	b3	
# ::edge	area	ARG1-of	forest-01	a4	f2	
# ::edge	between	op1	area	b3	a4	
# ::edge	between	op2	rock	b3	r2	
# ::edge	be-located-at-91	ARG1	locomotive	b	l	
# ::edge	be-located-at-91	ARG2	beside	b	b2	
# ::edge	beside	mod	right	b2	r	
# ::edge	tower	mod	water	t	w	
# ::edge	beside	op1	tower	b2	t	
# ::edge	and	op1	be-located-at-91	a3	b	
# ::edge	have-03	mod	also	h	a2	
# ::edge	and	op2	have-03	a3	h	
# ::edge	have-03	ARG0	locomotive	h	l	
# ::edge	have-03	ARG1	few	h	f	
# ::edge	few	location	alongside	f	a	
# ::edge	alongside	op1	track	a	t2	
# ::edge	few	ARG0-of	look-01	f	l2	
# ::edge	look-01	ARG1	tower	l2	t	
(a3 / and
    :op1 (b / be-located-at-91
        :ARG1 (l / locomotive
            :ARG1-of (b4 / black-04)
            :ARG1-of (p / park-01
                :ARG2 (t2 / track
                    :location (b3 / between
                        :op1 (a4 / area
                            :ARG1-of (f2 / forest-01))
                        :op2 (r2 / rock)))))
        :ARG2 (b2 / beside
            :mod (r / right)
            :op1 (t / tower
                :mod (w / water))))
    :op2 (h / have-03
        :ARG0 l
        :ARG1 (f / few
            :ARG0-of (l2 / look-01
                :ARG1 t)
            :location (a / alongside
                :op1 t2))
        :mod (a2 / also)))
