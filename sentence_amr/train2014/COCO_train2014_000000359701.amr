# ::tok A train that is following the tracks next to another train .
# ::node	t2	train	1-2
# ::node	f	follow-01	4-5
# ::node	t	track	6-7
# ::node	n	next-to	7-8
# ::node	a	another	9-10
# ::node	t3	train	10-11
# ::root	t2	train
# ::edge	train	ARG1-of	follow-01	t2	f	
# ::edge	follow-01	ARG2	track	f	t	
# ::edge	follow-01	location	next-to	f	n	
# ::edge	train	mod	another	t3	a	
# ::edge	next-to	op1	train	n	t3	
(t2 / train
    :ARG1-of (f / follow-01
        :ARG2 (t / track)
        :location (n / next-to
            :op1 (t3 / train
                :mod (a / another)))))
