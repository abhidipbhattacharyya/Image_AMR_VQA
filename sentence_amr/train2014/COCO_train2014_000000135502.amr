# ::tok Two signs attached to a metal pole that has a traffic light on it .
# ::node	0	2	0-1
# ::node	s	sign	1-2
# ::node	a	attach-01	2-3
# ::node	m	metal	5-6
# ::node	p	pole	6-7
# ::node	h	have-03	8-9
# ::node	t	traffic	10-11
# ::node	l	light	11-12
# ::root	a	attach-01
# ::edge	sign	quant	2	s	0	
# ::edge	attach-01	ARG1	sign	a	s	
# ::edge	pole	consist-of	metal	p	m	
# ::edge	attach-01	ARG2	pole	a	p	
# ::edge	pole	ARG0-of	have-03	p	h	
# ::edge	light	mod	traffic	l	t	
# ::edge	have-03	ARG1	light	h	l	
(a / attach-01
    :ARG1 (s / sign
        :quant 2)
    :ARG2 (p / pole
        :ARG0-of (h / have-03
            :ARG1 (l / light
                :mod (t / traffic)))
        :consist-of (m / metal)))
