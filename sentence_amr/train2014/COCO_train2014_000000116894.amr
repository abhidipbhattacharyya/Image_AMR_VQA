# ::tok A stop sign with a train going by in the background .
# ::node	s2	stop-01	1-2
# ::node	s	signal-07	2-3
# ::node	h	have-03	3-4
# ::node	t	train	5-6
# ::node	g	go-01	6-7
# ::node	b2	by	7-8
# ::node	b	background	10-11
# ::root	s	signal-07
# ::edge	signal-07	ARG1	stop-01	s	s2	
# ::edge	signal-07	ARG0-of	have-03	s	h	
# ::edge	have-03	ARG1	train	h	t	
# ::edge	train	ARG1-of	go-01	t	g	
# ::edge	go-01	ARG4	by	g	b2	
# ::edge	go-01	location	background	g	b	
(s / signal-07
    :ARG0-of (h / have-03
        :ARG1 (t / train
            :ARG1-of (g / go-01
                :ARG4 (b2 / by)
                :location (b / background))))
    :ARG1 (s2 / stop-01))
