# ::tok A cake sitting on top of a table next to two plates with pieces of cake .
# ::node	c	cake	1-2
# ::node	s	sit-01	2-3
# ::node	t2	top	4-5
# ::node	t	table	7-8
# ::node	n	next-to	8-9
# ::node	0	2	10-11
# ::node	p2	plate	11-12
# ::node	p	piece	13-14
# ::root	s	sit-01
# ::edge	sit-01	ARG1	cake	s	c	
# ::edge	sit-01	ARG2	top	s	t2	
# ::edge	top	part-of	table	t2	t	
# ::edge	table	location-of	next-to	t	n	
# ::edge	plate	quant	2	p2	0	
# ::edge	next-to	op1	plate	n	p2	
# ::edge	plate	consist-of	piece	p2	p	
# ::edge	cake	part	piece	c	p	
(s / sit-01
    :ARG1 (c / cake
        :part (p / piece))
    :ARG2 (t2 / top
        :part-of (t / table
            :location-of (n / next-to
                :op1 (p2 / plate
                    :quant 2
                    :consist-of p)))))
