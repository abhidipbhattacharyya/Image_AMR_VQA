# ::tok Happy man saying yo , dawg !
# ::node	h	happy-01	0-1
# ::node	m	man	1-2
# ::node	s	say-01	2-3
# ::node	y	yo	3-4
# ::node	s2	say-01	4-5
# ::node	0	expressive	4-5
# ::node	d	dawg	5-6
# ::node	i	i	6-7
# ::root	s	say-01
# ::edge	man	ARG1-of	happy-01	m	h	
# ::edge	say-01	ARG0	man	s	m	
# ::edge	say-01	ARG1	yo	s2	y	
# ::edge	say-01	ARG1	say-01	s	s2	
# ::edge	dawg	mode	expressive	d	0	
# ::edge	say-01	ARG2	dawg	s2	d	
# ::edge	say-01	ARG0	i	s2	i	
# ::edge	say-01	ARG2	i	s	i	
(s / say-01
    :ARG0 (m / man
        :ARG1-of (h / happy-01))
    :ARG1 (s2 / say-01
        :ARG0 (i / i)
        :ARG1 (y / yo)
        :ARG2 (d / dawg
            :mode expressive))
    :ARG2 i)


# ::tok I heard you like pizza
# ::node	i	i	0-1
# ::node	h	hear-01	1-2
# ::node	y	you	2-3
# ::node	l	like-01	3-4
# ::node	p	pizza	4-5
# ::root	h	hear-01
# ::edge	hear-01	ARG0	i	h	i	
# ::edge	like-01	ARG0	you	l	y	
# ::edge	hear-01	ARG1	like-01	h	l	
# ::edge	like-01	ARG1	pizza	l	p	
(h / hear-01
    :ARG0 (i / i)
    :ARG1 (l / like-01
        :ARG0 (y / you)
        :ARG1 (p / pizza)))


# ::tok so I put a pizza on your pizza .
# ::node	c	cause-01	0-1
# ::node	i	i	1-2
# ::node	p3	put-01	2-3
# ::node	p	pizza	4-5
# ::node	y	you	6-7
# ::node	p2	pizza	7-8
# ::root	c	cause-01
# ::edge	put-01	ARG0	i	p3	i	
# ::edge	cause-01	ARG1	put-01	c	p3	
# ::edge	put-01	ARG1	pizza	p3	p	
# ::edge	pizza	poss	you	p2	y	
# ::edge	put-01	ARG2	pizza	p3	p2	
(c / cause-01
    :ARG1 (p3 / put-01
        :ARG0 (i / i)
        :ARG1 (p / pizza)
        :ARG2 (p2 / pizza
            :poss (y / you))))
