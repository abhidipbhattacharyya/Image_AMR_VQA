# ::tok A small , white - walled kitchen with wood cabinetry and a number of built in floodlights , is nearly empty , save for a refrigerator and a lot of cleaning supplies resting on one counter .
# ::node	s	small	1-2
# ::node	w2	white-03	3-4
# ::node	w	wall-off-01	5-6
# ::node	k	kitchen	6-7
# ::node	h	have-03	7-8
# ::node	w3	wood	8-9
# ::node	c	cabinetry	9-10
# ::node	a	and	10-11
# ::node	n2	number	12-13
# ::node	b	build-03	14-15
# ::node	l	light	16-17
# ::node	f	flood-01	16-17
# ::node	n	near	19-20
# ::node	e	empty-02	20-21
# ::node	e2	except-01	22-23
# ::node	r	refrigerator	25-26
# ::node	a2	and	26-27
# ::node	l2	lot	28-29
# ::node	c2	clean-01	30-31
# ::node	s2	supply-01	31-32
# ::node	r2	rest-01	32-33
# ::node	0	1	34-35
# ::node	c3	counter	35-36
# ::root	e	empty-02
# ::edge	wall-off-01	ARG1-of	white-03	w	w2	
# ::edge	kitchen	ARG1-of	wall-off-01	k	w	
# ::edge	kitchen	mod	small	k	s	
# ::edge	kitchen	ARG0-of	have-03	k	h	
# ::edge	cabinetry	consist-of	wood	c	w3	
# ::edge	and	op1	cabinetry	a	c	
# ::edge	have-03	ARG1	and	h	a	
# ::edge	light	ARG1-of	build-03	l	b	
# ::edge	light	quant	number	l	n2	
# ::edge	and	op2	light	a	l	
# ::edge	light	ARG0-of	flood-01	l	f	
# ::edge	empty-02	degree	near	e	n	
# ::edge	empty-02	ARG1	kitchen	e	k	
# ::edge	empty-02	ARG2-of	except-01	e	e2	
# ::edge	and	op1	refrigerator	a2	r	
# ::edge	except-01	ARG1	and	e2	a2	
# ::edge	supply-01	ARG1	clean-01	s2	c2	
# ::edge	supply-01	quant	lot	s2	l2	
# ::edge	rest-01	ARG1	supply-01	r2	s2	
# ::edge	and	op2	rest-01	a2	r2	
# ::edge	counter	quant	1	c3	0	
# ::edge	rest-01	ARG2	counter	r2	c3	
(e / empty-02
    :ARG1 (k / kitchen
        :ARG0-of (h / have-03
            :ARG1 (a / and
                :op1 (c / cabinetry
                    :consist-of (w3 / wood))
                :op2 (l / light
                    :quant (n2 / number)
                    :ARG0-of (f / flood-01)
                    :ARG1-of (b / build-03))))
        :ARG1-of (w / wall-off-01
            :ARG1-of (w2 / white-03))
        :mod (s / small))
    :ARG2-of (e2 / except-01
        :ARG1 (a2 / and
            :op1 (r / refrigerator)
            :op2 (r2 / rest-01
                :ARG1 (s2 / supply-01
                    :quant (l2 / lot)
                    :ARG1 (c2 / clean-01))
                :ARG2 (c3 / counter
                    :quant 1))))
    :degree (n / near))
