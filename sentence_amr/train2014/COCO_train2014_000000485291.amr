# ::tok Two pizzas in pizza boxes with different toppings next to each other .
# ::node	0	2	0-1
# ::node	p2	pizzeria	1-2
# ::node	p	pizza	3-4
# ::node	b	box	4-5
# ::node	h	have-03	5-6
# ::node	d	differ-02	6-7
# ::node	i	ingredient	7-8
# ::node	t	top-01	7-8
# ::node	n	next-to	8-9
# ::node	h2	have-purpose-91	9-10
# ::root	h2	have-purpose-91
# ::edge	pizzeria	quant	2	p2	0	
# ::edge	box	mod	pizza	b	p	
# ::edge	pizzeria	location	box	p2	b	
# ::edge	pizzeria	ARG0-of	have-03	p2	h	
# ::edge	ingredient	ARG1-of	differ-02	i	d	
# ::edge	have-03	ARG1	ingredient	h	i	
# ::edge	ingredient	ARG2-of	top-01	i	t	
# ::edge	pizzeria	location	next-to	p2	n	
# ::edge	have-purpose-91	ARG2	pizzeria	h2	p2	
# ::edge	have-purpose-91	ARG1	pizzeria	h2	p2	
(h2 / have-purpose-91
    :ARG1 (p2 / pizzeria
        :quant 2
        :ARG0-of (h / have-03
            :ARG1 (i / ingredient
                :ARG1-of (d / differ-02)
                :ARG2-of (t / top-01)))
        :location (b / box
            :mod (p / pizza))
        :location (n / next-to))
    :ARG2 p2)
