# ::tok Bedroom , bed in foreground , background has side table with laptop back and upside down 707 characters labels .
# ::node	b5	bedroom	0-1
# ::node	a	and	1-2
# ::node	b3	bed	2-3
# ::node	b4	bed	2-3
# ::node	f	foreground	4-5
# ::node	b2	background	6-7
# ::node	h	have-03	7-8
# ::node	s	side	8-9
# ::node	t	table	9-10
# ::node	h2	have-03	10-11
# ::node	l2	laptop	11-12
# ::node	b	back	12-13
# ::node	a2	and	13-14
# ::node	u	upside	14-15
# ::node	d	down-03	15-16
# ::node	0	707	16-17
# ::node	c	character	17-18
# ::node	l	label-01	18-19
# ::root	h	have-03
# ::edge	and	op1	bedroom	a	b5	
# ::edge	and	op2	bed	a	b3	
# ::edge	and	op3	bed	a	b4	
# ::edge	bed	location	foreground	b3	f	
# ::edge	bed	location	background	b4	b2	
# ::edge	have-03	ARG0	and	h	a	
# ::edge	table	mod	side	t	s	
# ::edge	table	ARG0-of	have-03	t	h2	
# ::edge	have-03	ARG1	laptop	h2	l2	
# ::edge	laptop	mod	back	l2	b	
# ::edge	and	op1	table	a2	t	
# ::edge	have-03	ARG1	and	h	a2	
# ::edge	and	op2	upside	a2	u	
# ::edge	upside	direction	down-03	u	d	
# ::edge	character	quant	707	c	0	
# ::edge	label-01	ARG2	character	l	c	
# ::edge	upside	ARG1	label-01	u	l	
(h / have-03
    :ARG0 (a / and
        :op1 (b5 / bedroom)
        :op2 (b3 / bed
            :location (f / foreground))
        :op3 (b4 / bed
            :location (b2 / background)))
    :ARG1 (a2 / and
        :op1 (t / table
            :ARG0-of (h2 / have-03
                :ARG1 (l2 / laptop
                    :mod (b / back)))
            :mod (s / side))
        :op2 (u / upside
            :ARG1 (l / label-01
                :ARG2 (c / character
                    :quant 707))
            :direction (d / down-03))))
