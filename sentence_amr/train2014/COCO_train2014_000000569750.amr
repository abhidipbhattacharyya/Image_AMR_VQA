# ::tok An . airplane carrying a smaller aircraft flies in the air .
# ::node	0	1	0-1
# ::node	a3	airplane	2-3
# ::node	c	carry-01	3-4
# ::node	h	have-degree-91	5-6
# ::node	s	small	5-6
# ::node	m	more	5-6
# ::node	a2	aircraft	6-7
# ::node	f	fly-01	7-8
# ::node	a	air	10-11
# ::root	f	fly-01
# ::edge	airplane	quant	1	a3	0	
# ::edge	airplane	ARG0-of	carry-01	a3	c	
# ::edge	have-degree-91	ARG2	small	h	s	
# ::edge	have-degree-91	ARG3	more	h	m	
# ::edge	aircraft	ARG1-of	have-degree-91	a2	h	
# ::edge	carry-01	ARG1	aircraft	c	a2	
# ::edge	fly-01	ARG1	airplane	f	a3	
# ::edge	fly-01	path	air	f	a	
(f / fly-01
    :ARG1 (a3 / airplane
        :quant 1
        :ARG0-of (c / carry-01
            :ARG1 (a2 / aircraft
                :ARG1-of (h / have-degree-91
                    :ARG2 (s / small)
                    :ARG3 (m / more)))))
    :path (a / air))
