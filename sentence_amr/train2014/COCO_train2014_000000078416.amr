# ::tok An open sided train , one car with a thatched roof , with full of people .
# ::node	o2	open-06	1-2
# ::node	o	one-sided	2-3
# ::node	t	train	3-4
# ::node	0	1	5-6
# ::node	c	car	6-7
# ::node	h	have-03	7-8
# ::node	c2	corrugate-01	9-10
# ::node	r	roof	10-11
# ::node	f	full-09	13-14
# ::node	p	person	15-16
# ::root	t	train
# ::edge	one-sided	ARG1-of	open-06	o	o2	
# ::edge	train	mod	one-sided	t	o	
# ::edge	car	quant	1	c	0	
# ::edge	train	mod	car	t	c	
# ::edge	car	ARG0-of	have-03	c	h	
# ::edge	roof	ARG1-of	corrugate-01	r	c2	
# ::edge	have-03	ARG1	roof	h	r	
# ::edge	train	ARG1-of	full-09	t	f	
# ::edge	full-09	ARG2	person	f	p	
(t / train
    :ARG1-of (f / full-09
        :ARG2 (p / person))
    :mod (o / one-sided
        :ARG1-of (o2 / open-06))
    :mod (c / car
        :quant 1
        :ARG0-of (h / have-03
            :ARG1 (r / roof
                :ARG1-of (c2 / corrugate-01)))))
