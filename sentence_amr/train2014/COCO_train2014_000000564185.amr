# ::tok The elephant has a bird sitting on
# ::node	e	elephant	1-2
# ::node	b	bird	4-5
# ::node	s	sit-01	5-6
# ::root	s	sit-01
# ::edge	sit-01	ARG1	bird	s	b	
# ::edge	sit-01	ARG0	elephant	s	e	
(s / sit-01
    :ARG0 (e / elephant)
    :ARG1 (b / bird))


# ::tok it 's trunk and hay on it 's back .
# ::node	i	it	0-1
# ::node	t	trunk	2-3
# ::node	a	and	3-4
# ::node	h	hay	4-5
# ::node	b	back	8-9
# ::root	a	and
# ::edge	trunk	part-of	it	t	i	
# ::edge	and	op1	trunk	a	t	
# ::edge	and	op2	hay	a	h	
# ::edge	and	location	back	a	b	
# ::edge	it	part	back	i	b	
(a / and
    :location (b / back)
    :op1 (t / trunk
        :part-of (i / it
            :part b))
    :op2 (h / hay))
