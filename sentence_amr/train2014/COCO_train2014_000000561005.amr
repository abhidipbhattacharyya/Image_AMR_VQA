# ::tok A train on a train track near a body of water that shows its reflection .
# ::node	t2	train	1-2
# ::node	t3	train	4-5
# ::node	t	track	5-6
# ::node	n	near-02	6-7
# ::node	b	body	8-9
# ::node	w	water	10-11
# ::node	s	show-01	12-13
# ::node	r	reflect-01	14-15
# ::root	t2	train
# ::edge	track	mod	train	t	t3	
# ::edge	train	location	track	t2	t	
# ::edge	train	ARG1-of	near-02	t2	n	
# ::edge	near-02	ARG2	body	n	b	
# ::edge	body	consist-of	water	b	w	
# ::edge	body	ARG0-of	show-01	b	s	
# ::edge	show-01	ARG1	reflect-01	s	r	
# ::edge	reflect-01	ARG2	train	r	t2	
# ::edge	reflect-01	ARG1	train	r	t2	
(t2 / train
    :ARG1-of (n / near-02
        :ARG2 (b / body
            :ARG0-of (s / show-01
                :ARG1 (r / reflect-01
                    :ARG1 t2
                    :ARG2 t2))
            :consist-of (w / water)))
    :location (t / track
        :mod (t3 / train)))
