# ::tok A walk / do n't walk traffic light at an intersection along with some other signs .
# ::node	w	walk-01	1-2
# ::node	s2	slash	2-3
# ::node	y	you	3-4
# ::node	1	imperative	3-4
# ::node	0	-	4-5
# ::node	w2	walk-01	5-6
# ::node	t	traffic	6-7
# ::node	l	light	7-8
# ::node	i	intersect-01	10-11
# ::node	a	and	12-13
# ::node	s3	some	13-14
# ::node	o	other	14-15
# ::node	s	sign	15-16
# ::root	a	and
# ::edge	slash	op1	walk-01	s2	w	
# ::edge	walk-01	polarity	-	w2	0	
# ::edge	walk-01	mode	imperative	w2	1	
# ::edge	walk-01	ARG0	you	w2	y	
# ::edge	slash	op2	walk-01	s2	w2	
# ::edge	light	mod	traffic	l	t	
# ::edge	light	mod	slash	l	s2	
# ::edge	light	location	intersect-01	l	i	
# ::edge	and	op1	light	a	l	
# ::edge	sign	mod	other	s	o	
# ::edge	sign	quant	some	s	s3	
# ::edge	and	op2	sign	a	s	
(a / and
    :op1 (l / light
        :location (i / intersect-01)
        :mod (t / traffic)
        :mod (s2 / slash
            :op1 (w / walk-01)
            :op2 (w2 / walk-01
                :ARG0 (y / you)
                :mode imperative
                :polarity -)))
    :op2 (s / sign
        :quant (s3 / some)
        :mod (o / other)))
