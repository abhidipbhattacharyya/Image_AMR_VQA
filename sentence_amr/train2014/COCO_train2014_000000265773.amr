# ::tok Red , green , and white train on tracks with mountains behind it .
# ::node	r	red-02	0-1
# ::node	g	green-02	2-3
# ::node	a	and	4-5
# ::node	w	white-03	5-6
# ::node	t2	train	6-7
# ::node	t3	train	6-7
# ::node	t4	train	6-7
# ::node	t	track	8-9
# ::node	h	have-03	9-10
# ::node	m	mountain	10-11
# ::node	b	behind	11-12
# ::root	a	and
# ::edge	and	op1	train	a	t2	
# ::edge	train	ARG1-of	red-02	t2	r	
# ::edge	and	op2	train	a	t3	
# ::edge	train	ARG1-of	green-02	t3	g	
# ::edge	train	ARG1-of	white-03	t4	w	
# ::edge	and	op3	train	a	t4	
# ::edge	and	location	track	a	t	
# ::edge	track	ARG0-of	have-03	t	h	
# ::edge	have-03	ARG1	mountain	h	m	
# ::edge	mountain	location	behind	m	b	
# ::edge	behind	op1	and	b	a	
(a / and
    :location (t / track
        :ARG0-of (h / have-03
            :ARG1 (m / mountain
                :location (b / behind
                    :op1 a))))
    :op1 (t2 / train
        :ARG1-of (r / red-02))
    :op2 (t3 / train
        :ARG1-of (g / green-02))
    :op3 (t4 / train
        :ARG1-of (w / white-03)))
