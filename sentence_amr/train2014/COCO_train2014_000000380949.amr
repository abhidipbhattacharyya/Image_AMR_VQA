# ::tok A baby elephant that is laying on the ground looking at two larger elephants .
# ::node	b	baby	1-2
# ::node	e	elephant	2-3
# ::node	l2	lay-01	5-6
# ::node	g	ground	8-9
# ::node	l3	look-01	9-10
# ::node	0	2	11-12
# ::node	h	have-degree-91	12-13
# ::node	l	large	12-13
# ::node	m	more	12-13
# ::node	e2	elephant	13-14
# ::root	e	elephant
# ::edge	elephant	mod	baby	e	b	
# ::edge	elephant	ARG1-of	lay-01	e	l2	
# ::edge	lay-01	ARG2	ground	l2	g	
# ::edge	elephant	ARG0-of	look-01	e	l3	
# ::edge	have-degree-91	ARG2	large	h	l	
# ::edge	have-degree-91	ARG3	more	h	m	
# ::edge	elephant	ARG1-of	have-degree-91	e2	h	
# ::edge	elephant	quant	2	e2	0	
# ::edge	look-01	ARG1	elephant	l3	e2	
(e / elephant
    :ARG0-of (l3 / look-01
        :ARG1 (e2 / elephant
            :quant 2
            :ARG1-of (h / have-degree-91
                :ARG2 (l / large)
                :ARG3 (m / more))))
    :ARG1-of (l2 / lay-01
        :ARG2 (g / ground))
    :mod (b / baby))
