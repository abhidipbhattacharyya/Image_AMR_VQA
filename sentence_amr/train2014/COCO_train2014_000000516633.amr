# ::tok Train conductor inside guiding the train down the track .
# ::node	t2	train	0-1
# ::node	p	person	1-2
# ::node	h	have-org-role-91	1-2
# ::node	c	conduct-01	1-2
# ::node	i	inside	2-3
# ::node	g	guide-01	3-4
# ::node	d	down	6-7
# ::node	t	track	8-9
# ::root	g	guide-01
# ::edge	person	ARG0-of	have-org-role-91	p	h	
# ::edge	have-org-role-91	ARG1	train	h	t2	
# ::edge	have-org-role-91	ARG3	conduct-01	h	c	
# ::edge	conduct-01	ARG0	person	c	p	
# ::edge	conduct-01	ARG1	train	c	t2	
# ::edge	guide-01	location	inside	g	i	
# ::edge	guide-01	ARG0	person	g	p	
# ::edge	guide-01	direction	down	g	d	
# ::edge	guide-01	ARG2	track	g	t	
(g / guide-01
    :ARG0 (p / person
        :ARG0-of (h / have-org-role-91
            :ARG1 (t2 / train)
            :ARG3 (c / conduct-01
                :ARG0 p
                :ARG1 t2)))
    :ARG2 (t / track)
    :direction (d / down)
    :location (i / inside))
