# ::tok Two trains are on train tracks next to each other , heading in the same direction .
# ::node	0	2	0-1
# ::node	t2	train	1-2
# ::node	b	be-located-at-91	3-4
# ::node	t	track	5-6
# ::node	n	next-to	6-7
# ::node	h	head-02	11-12
# ::node	s	same-01	14-15
# ::node	d	direction	15-16
# ::root	b	be-located-at-91
# ::edge	train	quant	2	t2	0	
# ::edge	be-located-at-91	ARG1	train	b	t2	
# ::edge	be-located-at-91	ARG2	track	b	t	
# ::edge	track	location	next-to	t	n	
# ::edge	next-to	op1	train	n	t2	
# ::edge	train	ARG0-of	head-02	t2	h	
# ::edge	direction	ARG1-of	same-01	d	s	
# ::edge	head-02	ARG1	direction	h	d	
(b / be-located-at-91
    :ARG1 (t2 / train
        :quant 2
        :ARG0-of (h / head-02
            :ARG1 (d / direction
                :ARG1-of (s / same-01))))
    :ARG2 (t / track
        :location (n / next-to
            :op1 t2)))
