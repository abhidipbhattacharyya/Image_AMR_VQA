# ::tok A bridge is over a river and a train with one yellow car is crossing the bridge .
# ::node	b	bridge	1-2
# ::node	o	over	3-4
# ::node	r	river	5-6
# ::node	a	and	6-7
# ::node	t	train	8-9
# ::node	h	have-03	9-10
# ::node	0	1	10-11
# ::node	y	yellow-02	11-12
# ::node	c	car	12-13
# ::node	c2	cross-02	14-15
# ::root	a	and
# ::edge	bridge	location	over	b	o	
# ::edge	over	op1	river	o	r	
# ::edge	and	op1	bridge	a	b	
# ::edge	train	ARG0-of	have-03	t	h	
# ::edge	car	ARG1-of	yellow-02	c	y	
# ::edge	car	quant	1	c	0	
# ::edge	have-03	ARG1	car	h	c	
# ::edge	cross-02	ARG0	train	c2	t	
# ::edge	and	op2	cross-02	a	c2	
# ::edge	cross-02	ARG1	bridge	c2	b	
(a / and
    :op1 (b / bridge
        :location (o / over
            :op1 (r / river)))
    :op2 (c2 / cross-02
        :ARG0 (t / train
            :ARG0-of (h / have-03
                :ARG1 (c / car
                    :quant 1
                    :ARG1-of (y / yellow-02))))
        :ARG1 b))
