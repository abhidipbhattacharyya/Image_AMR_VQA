# ::tok Double decker bus in front of a building with people around
# ::node	d2	double-01	0-1
# ::node	d	decker	1-2
# ::node	b4	bus	2-3
# ::node	b	be-located-at-91	3-4
# ::node	i	in-front-of	4-5
# ::node	b3	building	7-8
# ::node	p	person	9-10
# ::node	b2	be-located-at-91	10-11
# ::node	a	around	10-11
# ::root	b	be-located-at-91
# ::edge	decker	ARG1-of	double-01	d	d2	
# ::edge	bus	mod	decker	b4	d	
# ::edge	be-located-at-91	ARG1	bus	b	b4	
# ::edge	be-located-at-91	ARG2	in-front-of	b	i	
# ::edge	in-front-of	op1	building	i	b3	
# ::edge	be-located-at-91	ARG1	person	b2	p	
# ::edge	building	ARG2-of	be-located-at-91	b3	b2	
# ::edge	be-located-at-91	location	around	b2	a	
(b / be-located-at-91
    :ARG1 (b4 / bus
        :mod (d / decker
            :ARG1-of (d2 / double-01)))
    :ARG2 (i / in-front-of
        :op1 (b3 / building
            :ARG2-of (b2 / be-located-at-91
                :ARG1 (p / person)
                :location (a / around)))))
