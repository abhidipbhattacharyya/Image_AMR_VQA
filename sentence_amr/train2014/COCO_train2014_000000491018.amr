# ::tok Three bowls of fruit ; two of them containing only bananas while the third is a mix of apples , squash , and oranges .
# ::node	1	3	0-1
# ::node	p	pound	1-2
# ::node	p2	pound	1-2
# ::node	f	fruit	3-4
# ::node	a	and	4-5
# ::node	0	2	5-6
# ::node	i	include-91	6-7
# ::node	c	contain-01	8-9
# ::node	o	only	9-10
# ::node	b	banana	10-11
# ::node	o3	ordinal-entity	13-14
# ::node	2	3	13-14
# ::node	m	mix-01	16-17
# ::node	a3	apple	18-19
# ::node	a2	and	19-20
# ::node	s	squash	20-21
# ::node	o2	orange	23-24
# ::root	a	and
# ::edge	pound	quant	3	p	1	
# ::edge	pound	consist-of	fruit	p	f	
# ::edge	and	op1	pound	a	p	
# ::edge	pound	quant	2	p2	0	
# ::edge	pound	ARG2-of	include-91	p2	i	
# ::edge	include-91	ARG1	pound	i	p2	
# ::edge	pound	ARG0-of	contain-01	p2	c	
# ::edge	banana	mod	only	b	o	
# ::edge	contain-01	ARG1	banana	c	b	
# ::edge	ordinal-entity	value	3	o3	2	
# ::edge	mix-01	ord	ordinal-entity	m	o3	
# ::edge	and	op2	mix-01	a	m	
# ::edge	mix-01	ARG3	pound	m	p2	
# ::edge	and	op1	apple	a2	a3	
# ::edge	mix-01	ARG1	and	m	a2	
# ::edge	and	op2	squash	a2	s	
# ::edge	and	op3	orange	a2	o2	
(a / and
    :op1 (p / pound
        :quant 3
        :consist-of (f / fruit))
    :op2 (m / mix-01
        :ARG1 (a2 / and
            :op1 (a3 / apple)
            :op2 (s / squash)
            :op3 (o2 / orange))
        :ARG3 (p2 / pound
            :quant 2
            :ARG0-of (c / contain-01
                :ARG1 (b / banana
                    :mod (o / only)))
            :ARG2-of (i / include-91
                :ARG1 p2))
        :ord (o3 / ordinal-entity
            :value 3)))
