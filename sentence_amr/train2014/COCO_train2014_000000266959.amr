# ::tok Looking out a window at two passenger trains going in opposite directions .
# ::node	l	look-01	0-1
# ::node	w	window	3-4
# ::node	0	2	5-6
# ::node	p	passenger	6-7
# ::node	t	train	7-8
# ::node	g	go-01	8-9
# ::node	o	opposite-01	10-11
# ::root	l	look-01
# ::edge	look-01	ARG1	window	l	w	
# ::edge	train	mod	passenger	t	p	
# ::edge	train	quant	2	t	0	
# ::edge	look-01	ARG2	train	l	t	
# ::edge	train	ARG1-of	go-01	t	g	
# ::edge	go-01	direction	opposite-01	g	o	
(l / look-01
    :ARG1 (w / window)
    :ARG2 (t / train
        :quant 2
        :ARG1-of (g / go-01
            :direction (o / opposite-01))
        :mod (p / passenger)))
