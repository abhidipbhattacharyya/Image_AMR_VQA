# ::tok a red and white stop sign with round holes in it and some cars
# ::node	r	red-02	1-2
# ::node	a	and	2-3
# ::node	w	white-03	3-4
# ::node	s4	stop-01	4-5
# ::node	s2	signal-07	5-6
# ::node	s	sign	5-6
# ::node	h	have-03	6-7
# ::node	r2	round-06	7-8
# ::node	h2	hole	8-9
# ::node	s3	some	12-13
# ::node	c	car	13-14
# ::root	a	and
# ::edge	signal-07	ARG1	stop-01	s2	s4	
# ::edge	and	op1	signal-07	a	s2	
# ::edge	signal-07	ARG1-of	red-02	s2	r	
# ::edge	sign	mod	stop-01	s	s4	
# ::edge	sign	ARG1-of	white-03	s	w	
# ::edge	and	op2	sign	a	s	
# ::edge	sign	ARG0-of	have-03	s	h	
# ::edge	hole	ARG1-of	round-06	h2	r2	
# ::edge	have-03	ARG1	hole	h	h2	
# ::edge	car	quant	some	c	s3	
# ::edge	and	op3	car	a	c	
(a / and
    :op1 (s2 / signal-07
        :ARG1 (s4 / stop-01)
        :ARG1-of (r / red-02))
    :op2 (s / sign
        :ARG0-of (h / have-03
            :ARG1 (h2 / hole
                :ARG1-of (r2 / round-06)))
        :ARG1-of (w / white-03)
        :mod s4)
    :op3 (c / car
        :quant (s3 / some)))
