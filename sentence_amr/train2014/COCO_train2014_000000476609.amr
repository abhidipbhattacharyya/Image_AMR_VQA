# ::tok A city with stop sign and buildings and trees and houses .
# ::node	c	city	1-2
# ::node	h	have-03	2-3
# ::node	s2	stop-01	3-4
# ::node	s	signal-07	4-5
# ::node	a	and	5-6
# ::node	b	building	6-7
# ::node	t	tree	8-9
# ::node	h2	house	10-11
# ::root	c	city
# ::edge	city	ARG0-of	have-03	c	h	
# ::edge	signal-07	ARG1	stop-01	s	s2	
# ::edge	and	op1	signal-07	a	s	
# ::edge	have-03	ARG1	and	h	a	
# ::edge	and	op2	building	a	b	
# ::edge	and	op3	tree	a	t	
# ::edge	and	op4	house	a	h2	
(c / city
    :ARG0-of (h / have-03
        :ARG1 (a / and
            :op1 (s / signal-07
                :ARG1 (s2 / stop-01))
            :op2 (b / building)
            :op3 (t / tree)
            :op4 (h2 / house))))
