# ::tok Two black and silver cars driving down a non busy street
# ::node	1	2	0-1
# ::node	b	black-04	1-2
# ::node	a	and	2-3
# ::node	s	silver	3-4
# ::node	c	car	4-5
# ::node	c2	car	4-5
# ::node	d2	drive-01	5-6
# ::node	d	down	6-7
# ::node	0	-	8-9
# ::node	b2	busy-02	9-10
# ::node	s2	street	10-11
# ::root	d2	drive-01
# ::edge	and	quant	2	a	1	
# ::edge	and	op1	car	a	c	
# ::edge	car	ARG1-of	black-04	c	b	
# ::edge	car	mod	silver	c2	s	
# ::edge	and	op2	car	a	c2	
# ::edge	drive-01	ARG0	and	d2	a	
# ::edge	drive-01	direction	down	d2	d	
# ::edge	busy-02	polarity	-	b2	0	
# ::edge	street	ARG1-of	busy-02	s2	b2	
# ::edge	drive-01	path	street	d2	s2	
(d2 / drive-01
    :ARG0 (a / and
        :quant 2
        :op1 (c / car
            :ARG1-of (b / black-04))
        :op2 (c2 / car
            :mod (s / silver)))
    :direction (d / down)
    :path (s2 / street
        :ARG1-of (b2 / busy-02
            :polarity -)))
