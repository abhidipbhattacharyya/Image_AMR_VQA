# ::tok We are looking through a wire fence at a stop sign .
# ::node	w	we	0-1
# ::node	l	look-01	2-3
# ::node	t	through	3-4
# ::node	w2	wire	5-6
# ::node	f	fence	6-7
# ::node	s2	stop-01	9-10
# ::node	s	signal-07	10-11
# ::root	l	look-01
# ::edge	look-01	ARG0	we	l	w	
# ::edge	look-01	path	through	l	t	
# ::edge	fence	consist-of	wire	f	w2	
# ::edge	through	op1	fence	t	f	
# ::edge	signal-07	ARG1	stop-01	s	s2	
# ::edge	look-01	ARG1	signal-07	l	s	
(l / look-01
    :ARG0 (w / we)
    :ARG1 (s / signal-07
        :ARG1 (s2 / stop-01))
    :path (t / through
        :op1 (f / fence
            :consist-of (w2 / wire))))
