# ::tok All these children sit at a pair of tables arranged in the shape of a T.
# ::node	a	all	0-1
# ::node	t2	this	1-2
# ::node	c	child	2-3
# ::node	s2	sit-01	3-4
# ::node	p	pair	6-7
# ::node	t	table	8-9
# ::node	a2	arrange-01	9-10
# ::node	s	shape-01	12-13
# ::node	s3	string-entity	15-16
# ::node	0	T.	15-16
# ::root	s2	sit-01
# ::edge	child	mod	this	c	t2	
# ::edge	child	mod	all	c	a	
# ::edge	sit-01	ARG1	child	s2	c	
# ::edge	table	quant	pair	t	p	
# ::edge	sit-01	ARG2	table	s2	t	
# ::edge	table	ARG1-of	arrange-01	t	a2	
# ::edge	arrange-01	ARG1-of	shape-01	a2	s	
# ::edge	shape-01	ARG2	string-entity	s	s3	
# ::edge	string-entity	value	T.	s3	0	
(s2 / sit-01
    :ARG1 (c / child
        :mod (t2 / this)
        :mod (a / all))
    :ARG2 (t / table
        :quant (p / pair)
        :ARG1-of (a2 / arrange-01
            :ARG1-of (s / shape-01
                :ARG2 (s3 / string-entity
                    :value "T.")))))
