# ::tok A cat lying in a suitcase and deciding whether to travel or not .
# ::node	c	cat	1-2
# ::node	l	lie-07	2-3
# ::node	s	suitcase	5-6
# ::node	a	and	6-7
# ::node	d	decide-01	7-8
# ::node	t	travel-01	10-11
# ::node	t2	travel-01	10-11
# ::node	o	or	11-12
# ::node	0	-	12-13
# ::root	a	and
# ::edge	lie-07	ARG1	cat	l	c	
# ::edge	lie-07	ARG2	suitcase	l	s	
# ::edge	and	op1	lie-07	a	l	
# ::edge	and	op2	decide-01	a	d	
# ::edge	decide-01	ARG0	cat	d	c	
# ::edge	travel-01	ARG0	cat	t	c	
# ::edge	travel-01	ARG0	cat	t2	c	
# ::edge	or	op2	travel-01	o	t2	
# ::edge	or	op1	travel-01	o	t	
# ::edge	decide-01	ARG1	or	d	o	
# ::edge	travel-01	polarity	-	t2	0	
(a / and
    :op1 (l / lie-07
        :ARG1 (c / cat)
        :ARG2 (s / suitcase))
    :op2 (d / decide-01
        :ARG0 c
        :ARG1 (o / or
            :op1 (t / travel-01
                :ARG0 c)
            :op2 (t2 / travel-01
                :ARG0 c
                :polarity -))))
