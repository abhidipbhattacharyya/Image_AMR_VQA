# ::tok A pizza is half loaded with different toppings and ready in the box .
# ::node	p	pizza	1-2
# ::node	h	half	3-4
# ::node	l	load-01	4-5
# ::node	d	differ-02	6-7
# ::node	c	continent	7-8
# ::node	t	top-01	7-8
# ::node	a	and	8-9
# ::node	r	ready-02	9-10
# ::node	b	box	12-13
# ::root	a	and
# ::edge	load-01	degree	half	l	h	
# ::edge	load-01	ARG1	pizza	l	p	
# ::edge	continent	ARG1-of	differ-02	c	d	
# ::edge	load-01	ARG2	continent	l	c	
# ::edge	continent	ARG2-of	top-01	c	t	
# ::edge	and	op1	load-01	a	l	
# ::edge	and	op2	ready-02	a	r	
# ::edge	ready-02	ARG1	pizza	r	p	
# ::edge	ready-02	location	box	r	b	
(a / and
    :op1 (l / load-01
        :ARG1 (p / pizza)
        :ARG2 (c / continent
            :ARG1-of (d / differ-02)
            :ARG2-of (t / top-01))
        :degree (h / half))
    :op2 (r / ready-02
        :ARG1 p
        :location (b / box)))
