# ::tok A train with a red caboose next to a forest with green trees .
# ::node	t	train	1-2
# ::node	h	have-03	2-3
# ::node	r	red-02	4-5
# ::node	c	caboose	5-6
# ::node	n	next-to	6-7
# ::node	f	forest	9-10
# ::node	g	green-02	11-12
# ::node	t2	tree	12-13
# ::root	t	train
# ::edge	train	ARG0-of	have-03	t	h	
# ::edge	caboose	ARG1-of	red-02	c	r	
# ::edge	have-03	ARG1	caboose	h	c	
# ::edge	train	location	next-to	t	n	
# ::edge	next-to	op1	forest	n	f	
# ::edge	tree	ARG1-of	green-02	t2	g	
# ::edge	forest	consist-of	tree	f	t2	
(t / train
    :ARG0-of (h / have-03
        :ARG1 (c / caboose
            :ARG1-of (r / red-02)))
    :location (n / next-to
        :op1 (f / forest
            :consist-of (t2 / tree
                :ARG1-of (g / green-02)))))
