# ::tok A zebra resting its head on the hindquarters of another zebra
# ::node	z	zebra	1-2
# ::node	r	rest-01	2-3
# ::node	h	head	4-5
# ::node	h2	hinder-01	7-8
# ::node	a	another	9-10
# ::node	z2	zebra	10-11
# ::root	r	rest-01
# ::edge	rest-01	ARG0	zebra	r	z	
# ::edge	rest-01	ARG1	head	r	h	
# ::edge	zebra	part	head	z	h	
# ::edge	rest-01	ARG2	hinder-01	r	h2	
# ::edge	zebra	mod	another	z2	a	
# ::edge	hinder-01	ARG0	zebra	h2	z2	
(r / rest-01
    :ARG0 (z / zebra
        :part (h / head))
    :ARG1 h
    :ARG2 (h2 / hinder-01
        :ARG0 (z2 / zebra
            :mod (a / another))))
