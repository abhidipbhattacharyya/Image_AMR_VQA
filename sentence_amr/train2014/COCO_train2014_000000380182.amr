# ::tok A table with a white table cloth and a bunch of white flowers , next to a white cake that is leaning to the side with two owls on top .
# ::node	t	table	1-2
# ::node	h	have-03	2-3
# ::node	w	white-03	4-5
# ::node	t2	table	5-6
# ::node	c2	cloth	6-7
# ::node	a	and	7-8
# ::node	b2	bunch	9-10
# ::node	f	flower	12-13
# ::node	n2	next-to	14-15
# ::node	w2	white-03	17-18
# ::node	c	cake	18-19
# ::node	l	lean-01	21-22
# ::node	s	side	24-25
# ::node	h2	have-03	25-26
# ::node	0	2	26-27
# ::node	c3	country	27-28
# ::node	n	name	27-28
# ::node	1	Oriental	27-28
# ::node	2	W.	27-28
# ::node	b	be-located-at-91	28-29
# ::node	t3	top	29-30
# ::node	e	event	30-31
# ::root	e	event
# ::edge	table	ARG0-of	have-03	t	h	
# ::edge	cloth	mod	table	c2	t2	
# ::edge	cloth	ARG1-of	white-03	c2	w	
# ::edge	and	op1	cloth	a	c2	
# ::edge	have-03	ARG1	and	h	a	
# ::edge	flower	quant	bunch	f	b2	
# ::edge	and	op2	flower	a	f	
# ::edge	table	location	next-to	t	n2	
# ::edge	cake	ARG1-of	white-03	c	w2	
# ::edge	next-to	op1	cake	n2	c	
# ::edge	cake	ARG1-of	lean-01	c	l	
# ::edge	lean-01	ARG2	side	l	s	
# ::edge	cake	ARG0-of	have-03	c	h2	
# ::edge	country	name	name	c3	n	
# ::edge	name	op1	Oriental	n	1	
# ::edge	name	op2	W.	n	2	
# ::edge	be-located-at-91	ARG1	country	b	c3	
# ::edge	have-03	ARG1	be-located-at-91	h2	b	
# ::edge	be-located-at-91	ARG2	top	b	t3	
# ::edge	event	mod	table	e	t	
# ::edge	event	rel	2	e	0	
(e / event
    :mod (t / table
        :ARG0-of (h / have-03
            :ARG1 (a / and
                :op1 (c2 / cloth
                    :ARG1-of (w / white-03)
                    :mod (t2 / table))
                :op2 (f / flower
                    :quant (b2 / bunch))))
        :location (n2 / next-to
            :op1 (c / cake
                :ARG0-of (h2 / have-03
                    :ARG1 (b / be-located-at-91
                        :ARG1 (c3 / country
                            :name (n / name
                                :op1 "Oriental"
                                :op2 "W."))
                        :ARG2 (t3 / top)))
                :ARG1-of (w2 / white-03)
                :ARG1-of (l / lean-01
                    :ARG2 (s / side)))))
    :rel 2)
