# ::tok A small monkey sitting on a stone sill eating a banana .
# ::node	s3	small	1-2
# ::node	m	monkey	2-3
# ::node	s2	sit-01	3-4
# ::node	s4	stone	6-7
# ::node	s	sill	7-8
# ::node	e	eat-01	8-9
# ::node	b	banana	10-11
# ::node	a	and	11-12
# ::root	a	and
# ::edge	monkey	mod	small	m	s3	
# ::edge	sit-01	ARG1	monkey	s2	m	
# ::edge	sill	consist-of	stone	s	s4	
# ::edge	sit-01	ARG2	sill	s2	s	
# ::edge	eat-01	ARG0	monkey	e	m	
# ::edge	eat-01	ARG1	banana	e	b	
# ::edge	and	op2	eat-01	a	e	
# ::edge	and	op1	sit-01	a	s2	
(a / and
    :op1 (s2 / sit-01
        :ARG1 (m / monkey
            :mod (s3 / small))
        :ARG2 (s / sill
            :consist-of (s4 / stone)))
    :op2 (e / eat-01
        :ARG0 m
        :ARG1 (b / banana)))
