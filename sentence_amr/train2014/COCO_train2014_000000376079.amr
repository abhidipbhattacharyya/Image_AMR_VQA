# ::tok A person on skis skiing through a obstacle course .
# ::node	p	person	1-2
# ::node	s	ski-01	3-4
# ::node	s2	ski-01	4-5
# ::node	o	obstacle	7-8
# ::node	c	course	8-9
# ::root	s2	ski-01
# ::edge	person	ARG0-of	ski-01	p	s	
# ::edge	ski-01	ARG0	person	s2	p	
# ::edge	course	mod	obstacle	c	o	
# ::edge	ski-01	path	course	s2	c	
(s2 / ski-01
    :ARG0 (p / person
        :ARG0-of (s / ski-01))
    :path (c / course
        :mod (o / obstacle)))
