# ::tok a van takes a group on safari and end up passing a giraffe
# ::node	v	van	1-2
# ::node	t	take-01	2-3
# ::node	g2	group	4-5
# ::node	s	safari	6-7
# ::node	a	and	7-8
# ::node	e	end-up-03	8-9
# ::node	p	pass-03	10-11
# ::node	g	giraffe	12-13
# ::root	a	and
# ::edge	take-01	ARG0	van	t	v	
# ::edge	take-01	ARG1	group	t	g2	
# ::edge	take-01	ARG3	safari	t	s	
# ::edge	and	op1	take-01	a	t	
# ::edge	and	op2	end-up-03	a	e	
# ::edge	end-up-03	ARG1	van	e	v	
# ::edge	end-up-03	ARG2	pass-03	e	p	
# ::edge	pass-03	ARG1	giraffe	p	g	
(a / and
    :op1 (t / take-01
        :ARG0 (v / van)
        :ARG1 (g2 / group)
        :ARG3 (s / safari))
    :op2 (e / end-up-03
        :ARG1 v
        :ARG2 (p / pass-03
            :ARG1 (g / giraffe))))
