# ::tok Small cars passing a double decker London bus on a narrow street corner
# ::node	s	small	0-1
# ::node	c	car	1-2
# ::node	p	pass-03	2-3
# ::node	d	double-decker	5-6
# ::node	c2	city	6-7
# ::node	n	name	6-7
# ::node	0	London	6-7
# ::node	b	bus	7-8
# ::node	n2	narrow-02	10-11
# ::node	s2	street	11-12
# ::node	c3	corner	12-13
# ::root	p	pass-03
# ::edge	car	mod	small	c	s	
# ::edge	pass-03	ARG1	car	p	c	
# ::edge	city	name	name	c2	n	
# ::edge	name	op1	London	n	0	
# ::edge	bus	location	city	b	c2	
# ::edge	bus	mod	double-decker	b	d	
# ::edge	pass-03	path	bus	p	b	
# ::edge	street	ARG1-of	narrow-02	s2	n2	
# ::edge	corner	op1	street	c3	s2	
# ::edge	pass-03	location	corner	p	c3	
(p / pass-03
    :ARG1 (c / car
        :mod (s / small))
    :location (c3 / corner
        :op1 (s2 / street
            :ARG1-of (n2 / narrow-02)))
    :path (b / bus
        :location (c2 / city
            :name (n / name
                :op1 "London"))
        :mod (d / double-decker)))
