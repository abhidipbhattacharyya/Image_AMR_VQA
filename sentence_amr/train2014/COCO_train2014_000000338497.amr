# ::tok A yellow train crossing a bridge with trees and rocks on the sides .
# ::node	y	yellow-02	1-2
# ::node	t	train	2-3
# ::node	c	cross-02	3-4
# ::node	b	bridge	5-6
# ::node	h	have-03	6-7
# ::node	t2	tree	7-8
# ::node	a	and	8-9
# ::node	r	rock	9-10
# ::node	s	side	12-13
# ::root	c	cross-02
# ::edge	train	ARG1-of	yellow-02	t	y	
# ::edge	cross-02	ARG0	train	c	t	
# ::edge	cross-02	ARG1	bridge	c	b	
# ::edge	bridge	ARG0-of	have-03	b	h	
# ::edge	and	op1	tree	a	t2	
# ::edge	have-03	ARG1	and	h	a	
# ::edge	and	op2	rock	a	r	
# ::edge	and	location	side	a	s	
# ::edge	bridge	part	side	b	s	
(c / cross-02
    :ARG0 (t / train
        :ARG1-of (y / yellow-02))
    :ARG1 (b / bridge
        :ARG0-of (h / have-03
            :ARG1 (a / and
                :location (s / side)
                :op1 (t2 / tree)
                :op2 (r / rock)))
        :part s))
