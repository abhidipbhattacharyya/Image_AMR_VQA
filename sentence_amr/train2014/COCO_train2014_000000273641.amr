# ::tok A city street with buildings and train tracks on the side with one train on the tracks .
# ::node	c	city	1-2
# ::node	s2	street	2-3
# ::node	h	have-03	3-4
# ::node	b	building	4-5
# ::node	a	and	5-6
# ::node	a2	and	5-6
# ::node	t2	train	6-7
# ::node	t	track	7-8
# ::node	s	side	10-11
# ::node	0	1	12-13
# ::node	t3	train	13-14
# ::root	s2	street
# ::edge	street	mod	city	s2	c	
# ::edge	street	ARG0-of	have-03	s2	h	
# ::edge	and	op1	building	a	b	
# ::edge	have-03	ARG1	and	h	a	
# ::edge	and	op2	and	a	a2	
# ::edge	track	purpose	train	t	t2	
# ::edge	and	op1	track	a2	t	
# ::edge	and	location	side	a2	s	
# ::edge	train	quant	1	t3	0	
# ::edge	and	op1	train	a2	t3	
(s2 / street
    :ARG0-of (h / have-03
        :ARG1 (a / and
            :op1 (b / building)
            :op2 (a2 / and
                :location (s / side)
                :op1 (t / track
                    :purpose (t2 / train))
                :op1 (t3 / train
                    :quant 1))))
    :mod (c / city))
