# ::tok A table with a blue and white checkered cloth that has condiments and a coffee mug placed on it , and a view of a waterway and boats behind it .
# ::node	t	table	1-2
# ::node	h	have-03	2-3
# ::node	b2	blue	4-5
# ::node	a	and	5-6
# ::node	w2	white-03	6-7
# ::node	p	pattern	7-8
# ::node	c	cloth	8-9
# ::node	h2	have-03	10-11
# ::node	s	sandwich	11-12
# ::node	a2	and	12-13
# ::node	c2	coffee	14-15
# ::node	m	mug	15-16
# ::node	p2	place-01	16-17
# ::node	v	view-01	22-23
# ::node	w	waterway	25-26
# ::node	a3	and	26-27
# ::node	b3	boat	27-28
# ::node	b	behind	28-29
# ::root	t	table
# ::edge	table	ARG0-of	have-03	t	h	
# ::edge	have-03	ARG1	and	h	a	
# ::edge	and	op1	pattern	a	p	
# ::edge	pattern	mod	blue	p	b2	
# ::edge	cloth	consist-of	pattern	c	p	
# ::edge	and	op2	cloth	a	c	
# ::edge	table	ARG0-of	have-03	t	h2	
# ::edge	and	op1	sandwich	a2	s	
# ::edge	have-03	ARG1	and	h2	a2	
# ::edge	mug	mod	coffee	m	c2	
# ::edge	and	op2	mug	a2	m	
# ::edge	and	ARG1-of	place-01	a2	p2	
# ::edge	place-01	ARG2	table	p2	t	
# ::edge	table	ARG2-of	view-01	t	v	
# ::edge	and	op1	waterway	a3	w	
# ::edge	view-01	ARG1	and	v	a3	
# ::edge	and	op2	boat	a3	b3	
# ::edge	and	location	behind	a3	b	
# ::edge	behind	op1	table	b	t	
# ::edge	table	rel	white-03	t	w2	
(t / table
    :ARG0-of (h / have-03
        :ARG1 (a / and
            :op1 (p / pattern
                :mod (b2 / blue))
            :op2 (c / cloth
                :consist-of p)))
    :ARG0-of (h2 / have-03
        :ARG1 (a2 / and
            :ARG1-of (p2 / place-01
                :ARG2 t)
            :op1 (s / sandwich)
            :op2 (m / mug
                :mod (c2 / coffee))))
    :ARG2-of (v / view-01
        :ARG1 (a3 / and
            :location (b / behind
                :op1 t)
            :op1 (w / waterway)
            :op2 (b3 / boat)))
    :rel (w2 / white-03))
