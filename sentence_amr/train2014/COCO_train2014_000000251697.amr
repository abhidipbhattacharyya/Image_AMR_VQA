# ::tok A row of horses carrying a wagon saying Double M Farms on it .
# ::node	r	row	1-2
# ::node	h	horse	3-4
# ::node	c	carry-01	4-5
# ::node	w	wagon	6-7
# ::node	s	say-01	7-8
# ::node	0	Double	8-9
# ::node	n	name	9-10
# ::node	2	M	9-10
# ::node	f	farm	10-11
# ::node	1	Farms	10-11
# ::root	r	row
# ::edge	row	consist-of	horse	r	h	
# ::edge	horse	ARG0-of	carry-01	h	c	
# ::edge	carry-01	ARG1	wagon	c	w	
# ::edge	say-01	location	wagon	s	w	
# ::edge	wagon	ARG0-of	say-01	w	s	
# ::edge	name	op1	Double	n	0	
# ::edge	name	op2	M	n	2	
# ::edge	farm	name	name	f	n	
# ::edge	say-01	ARG1	farm	s	f	
# ::edge	name	op3	Farms	n	1	
(r / row
    :consist-of (h / horse
        :ARG0-of (c / carry-01
            :ARG1 (w / wagon
                :ARG0-of (s / say-01
                    :ARG1 (f / farm
                        :name (n / name
                            :op1 "Double"
                            :op2 "M"
                            :op3 "Farms"))
                    :location w)))))
