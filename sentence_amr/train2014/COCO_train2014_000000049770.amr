# ::tok A man holding a scissor to his face so he can look through the handles .
# ::node	m	man	1-2
# ::node	h3	hold-01	2-3
# ::node	s	scissor	4-5
# ::node	f	face	7-8
# ::node	p	possible-01	10-11
# ::node	l	look-01	11-12
# ::node	t	through	12-13
# ::node	h	handle-01	14-15
# ::node	h2	handle-01	14-15
# ::root	m	man
# ::edge	man	ARG0-of	hold-01	m	h3	
# ::edge	hold-01	ARG1	scissor	h3	s	
# ::edge	hold-01	direction	face	h3	f	
# ::edge	man	part	face	m	f	
# ::edge	hold-01	purpose	possible-01	h3	p	
# ::edge	possible-01	ARG1	look-01	p	l	
# ::edge	look-01	ARG0	man	l	m	
# ::edge	look-01	location	through	l	t	
# ::edge	through	op1	handle-01	t	h	
# ::edge	handle-01	ARG1	handle-01	h	h2	
(m / man
    :ARG0-of (h3 / hold-01
        :purpose (p / possible-01
            :ARG1 (l / look-01
                :ARG0 m
                :location (t / through
                    :op1 (h / handle-01
                        :ARG1 (h2 / handle-01)))))
        :ARG1 (s / scissor)
        :direction (f / face))
    :part f)
