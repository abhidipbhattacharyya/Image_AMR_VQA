# ::tok An L - shaped white kitchen with green marble counter tops gets plenty of natural light from the windows .
# ::node	s2	string-entity	1-2
# ::node	0	L	1-2
# ::node	s	shape-01	3-4
# ::node	w	white-03	4-5
# ::node	k	kitchen	5-6
# ::node	g2	green-02	7-8
# ::node	m	marble	8-9
# ::node	c	counter	9-10
# ::node	t	top	10-11
# ::node	g	get-01	11-12
# ::node	p	plenty	12-13
# ::node	n	natural-03	14-15
# ::node	l	light	15-16
# ::node	w2	window	18-19
# ::root	g	get-01
# ::edge	string-entity	value	L	s2	0	
# ::edge	shape-01	ARG2	string-entity	s	s2	
# ::edge	kitchen	ARG1-of	white-03	k	w	
# ::edge	kitchen	ARG1-of	shape-01	k	s	
# ::edge	top	part	counter	t	c	
# ::edge	top	consist-of	marble	t	m	
# ::edge	top	ARG1-of	green-02	t	g2	
# ::edge	kitchen	part	top	k	t	
# ::edge	get-01	ARG0	kitchen	g	k	
# ::edge	light	ARG1-of	natural-03	l	n	
# ::edge	light	quant	plenty	l	p	
# ::edge	get-01	ARG1	light	g	l	
# ::edge	get-01	source	window	g	w2	
(g / get-01
    :ARG0 (k / kitchen
        :ARG1-of (w / white-03)
        :ARG1-of (s / shape-01
            :ARG2 (s2 / string-entity
                :value "L"))
        :part (t / top
            :ARG1-of (g2 / green-02)
            :consist-of (m / marble)
            :part (c / counter)))
    :ARG1 (l / light
        :quant (p / plenty)
        :ARG1-of (n / natural-03))
    :source (w2 / window))
