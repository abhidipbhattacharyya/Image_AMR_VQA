# ::tok One zebra standing over another zebra while a baby zebra is eating .
# ::node	0	1	0-1
# ::node	z	zebra	1-2
# ::node	s	stand-01	2-3
# ::node	o	over	3-4
# ::node	a	another	4-5
# ::node	z2	zebra	5-6
# ::node	b	baby	8-9
# ::node	z3	zebra	9-10
# ::node	e	eat-01	11-12
# ::root	s	stand-01
# ::edge	zebra	quant	1	z	0	
# ::edge	stand-01	ARG1	zebra	s	z	
# ::edge	stand-01	ARG2	over	s	o	
# ::edge	zebra	mod	another	z2	a	
# ::edge	over	op1	zebra	o	z2	
# ::edge	zebra	mod	baby	z3	b	
# ::edge	eat-01	ARG0	zebra	e	z3	
# ::edge	stand-01	time	eat-01	s	e	
(s / stand-01
    :ARG1 (z / zebra
        :quant 1)
    :ARG2 (o / over
        :op1 (z2 / zebra
            :mod (a / another)))
    :time (e / eat-01
        :ARG0 (z3 / zebra
            :mod (b / baby))))
