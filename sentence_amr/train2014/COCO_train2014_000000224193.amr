# ::tok The bear will climb the bank to get out of the water .
# ::node	b2	bear	1-2
# ::node	c	climb-01	3-4
# ::node	b	bank	5-6
# ::node	g	get-05	7-8
# ::node	o	out-06	8-9
# ::node	w	water	11-12
# ::root	c	climb-01
# ::edge	climb-01	ARG0	bear	c	b2	
# ::edge	climb-01	ARG1	bank	c	b	
# ::edge	climb-01	purpose	get-05	c	g	
# ::edge	get-05	ARG1	bear	g	b2	
# ::edge	get-05	ARG2	out-06	g	o	
# ::edge	out-06	ARG1	bear	o	b2	
# ::edge	out-06	ARG2	water	o	w	
(c / climb-01
    :purpose (g / get-05
        :ARG1 (b2 / bear)
        :ARG2 (o / out-06
            :ARG1 b2
            :ARG2 (w / water)))
    :ARG0 b2
    :ARG1 (b / bank))
