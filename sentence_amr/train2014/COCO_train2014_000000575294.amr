# ::tok a black cow and a black and white faced cow are at a barb wire fence
# ::node	b3	black-05	1-2
# ::node	c	cow	2-3
# ::node	a	and	3-4
# ::node	a2	and	6-7
# ::node	w	white-03	7-8
# ::node	f	face	8-9
# ::node	f2	face	8-9
# ::node	c2	cow	9-10
# ::node	c3	cow	9-10
# ::node	b2	be-located-at-91	11-12
# ::node	b	barb	13-14
# ::node	w2	wire	14-15
# ::node	f3	fence	15-16
# ::root	b2	be-located-at-91
# ::edge	cow	ARG1-of	black-05	c	b3	
# ::edge	and	op1	cow	a	c	
# ::edge	face	ARG1-of	white-03	f	w	
# ::edge	face	ARG1-of	white-03	f2	w	
# ::edge	cow	part	face	c2	f	
# ::edge	and	op2	cow	a2	c2	
# ::edge	cow	part	face	c3	f2	
# ::edge	and	op2	cow	a2	c3	
# ::edge	be-located-at-91	ARG1	and	b2	a	
# ::edge	wire	mod	barb	w2	b	
# ::edge	fence	consist-of	wire	f3	w2	
# ::edge	be-located-at-91	ARG2	fence	b2	f3	
# ::edge	be-located-at-91	rel	and	b2	a2	
(b2 / be-located-at-91
    :ARG1 (a / and
        :op1 (c / cow
            :ARG1-of (b3 / black-05)))
    :ARG2 (f3 / fence
        :consist-of (w2 / wire
            :mod (b / barb)))
    :rel (a2 / and
        :op2 (c2 / cow
            :part (f / face
                :ARG1-of (w / white-03)))
        :op2 (c3 / cow
            :part (f2 / face
                :ARG1-of w))))
