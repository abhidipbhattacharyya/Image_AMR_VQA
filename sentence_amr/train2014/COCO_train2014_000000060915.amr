# ::tok He had to prove to his friends that he can fit in a suitcase .
# ::node	h2	he	0-1
# ::node	o	obligate-01	1-2
# ::node	p3	prove-01	3-4
# ::node	p	person	6-7
# ::node	h	have-rel-role-91	6-7
# ::node	f2	friend	6-7
# ::node	p2	possible-01	9-10
# ::node	f	fit-01	10-11
# ::node	s	suitcase	13-14
# ::root	o	obligate-01
# ::edge	obligate-01	ARG1	he	o	h2	
# ::edge	obligate-01	ARG2	prove-01	o	p3	
# ::edge	prove-01	ARG0	he	p3	h2	
# ::edge	prove-01	ARG2	person	p3	p	
# ::edge	person	ARG0-of	have-rel-role-91	p	h	
# ::edge	have-rel-role-91	ARG1	he	h	h2	
# ::edge	have-rel-role-91	ARG2	friend	h	f2	
# ::edge	prove-01	ARG1	possible-01	p3	p2	
# ::edge	possible-01	ARG1	fit-01	p2	f	
# ::edge	fit-01	ARG1	he	f	h2	
# ::edge	fit-01	ARG2	suitcase	f	s	
(o / obligate-01
    :ARG1 (h2 / he)
    :ARG2 (p3 / prove-01
        :ARG0 h2
        :ARG1 (p2 / possible-01
            :ARG1 (f / fit-01
                :ARG1 h2
                :ARG2 (s / suitcase)))
        :ARG2 (p / person
            :ARG0-of (h / have-rel-role-91
                :ARG1 h2
                :ARG2 (f2 / friend)))))
