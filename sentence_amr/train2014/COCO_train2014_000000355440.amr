# ::tok some people and two are sitting and one has a white cake in front of him
# ::node	s2	some	0-1
# ::node	p	person	1-2
# ::node	p2	person	1-2
# ::node	a	and	2-3
# ::node	a2	and	2-3
# ::node	1	2	3-4
# ::node	s	sit-01	5-6
# ::node	i2	include-91	7-8
# ::node	0	1	7-8
# ::node	h	have-03	8-9
# ::node	w	white-03	10-11
# ::node	c	cake	11-12
# ::node	i	in-front-of	13-14
# ::node	h2	he	15-16
# ::root	a	and
# ::edge	person	quant	some	p	s2	
# ::edge	and	op2	person	a2	p2	
# ::edge	and	op1	person	a2	p	
# ::edge	person	quant	2	p2	1	
# ::edge	sit-01	ARG1	and	s	a2	
# ::edge	and	op1	sit-01	a	s	
# ::edge	person	ARG1-of	include-91	p2	i2	
# ::edge	include-91	ARG2	person	i2	p	
# ::edge	person	quant	1	p2	0	
# ::edge	have-03	ARG0	and	h	a2	
# ::edge	and	op2	have-03	a	h	
# ::edge	cake	ARG1-of	white-03	c	w	
# ::edge	have-03	ARG1	cake	h	c	
# ::edge	cake	location	in-front-of	c	i	
# ::edge	in-front-of	op1	he	i	h2	
(a / and
    :op1 (s / sit-01
        :ARG1 (a2 / and
            :op1 (p / person
                :quant (s2 / some))
            :op2 (p2 / person
                :quant 2
                :quant 1
                :ARG1-of (i2 / include-91
                    :ARG2 p))))
    :op2 (h / have-03
        :ARG0 a2
        :ARG1 (c / cake
            :ARG1-of (w / white-03)
            :location (i / in-front-of
                :op1 (h2 / he)))))
