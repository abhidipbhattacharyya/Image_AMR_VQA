# ::tok A pelican is in the kitchen and is looking at something cooking on the stove .
# ::node	p	pelican	1-2
# ::node	b	be-located-at-91	3-4
# ::node	k	kitchen	5-6
# ::node	a	and	6-7
# ::node	l	look-01	8-9
# ::node	s	something	10-11
# ::node	c	cook-01	11-12
# ::node	s2	stove	14-15
# ::root	a	and
# ::edge	be-located-at-91	ARG1	pelican	b	p	
# ::edge	be-located-at-91	ARG2	kitchen	b	k	
# ::edge	and	op1	be-located-at-91	a	b	
# ::edge	and	op2	look-01	a	l	
# ::edge	look-01	ARG0	pelican	l	p	
# ::edge	look-01	ARG1	something	l	s	
# ::edge	something	ARG1-of	cook-01	s	c	
# ::edge	cook-01	location	stove	c	s2	
(a / and
    :op1 (b / be-located-at-91
        :ARG1 (p / pelican)
        :ARG2 (k / kitchen))
    :op2 (l / look-01
        :ARG0 p
        :ARG1 (s / something
            :ARG1-of (c / cook-01
                :location (s2 / stove)))))
