# ::tok The skier will jump from the wall and ski down the course .
# ::node	p	person	1-2
# ::node	s	ski-01	1-2
# ::node	j	jump-03	3-4
# ::node	w	wall	6-7
# ::node	a	and	7-8
# ::node	s2	ski-01	8-9
# ::node	d	down	9-10
# ::node	c	course	11-12
# ::root	a	and
# ::edge	person	ARG0-of	ski-01	p	s	
# ::edge	jump-03	ARG0	person	j	p	
# ::edge	jump-03	source	wall	j	w	
# ::edge	and	op1	jump-03	a	j	
# ::edge	and	op2	ski-01	a	s2	
# ::edge	ski-01	ARG0	person	s2	p	
# ::edge	ski-01	direction	down	s2	d	
# ::edge	down	path	course	d	c	
(a / and
    :op1 (j / jump-03
        :ARG0 (p / person
            :ARG0-of (s / ski-01))
        :source (w / wall))
    :op2 (s2 / ski-01
        :ARG0 p
        :direction (d / down
            :path (c / course))))
