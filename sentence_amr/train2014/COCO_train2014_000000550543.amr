# ::tok A knocked over yield and no left turn sign sitting on the road .
# ::node	k	knock-down-02	1-2
# ::node	y	yield-01	3-4
# ::node	a	and	4-5
# ::node	0	-	5-6
# ::node	l	left-19	6-7
# ::node	t	turn-01	7-8
# ::node	s	signal-07	8-9
# ::node	s2	sit-01	9-10
# ::node	r	road	12-13
# ::root	a	and
# ::edge	yield-01	ARG1-of	knock-down-02	y	k	
# ::edge	and	op1	yield-01	a	y	
# ::edge	turn-01	ARG1-of	left-19	t	l	
# ::edge	signal-07	ARG1	turn-01	s	t	
# ::edge	signal-07	polarity	-	s	0	
# ::edge	and	op2	signal-07	a	s	
# ::edge	and	ARG1-of	sit-01	a	s2	
# ::edge	sit-01	ARG2	road	s2	r	
(a / and
    :ARG1-of (s2 / sit-01
        :ARG2 (r / road))
    :op1 (y / yield-01
        :ARG1-of (k / knock-down-02))
    :op2 (s / signal-07
        :ARG1 (t / turn-01
            :ARG1-of (l / left-19))
        :polarity -))
