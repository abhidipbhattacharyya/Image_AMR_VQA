# ::tok A yellow and white train traveling down tracks next to other tracks .
# ::node	y	yellow-02	1-2
# ::node	a	and	2-3
# ::node	w	white-03	3-4
# ::node	t3	train	4-5
# ::node	t4	train	4-5
# ::node	t5	travel-01	5-6
# ::node	d	down	6-7
# ::node	t	track	7-8
# ::node	n	next-to	8-9
# ::node	o	other	10-11
# ::node	t2	track	11-12
# ::root	t5	travel-01
# ::edge	and	op1	train	a	t3	
# ::edge	train	ARG1-of	yellow-02	t3	y	
# ::edge	train	ARG1-of	white-03	t4	w	
# ::edge	and	op2	train	a	t4	
# ::edge	travel-01	ARG0	and	t5	a	
# ::edge	travel-01	direction	down	t5	d	
# ::edge	travel-01	path	track	t5	t	
# ::edge	track	location	next-to	t	n	
# ::edge	track	mod	other	t2	o	
# ::edge	next-to	op1	track	n	t2	
(t5 / travel-01
    :ARG0 (a / and
        :op1 (t3 / train
            :ARG1-of (y / yellow-02))
        :op2 (t4 / train
            :ARG1-of (w / white-03)))
    :direction (d / down)
    :path (t / track
        :location (n / next-to
            :op1 (t2 / track
                :mod (o / other)))))
