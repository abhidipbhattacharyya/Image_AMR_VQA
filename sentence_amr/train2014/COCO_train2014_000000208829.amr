# ::tok One person surfing and another paddling to catch a wave .
# ::node	o	one	0-1
# ::node	p2	person	1-2
# ::node	p3	person	1-2
# ::node	s	surf-01	2-3
# ::node	a	and	3-4
# ::node	a2	another	4-5
# ::node	p	paddle-01	5-6
# ::node	c	catch-01	7-8
# ::node	w	wave	9-10
# ::root	a	and
# ::edge	person	quant	one	p2	o	
# ::edge	surf-01	ARG0	person	s	p2	
# ::edge	and	op1	surf-01	a	s	
# ::edge	person	mod	another	p3	a2	
# ::edge	and	op2	paddle-01	a	p	
# ::edge	paddle-01	ARG0	person	p	p3	
# ::edge	paddle-01	purpose	catch-01	p	c	
# ::edge	catch-01	ARG0	person	c	p3	
# ::edge	catch-01	ARG1	wave	c	w	
(a / and
    :op1 (s / surf-01
        :ARG0 (p2 / person
            :quant (o / one)))
    :op2 (p / paddle-01
        :purpose (c / catch-01
            :ARG0 (p3 / person
                :mod (a2 / another))
            :ARG1 (w / wave))
        :ARG0 p3))
