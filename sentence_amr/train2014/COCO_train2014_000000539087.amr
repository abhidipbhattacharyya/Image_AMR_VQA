# ::tok One picture has crates of apples for sale , the second has chili peppers for sale , and the third has miniature pumpkins for sale .
# ::node	0	1	0-1
# ::node	p2	picture	1-2
# ::node	p3	picture	1-2
# ::node	p4	picture	1-2
# ::node	h	have-03	2-3
# ::node	c	can-01	3-4
# ::node	a2	apple	5-6
# ::node	s	sell-01	7-8
# ::node	o	ordinal-entity	10-11
# ::node	1	2	10-11
# ::node	c2	chili	12-13
# ::node	p	pepper-spray	13-14
# ::node	s2	sell-01	15-16
# ::node	a	and	17-18
# ::node	o2	ordinal-entity	19-20
# ::node	2	3	19-20
# ::node	h2	have-03	20-21
# ::node	m	miniature	21-22
# ::node	p5	pump-01	22-23
# ::node	s3	sell-01	24-25
# ::root	a	and
# ::edge	picture	quant	1	p2	0	
# ::edge	have-03	ARG0	picture	h	p2	
# ::edge	have-03	ARG1	can-01	h	c	
# ::edge	can-01	ARG1	apple	c	a2	
# ::edge	apple	ARG1-of	sell-01	a2	s	
# ::edge	picture	ord	ordinal-entity	p3	o	
# ::edge	ordinal-entity	value	2	o	1	
# ::edge	pepper-spray	mod	chili	p	c2	
# ::edge	sell-01	ARG1	pepper-spray	s	p	
# ::edge	pepper-spray	ARG1-of	sell-01	p	s2	
# ::edge	and	op2	have-03	a	h	
# ::edge	and	op1	have-03	a	h	
# ::edge	picture	ord	ordinal-entity	p4	o2	
# ::edge	ordinal-entity	value	3	o2	2	
# ::edge	and	op3	have-03	a	h2	
# ::edge	have-03	ARG0	picture	h2	p4	
# ::edge	pump-01	mod	miniature	p5	m	
# ::edge	have-03	ARG1	pump-01	h2	p5	
# ::edge	pump-01	ARG1-of	sell-01	p5	s3	
# ::edge	and	rel	picture	a	p3	
(a / and
    :op1 (h / have-03
        :ARG0 (p2 / picture
            :quant 1)
        :ARG1 (c / can-01
            :ARG1 (a2 / apple
                :ARG1-of (s / sell-01
                    :ARG1 (p / pepper-spray
                        :ARG1-of (s2 / sell-01)
                        :mod (c2 / chili))))))
    :op2 h
    :op3 (h2 / have-03
        :ARG0 (p4 / picture
            :ord (o2 / ordinal-entity
                :value 3))
        :ARG1 (p5 / pump-01
            :ARG1-of (s3 / sell-01)
            :mod (m / miniature)))
    :rel (p3 / picture
        :ord (o / ordinal-entity
            :value 2)))
