# ::tok two giraffes looking opposite directions in front of boulders with trees in upper background
# ::node	0	2	0-1
# ::node	g	giraffe	1-2
# ::node	l	look-01	2-3
# ::node	o	opposite-01	3-4
# ::node	d	direction	4-5
# ::node	i	in-front-of	6-7
# ::node	b2	boulder	8-9
# ::node	h	have-03	9-10
# ::node	t	tree	10-11
# ::node	u	upper	12-13
# ::node	b	background	13-14
# ::root	l	look-01
# ::edge	giraffe	quant	2	g	0	
# ::edge	look-01	ARG0	giraffe	l	g	
# ::edge	direction	ARG1-of	opposite-01	d	o	
# ::edge	look-01	ARG1	direction	l	d	
# ::edge	look-01	location	in-front-of	l	i	
# ::edge	in-front-of	op1	boulder	i	b2	
# ::edge	boulder	ARG0-of	have-03	b2	h	
# ::edge	have-03	ARG1	tree	h	t	
# ::edge	background	mod	upper	b	u	
# ::edge	tree	location	background	t	b	
(l / look-01
    :ARG0 (g / giraffe
        :quant 2)
    :ARG1 (d / direction
        :ARG1-of (o / opposite-01))
    :location (i / in-front-of
        :op1 (b2 / boulder
            :ARG0-of (h / have-03
                :ARG1 (t / tree
                    :location (b / background
                        :mod (u / upper)))))))
