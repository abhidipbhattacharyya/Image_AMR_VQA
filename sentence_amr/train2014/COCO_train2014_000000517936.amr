# ::tok One pair of scissors has a string on it , a second has its blades opened , and the third pair is closed with a metal item behind it .
# ::node	0	1	0-1
# ::node	p	pair	1-2
# ::node	p2	pair	1-2
# ::node	s	scissors	3-4
# ::node	s2	scissors	3-4
# ::node	h	have-03	4-5
# ::node	s3	string	6-7
# ::node	o2	ordinal-entity	11-12
# ::node	1	2	11-12
# ::node	w	weapon	14-15
# ::node	o	open-01	15-16
# ::node	a	and	17-18
# ::node	o3	ordinal-entity	19-20
# ::node	2	3	19-20
# ::node	p3	pair	20-21
# ::node	c	close-01	22-23
# ::node	m	metal	25-26
# ::node	i	item	26-27
# ::node	b	behind	27-28
# ::root	a	and
# ::edge	pair	quant	1	p	0	
# ::edge	pair	consist-of	scissors	p	s	
# ::edge	pair	consist-of	scissors	p2	s2	
# ::edge	have-03	ARG0	pair	h	p	
# ::edge	have-03	ARG1	string	h	s3	
# ::edge	pair	ord	ordinal-entity	p2	o2	
# ::edge	ordinal-entity	value	2	o2	1	
# ::edge	pair	part	weapon	p2	w	
# ::edge	open-01	ARG1	weapon	o	w	
# ::edge	pair	ARG0-of	open-01	p2	o	
# ::edge	and	op1	have-03	a	h	
# ::edge	ordinal-entity	value	3	o3	2	
# ::edge	pair	ord	ordinal-entity	p3	o3	
# ::edge	pair	mod	scissors	p3	s2	
# ::edge	close-01	ARG1	pair	c	p3	
# ::edge	and	op2	close-01	a	c	
# ::edge	item	consist-of	metal	i	m	
# ::edge	close-01	ARG2	item	c	i	
# ::edge	item	location	behind	i	b	
# ::edge	behind	op1	pair	b	p3	
# ::edge	and	rel	pair	a	p2	
(a / and
    :op1 (h / have-03
        :ARG0 (p / pair
            :quant 1
            :consist-of (s / scissors))
        :ARG1 (s3 / string))
    :op2 (c / close-01
        :ARG1 (p3 / pair
            :mod (s2 / scissors)
            :ord (o3 / ordinal-entity
                :value 3))
        :ARG2 (i / item
            :consist-of (m / metal)
            :location (b / behind
                :op1 p3)))
    :rel (p2 / pair
        :ARG0-of (o / open-01
            :ARG1 (w / weapon))
        :consist-of s2
        :ord (o2 / ordinal-entity
            :value 2)
        :part w))
