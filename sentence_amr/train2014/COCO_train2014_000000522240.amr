# ::tok Two different types of pizza and some other food dishes on a table .
# ::node	0	2	0-1
# ::node	d	differ-02	1-2
# ::node	t2	type	2-3
# ::node	p	pizza	4-5
# ::node	a	and	5-6
# ::node	s	some	6-7
# ::node	o	other	7-8
# ::node	f	food	8-9
# ::node	d2	dish	9-10
# ::node	t	table	12-13
# ::root	a	and
# ::edge	type	ARG1-of	differ-02	t2	d	
# ::edge	type	quant	2	t2	0	
# ::edge	pizza	mod	type	p	t2	
# ::edge	and	op1	pizza	a	p	
# ::edge	dish	mod	food	d2	f	
# ::edge	dish	mod	other	d2	o	
# ::edge	dish	quant	some	d2	s	
# ::edge	and	op2	dish	a	d2	
# ::edge	and	location	table	a	t	
(a / and
    :location (t / table)
    :op1 (p / pizza
        :mod (t2 / type
            :quant 2
            :ARG1-of (d / differ-02)))
    :op2 (d2 / dish
        :quant (s / some)
        :mod (f / food)
        :mod (o / other)))
