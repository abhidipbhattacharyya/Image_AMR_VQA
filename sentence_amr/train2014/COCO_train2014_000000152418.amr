# ::tok a red traffic light a street sign and a lamp post with two lights
# ::node	r	red-02	1-2
# ::node	t	traffic	2-3
# ::node	l2	light	3-4
# ::node	s2	street	5-6
# ::node	s	sign	6-7
# ::node	a	and	7-8
# ::node	l	lamp	9-10
# ::node	p	post	10-11
# ::node	h	have-03	11-12
# ::node	0	2	12-13
# ::node	l3	light	13-14
# ::root	a	and
# ::edge	light	mod	traffic	l2	t	
# ::edge	light	ARG1-of	red-02	l2	r	
# ::edge	sign	mod	street	s	s2	
# ::edge	and	op2	sign	a	s	
# ::edge	and	op1	light	a	l2	
# ::edge	post	mod	lamp	p	l	
# ::edge	and	op3	post	a	p	
# ::edge	post	ARG0-of	have-03	p	h	
# ::edge	light	quant	2	l3	0	
# ::edge	have-03	ARG1	light	h	l3	
(a / and
    :op1 (l2 / light
        :ARG1-of (r / red-02)
        :mod (t / traffic))
    :op2 (s / sign
        :mod (s2 / street))
    :op3 (p / post
        :ARG0-of (h / have-03
            :ARG1 (l3 / light
                :quant 2))
        :mod (l / lamp)))
