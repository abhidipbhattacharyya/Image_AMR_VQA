# ::tok A yellow train is coming down the track while allowing the riders to sight see .
# ::node	y	yellow-02	1-2
# ::node	t2	train	2-3
# ::node	c	come-01	4-5
# ::node	d	down	5-6
# ::node	t	track	7-8
# ::node	a	allow-01	9-10
# ::node	p	person	11-12
# ::node	r	ride-01	11-12
# ::node	s	see-01	14-15
# ::root	c	come-01
# ::edge	train	ARG1-of	yellow-02	t2	y	
# ::edge	come-01	ARG1	train	c	t2	
# ::edge	come-01	direction	down	c	d	
# ::edge	come-01	path	track	c	t	
# ::edge	come-01	ARG0-of	allow-01	c	a	
# ::edge	person	ARG0-of	ride-01	p	r	
# ::edge	see-01	ARG0	person	s	p	
# ::edge	allow-01	ARG1	see-01	a	s	
(c / come-01
    :ARG0-of (a / allow-01
        :ARG1 (s / see-01
            :ARG0 (p / person
                :ARG0-of (r / ride-01))))
    :ARG1 (t2 / train
        :ARG1-of (y / yellow-02))
    :direction (d / down)
    :path (t / track))
