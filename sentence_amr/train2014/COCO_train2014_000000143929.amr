# ::tok Two plates of food on a table , with different kinds of birds eating from each .
# ::node	0	2	0-1
# ::node	p	plate	1-2
# ::node	p2	plate	1-2
# ::node	f	food	3-4
# ::node	t	table	6-7
# ::node	a	and	7-8
# ::node	d	differ-02	9-10
# ::node	k	kind	10-11
# ::node	b	bird	12-13
# ::node	e2	eat-01	13-14
# ::node	e	each	15-16
# ::root	a	and
# ::edge	plate	quant	2	p	0	
# ::edge	plate	consist-of	food	p	f	
# ::edge	plate	location	table	p	t	
# ::edge	and	op1	plate	a	p	
# ::edge	kind	ARG1-of	differ-02	k	d	
# ::edge	bird	mod	kind	b	k	
# ::edge	eat-01	ARG0	bird	e2	b	
# ::edge	and	op2	eat-01	a	e2	
# ::edge	eat-01	ARG1	plate	e2	p2	
# ::edge	plate	mod	each	p2	e	
(a / and
    :op1 (p / plate
        :quant 2
        :consist-of (f / food)
        :location (t / table))
    :op2 (e2 / eat-01
        :ARG0 (b / bird
            :mod (k / kind
                :ARG1-of (d / differ-02)))
        :ARG1 (p2 / plate
            :mod (e / each))))
