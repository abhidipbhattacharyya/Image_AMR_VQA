# ::tok A black cat on table and window sill looking out window .
# ::node	b2	black-04	1-2
# ::node	c	cat	2-3
# ::node	b	be-located-at-91	3-4
# ::node	t	table	4-5
# ::node	a	and	5-6
# ::node	w	window	6-7
# ::node	s	sill	7-8
# ::node	l	look-01	8-9
# ::node	o	out	9-10
# ::root	l	look-01
# ::edge	cat	ARG1-of	black-04	c	b2	
# ::edge	be-located-at-91	ARG1	cat	b	c	
# ::edge	and	op1	table	a	t	
# ::edge	be-located-at-91	ARG2	and	b	a	
# ::edge	sill	mod	window	s	w	
# ::edge	and	op2	sill	a	s	
# ::edge	look-01	ARG1	window	l	w	
# ::edge	look-01	ARG0	cat	l	c	
# ::edge	look-01	direction	out	l	o	
# ::edge	look-01	rel	be-located-at-91	l	b	
(l / look-01
    :ARG0 (c / cat
        :ARG1-of (b2 / black-04))
    :ARG1 (w / window)
    :direction (o / out)
    :rel (b / be-located-at-91
        :ARG1 c
        :ARG2 (a / and
            :op1 (t / table)
            :op2 (s / sill
                :mod w))))
