# ::tok A parking area shows a storefront and a utility pole , but most importantly the back end of a vintage blue car with a cat under the bumper area .
# ::node	p	park-01	1-2
# ::node	a2	area	2-3
# ::node	s	show-01	3-4
# ::node	s2	show-01	3-4
# ::node	s3	storefront	5-6
# ::node	a	and	6-7
# ::node	u2	utility	8-9
# ::node	p2	pole	9-10
# ::node	c3	contrast-01	11-12
# ::node	h2	have-degree-91	12-13
# ::node	m	most	12-13
# ::node	i	important-01	13-14
# ::node	b	back	15-16
# ::node	e	end	16-17
# ::node	v	vintage	19-20
# ::node	b2	blue	20-21
# ::node	c	car	21-22
# ::node	h	have-03	22-23
# ::node	c2	cat	24-25
# ::node	u	under	25-26
# ::node	b3	bumper	27-28
# ::node	a3	area	28-29
# ::root	c3	contrast-01
# ::edge	area	location-of	park-01	a2	p	
# ::edge	show-01	ARG0	area	s	a2	
# ::edge	show-01	ARG0	area	s2	a2	
# ::edge	and	op1	storefront	a	s3	
# ::edge	show-01	ARG1	and	s	a	
# ::edge	pole	mod	utility	p2	u2	
# ::edge	and	op2	pole	a	p2	
# ::edge	contrast-01	ARG2	show-01	c3	s2	
# ::edge	contrast-01	ARG1	show-01	c3	s	
# ::edge	show-01	ARG1-of	have-degree-91	s2	h2	
# ::edge	have-degree-91	ARG3	most	h2	m	
# ::edge	have-degree-91	ARG2	important-01	h2	i	
# ::edge	important-01	ARG1	show-01	i	s2	
# ::edge	end	mod	back	e	b	
# ::edge	show-01	ARG1	end	s2	e	
# ::edge	car	mod	blue	c	b2	
# ::edge	car	mod	vintage	c	v	
# ::edge	end	part-of	car	e	c	
# ::edge	car	ARG0-of	have-03	c	h	
# ::edge	have-03	ARG1	cat	h	c2	
# ::edge	end	location	under	e	u	
# ::edge	area	mod	bumper	a3	b3	
# ::edge	under	op1	area	u	a3	
(c3 / contrast-01
    :ARG1 (s / show-01
        :ARG0 (a2 / area
            :location-of (p / park-01))
        :ARG1 (a / and
            :op1 (s3 / storefront)
            :op2 (p2 / pole
                :mod (u2 / utility))))
    :ARG2 (s2 / show-01
        :ARG0 a2
        :ARG1 (e / end
            :location (u / under
                :op1 (a3 / area
                    :mod (b3 / bumper)))
            :mod (b / back)
            :part-of (c / car
                :ARG0-of (h / have-03
                    :ARG1 (c2 / cat))
                :mod (b2 / blue)
                :mod (v / vintage)))
        :ARG1-of (h2 / have-degree-91
            :ARG2 (i / important-01
                :ARG1 s2)
            :ARG3 (m / most))))
