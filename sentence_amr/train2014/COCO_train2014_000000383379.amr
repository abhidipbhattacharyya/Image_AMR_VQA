# ::tok Polson Logging Co . printed train sitting on railroad tracks .
# ::node	2	Polson	0-1
# ::node	1	Logging	1-2
# ::node	c	company	2-3
# ::node	n	name	2-3
# ::node	0	Co.	2-3
# ::node	p	print-01	4-5
# ::node	t2	train	5-6
# ::node	s	sit-01	6-7
# ::node	r	railroad	8-9
# ::node	t	track	9-10
# ::root	t2	train
# ::edge	company	name	name	c	n	
# ::edge	name	op2	Logging	n	1	
# ::edge	name	op1	Polson	n	2	
# ::edge	name	op3	Co.	n	0	
# ::edge	train	ARG1-of	print-01	t2	p	
# ::edge	train	poss	company	t2	c	
# ::edge	train	ARG1-of	sit-01	t2	s	
# ::edge	track	mod	railroad	t	r	
# ::edge	sit-01	ARG2	track	s	t	
(t2 / train
    :ARG1-of (p / print-01)
    :ARG1-of (s / sit-01
        :ARG2 (t / track
            :mod (r / railroad)))
    :poss (c / company
        :name (n / name
            :op1 "Polson"
            :op2 "Logging"
            :op3 "Co.")))
