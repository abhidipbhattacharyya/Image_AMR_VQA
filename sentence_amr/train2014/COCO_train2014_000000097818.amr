# ::tok One man hauling a second man and a cart of goods with a bike .
# ::node	0	1	0-1
# ::node	m	man	1-2
# ::node	h	haul-01	2-3
# ::node	o	ordinal-entity	4-5
# ::node	1	2	4-5
# ::node	m2	man	5-6
# ::node	a	and	6-7
# ::node	c	cart	8-9
# ::node	g	good	10-11
# ::node	b	bike	13-14
# ::root	h	haul-01
# ::edge	man	quant	1	m	0	
# ::edge	haul-01	ARG0	man	h	m	
# ::edge	ordinal-entity	value	2	o	1	
# ::edge	man	ord	ordinal-entity	m2	o	
# ::edge	and	op1	man	a	m2	
# ::edge	haul-01	ARG1	and	h	a	
# ::edge	and	op2	cart	a	c	
# ::edge	cart	consist-of	good	c	g	
# ::edge	haul-01	instrument	bike	h	b	
(h / haul-01
    :ARG0 (m / man
        :quant 1)
    :ARG1 (a / and
        :op1 (m2 / man
            :ord (o / ordinal-entity
                :value 2))
        :op2 (c / cart
            :consist-of (g / good)))
    :instrument (b / bike))
