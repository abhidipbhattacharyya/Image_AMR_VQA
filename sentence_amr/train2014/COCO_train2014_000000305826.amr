# ::tok A table topped with plates of food .
# ::node	t	table	1-2
# ::node	t2	top-01	2-3
# ::node	p	plate	4-5
# ::node	f	food	6-7
# ::root	t	table
# ::edge	table	ARG1-of	top-01	t	t2	
# ::edge	top-01	ARG2	plate	t2	p	
# ::edge	plate	consist-of	food	p	f	
(t / table
    :ARG1-of (t2 / top-01
        :ARG2 (p / plate
            :consist-of (f / food))))


# ::tok on top of a counter .
# ::node	b	be-located-at-91	0-1
# ::node	t	top	1-2
# ::node	c	counter	4-5
# ::root	b	be-located-at-91
# ::edge	be-located-at-91	ARG2	top	b	t	
# ::edge	top	part-of	counter	t	c	
(b / be-located-at-91
    :ARG2 (t / top
        :part-of (c / counter)))
