# ::tok A man skiing down a mountain .
# ::node	m	man	1-2
# ::node	s	ski-01	2-3
# ::node	d	down	3-4
# ::node	m2	mountain	5-6
# ::root	m	man
# ::edge	man	ARG0-of	ski-01	m	s	
# ::edge	ski-01	direction	down	s	d	
# ::edge	ski-01	path	mountain	s	m2	
(m / man
    :ARG0-of (s / ski-01
        :direction (d / down)
        :path (m2 / mountain)))


# ::tok The picture is split into three different parts .
# ::node	p2	picture	1-2
# ::node	s	split-01	3-4
# ::node	0	3	5-6
# ::node	d	differ-02	6-7
# ::node	p	part	7-8
# ::root	s	split-01
# ::edge	split-01	ARG1	picture	s	p2	
# ::edge	part	ARG1-of	differ-02	p	d	
# ::edge	part	quant	3	p	0	
# ::edge	split-01	ARG2	part	s	p	
(s / split-01
    :ARG1 (p2 / picture)
    :ARG2 (p / part
        :quant 3
        :ARG1-of (d / differ-02)))
