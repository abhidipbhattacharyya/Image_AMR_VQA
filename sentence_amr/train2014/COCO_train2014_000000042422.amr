# ::tok A set of three pieces of luggage stacked on top of each other .
# ::node	s	set	1-2
# ::node	0	3	3-4
# ::node	p	piece	4-5
# ::node	l	luggage	6-7
# ::node	s2	stack-01	7-8
# ::node	t	top	9-10
# ::node	e	each	11-12
# ::node	o	other	12-13
# ::root	s2	stack-01
# ::edge	piece	quant	3	p	0	
# ::edge	set	consist-of	piece	s	p	
# ::edge	piece	consist-of	luggage	p	l	
# ::edge	stack-01	ARG1	set	s2	s	
# ::edge	stack-01	ARG2	top	s2	t	
# ::edge	top	op1	each	t	e	
# ::edge	each	mod	other	e	o	
(s2 / stack-01
    :ARG1 (s / set
        :consist-of (p / piece
            :quant 3
            :consist-of (l / luggage)))
    :ARG2 (t / top
        :op1 (e / each
            :mod (o / other))))
