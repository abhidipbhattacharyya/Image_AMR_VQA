# ::tok 2 horses and 2 people , one holding a horse , one holding a cake
# ::node	1	2	0-1
# ::node	h3	horse	1-2
# ::node	a	and	2-3
# ::node	2	2	3-4
# ::node	p	person	4-5
# ::node	h	hold-01	7-8
# ::node	h2	hold-01	7-8
# ::node	0	1	11-12
# ::node	p2	person	12-13
# ::node	c	cake	14-15
# ::root	a	and
# ::edge	horse	quant	2	h3	1	
# ::edge	and	op1	horse	a	h3	
# ::edge	person	quant	2	p	2	
# ::edge	and	op2	person	a	p	
# ::edge	person	ARG0-of	hold-01	p	h	
# ::edge	hold-01	ARG1	horse	h	h3	
# ::edge	person	ARG0-of	hold-01	p	h2	
# ::edge	person	quant	1	p2	0	
# ::edge	hold-01	ARG1	person	h2	p2	
# ::edge	person	ARG0-of	hold-01	p2	h2	
# ::edge	hold-01	ARG1	cake	h2	c	
(a / and
    :op1 (h3 / horse
        :quant 2)
    :op2 (p / person
        :quant 2
        :ARG0-of (h / hold-01
            :ARG1 h3)
        :ARG0-of (h2 / hold-01
            :ARG1 (p2 / person
                :quant 1
                :ARG0-of h2)
            :ARG1 (c / cake))))
