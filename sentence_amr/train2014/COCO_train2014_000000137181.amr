# ::tok a young man standing next to an older man next to a table with a white cake with yellow icing .
# ::node	y2	young	1-2
# ::node	m	man	2-3
# ::node	s	stand-01	3-4
# ::node	n	next-to	4-5
# ::node	h2	have-degree-91	7-8
# ::node	o	old	7-8
# ::node	m3	more	7-8
# ::node	m2	man	8-9
# ::node	n2	next-to	9-10
# ::node	t	table	12-13
# ::node	h	have-03	13-14
# ::node	w	white-03	15-16
# ::node	c	cake	16-17
# ::node	y	yellow-02	18-19
# ::node	i	ice	19-20
# ::root	s	stand-01
# ::edge	man	mod	young	m	y2	
# ::edge	stand-01	ARG1	man	s	m	
# ::edge	stand-01	ARG2	next-to	s	n	
# ::edge	have-degree-91	ARG2	old	h2	o	
# ::edge	have-degree-91	ARG3	more	h2	m3	
# ::edge	man	ARG1-of	have-degree-91	m2	h2	
# ::edge	next-to	op1	man	n	m2	
# ::edge	man	location	next-to	m2	n2	
# ::edge	next-to	op1	table	n2	t	
# ::edge	man	ARG0-of	have-03	m2	h	
# ::edge	cake	ARG1-of	white-03	c	w	
# ::edge	have-03	ARG1	cake	h	c	
# ::edge	ice	ARG1-of	yellow-02	i	y	
# ::edge	cake	prep-with	ice	c	i	
(s / stand-01
    :ARG1 (m / man
        :mod (y2 / young))
    :ARG2 (n / next-to
        :op1 (m2 / man
            :ARG0-of (h / have-03
                :ARG1 (c / cake
                    :ARG1-of (w / white-03)
                    :prep-with (i / ice
                        :ARG1-of (y / yellow-02))))
            :ARG1-of (h2 / have-degree-91
                :ARG2 (o / old)
                :ARG3 (m3 / more))
            :location (n2 / next-to
                :op1 (t / table)))))
