# ::tok A train on a track with fencing around it near a city .
# ::node	t2	train	1-2
# ::node	t	track	4-5
# ::node	h	have-03	5-6
# ::node	f	fence	6-7
# ::node	a	around	7-8
# ::node	n	near-02	9-10
# ::node	c	city	11-12
# ::root	t2	train
# ::edge	train	location	track	t2	t	
# ::edge	track	ARG0-of	have-03	t	h	
# ::edge	have-03	ARG1	fence	h	f	
# ::edge	fence	location	around	f	a	
# ::edge	around	op1	train	a	t2	
# ::edge	train	ARG1-of	near-02	t2	n	
# ::edge	near-02	ARG2	city	n	c	
(t2 / train
    :ARG1-of (n / near-02
        :ARG2 (c / city))
    :location (t / track
        :ARG0-of (h / have-03
            :ARG1 (f / fence
                :location (a / around
                    :op1 t2)))))
