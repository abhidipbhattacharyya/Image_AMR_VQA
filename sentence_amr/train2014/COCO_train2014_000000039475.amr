# ::tok A blue and white sigh that reads " next exit jeff gordon blvd . "
# ::node	b	blue	1-2
# ::node	a	and	2-3
# ::node	w	white-03	3-4
# ::node	s	sigh-02	4-5
# ::node	r	read-01	6-7
# ::node	n2	next	8-9
# ::node	e	exit-01	9-10
# ::node	n	name	10-11
# ::node	1	Jeff	10-11
# ::node	0	Gordon	11-12
# ::node	r2	road	12-13
# ::root	s	sigh-02
# ::edge	and	op1	blue	a	b	
# ::edge	and	op2	white-03	a	w	
# ::edge	sigh-02	mod	and	s	a	
# ::edge	sigh-02	ARG1-of	read-01	s	r	
# ::edge	exit-01	mod	next	e	n2	
# ::edge	read-01	ARG3	exit-01	r	e	
# ::edge	name	op1	Jeff	n	1	
# ::edge	name	op2	Gordon	n	0	
# ::edge	road	name	name	r2	n	
# ::edge	exit-01	location	road	e	r2	
(s / sigh-02
    :ARG1-of (r / read-01
        :ARG3 (e / exit-01
            :location (r2 / road
                :name (n / name
                    :op1 "Jeff"
                    :op2 "Gordon"))
            :mod (n2 / next)))
    :mod (a / and
        :op1 (b / blue)
        :op2 (w / white-03)))
