# ::tok Man on skateboard looking apathetic on stone slab with trees behind
# ::node	m	man	0-1
# ::node	s	skate-01	2-3
# ::node	l	look-02	3-4
# ::node	a	apathetic	4-5
# ::node	s3	stone	6-7
# ::node	s2	slab	7-8
# ::node	h	have-03	8-9
# ::node	t	tree	9-10
# ::node	b	behind	10-11
# ::root	l	look-02
# ::edge	man	ARG0-of	skate-01	m	s	
# ::edge	look-02	ARG0	man	l	m	
# ::edge	look-02	ARG1	apathetic	l	a	
# ::edge	slab	consist-of	stone	s2	s3	
# ::edge	look-02	location	slab	l	s2	
# ::edge	slab	ARG0-of	have-03	s2	h	
# ::edge	have-03	ARG1	tree	h	t	
# ::edge	tree	location	behind	t	b	
# ::edge	behind	op1	slab	b	s2	
(l / look-02
    :ARG0 (m / man
        :ARG0-of (s / skate-01))
    :ARG1 (a / apathetic)
    :location (s2 / slab
        :ARG0-of (h / have-03
            :ARG1 (t / tree
                :location (b / behind
                    :op1 s2)))
        :consist-of (s3 / stone)))
