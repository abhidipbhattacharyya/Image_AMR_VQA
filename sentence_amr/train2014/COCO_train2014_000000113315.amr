# ::tok Different types of food are laid out on a counter as a woman in a dress holds a plate and wine bottles sit on another table .
# ::node	d	differ-02	0-1
# ::node	t2	type	1-2
# ::node	f	food	3-4
# ::node	l	lay-01	5-6
# ::node	o	out	6-7
# ::node	c	counter	9-10
# ::node	w2	woman	12-13
# ::node	d2	dress	15-16
# ::node	h	hold-01	16-17
# ::node	p	plate	18-19
# ::node	a	and	19-20
# ::node	a2	and	19-20
# ::node	w	wine	20-21
# ::node	b	bottle	21-22
# ::node	s	sit-01	22-23
# ::node	a3	another	24-25
# ::node	t	table	25-26
# ::root	a	and
# ::edge	type	ARG1-of	differ-02	t2	d	
# ::edge	food	mod	type	f	t2	
# ::edge	lay-01	ARG1	food	l	f	
# ::edge	lay-01	ARG2	out	l	o	
# ::edge	lay-01	ARG2	counter	l	c	
# ::edge	woman	mod	dress	w2	d2	
# ::edge	hold-01	ARG0	woman	h	w2	
# ::edge	hold-01	ARG1	plate	h	p	
# ::edge	and	op1	hold-01	a	h	
# ::edge	and	op2	and	a	a2	
# ::edge	and	op1	hold-01	a2	h	
# ::edge	bottle	mod	wine	b	w	
# ::edge	sit-01	ARG1	bottle	s	b	
# ::edge	and	op2	sit-01	a2	s	
# ::edge	table	mod	another	t	a3	
# ::edge	sit-01	ARG2	table	s	t	
# ::edge	and	rel	lay-01	a	l	
(a / and
    :op1 (h / hold-01
        :ARG0 (w2 / woman
            :mod (d2 / dress))
        :ARG1 (p / plate))
    :op2 (a2 / and
        :op1 h
        :op2 (s / sit-01
            :ARG1 (b / bottle
                :mod (w / wine))
            :ARG2 (t / table
                :mod (a3 / another))))
    :rel (l / lay-01
        :ARG1 (f / food
            :mod (t2 / type
                :ARG1-of (d / differ-02)))
        :ARG2 (o / out)
        :ARG2 (c / counter)))
