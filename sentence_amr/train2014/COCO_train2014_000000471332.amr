# ::tok A traffic light with lots of different lights sitting next to a stop sign .
# ::node	t	traffic	1-2
# ::node	l	light	2-3
# ::node	h	have-03	3-4
# ::node	l3	lot	4-5
# ::node	d	differ-02	6-7
# ::node	l2	light	7-8
# ::node	s2	sit-01	8-9
# ::node	n	next-to	9-10
# ::node	s3	stop-01	12-13
# ::node	s	signal-07	13-14
# ::root	s2	sit-01
# ::edge	light	mod	traffic	l	t	
# ::edge	light	ARG0-of	have-03	l	h	
# ::edge	light	ARG1-of	differ-02	l2	d	
# ::edge	light	quant	lot	l2	l3	
# ::edge	have-03	ARG1	light	h	l2	
# ::edge	sit-01	ARG1	light	s2	l	
# ::edge	sit-01	ARG2	next-to	s2	n	
# ::edge	signal-07	ARG1	stop-01	s	s3	
# ::edge	next-to	op1	signal-07	n	s	
(s2 / sit-01
    :ARG1 (l / light
        :ARG0-of (h / have-03
            :ARG1 (l2 / light
                :quant (l3 / lot)
                :ARG1-of (d / differ-02)))
        :mod (t / traffic))
    :ARG2 (n / next-to
        :op1 (s / signal-07
            :ARG1 (s3 / stop-01))))
