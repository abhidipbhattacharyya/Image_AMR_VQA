# ::tok A stack of pancakes , bacon , and coffee sit atop a table .
# ::node	s2	stack	1-2
# ::node	e	enzyme	3-4
# ::node	t2	tax-01	3-4
# ::node	a	and	4-5
# ::node	b	bacon	5-6
# ::node	c	coffee	8-9
# ::node	s	sit-01	9-10
# ::node	a2	atop	10-11
# ::node	t	table	12-13
# ::root	s	sit-01
# ::edge	enzyme	ARG1-of	tax-01	e	t2	
# ::edge	and	op1	enzyme	a	e	
# ::edge	stack	consist-of	and	s2	a	
# ::edge	and	op2	bacon	a	b	
# ::edge	and	op3	coffee	a	c	
# ::edge	sit-01	ARG1	stack	s	s2	
# ::edge	sit-01	ARG2	atop	s	a2	
# ::edge	atop	op1	table	a2	t	
(s / sit-01
    :ARG1 (s2 / stack
        :consist-of (a / and
            :op1 (e / enzyme
                :ARG1-of (t2 / tax-01))
            :op2 (b / bacon)
            :op3 (c / coffee)))
    :ARG2 (a2 / atop
        :op1 (t / table)))
