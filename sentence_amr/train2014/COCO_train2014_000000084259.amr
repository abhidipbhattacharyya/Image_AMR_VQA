# ::tok A food tray with a plate of food and two bowls of food next to it .
# ::node	f	food	1-2
# ::node	t	tray	2-3
# ::node	h	have-03	3-4
# ::node	p	plate	5-6
# ::node	f2	food	7-8
# ::node	a	and	8-9
# ::node	0	2	9-10
# ::node	p2	pound	10-11
# ::node	v	volume-quantity	11-12
# ::node	f3	food	12-13
# ::node	n	next-to	13-14
# ::root	t	tray
# ::edge	tray	mod	food	t	f	
# ::edge	tray	ARG0-of	have-03	t	h	
# ::edge	plate	consist-of	food	p	f2	
# ::edge	and	op1	plate	a	p	
# ::edge	have-03	ARG1	and	h	a	
# ::edge	volume-quantity	unit	pound	v	p2	
# ::edge	volume-quantity	quant	2	v	0	
# ::edge	food	quant	volume-quantity	f3	v	
# ::edge	and	op2	food	a	f3	
# ::edge	and	location	next-to	a	n	
# ::edge	next-to	op1	tray	n	t	
(t / tray
    :ARG0-of (h / have-03
        :ARG1 (a / and
            :location (n / next-to
                :op1 t)
            :op1 (p / plate
                :consist-of (f2 / food))
            :op2 (f3 / food
                :quant (v / volume-quantity
                    :quant 2
                    :unit (p2 / pound)))))
    :mod (f / food))
