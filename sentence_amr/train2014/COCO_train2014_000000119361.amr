# ::tok A yellow , green and red train traveling down train tracks .
# ::node	y	yellow-02	1-2
# ::node	g	green-02	3-4
# ::node	a	and	4-5
# ::node	r	red-02	5-6
# ::node	t2	train	6-7
# ::node	t3	train	6-7
# ::node	t4	train	6-7
# ::node	t6	travel-01	7-8
# ::node	d	down	8-9
# ::node	t5	train	9-10
# ::node	t	track	10-11
# ::root	t6	travel-01
# ::edge	and	op1	train	a	t2	
# ::edge	train	ARG1-of	yellow-02	t2	y	
# ::edge	and	op2	train	a	t3	
# ::edge	train	ARG1-of	green-02	t3	g	
# ::edge	train	ARG1-of	red-02	t4	r	
# ::edge	and	op3	train	a	t4	
# ::edge	travel-01	ARG0	and	t6	a	
# ::edge	travel-01	direction	down	t6	d	
# ::edge	track	mod	train	t	t5	
# ::edge	travel-01	path	track	t6	t	
(t6 / travel-01
    :ARG0 (a / and
        :op1 (t2 / train
            :ARG1-of (y / yellow-02))
        :op2 (t3 / train
            :ARG1-of (g / green-02))
        :op3 (t4 / train
            :ARG1-of (r / red-02)))
    :direction (d / down)
    :path (t / track
        :mod (t5 / train)))
