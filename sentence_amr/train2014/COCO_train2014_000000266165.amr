# ::tok a cat stands in an empty food dish and eats from another that has food
# ::node	c	cat	1-2
# ::node	s	stand-01	2-3
# ::node	e2	empty-02	5-6
# ::node	d	dish	7-8
# ::node	d2	dish	7-8
# ::node	a	and	8-9
# ::node	e	eat-01	9-10
# ::node	a2	another	11-12
# ::node	h	have-03	13-14
# ::node	f	food	14-15
# ::root	a	and
# ::edge	stand-01	ARG1	cat	s	c	
# ::edge	dish	ARG1-of	empty-02	d	e2	
# ::edge	stand-01	ARG2	dish	s	d	
# ::edge	and	op1	stand-01	a	s	
# ::edge	and	op2	eat-01	a	e	
# ::edge	eat-01	ARG1	dish	e	d2	
# ::edge	eat-01	ARG0	cat	e	c	
# ::edge	dish	mod	another	d2	a2	
# ::edge	dish	ARG0-of	have-03	d2	h	
# ::edge	have-03	ARG1	food	h	f	
(a / and
    :op1 (s / stand-01
        :ARG1 (c / cat)
        :ARG2 (d / dish
            :ARG1-of (e2 / empty-02)))
    :op2 (e / eat-01
        :ARG0 c
        :ARG1 (d2 / dish
            :ARG0-of (h / have-03
                :ARG1 (f / food))
            :mod (a2 / another))))
