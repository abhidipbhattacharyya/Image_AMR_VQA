# ::tok a train with a bright light sitting on the track surrounded by trees
# ::node	t2	train	1-2
# ::node	h	have-03	2-3
# ::node	b	bright-02	4-5
# ::node	l	light	5-6
# ::node	s	sit-01	6-7
# ::node	t	track	9-10
# ::node	s2	surround-01	10-11
# ::node	t3	tree	12-13
# ::root	s2	surround-01
# ::edge	train	ARG0-of	have-03	t2	h	
# ::edge	light	ARG0-of	bright-02	l	b	
# ::edge	have-03	ARG1	light	h	l	
# ::edge	sit-01	ARG1	train	s	t2	
# ::edge	sit-01	ARG2	track	s	t	
# ::edge	surround-01	ARG2	sit-01	s2	s	
# ::edge	surround-01	ARG1	tree	s2	t3	
(s2 / surround-01
    :ARG1 (t3 / tree)
    :ARG2 (s / sit-01
        :ARG1 (t2 / train
            :ARG0-of (h / have-03
                :ARG1 (l / light
                    :ARG0-of (b / bright-02))))
        :ARG2 (t / track)))
