# ::tok Two mirrors , two sinks , three lights , a window and a door .
# ::node	0	2	0-1
# ::node	m	mirror	1-2
# ::node	a	and	2-3
# ::node	1	2	3-4
# ::node	s	sink-01	4-5
# ::node	2	3	6-7
# ::node	l	light	7-8
# ::node	w	window	10-11
# ::node	d	door	13-14
# ::root	a	and
# ::edge	mirror	quant	2	m	0	
# ::edge	and	op1	mirror	a	m	
# ::edge	sink-01	quant	2	s	1	
# ::edge	and	op2	sink-01	a	s	
# ::edge	light	quant	3	l	2	
# ::edge	and	op3	light	a	l	
# ::edge	and	op4	window	a	w	
# ::edge	and	op5	door	a	d	
(a / and
    :op1 (m / mirror
        :quant 2)
    :op2 (s / sink-01
        :quant 2)
    :op3 (l / light
        :quant 3)
    :op4 (w / window)
    :op5 (d / door))
