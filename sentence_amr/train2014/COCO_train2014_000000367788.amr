# ::tok Many Hostess / Wonderbread trucks are parked , some are blue , some are white .
# ::node	m	many	0-1
# ::node	p2	person	1-2
# ::node	h2	host-01	1-2
# ::node	h	home	1-2
# ::node	s	slash	2-3
# ::node	c	company	3-4
# ::node	n	name	3-4
# ::node	0	Wonderbread	3-4
# ::node	t	truck	4-5
# ::node	t2	truck	4-5
# ::node	p	park-01	6-7
# ::node	i	include-91	8-9
# ::node	s2	some	8-9
# ::node	b	blue	10-11
# ::node	s3	some	12-13
# ::node	w	white-02	14-15
# ::root	p	park-01
# ::edge	person	ARG0-of	host-01	p2	h2	
# ::edge	host-01	ARG1	home	h2	h	
# ::edge	slash	op1	person	s	p2	
# ::edge	slash	op2	company	s	c	
# ::edge	company	name	name	c	n	
# ::edge	name	op1	Wonderbread	n	0	
# ::edge	truck	mod	slash	t	s	
# ::edge	truck	quant	many	t	m	
# ::edge	park-01	ARG1	truck	p	t	
# ::edge	include-91	ARG1	truck	i	t2	
# ::edge	truck	ARG2-of	include-91	t	i	
# ::edge	truck	quant	some	t2	s2	
# ::edge	truck	mod	blue	t2	b	
# ::edge	white-02	quant	some	w	s3	
# ::edge	truck	ARG1-of	white-02	t2	w	
(p / park-01
    :ARG1 (t / truck
        :quant (m / many)
        :ARG2-of (i / include-91
            :ARG1 (t2 / truck
                :quant (s2 / some)
                :ARG1-of (w / white-02
                    :quant (s3 / some))
                :mod (b / blue)))
        :mod (s / slash
            :op1 (p2 / person
                :ARG0-of (h2 / host-01
                    :ARG1 (h / home)))
            :op2 (c / company
                :name (n / name
                    :op1 "Wonderbread")))))
