# ::tok a wide open grocery store , with bananas hanging from the ceiling , has a dog and two people in front of it as well as lots of boxes of produce .
# ::node	w	wide-02	1-2
# ::node	o	open-09	2-3
# ::node	g	grocery	3-4
# ::node	s	store	4-5
# ::node	h2	have-03	6-7
# ::node	b	banana	7-8
# ::node	h	hang-01	8-9
# ::node	c	ceiling	11-12
# ::node	h3	have-03	13-14
# ::node	d	dog	15-16
# ::node	a	and	16-17
# ::node	0	2	17-18
# ::node	p	person	18-19
# ::node	i	in-front-of	20-21
# ::node	l	lot	26-27
# ::node	b2	box	28-29
# ::node	p2	produce	30-31
# ::root	h3	have-03
# ::edge	open-09	ARG1-of	wide-02	o	w	
# ::edge	store	mod	grocery	s	g	
# ::edge	store	ARG1-of	open-09	s	o	
# ::edge	store	ARG0-of	have-03	s	h2	
# ::edge	have-03	ARG1	banana	h2	b	
# ::edge	banana	ARG1-of	hang-01	b	h	
# ::edge	hang-01	ARG2	ceiling	h	c	
# ::edge	have-03	ARG0	store	h3	s	
# ::edge	and	op1	dog	a	d	
# ::edge	have-03	ARG1	and	h3	a	
# ::edge	person	quant	2	p	0	
# ::edge	and	op2	person	a	p	
# ::edge	and	location	in-front-of	a	i	
# ::edge	in-front-of	op1	store	i	s	
# ::edge	box	quant	lot	b2	l	
# ::edge	and	op3	box	a	b2	
# ::edge	box	consist-of	produce	b2	p2	
(h3 / have-03
    :ARG0 (s / store
        :ARG0-of (h2 / have-03
            :ARG1 (b / banana
                :ARG1-of (h / hang-01
                    :ARG2 (c / ceiling))))
        :ARG1-of (o / open-09
            :ARG1-of (w / wide-02))
        :mod (g / grocery))
    :ARG1 (a / and
        :location (i / in-front-of
            :op1 s)
        :op1 (d / dog)
        :op2 (p / person
            :quant 2)
        :op3 (b2 / box
            :quant (l / lot)
            :consist-of (p2 / produce))))
