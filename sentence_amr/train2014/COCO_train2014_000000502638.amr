# ::tok A counter with open - faced hamburger buns and condiments , without the hamburgers .
# ::node	c2	counter	1-2
# ::node	h2	have-03	2-3
# ::node	o	open-01	3-4
# ::node	f	face	5-6
# ::node	h	hamburger	6-7
# ::node	a	B	7-8
# ::node	a2	and	8-9
# ::node	c	conference	9-10
# ::node	h3	have-03	11-12
# ::node	0	-	11-12
# ::root	c2	counter
# ::edge	counter	ARG0-of	have-03	c2	h2	
# ::edge	face	ARG1-of	open-01	f	o	
# ::edge	B	mod	hamburger	a	h	
# ::edge	B	mod	face	a	f	
# ::edge	and	op1	B	a2	a	
# ::edge	have-03	ARG1	and	h2	a2	
# ::edge	and	op2	conference	a2	c	
# ::edge	conference	mod	face	c	f	
# ::edge	have-03	ARG0	hamburger	h3	h	
# ::edge	hamburger	ARG1-of	have-03	h	h3	
# ::edge	have-03	polarity	-	h3	0	
(c2 / counter
    :ARG0-of (h2 / have-03
        :ARG1 (a2 / and
            :op1 (a / B
                :mod (h / hamburger
                    :ARG1-of (h3 / have-03
                        :ARG0 h
                        :polarity -))
                :mod (f / face
                    :ARG1-of (o / open-01)))
            :op2 (c / conference
                :mod f))))
