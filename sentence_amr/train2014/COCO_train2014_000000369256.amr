# ::tok One train is on the tracks facing the camera while another faces away .
# ::node	o	one	0-1
# ::node	t2	train	1-2
# ::node	t3	train	1-2
# ::node	t	track	5-6
# ::node	f	face-01	6-7
# ::node	c	camera	8-9
# ::node	c2	contrast-01	9-10
# ::node	a	another	10-11
# ::node	f2	face-01	11-12
# ::node	a2	away	12-13
# ::root	c2	contrast-01
# ::edge	train	mod	one	t2	o	
# ::edge	train	location	track	t2	t	
# ::edge	train	ARG0-of	face-01	t2	f	
# ::edge	face-01	ARG1	camera	f	c	
# ::edge	contrast-01	ARG1	train	c2	t2	
# ::edge	train	mod	another	t3	a	
# ::edge	contrast-01	ARG2	face-01	c2	f2	
# ::edge	face-01	ARG0	train	f2	t3	
# ::edge	face-01	direction	away	f2	a2	
(c2 / contrast-01
    :ARG1 (t2 / train
        :ARG0-of (f / face-01
            :ARG1 (c / camera))
        :location (t / track)
        :mod (o / one))
    :ARG2 (f2 / face-01
        :ARG0 (t3 / train
            :mod (a / another))
        :direction (a2 / away)))
