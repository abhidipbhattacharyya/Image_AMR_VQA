# ::tok The man with black suit stands in the elevator next to the mirror .
# ::node	m	man	1-2
# ::node	h	have-03	2-3
# ::node	b	black-04	3-4
# ::node	s2	suit	4-5
# ::node	s	stand-01	5-6
# ::node	e	elevator	8-9
# ::node	n	next-to	9-10
# ::node	m2	mirror	12-13
# ::root	s	stand-01
# ::edge	man	ARG0-of	have-03	m	h	
# ::edge	suit	ARG1-of	black-04	s2	b	
# ::edge	have-03	ARG1	suit	h	s2	
# ::edge	stand-01	ARG1	man	s	m	
# ::edge	stand-01	ARG2	elevator	s	e	
# ::edge	stand-01	location	next-to	s	n	
# ::edge	next-to	op1	mirror	n	m2	
(s / stand-01
    :ARG1 (m / man
        :ARG0-of (h / have-03
            :ARG1 (s2 / suit
                :ARG1-of (b / black-04))))
    :ARG2 (e / elevator)
    :location (n / next-to
        :op1 (m2 / mirror)))
