# ::tok Two skateboarders seem to levitate over the crest of a snowy hill , which features a knot of snow - dusted evergreens and a number of people who appear to be looking at the skateboarders .
# ::node	1	2	0-1
# ::node	p	person	1-2
# ::node	s2	skate-01	1-2
# ::node	s	seem-01	2-3
# ::node	l2	lose-03	4-5
# ::node	o	over	5-6
# ::node	c	crest	7-8
# ::node	s4	snowy-02	10-11
# ::node	h	hill	11-12
# ::node	f	feature-01	14-15
# ::node	k	knot	16-17
# ::node	s3	snow	18-19
# ::node	d	dust-01	20-21
# ::node	t	tree	21-22
# ::node	0	10000	21-22
# ::node	a	and	22-23
# ::node	n	number	24-25
# ::node	p2	person	26-27
# ::node	a2	appear-02	28-29
# ::node	l	look-01	31-32
# ::root	s	seem-01
# ::edge	person	quant	2	p	1	
# ::edge	person	ARG0-of	skate-01	p	s2	
# ::edge	seem-01	ARG1	lose-03	s	l2	
# ::edge	lose-03	ARG1	person	l2	p	
# ::edge	lose-03	ARG0	person	l2	p	
# ::edge	lose-03	path	over	l2	o	
# ::edge	over	op1	crest	o	c	
# ::edge	hill	ARG1-of	snowy-02	h	s4	
# ::edge	crest	part-of	hill	c	h	
# ::edge	hill	ARG2-of	feature-01	h	f	
# ::edge	dust-01	ARG1	snow	d	s3	
# ::edge	tree	ARG2-of	dust-01	t	d	
# ::edge	knot	consist-of	tree	k	t	
# ::edge	tree	quant	10000	t	0	
# ::edge	and	op1	knot	a	k	
# ::edge	feature-01	ARG1	and	f	a	
# ::edge	person	quant	number	p2	n	
# ::edge	and	op2	person	a	p2	
# ::edge	look-01	ARG1-of	appear-02	l	a2	
# ::edge	person	ARG0-of	look-01	p2	l	
# ::edge	look-01	ARG1	person	l	p	
(s / seem-01
    :ARG1 (l2 / lose-03
        :ARG0 (p / person
            :quant 2
            :ARG0-of (s2 / skate-01))
        :ARG1 p
        :path (o / over
            :op1 (c / crest
                :part-of (h / hill
                    :ARG1-of (s4 / snowy-02)
                    :ARG2-of (f / feature-01
                        :ARG1 (a / and
                            :op1 (k / knot
                                :consist-of (t / tree
                                    :quant 10000
                                    :ARG2-of (d / dust-01
                                        :ARG1 (s3 / snow))))
                            :op2 (p2 / person
                                :quant (n / number)
                                :ARG0-of (l / look-01
                                    :ARG1 p
                                    :ARG1-of (a2 / appear-02))))))))))
