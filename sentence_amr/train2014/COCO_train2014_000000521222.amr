# ::tok A silver radio and remote sitting on a brown counter .
# ::node	s	silver	1-2
# ::node	r	radio	2-3
# ::node	a	and	3-4
# ::node	r2	remote	4-5
# ::node	s2	sit-01	5-6
# ::node	b	brown-01	8-9
# ::node	c	counter	9-10
# ::root	s2	sit-01
# ::edge	radio	mod	silver	r	s	
# ::edge	and	op1	radio	a	r	
# ::edge	and	op2	remote	a	r2	
# ::edge	sit-01	ARG1	and	s2	a	
# ::edge	counter	ARG1-of	brown-01	c	b	
# ::edge	sit-01	ARG2	counter	s2	c	
(s2 / sit-01
    :ARG1 (a / and
        :op1 (r / radio
            :mod (s / silver))
        :op2 (r2 / remote))
    :ARG2 (c / counter
        :ARG1-of (b / brown-01)))
