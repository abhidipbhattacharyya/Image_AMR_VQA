# ::tok A red and white traffic sign affixed to a stone building .
# ::node	r	red-02	1-2
# ::node	a2	and	2-3
# ::node	w	white-03	3-4
# ::node	t	traffic	4-5
# ::node	s	sign	5-6
# ::node	s2	sign	5-6
# ::node	a	affix-01	6-7
# ::node	s3	stone	9-10
# ::node	b	building	10-11
# ::root	a	affix-01
# ::edge	sign	mod	traffic	s	t	
# ::edge	and	op1	sign	a2	s	
# ::edge	sign	ARG1-of	red-02	s	r	
# ::edge	sign	mod	traffic	s2	t	
# ::edge	sign	ARG1-of	white-03	s2	w	
# ::edge	and	op2	sign	a2	s2	
# ::edge	affix-01	ARG1	and	a	a2	
# ::edge	building	consist-of	stone	b	s3	
# ::edge	affix-01	ARG2	building	a	b	
(a / affix-01
    :ARG1 (a2 / and
        :op1 (s / sign
            :ARG1-of (r / red-02)
            :mod (t / traffic))
        :op2 (s2 / sign
            :ARG1-of (w / white-03)
            :mod t))
    :ARG2 (b / building
        :consist-of (s3 / stone)))
