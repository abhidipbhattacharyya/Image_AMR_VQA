# ::tok A cat looking at itself in a mirror on top of a wooden counter .
# ::node	c	cat	1-2
# ::node	l	look-01	2-3
# ::node	m	mirror	7-8
# ::node	t	top	9-10
# ::node	w	wood	12-13
# ::node	c2	counter	13-14
# ::root	l	look-01
# ::edge	look-01	ARG1	cat	l	c	
# ::edge	look-01	ARG0	cat	l	c	
# ::edge	look-01	instrument	mirror	l	m	
# ::edge	mirror	location	top	m	t	
# ::edge	counter	consist-of	wood	c2	w	
# ::edge	top	part-of	counter	t	c2	
(l / look-01
    :ARG0 (c / cat)
    :ARG1 c
    :instrument (m / mirror
        :location (t / top
            :part-of (c2 / counter
                :consist-of (w / wood)))))
