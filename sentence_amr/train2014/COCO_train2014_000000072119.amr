# ::tok The train is carrying children and driving down the tracks .
# ::node	t2	train	1-2
# ::node	c	carry-01	3-4
# ::node	c2	child	4-5
# ::node	a	and	5-6
# ::node	d2	drive-01	6-7
# ::node	d	down	7-8
# ::node	t	track	9-10
# ::root	a	and
# ::edge	carry-01	ARG0	train	c	t2	
# ::edge	carry-01	ARG1	child	c	c2	
# ::edge	and	op1	carry-01	a	c	
# ::edge	and	op2	drive-01	a	d2	
# ::edge	drive-01	ARG0	train	d2	t2	
# ::edge	drive-01	direction	down	d2	d	
# ::edge	drive-01	ARG1	track	d2	t	
(a / and
    :op1 (c / carry-01
        :ARG0 (t2 / train)
        :ARG1 (c2 / child))
    :op2 (d2 / drive-01
        :ARG0 t2
        :ARG1 (t / track)
        :direction (d / down)))
