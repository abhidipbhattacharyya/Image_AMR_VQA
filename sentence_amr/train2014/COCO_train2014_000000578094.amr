# ::tok A man sitting back in a train car looking out a window .
# ::node	m	man	1-2
# ::node	s	sit-01	2-3
# ::node	b	back	3-4
# ::node	t	train	6-7
# ::node	c	car	7-8
# ::node	l	look-01	8-9
# ::node	w	window	11-12
# ::node	a	and	12-13
# ::root	a	and
# ::edge	sit-01	ARG1	man	s	m	
# ::edge	sit-01	mod	back	s	b	
# ::edge	car	mod	train	c	t	
# ::edge	sit-01	ARG2	car	s	c	
# ::edge	look-01	ARG0	man	l	m	
# ::edge	look-01	ARG1	window	l	w	
# ::edge	and	op2	look-01	a	l	
# ::edge	and	op1	sit-01	a	s	
(a / and
    :op1 (s / sit-01
        :ARG1 (m / man)
        :ARG2 (c / car
            :mod (t / train))
        :mod (b / back))
    :op2 (l / look-01
        :ARG0 m
        :ARG1 (w / window)))
