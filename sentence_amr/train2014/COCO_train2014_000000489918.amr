# ::tok Two trains are on a set of tracks running parallel to one another .
# ::node	0	2	0-1
# ::node	t2	train	1-2
# ::node	b	be-located-at-91	3-4
# ::node	s	set	5-6
# ::node	t	track	7-8
# ::node	r	run-04	8-9
# ::node	p	parallel	9-10
# ::root	b	be-located-at-91
# ::edge	train	quant	2	t2	0	
# ::edge	be-located-at-91	ARG1	train	b	t2	
# ::edge	be-located-at-91	ARG2	set	b	s	
# ::edge	set	consist-of	track	s	t	
# ::edge	track	ARG1-of	run-04	t	r	
# ::edge	run-04	manner	parallel	r	p	
(b / be-located-at-91
    :ARG1 (t2 / train
        :quant 2)
    :ARG2 (s / set
        :consist-of (t / track
            :ARG1-of (r / run-04
                :manner (p / parallel)))))
