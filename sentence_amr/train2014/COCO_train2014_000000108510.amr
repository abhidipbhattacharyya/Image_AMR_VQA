# ::tok A train on one side of the road going down the track with a road on the other side of the road .
# ::node	t2	train	1-2
# ::node	o	one	3-4
# ::node	s	side	4-5
# ::node	r	road	7-8
# ::node	g	go-01	8-9
# ::node	d	down	9-10
# ::node	t	track	11-12
# ::node	r2	road	14-15
# ::node	o2	other	17-18
# ::node	s2	side	18-19
# ::root	g	go-01
# ::edge	side	mod	one	s	o	
# ::edge	train	location	side	t2	s	
# ::edge	side	part-of	road	s	r	
# ::edge	go-01	ARG1	train	g	t2	
# ::edge	go-01	direction	down	g	d	
# ::edge	go-01	path	track	g	t	
# ::edge	go-01	accompanier	road	g	r2	
# ::edge	side	mod	other	s2	o2	
# ::edge	road	location	side	r2	s2	
# ::edge	road	part	side	r	s2	
(g / go-01
    :ARG1 (t2 / train
        :location (s / side
            :mod (o / one)
            :part-of (r / road
                :part (s2 / side
                    :mod (o2 / other)))))
    :accompanier (r2 / road
        :location s2)
    :direction (d / down)
    :path (t / track))
