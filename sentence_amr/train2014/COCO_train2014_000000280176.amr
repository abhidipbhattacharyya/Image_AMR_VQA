# ::tok A plate with two pieces of pizza on it sitting next to a laptop and a pizza on a pan - missing two pieces .
# ::node	p6	plate	1-2
# ::node	h	have-03	2-3
# ::node	0	2	3-4
# ::node	p2	piece	4-5
# ::node	p4	pizza	6-7
# ::node	s	sit-01	9-10
# ::node	n	next-to	10-11
# ::node	l	laptop	13-14
# ::node	a	and	14-15
# ::node	p5	pizza	16-17
# ::node	p	pan	19-20
# ::node	m	miss-01	21-22
# ::node	1	2	22-23
# ::node	p3	piece	23-24
# ::root	a	and
# ::edge	plate	ARG0-of	have-03	p6	h	
# ::edge	piece	quant	2	p2	0	
# ::edge	pizza	consist-of	piece	p4	p2	
# ::edge	have-03	ARG1	pizza	h	p4	
# ::edge	plate	ARG1-of	sit-01	p6	s	
# ::edge	sit-01	ARG2	next-to	s	n	
# ::edge	next-to	op1	laptop	n	l	
# ::edge	and	op1	plate	a	p6	
# ::edge	and	op2	pizza	a	p5	
# ::edge	miss-01	location	pan	m	p	
# ::edge	piece	quant	2	p3	1	
# ::edge	piece	ARG1-of	miss-01	p3	m	
# ::edge	pizza	location	piece	p5	p3	
(a / and
    :op1 (p6 / plate
        :ARG0-of (h / have-03
            :ARG1 (p4 / pizza
                :consist-of (p2 / piece
                    :quant 2)))
        :ARG1-of (s / sit-01
            :ARG2 (n / next-to
                :op1 (l / laptop))))
    :op2 (p5 / pizza
        :location (p3 / piece
            :quant 2
            :ARG1-of (m / miss-01
                :location (p / pan)))))
