# ::tok There are three cats sitting and looking out the window , and one cat lying down and looking the opposite direction .
# ::node	1	3	2-3
# ::node	c	cat	3-4
# ::node	s	sit-01	4-5
# ::node	a	and	5-6
# ::node	a2	and	5-6
# ::node	l2	look-01	6-7
# ::node	w	window	9-10
# ::node	0	1	12-13
# ::node	c2	cat	13-14
# ::node	l	lie-down-09	14-15
# ::node	a3	and	16-17
# ::node	l3	look-01	17-18
# ::node	o	opposite-01	19-20
# ::node	d	direction	20-21
# ::root	a	and
# ::edge	cat	quant	3	c	1	
# ::edge	sit-01	ARG1	cat	s	c	
# ::edge	and	op1	and	a	a2	
# ::edge	and	op1	sit-01	a2	s	
# ::edge	and	op2	look-01	a2	l2	
# ::edge	look-01	ARG0	cat	l2	c	
# ::edge	look-01	ARG1	window	l2	w	
# ::edge	sit-01	ARG2	window	s	w	
# ::edge	cat	quant	1	c2	0	
# ::edge	lie-down-09	ARG1	cat	l	c2	
# ::edge	and	op1	lie-down-09	a3	l	
# ::edge	and	op2	and	a	a3	
# ::edge	and	op2	look-01	a3	l3	
# ::edge	look-01	ARG0	cat	l3	c2	
# ::edge	direction	ARG1-of	opposite-01	d	o	
# ::edge	look-01	direction	direction	l3	d	
(a / and
    :op1 (a2 / and
        :op1 (s / sit-01
            :ARG1 (c / cat
                :quant 3)
            :ARG2 (w / window))
        :op2 (l2 / look-01
            :ARG0 c
            :ARG1 w))
    :op2 (a3 / and
        :op1 (l / lie-down-09
            :ARG1 (c2 / cat
                :quant 1))
        :op2 (l3 / look-01
            :ARG0 c2
            :direction (d / direction
                :ARG1-of (o / opposite-01)))))
