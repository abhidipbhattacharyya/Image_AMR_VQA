# ::tok One zebra eating in a zoo like environment and another zebra partially in view
# ::node	0	1	0-1
# ::node	z	zebra	1-2
# ::node	z2	zebra	1-2
# ::node	e	eat-01	2-3
# ::node	z3	zoo	5-6
# ::node	r	resemble-01	6-7
# ::node	e2	environment	7-8
# ::node	a	and	8-9
# ::node	a2	another	9-10
# ::node	p	part	11-12
# ::node	v	view-01	13-14
# ::root	a	and
# ::edge	zebra	quant	1	z	0	
# ::edge	zebra	ARG0-of	eat-01	z	e	
# ::edge	resemble-01	ARG2	zoo	r	z3	
# ::edge	environment	ARG1-of	resemble-01	e2	r	
# ::edge	eat-01	location	environment	e	e2	
# ::edge	and	op2	zebra	a	z2	
# ::edge	and	op1	zebra	a	z	
# ::edge	zebra	mod	another	z2	a2	
# ::edge	view-01	degree	part	v	p	
# ::edge	zebra	ARG1-of	view-01	z2	v	
(a / and
    :op1 (z / zebra
        :quant 1
        :ARG0-of (e / eat-01
            :location (e2 / environment
                :ARG1-of (r / resemble-01
                    :ARG2 (z3 / zoo)))))
    :op2 (z2 / zebra
        :ARG1-of (v / view-01
            :degree (p / part))
        :mod (a2 / another)))
