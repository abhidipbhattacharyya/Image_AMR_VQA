# ::tok One way sign next to E 50 street and John Cardinal O'Connor way .
# ::node	o	one	0-1
# ::node	w	way	1-2
# ::node	s	sign	2-3
# ::node	n3	next-to	3-4
# ::node	n	name	5-6
# ::node	2	E	5-6
# ::node	0	50	6-7
# ::node	s2	street-address-91	7-8
# ::node	5	Street	7-8
# ::node	a	and	8-9
# ::node	3	John	9-10
# ::node	1	Cardinal	10-11
# ::node	p	person	11-12
# ::node	4	O'Connor	11-12
# ::node	w2	way	12-13
# ::node	n2	name	12-13
# ::root	s	sign
# ::edge	way	quant	one	w	o	
# ::edge	sign	mod	way	s	w	
# ::edge	sign	location	next-to	s	n3	
# ::edge	name	op1	E	n	2	
# ::edge	name	op2	50	n	0	
# ::edge	street-address-91	name	name	s2	n	
# ::edge	name	op3	Street	n	5	
# ::edge	and	op1	street-address-91	a	s2	
# ::edge	next-to	op1	and	n3	a	
# ::edge	way	poss	person	w2	p	
# ::edge	and	op2	way	a	w2	
# ::edge	name	op3	O'Connor	n2	4	
# ::edge	person	name	name	p	n2	
# ::edge	name	op2	Cardinal	n2	1	
# ::edge	name	op1	John	n2	3	
(s / sign
    :location (n3 / next-to
        :op1 (a / and
            :op1 (s2 / street-address-91
                :name (n / name
                    :op1 "E"
                    :op2 50
                    :op3 "Street"))
            :op2 (w2 / way
                :poss (p / person
                    :name (n2 / name
                        :op1 "John"
                        :op2 "Cardinal"
                        :op3 "O'Connor")))))
    :mod (w / way
        :quant (o / one)))
