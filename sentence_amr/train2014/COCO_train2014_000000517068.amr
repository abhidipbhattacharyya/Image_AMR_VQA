# ::tok Slice of pizza in one plate with side of bread sticks and dipping sauce , red pepper and grated cheese also on table .
# ::node	s3	slice	0-1
# ::node	p2	pizza	2-3
# ::node	0	1	4-5
# ::node	p3	plate	5-6
# ::node	s2	side	7-8
# ::node	b2	bread	9-10
# ::node	s4	stick	10-11
# ::node	d	dip-02	12-13
# ::node	s	sauce	13-14
# ::node	r	red-02	15-16
# ::node	p	pepper	16-17
# ::node	a2	and	17-18
# ::node	p4	prepare-01	18-19
# ::node	c	cheese	19-20
# ::node	a	also	20-21
# ::node	b	be-located-at-91	21-22
# ::node	t	table	22-23
# ::root	b	be-located-at-91
# ::edge	slice	mod	pizza	s3	p2	
# ::edge	plate	quant	1	p3	0	
# ::edge	slice	location	plate	s3	p3	
# ::edge	plate	part	side	p3	s2	
# ::edge	stick	consist-of	bread	s4	b2	
# ::edge	side	consist-of	stick	s2	s4	
# ::edge	sauce	ARG2-of	dip-02	s	d	
# ::edge	pepper	ARG1-of	red-02	p	r	
# ::edge	and	op3	pepper	a2	p	
# ::edge	and	op2	sauce	a2	s	
# ::edge	and	op1	slice	a2	s3	
# ::edge	plate	accompanier	and	p3	a2	
# ::edge	pepper	ARG1-of	prepare-01	p	p4	
# ::edge	prepare-01	ARG0	cheese	p4	c	
# ::edge	be-located-at-91	mod	also	b	a	
# ::edge	be-located-at-91	ARG1	slice	b	s3	
# ::edge	be-located-at-91	ARG2	table	b	t	
(b / be-located-at-91
    :ARG1 (s3 / slice
        :location (p3 / plate
            :quant 1
            :accompanier (a2 / and
                :op1 s3
                :op2 (s / sauce
                    :ARG2-of (d / dip-02))
                :op3 (p / pepper
                    :ARG1-of (r / red-02)
                    :ARG1-of (p4 / prepare-01
                        :ARG0 (c / cheese))))
            :part (s2 / side
                :consist-of (s4 / stick
                    :consist-of (b2 / bread))))
        :mod (p2 / pizza))
    :ARG2 (t / table)
    :mod (a / also))
