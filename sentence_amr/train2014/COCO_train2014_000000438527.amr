# ::tok there is a man with a lot of luggage trying to catch a cab
# ::node	m	man	3-4
# ::node	h	have-03	4-5
# ::node	l	lot	6-7
# ::node	l2	luggage	8-9
# ::node	t	try-01	9-10
# ::node	c2	catch-01	11-12
# ::node	c	cab	13-14
# ::root	t	try-01
# ::edge	man	ARG0-of	have-03	m	h	
# ::edge	luggage	quant	lot	l2	l	
# ::edge	have-03	ARG1	luggage	h	l2	
# ::edge	try-01	ARG0	man	t	m	
# ::edge	try-01	ARG1	catch-01	t	c2	
# ::edge	catch-01	ARG0	man	c2	m	
# ::edge	catch-01	ARG1	cab	c2	c	
(t / try-01
    :ARG0 (m / man
        :ARG0-of (h / have-03
            :ARG1 (l2 / luggage
                :quant (l / lot))))
    :ARG1 (c2 / catch-01
        :ARG0 m
        :ARG1 (c / cab)))
