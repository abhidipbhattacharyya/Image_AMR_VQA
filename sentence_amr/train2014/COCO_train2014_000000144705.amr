# ::tok He 's stuffing salad into his mouth so he can get back to work .
# ::node	s2	stuff-01	2-3
# ::node	s	salad	3-4
# ::node	m	mouth	6-7
# ::node	h	he	8-9
# ::node	p	possible-01	9-10
# ::node	g	get-back-10	10-11
# ::node	w	work-01	13-14
# ::root	s2	stuff-01
# ::edge	stuff-01	ARG2	salad	s2	s	
# ::edge	stuff-01	ARG1	mouth	s2	m	
# ::edge	he	part	mouth	h	m	
# ::edge	stuff-01	ARG0	he	s2	h	
# ::edge	stuff-01	purpose	possible-01	s2	p	
# ::edge	possible-01	ARG1	get-back-10	p	g	
# ::edge	get-back-10	ARG1	he	g	h	
# ::edge	get-back-10	ARG2	work-01	g	w	
# ::edge	work-01	ARG0	he	w	h	
(s2 / stuff-01
    :purpose (p / possible-01
        :ARG1 (g / get-back-10
            :ARG1 (h / he
                :part (m / mouth))
            :ARG2 (w / work-01
                :ARG0 h)))
    :ARG0 h
    :ARG1 m
    :ARG2 (s / salad))
