# ::tok Most of this dog is either happy , tired , or a combination of both
# ::node	m	most	0-1
# ::node	i	include-91	0-1
# ::node	t	this	2-3
# ::node	d	dog	3-4
# ::node	h	happy-01	6-7
# ::node	t2	tire-01	8-9
# ::node	o	or	10-11
# ::node	c	combine-01	12-13
# ::root	o	or
# ::edge	most	ARG1-of	include-91	m	i	
# ::edge	dog	mod	this	d	t	
# ::edge	include-91	ARG2	dog	i	d	
# ::edge	happy-01	ARG1	most	h	m	
# ::edge	tire-01	ARG1	most	t2	m	
# ::edge	or	op2	tire-01	o	t2	
# ::edge	or	op1	happy-01	o	h	
# ::edge	or	op3	combine-01	o	c	
# ::edge	combine-01	ARG3	tire-01	c	t2	
# ::edge	combine-01	ARG1	dog	c	d	
(o / or
    :op1 (h / happy-01
        :ARG1 (m / most
            :ARG1-of (i / include-91
                :ARG2 (d / dog
                    :mod (t / this)))))
    :op2 (t2 / tire-01
        :ARG1 m)
    :op3 (c / combine-01
        :ARG1 d
        :ARG3 t2))
