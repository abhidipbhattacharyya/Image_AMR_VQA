# ::tok Produce in market style display with three bunches of bananas hanging down if front .
# ::node	p	produce-01	0-1
# ::node	m	market	2-3
# ::node	s	style	3-4
# ::node	d	display-01	4-5
# ::node	h2	have-03	5-6
# ::node	0	3	6-7
# ::node	l	load	7-8
# ::node	b	banana	9-10
# ::node	h	hang-01	10-11
# ::node	d2	down	11-12
# ::node	f	front	13-14
# ::root	p	produce-01
# ::edge	style	mod	market	s	m	
# ::edge	display-01	mod	style	d	s	
# ::edge	produce-01	ARG1-of	display-01	p	d	
# ::edge	display-01	ARG0-of	have-03	d	h2	
# ::edge	load	quant	3	l	0	
# ::edge	have-03	ARG1	load	h2	l	
# ::edge	load	consist-of	banana	l	b	
# ::edge	load	ARG1-of	hang-01	l	h	
# ::edge	hang-01	ARG2	down	h	d2	
# ::edge	down	condition	front	d2	f	
(p / produce-01
    :ARG1-of (d / display-01
        :ARG0-of (h2 / have-03
            :ARG1 (l / load
                :quant 3
                :ARG1-of (h / hang-01
                    :ARG2 (d2 / down
                        :condition (f / front)))
                :consist-of (b / banana)))
        :mod (s / style
            :mod (m / market))))
