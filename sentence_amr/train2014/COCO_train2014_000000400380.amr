# ::tok A yellow taxicab stopped at a red traffic light on a city street with parked cars along the side of the street .
# ::node	y	yellow-02	1-2
# ::node	t	taxicab	2-3
# ::node	s2	stop-01	3-4
# ::node	r	red-02	6-7
# ::node	t2	traffic	7-8
# ::node	l	light	8-9
# ::node	c2	city	11-12
# ::node	s3	street	12-13
# ::node	h	have-03	13-14
# ::node	p	park-01	14-15
# ::node	c	car	15-16
# ::node	a	along	16-17
# ::node	s	side	18-19
# ::root	s2	stop-01
# ::edge	taxicab	ARG1-of	yellow-02	t	y	
# ::edge	stop-01	ARG1	taxicab	s2	t	
# ::edge	light	mod	traffic	l	t2	
# ::edge	light	ARG1-of	red-02	l	r	
# ::edge	stop-01	location	light	s2	l	
# ::edge	street	mod	city	s3	c2	
# ::edge	stop-01	location	street	s2	s3	
# ::edge	street	ARG0-of	have-03	s3	h	
# ::edge	car	ARG1-of	park-01	c	p	
# ::edge	have-03	ARG1	car	h	c	
# ::edge	car	location	along	c	a	
# ::edge	along	op1	side	a	s	
# ::edge	street	part	side	s3	s	
(s2 / stop-01
    :ARG1 (t / taxicab
        :ARG1-of (y / yellow-02))
    :location (l / light
        :ARG1-of (r / red-02)
        :mod (t2 / traffic))
    :location (s3 / street
        :ARG0-of (h / have-03
            :ARG1 (c / car
                :ARG1-of (p / park-01)
                :location (a / along
                    :op1 (s / side))))
        :mod (c2 / city)
        :part s))
