# ::tok A body of water that has one elephant submerged up to it ; s head , and a smaller elephant riding it 's back /
# ::node	b2	body	1-2
# ::node	w	water	3-4
# ::node	h	have-03	5-6
# ::node	0	1	6-7
# ::node	e	elephant	7-8
# ::node	s2	submerge-01	8-9
# ::node	u	up-to	9-10
# ::node	h3	head	14-15
# ::node	a	and	16-17
# ::node	h2	have-degree-91	18-19
# ::node	s	small	18-19
# ::node	m	more	18-19
# ::node	e2	elephant	19-20
# ::node	r	ride-01	20-21
# ::node	b	back	23-24
# ::root	b2	body
# ::edge	body	consist-of	water	b2	w	
# ::edge	body	ARG0-of	have-03	b2	h	
# ::edge	elephant	quant	1	e	0	
# ::edge	submerge-01	ARG1	elephant	s2	e	
# ::edge	submerge-01	location	up-to	s2	u	
# ::edge	up-to	op1	elephant	u	e	
# ::edge	up-to	op1	head	u	h3	
# ::edge	elephant	part	head	e	h3	
# ::edge	and	op1	submerge-01	a	s2	
# ::edge	have-03	ARG1	and	h	a	
# ::edge	have-degree-91	ARG2	small	h2	s	
# ::edge	have-degree-91	ARG3	more	h2	m	
# ::edge	elephant	ARG1-of	have-degree-91	e2	h2	
# ::edge	ride-01	ARG0	elephant	r	e2	
# ::edge	and	op2	ride-01	a	r	
# ::edge	ride-01	ARG1	back	r	b	
# ::edge	elephant	part	back	e2	b	
(b2 / body
    :ARG0-of (h / have-03
        :ARG1 (a / and
            :op1 (s2 / submerge-01
                :ARG1 (e / elephant
                    :quant 1
                    :part (h3 / head))
                :location (u / up-to
                    :op1 e
                    :op1 h3))
            :op2 (r / ride-01
                :ARG0 (e2 / elephant
                    :ARG1-of (h2 / have-degree-91
                        :ARG2 (s / small)
                        :ARG3 (m / more))
                    :part (b / back))
                :ARG1 b)))
    :consist-of (w / water))
