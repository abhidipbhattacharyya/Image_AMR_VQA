# ::tok A street that has cars driving down it , and many cars parked to the sides .
# ::node	s2	street	1-2
# ::node	h	have-03	3-4
# ::node	c	car	4-5
# ::node	d2	drive-01	5-6
# ::node	d	down	6-7
# ::node	a	and	9-10
# ::node	m	many	10-11
# ::node	c2	car	11-12
# ::node	p	park-01	12-13
# ::node	s	side	15-16
# ::root	s2	street
# ::edge	street	ARG0-of	have-03	s2	h	
# ::edge	car	ARG1-of	drive-01	c	d2	
# ::edge	drive-01	direction	down	d2	d	
# ::edge	down	op1	street	d	s2	
# ::edge	and	op1	car	a	c	
# ::edge	have-03	ARG1	and	h	a	
# ::edge	car	quant	many	c2	m	
# ::edge	and	op2	car	a	c2	
# ::edge	car	ARG1-of	park-01	c2	p	
# ::edge	park-01	location	side	p	s	
# ::edge	street	part	side	s2	s	
(s2 / street
    :ARG0-of (h / have-03
        :ARG1 (a / and
            :op1 (c / car
                :ARG1-of (d2 / drive-01
                    :direction (d / down
                        :op1 s2)))
            :op2 (c2 / car
                :quant (m / many)
                :ARG1-of (p / park-01
                    :location (s / side)))))
    :part s)
