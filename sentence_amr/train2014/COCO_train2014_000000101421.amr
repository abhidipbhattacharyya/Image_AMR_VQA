# ::tok A red two level bus that is parked with it 's doors closed and another bus is behind it .
# ::node	r	red-02	1-2
# ::node	0	2	2-3
# ::node	l	level	3-4
# ::node	b3	bus	4-5
# ::node	p	park-01	7-8
# ::node	d	door	11-12
# ::node	c	close-01	12-13
# ::node	a	and	13-14
# ::node	a2	another	14-15
# ::node	b4	bus	15-16
# ::node	b	be-located-at-91	17-18
# ::node	b2	behind	17-18
# ::root	a	and
# ::edge	level	quant	2	l	0	
# ::edge	bus	mod	level	b3	l	
# ::edge	bus	ARG1-of	red-02	b3	r	
# ::edge	park-01	ARG1	bus	p	b3	
# ::edge	bus	part	door	b3	d	
# ::edge	close-01	ARG1	door	c	d	
# ::edge	park-01	manner	close-01	p	c	
# ::edge	and	op1	park-01	a	p	
# ::edge	bus	mod	another	b4	a2	
# ::edge	be-located-at-91	ARG1	bus	b	b4	
# ::edge	and	op2	be-located-at-91	a	b	
# ::edge	be-located-at-91	ARG2	behind	b	b2	
# ::edge	behind	op1	bus	b2	b3	
(a / and
    :op1 (p / park-01
        :ARG1 (b3 / bus
            :ARG1-of (r / red-02)
            :mod (l / level
                :quant 2)
            :part (d / door))
        :manner (c / close-01
            :ARG1 d))
    :op2 (b / be-located-at-91
        :ARG1 (b4 / bus
            :mod (a2 / another))
        :ARG2 (b2 / behind
            :op1 b3)))
