# ::tok One red , one yellow and one white sport car take up parking places in a parking lot .
# ::node	0	1	0-1
# ::node	r	red-02	1-2
# ::node	y	yellow-02	4-5
# ::node	a	and	5-6
# ::node	1	1	6-7
# ::node	w	white-03	7-8
# ::node	s	sport	8-9
# ::node	c	car	9-10
# ::node	c2	car	9-10
# ::node	c3	car	9-10
# ::node	t	take-up-31	10-11
# ::node	p	park-01	12-13
# ::node	p2	place	13-14
# ::node	l	lot	17-18
# ::root	t	take-up-31
# ::edge	and	op1	car	a	c	
# ::edge	car	ARG1-of	red-02	c	r	
# ::edge	car	quant	1	c	0	
# ::edge	and	op2	car	a	c2	
# ::edge	car	ARG1-of	yellow-02	c2	y	
# ::edge	car	quant	1	c2	0	
# ::edge	car	mod	sport	c3	s	
# ::edge	car	ARG1-of	white-03	c3	w	
# ::edge	and	op3	car	a	c3	
# ::edge	take-up-31	ARG0	and	t	a	
# ::edge	place	location-of	park-01	p2	p	
# ::edge	take-up-31	ARG1	place	t	p2	
# ::edge	place	location	lot	p2	l	
# ::edge	take-up-31	rel	1	t	1	
(t / take-up-31
    :ARG0 (a / and
        :op1 (c / car
            :quant 1
            :ARG1-of (r / red-02))
        :op2 (c2 / car
            :quant 1
            :ARG1-of (y / yellow-02))
        :op3 (c3 / car
            :ARG1-of (w / white-03)
            :mod (s / sport)))
    :ARG1 (p2 / place
        :location (l / lot)
        :location-of (p / park-01))
    :rel 1)
