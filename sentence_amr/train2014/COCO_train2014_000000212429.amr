# ::tok A green pool with at least 20 different stop lights on it .
# ::node	g	green-02	1-2
# ::node	p	pool	2-3
# ::node	a	at-least	5-6
# ::node	0	20	6-7
# ::node	d	differ-02	7-8
# ::node	s	stop-01	8-9
# ::node	l	light	9-10
# ::root	p	pool
# ::edge	pool	ARG1-of	green-02	p	g	
# ::edge	at-least	op1	20	a	0	
# ::edge	light	ARG0-of	stop-01	l	s	
# ::edge	light	ARG1-of	differ-02	l	d	
# ::edge	light	quant	at-least	l	a	
# ::edge	pool	location-of	light	p	l	
(p / pool
    :ARG1-of (g / green-02)
    :location-of (l / light
        :quant (a / at-least
            :op1 20)
        :ARG0-of (s / stop-01)
        :ARG1-of (d / differ-02)))
