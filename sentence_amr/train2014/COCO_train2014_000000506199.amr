# ::tok An empty suitcase is beside two other suitcases and a cot .
# ::node	e	empty-02	1-2
# ::node	s	suitcase	2-3
# ::node	b	be-located-at-91	4-5
# ::node	b2	beside	4-5
# ::node	0	2	5-6
# ::node	o	other	6-7
# ::node	s2	suitcase	7-8
# ::node	a	and	8-9
# ::node	c	cot	10-11
# ::root	b	be-located-at-91
# ::edge	suitcase	ARG1-of	empty-02	s	e	
# ::edge	be-located-at-91	ARG1	suitcase	b	s	
# ::edge	be-located-at-91	ARG2	beside	b	b2	
# ::edge	suitcase	mod	other	s2	o	
# ::edge	suitcase	quant	2	s2	0	
# ::edge	and	op1	suitcase	a	s2	
# ::edge	beside	op1	and	b2	a	
# ::edge	and	op2	cot	a	c	
(b / be-located-at-91
    :ARG1 (s / suitcase
        :ARG1-of (e / empty-02))
    :ARG2 (b2 / beside
        :op1 (a / and
            :op1 (s2 / suitcase
                :quant 2
                :mod (o / other))
            :op2 (c / cot))))
