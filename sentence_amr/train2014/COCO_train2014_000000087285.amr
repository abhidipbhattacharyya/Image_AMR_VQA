# ::tok Living area with cat looking out window and second cat nearby .
# ::node	l	live-01	0-1
# ::node	a2	area	1-2
# ::node	c	cat	3-4
# ::node	l2	look-01	4-5
# ::node	w	window	6-7
# ::node	a	and	7-8
# ::node	o	ordinal-entity	8-9
# ::node	0	2	8-9
# ::node	c2	cat	9-10
# ::node	b	be-located-at-91	10-11
# ::node	n	nearby	10-11
# ::root	a2	area
# ::edge	area	location-of	live-01	a2	l	
# ::edge	look-01	ARG0	cat	l2	c	
# ::edge	look-01	ARG1	window	l2	w	
# ::edge	and	op1	look-01	a	l2	
# ::edge	area	location-of	and	a2	a	
# ::edge	ordinal-entity	value	2	o	0	
# ::edge	cat	ord	ordinal-entity	c2	o	
# ::edge	be-located-at-91	ARG1	cat	b	c2	
# ::edge	and	op2	be-located-at-91	a	b	
# ::edge	be-located-at-91	ARG2	nearby	b	n	
(a2 / area
    :location-of (l / live-01)
    :location-of (a / and
        :op1 (l2 / look-01
            :ARG0 (c / cat)
            :ARG1 (w / window))
        :op2 (b / be-located-at-91
            :ARG1 (c2 / cat
                :ord (o / ordinal-entity
                    :value 2))
            :ARG2 (n / nearby))))
