# ::tok A train waiting in place in a city by a second set of empty tracks
# ::node	t2	train	1-2
# ::node	w	wait-01	2-3
# ::node	i	in-place	4-5
# ::node	c	city	7-8
# ::node	o	ordinal-entity	10-11
# ::node	0	2	10-11
# ::node	s	set	11-12
# ::node	e	empty-02	13-14
# ::node	t	track	14-15
# ::root	i	in-place
# ::edge	train	ARG1-of	wait-01	t2	w	
# ::edge	in-place	domain	train	i	t2	
# ::edge	in-place	location	city	i	c	
# ::edge	ordinal-entity	value	2	o	0	
# ::edge	set	ord	ordinal-entity	s	o	
# ::edge	in-place	prep-by	set	i	s	
# ::edge	track	ARG1-of	empty-02	t	e	
# ::edge	set	consist-of	track	s	t	
(i / in-place
    :domain (t2 / train
        :ARG1-of (w / wait-01))
    :location (c / city)
    :prep-by (s / set
        :consist-of (t / track
            :ARG1-of (e / empty-02))
        :ord (o / ordinal-entity
            :value 2)))
