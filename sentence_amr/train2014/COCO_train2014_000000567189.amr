# ::tok Two pieces of black luggage rest against the rails of a staircase .
# ::node	0	2	0-1
# ::node	p	piece	1-2
# ::node	b	black-04	3-4
# ::node	l	luggage	4-5
# ::node	r2	rest-01	5-6
# ::node	a	against	6-7
# ::node	r	rail-01	8-9
# ::node	s	staircase	11-12
# ::root	r2	rest-01
# ::edge	piece	quant	2	p	0	
# ::edge	luggage	ARG1-of	black-04	l	b	
# ::edge	piece	consist-of	luggage	p	l	
# ::edge	rest-01	ARG1	piece	r2	p	
# ::edge	rest-01	ARG2	against	r2	a	
# ::edge	against	op1	rail-01	a	r	
# ::edge	rail-01	ARG0	staircase	r	s	
(r2 / rest-01
    :ARG1 (p / piece
        :quant 2
        :consist-of (l / luggage
            :ARG1-of (b / black-04)))
    :ARG2 (a / against
        :op1 (r / rail-01
            :ARG0 (s / staircase))))
