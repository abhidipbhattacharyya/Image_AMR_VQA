# ::tok a person is coming down an escalator with their luggage
# ::node	p	person	1-2
# ::node	c	come-01	3-4
# ::node	d	down	4-5
# ::node	e	escalator	6-7
# ::node	l	luggage	9-10
# ::root	c	come-01
# ::edge	come-01	ARG1	person	c	p	
# ::edge	come-01	direction	down	c	d	
# ::edge	come-01	path	escalator	c	e	
# ::edge	come-01	accompanier	luggage	c	l	
# ::edge	luggage	poss	person	l	p	
(c / come-01
    :ARG1 (p / person)
    :accompanier (l / luggage
        :poss p)
    :direction (d / down)
    :path (e / escalator))
