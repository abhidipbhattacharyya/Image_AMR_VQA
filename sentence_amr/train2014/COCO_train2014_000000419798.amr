# ::tok A slice of a piece of cake next to another slice of cake .
# ::node	s	slice	1-2
# ::node	p	piece	4-5
# ::node	c	cake	6-7
# ::node	n	next-to	7-8
# ::node	b	be-located-at-91	8-9
# ::node	a	another	9-10
# ::node	s2	slice	10-11
# ::node	c2	cake	12-13
# ::root	b	be-located-at-91
# ::edge	slice	part-of	piece	s	p	
# ::edge	piece	part-of	cake	p	c	
# ::edge	be-located-at-91	ARG2	next-to	b	n	
# ::edge	be-located-at-91	ARG1	slice	b	s	
# ::edge	slice	mod	another	s2	a	
# ::edge	next-to	op1	slice	n	s2	
# ::edge	slice	part-of	cake	s2	c2	
(b / be-located-at-91
    :ARG1 (s / slice
        :part-of (p / piece
            :part-of (c / cake)))
    :ARG2 (n / next-to
        :op1 (s2 / slice
            :mod (a / another)
            :part-of (c2 / cake))))
