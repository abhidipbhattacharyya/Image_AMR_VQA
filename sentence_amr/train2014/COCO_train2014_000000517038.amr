# ::tok Two kids are on top of a wall and one has a skateboard and has his arms out ready for a jump .
# ::node	1	2	0-1
# ::node	k	kid	1-2
# ::node	k2	kid	1-2
# ::node	b	be-located-at-91	3-4
# ::node	t	top	4-5
# ::node	w	wall	7-8
# ::node	i	include-91	9-10
# ::node	0	1	9-10
# ::node	h	have-03	10-11
# ::node	s	skateboard	12-13
# ::node	a	and	13-14
# ::node	h2	have-03	14-15
# ::node	a2	arm	16-17
# ::node	o	out-06	17-18
# ::node	r	ready-02	18-19
# ::node	j	jump-03	21-22
# ::root	a	and
# ::edge	kid	quant	2	k	1	
# ::edge	be-located-at-91	ARG1	kid	b	k	
# ::edge	be-located-at-91	ARG2	top	b	t	
# ::edge	top	part-of	wall	t	w	
# ::edge	kid	ARG1-of	include-91	k2	i	
# ::edge	include-91	ARG2	kid	i	k	
# ::edge	kid	quant	1	k2	0	
# ::edge	have-03	ARG0	kid	h	k2	
# ::edge	have-03	ARG1	skateboard	h	s	
# ::edge	and	op2	have-03	a	h	
# ::edge	and	op1	be-located-at-91	a	b	
# ::edge	and	op3	have-03	a	h2	
# ::edge	have-03	ARG0	kid	h2	k2	
# ::edge	have-03	ARG1	arm	h2	a2	
# ::edge	kid	part	arm	k2	a2	
# ::edge	arm	ARG1-of	out-06	a2	o	
# ::edge	arm	ARG1-of	ready-02	a2	r	
# ::edge	ready-02	ARG2	jump-03	r	j	
# ::edge	jump-03	ARG0	kid	j	k2	
(a / and
    :op1 (b / be-located-at-91
        :ARG1 (k / kid
            :quant 2)
        :ARG2 (t / top
            :part-of (w / wall)))
    :op2 (h / have-03
        :ARG0 (k2 / kid
            :quant 1
            :ARG1-of (i / include-91
                :ARG2 k)
            :part (a2 / arm
                :ARG1-of (o / out-06)
                :ARG1-of (r / ready-02
                    :ARG2 (j / jump-03
                        :ARG0 k2))))
        :ARG1 (s / skateboard))
    :op3 (h2 / have-03
        :ARG0 k2
        :ARG1 a2))
