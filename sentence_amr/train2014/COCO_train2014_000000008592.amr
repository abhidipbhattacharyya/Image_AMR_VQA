# ::tok A guy standing in front of a sink looking at his reflection in a mirror .
# ::node	g	guy	1-2
# ::node	s2	stand-01	2-3
# ::node	i	in-front-of	4-5
# ::node	s	sink	7-8
# ::node	l	look-01	8-9
# ::node	r	reflect-01	11-12
# ::node	m	mirror	14-15
# ::root	s2	stand-01
# ::edge	stand-01	ARG1	guy	s2	g	
# ::edge	stand-01	ARG2	in-front-of	s2	i	
# ::edge	in-front-of	op1	sink	i	s	
# ::edge	guy	ARG0-of	look-01	g	l	
# ::edge	look-01	ARG1	reflect-01	l	r	
# ::edge	reflect-01	ARG1	guy	r	g	
# ::edge	reflect-01	ARG2	mirror	r	m	
(s2 / stand-01
    :ARG1 (g / guy
        :ARG0-of (l / look-01
            :ARG1 (r / reflect-01
                :ARG1 g
                :ARG2 (m / mirror))))
    :ARG2 (i / in-front-of
        :op1 (s / sink)))
