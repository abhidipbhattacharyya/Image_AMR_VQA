# ::tok This partly eaten pizza , still in its cardboard container , includes clams in its toppings .
# ::node	t	this	0-1
# ::node	p	part	1-2
# ::node	e	eat-01	2-3
# ::node	p2	pizza	3-4
# ::node	s	still	5-6
# ::node	b	be-located-at-91	6-7
# ::node	c	cardboard	8-9
# ::node	c3	container	9-10
# ::node	i	include-01	11-12
# ::node	c2	clog	12-13
# ::node	i2	ingredient	15-16
# ::node	t2	top-01	15-16
# ::root	i	include-01
# ::edge	eat-01	degree	part	e	p	
# ::edge	pizza	ARG1-of	eat-01	p2	e	
# ::edge	pizza	mod	this	p2	t	
# ::edge	be-located-at-91	mod	still	b	s	
# ::edge	pizza	ARG1-of	be-located-at-91	p2	b	
# ::edge	container	domain	cardboard	c3	c	
# ::edge	be-located-at-91	ARG2	container	b	c3	
# ::edge	include-01	ARG0	pizza	i	p2	
# ::edge	include-01	ARG1	clog	i	c2	
# ::edge	include-01	ARG2	ingredient	i	i2	
# ::edge	ingredient	ARG2-of	top-01	i2	t2	
# ::edge	top-01	ARG1	pizza	t2	p2	
(i / include-01
    :ARG0 (p2 / pizza
        :ARG1-of (e / eat-01
            :degree (p / part))
        :ARG1-of (b / be-located-at-91
            :ARG2 (c3 / container
                :domain (c / cardboard))
            :mod (s / still))
        :mod (t / this))
    :ARG1 (c2 / clog)
    :ARG2 (i2 / ingredient
        :ARG2-of (t2 / top-01
            :ARG1 p2)))
