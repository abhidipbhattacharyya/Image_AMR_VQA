# ::tok Two plates containing pancakes and sausage links on a table .
# ::node	0	2	0-1
# ::node	p	plate	1-2
# ::node	c	contain-01	2-3
# ::node	e	egg	3-4
# ::node	f	farm-01	3-4
# ::node	a	and	4-5
# ::node	s	sausage	5-6
# ::node	l	link-01	6-7
# ::node	b	be-located-at-91	7-8
# ::node	t	table	9-10
# ::root	b	be-located-at-91
# ::edge	plate	quant	2	p	0	
# ::edge	plate	ARG0-of	contain-01	p	c	
# ::edge	egg	ARG1-of	farm-01	e	f	
# ::edge	and	op1	egg	a	e	
# ::edge	contain-01	ARG1	and	c	a	
# ::edge	link-01	ARG1	sausage	l	s	
# ::edge	and	op2	link-01	a	l	
# ::edge	be-located-at-91	ARG1	plate	b	p	
# ::edge	be-located-at-91	ARG2	table	b	t	
(b / be-located-at-91
    :ARG1 (p / plate
        :quant 2
        :ARG0-of (c / contain-01
            :ARG1 (a / and
                :op1 (e / egg
                    :ARG1-of (f / farm-01))
                :op2 (l / link-01
                    :ARG1 (s / sausage)))))
    :ARG2 (t / table))
