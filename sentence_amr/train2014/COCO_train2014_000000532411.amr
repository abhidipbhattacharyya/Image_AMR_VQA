# ::tok A man standing on the train with a suitcase next to him .
# ::node	m	man	1-2
# ::node	s	stand-01	2-3
# ::node	t	train	5-6
# ::node	h	have-03	6-7
# ::node	s2	suitcase	8-9
# ::node	n	next-to	9-10
# ::root	s	stand-01
# ::edge	stand-01	ARG1	man	s	m	
# ::edge	stand-01	ARG2	train	s	t	
# ::edge	man	ARG0-of	have-03	m	h	
# ::edge	have-03	ARG1	suitcase	h	s2	
# ::edge	suitcase	location	next-to	s2	n	
# ::edge	next-to	op1	man	n	m	
(s / stand-01
    :ARG1 (m / man
        :ARG0-of (h / have-03
            :ARG1 (s2 / suitcase
                :location (n / next-to
                    :op1 m))))
    :ARG2 (t / train))
