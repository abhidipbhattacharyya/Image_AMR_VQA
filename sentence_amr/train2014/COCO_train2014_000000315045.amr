# ::tok A train is going down the track with many cars behind it .
# ::node	t2	train	1-2
# ::node	g	go-02	3-4
# ::node	d	down	4-5
# ::node	t	track	6-7
# ::node	m	many	8-9
# ::node	c	car	9-10
# ::node	b	behind	10-11
# ::root	g	go-02
# ::edge	go-02	ARG0	train	g	t2	
# ::edge	go-02	direction	down	g	d	
# ::edge	go-02	path	track	g	t	
# ::edge	car	quant	many	c	m	
# ::edge	go-02	accompanier	car	g	c	
# ::edge	car	location	behind	c	b	
# ::edge	behind	op1	train	b	t2	
(g / go-02
    :ARG0 (t2 / train)
    :accompanier (c / car
        :quant (m / many)
        :location (b / behind
            :op1 t2))
    :direction (d / down)
    :path (t / track))
