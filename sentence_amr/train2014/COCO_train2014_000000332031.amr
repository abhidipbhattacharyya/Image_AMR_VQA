# ::tok A cup of coffee next to a plate of scrambled eggs , bacon and plain bread
# ::node	c2	cup	1-2
# ::node	c	coffee	3-4
# ::node	n	next-to	4-5
# ::node	p2	plate	7-8
# ::node	s	scramble-01	9-10
# ::node	e	egg	10-11
# ::node	a	and	11-12
# ::node	b	bacon	12-13
# ::node	p	plain	14-15
# ::node	b2	bread	15-16
# ::root	n	next-to
# ::edge	coffee	quant	cup	c	c2	
# ::edge	next-to	op1	coffee	n	c	
# ::edge	next-to	op1	plate	n	p2	
# ::edge	egg	ARG1-of	scramble-01	e	s	
# ::edge	and	op1	egg	a	e	
# ::edge	plate	consist-of	and	p2	a	
# ::edge	and	op2	bacon	a	b	
# ::edge	bread	mod	plain	b2	p	
# ::edge	and	op3	bread	a	b2	
(n / next-to
    :op1 (c / coffee
        :quant (c2 / cup))
    :op1 (p2 / plate
        :consist-of (a / and
            :op1 (e / egg
                :ARG1-of (s / scramble-01))
            :op2 (b / bacon)
            :op3 (b2 / bread
                :mod (p / plain)))))
