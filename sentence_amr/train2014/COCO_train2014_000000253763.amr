# ::tok Bear leaning back against tree rubbing its back against it
# ::node	b3	bear	0-1
# ::node	l	lean-01	1-2
# ::node	b	back	2-3
# ::node	a	against	3-4
# ::node	t	tree	4-5
# ::node	r	rub-01	5-6
# ::node	b2	back	7-8
# ::root	l	lean-01
# ::edge	lean-01	ARG1	bear	l	b3	
# ::edge	lean-01	direction	back	l	b	
# ::edge	lean-01	ARG2	against	l	a	
# ::edge	against	op1	tree	a	t	
# ::edge	rub-01	ARG2	tree	r	t	
# ::edge	bear	ARG0-of	rub-01	b3	r	
# ::edge	bear	ARG1	back	b3	b2	
# ::edge	bear	part	back	b3	b2	
(l / lean-01
    :ARG1 (b3 / bear
        :ARG0-of (r / rub-01
            :ARG2 (t / tree))
        :ARG1 (b2 / back)
        :part b2)
    :ARG2 (a / against
        :op1 t)
    :direction (b / back))
