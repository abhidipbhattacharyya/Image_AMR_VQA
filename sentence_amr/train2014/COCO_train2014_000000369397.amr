# ::tok A plate of food with different types of vegetables made to look like a face .
# ::node	p	plate	1-2
# ::node	f2	food	3-4
# ::node	h	have-03	4-5
# ::node	d	differ-02	5-6
# ::node	t	type	6-7
# ::node	v	vegetable	8-9
# ::node	m	make-02	9-10
# ::node	l	look-02	11-12
# ::node	f	face	14-15
# ::root	m	make-02
# ::edge	plate	consist-of	food	p	f2	
# ::edge	plate	ARG0-of	have-03	p	h	
# ::edge	type	ARG1-of	differ-02	t	d	
# ::edge	vegetable	mod	type	v	t	
# ::edge	have-03	ARG1	vegetable	h	v	
# ::edge	make-02	ARG1	plate	m	p	
# ::edge	make-02	ARG0-of	look-02	m	l	
# ::edge	look-02	ARG1	face	l	f	
(m / make-02
    :ARG0-of (l / look-02
        :ARG1 (f / face))
    :ARG1 (p / plate
        :ARG0-of (h / have-03
            :ARG1 (v / vegetable
                :mod (t / type
                    :ARG1-of (d / differ-02))))
        :consist-of (f2 / food)))
