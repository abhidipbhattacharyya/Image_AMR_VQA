# ::tok A skate park has one skater in green walking a wall and another one in black riding his skateboard and a light is in the background along with some mountains and a iron fence .
# ::node	s	skate-01	1-2
# ::node	p	park	2-3
# ::node	h	have-03	3-4
# ::node	0	1	4-5
# ::node	p2	person	5-6
# ::node	s2	skate-01	5-6
# ::node	p3	person	5-6
# ::node	g	green-02	7-8
# ::node	w	walk-01	8-9
# ::node	w2	wall	10-11
# ::node	a	and	11-12
# ::node	a3	another	12-13
# ::node	1	1	13-14
# ::node	b3	black-04	15-16
# ::node	r	ride-01	16-17
# ::node	s3	skateboard	18-19
# ::node	l	light	21-22
# ::node	b2	be-located-at-91	23-24
# ::node	b	background	25-26
# ::node	s4	some	28-29
# ::node	m	mountain	29-30
# ::node	a2	and	30-31
# ::node	i	iron	32-33
# ::node	f	fence	33-34
# ::root	a	and
# ::edge	park	mod	skate-01	p	s	
# ::edge	have-03	ARG0	park	h	p	
# ::edge	person	quant	1	p2	0	
# ::edge	person	ARG0-of	skate-01	p2	s2	
# ::edge	skate-01	ARG0	person	s2	p3	
# ::edge	person	ARG1-of	green-02	p2	g	
# ::edge	person	ARG0-of	walk-01	p2	w	
# ::edge	walk-01	ARG2	wall	w	w2	
# ::edge	and	op1	have-03	a	h	
# ::edge	person	mod	another	p3	a3	
# ::edge	person	quant	1	p3	1	
# ::edge	person	ARG1-of	black-04	p3	b3	
# ::edge	person	ARG0-of	ride-01	p3	r	
# ::edge	ride-01	ARG1	skateboard	r	s3	
# ::edge	skateboard	poss	person	s3	p3	
# ::edge	be-located-at-91	ARG1	light	b2	l	
# ::edge	and	op2	be-located-at-91	a	b2	
# ::edge	be-located-at-91	ARG2	background	b2	b	
# ::edge	mountain	mod	some	m	s4	
# ::edge	and	op2	mountain	a2	m	
# ::edge	background	location-of	and	b	a2	
# ::edge	and	op1	person	a2	p2	
# ::edge	fence	consist-of	iron	f	i	
# ::edge	and	op3	fence	a2	f	
(a / and
    :op1 (h / have-03
        :ARG0 (p / park
            :mod (s / skate-01)))
    :op2 (b2 / be-located-at-91
        :ARG1 (l / light)
        :ARG2 (b / background
            :location-of (a2 / and
                :op1 (p2 / person
                    :quant 1
                    :ARG0-of (s2 / skate-01
                        :ARG0 (p3 / person
                            :quant 1
                            :ARG0-of (r / ride-01
                                :ARG1 (s3 / skateboard
                                    :poss p3))
                            :ARG1-of (b3 / black-04)
                            :mod (a3 / another)))
                    :ARG0-of (w / walk-01
                        :ARG2 (w2 / wall))
                    :ARG1-of (g / green-02))
                :op2 (m / mountain
                    :mod (s4 / some))
                :op3 (f / fence
                    :consist-of (i / iron))))))
