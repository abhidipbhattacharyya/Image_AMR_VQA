# ::tok A cat is tucked away and resting in a a packed suitcase .
# ::node	c	cat	1-2
# ::node	t	tuck-01	3-4
# ::node	a2	away	4-5
# ::node	a	and	5-6
# ::node	r	rest-01	6-7
# ::node	p	pack-01	10-11
# ::node	s	suitcase	11-12
# ::root	a	and
# ::edge	tuck-01	ARG1	cat	t	c	
# ::edge	tuck-01	ARG2	away	t	a2	
# ::edge	and	op1	tuck-01	a	t	
# ::edge	and	op2	rest-01	a	r	
# ::edge	rest-01	ARG1	cat	r	c	
# ::edge	suitcase	ARG1-of	pack-01	s	p	
# ::edge	rest-01	ARG2	suitcase	r	s	
(a / and
    :op1 (t / tuck-01
        :ARG1 (c / cat)
        :ARG2 (a2 / away))
    :op2 (r / rest-01
        :ARG1 c
        :ARG2 (s / suitcase
            :ARG1-of (p / pack-01))))
