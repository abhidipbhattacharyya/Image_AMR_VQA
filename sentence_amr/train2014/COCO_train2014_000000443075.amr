# ::tok a man is seen jumping in the air to catch a frisbee
# ::node	m	man	1-2
# ::node	s	see-01	3-4
# ::node	j	jump-03	4-5
# ::node	a	air	7-8
# ::node	c	catch-01	9-10
# ::node	f	frisbee	11-12
# ::root	s	see-01
# ::edge	see-01	ARG1	jump-03	s	j	
# ::edge	jump-03	ARG0	man	j	m	
# ::edge	jump-03	destination	air	j	a	
# ::edge	jump-03	purpose	catch-01	j	c	
# ::edge	catch-01	ARG0	man	c	m	
# ::edge	catch-01	ARG1	frisbee	c	f	
(s / see-01
    :ARG1 (j / jump-03
        :purpose (c / catch-01
            :ARG0 (m / man)
            :ARG1 (f / frisbee))
        :ARG0 m
        :destination (a / air)))
