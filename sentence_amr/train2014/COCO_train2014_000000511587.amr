# ::tok The train has just passed the crosswalk , and gates are closed to prevent pedestrian and vehicular traffic on the tracks at this time .
# ::node	t5	train	1-2
# ::node	j	just	3-4
# ::node	p	pass-02	4-5
# ::node	c2	cross-02	6-7
# ::node	a	and	8-9
# ::node	g	gate	9-10
# ::node	c	close-01	11-12
# ::node	p3	prevent-01	13-14
# ::node	p2	pedestrian	14-15
# ::node	a2	and	15-16
# ::node	v	vehicle	16-17
# ::node	t3	traffic	17-18
# ::node	t4	traffic	17-18
# ::node	t2	track	20-21
# ::node	t	this	22-23
# ::root	a	and
# ::edge	pass-02	mod	just	p	j	
# ::edge	pass-02	ARG0	train	p	t5	
# ::edge	pass-02	ARG1	cross-02	p	c2	
# ::edge	and	op1	pass-02	a	p	
# ::edge	close-01	ARG1	gate	c	g	
# ::edge	and	op2	close-01	a	c	
# ::edge	close-01	purpose	prevent-01	c	p3	
# ::edge	prevent-01	ARG3	gate	p3	g	
# ::edge	prevent-01	ARG0	gate	p3	g	
# ::edge	prevent-01	ARG1	and	p3	a2	
# ::edge	and	op1	traffic	a2	t3	
# ::edge	traffic	mod	pedestrian	t3	p2	
# ::edge	traffic	mod	vehicle	t4	v	
# ::edge	and	op2	traffic	a2	t4	
# ::edge	and	location	track	a2	t2	
# ::edge	prevent-01	time	this	p3	t	
(a / and
    :op1 (p / pass-02
        :ARG0 (t5 / train)
        :ARG1 (c2 / cross-02)
        :mod (j / just))
    :op2 (c / close-01
        :purpose (p3 / prevent-01
            :ARG0 (g / gate)
            :ARG1 (a2 / and
                :location (t2 / track)
                :op1 (t3 / traffic
                    :mod (p2 / pedestrian))
                :op2 (t4 / traffic
                    :mod (v / vehicle)))
            :ARG3 g
            :time (t / this))
        :ARG1 g))
