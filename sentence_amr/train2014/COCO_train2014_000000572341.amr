# ::tok Black horse and rider inside a building with a three - step platform .
# ::node	b	black-05	0-1
# ::node	h2	horse	1-2
# ::node	a	and	2-3
# ::node	p	person	3-4
# ::node	r	ride-01	3-4
# ::node	i	inside	4-5
# ::node	b2	building	6-7
# ::node	h	have-03	7-8
# ::node	0	3	9-10
# ::node	s	step-01	11-12
# ::node	p2	platform	12-13
# ::root	a	and
# ::edge	horse	ARG1-of	black-05	h2	b	
# ::edge	and	op1	horse	a	h2	
# ::edge	and	op2	person	a	p	
# ::edge	person	ARG0-of	ride-01	p	r	
# ::edge	and	location	inside	a	i	
# ::edge	inside	op1	building	i	b2	
# ::edge	building	ARG0-of	have-03	b2	h	
# ::edge	step-01	quant	3	s	0	
# ::edge	platform	mod	step-01	p2	s	
# ::edge	have-03	ARG1	platform	h	p2	
(a / and
    :location (i / inside
        :op1 (b2 / building
            :ARG0-of (h / have-03
                :ARG1 (p2 / platform
                    :mod (s / step-01
                        :quant 3)))))
    :op1 (h2 / horse
        :ARG1-of (b / black-05))
    :op2 (p / person
        :ARG0-of (r / ride-01)))
