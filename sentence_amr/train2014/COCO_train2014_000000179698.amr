# ::tok Green door in a stone building with a black cat by the door .
# ::node	g	green-02	0-1
# ::node	d	door	1-2
# ::node	s	stone	4-5
# ::node	b2	building	5-6
# ::node	h	have-03	6-7
# ::node	b	black-04	8-9
# ::node	c	cat	9-10
# ::node	b3	by	10-11
# ::root	d	door
# ::edge	door	ARG1-of	green-02	d	g	
# ::edge	building	consist-of	stone	b2	s	
# ::edge	door	location	building	d	b2	
# ::edge	building	ARG0-of	have-03	b2	h	
# ::edge	cat	ARG1-of	black-04	c	b	
# ::edge	have-03	ARG1	cat	h	c	
# ::edge	building	location	by	b2	b3	
# ::edge	by	op1	door	b3	d	
(d / door
    :ARG1-of (g / green-02)
    :location (b2 / building
        :ARG0-of (h / have-03
            :ARG1 (c / cat
                :ARG1-of (b / black-04)))
        :consist-of (s / stone)
        :location (b3 / by
            :op1 d)))
