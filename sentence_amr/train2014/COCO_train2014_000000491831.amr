# ::tok A black and white dog jumps way up over children to catch a frisbee .
# ::node	b	black-04	1-2
# ::node	w2	white-03	3-4
# ::node	d	dog	4-5
# ::node	j	jump-03	5-6
# ::node	w	way	6-7
# ::node	u	up	7-8
# ::node	o	over	8-9
# ::node	c2	child	9-10
# ::node	c	catch-01	11-12
# ::node	f	frisbee	13-14
# ::root	j	jump-03
# ::edge	dog	ARG1-of	white-03	d	w2	
# ::edge	dog	ARG1-of	black-04	d	b	
# ::edge	jump-03	ARG0	dog	j	d	
# ::edge	up	extent	way	u	w	
# ::edge	jump-03	direction	up	j	u	
# ::edge	jump-03	path	over	j	o	
# ::edge	over	op1	child	o	c2	
# ::edge	jump-03	purpose	catch-01	j	c	
# ::edge	catch-01	ARG0	dog	c	d	
# ::edge	catch-01	ARG1	frisbee	c	f	
(j / jump-03
    :purpose (c / catch-01
        :ARG0 (d / dog
            :ARG1-of (w2 / white-03)
            :ARG1-of (b / black-04))
        :ARG1 (f / frisbee))
    :ARG0 d
    :direction (u / up
        :extent (w / way))
    :path (o / over
        :op1 (c2 / child)))
