# ::tok A mirror on a bike with cars in the reflection of the mirror .
# ::node	m	mirror	1-2
# ::node	b	bike	4-5
# ::node	h	have-03	5-6
# ::node	c	car	6-7
# ::node	r	reflect-01	9-10
# ::root	r	reflect-01
# ::edge	mirror	location	bike	m	b	
# ::edge	mirror	ARG0-of	have-03	m	h	
# ::edge	have-03	ARG1	car	h	c	
# ::edge	reflect-01	ARG1	mirror	r	m	
# ::edge	reflect-01	ARG2	mirror	r	m	
(r / reflect-01
    :ARG1 (m / mirror
        :ARG0-of (h / have-03
            :ARG1 (c / car))
        :location (b / bike))
    :ARG2 m)
