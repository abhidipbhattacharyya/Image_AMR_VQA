# ::tok a snow skier dressed in a yellow and black ski jacket is skiing downhill with his poles twisted out .
# ::node	s4	snow	1-2
# ::node	p	person	2-3
# ::node	s	ski-01	2-3
# ::node	d2	dress-01	3-4
# ::node	y	yellow-02	6-7
# ::node	a	and	7-8
# ::node	b	black-04	8-9
# ::node	s2	ski-01	9-10
# ::node	j	jacket	10-11
# ::node	j2	jacket	10-11
# ::node	s3	ski-01	12-13
# ::node	d	downhill	13-14
# ::node	p2	pole	16-17
# ::node	t	twist-01	17-18
# ::node	o	out	18-19
# ::root	s3	ski-01
# ::edge	person	ARG0-of	ski-01	p	s	
# ::edge	ski-01	ARG1	snow	s	s4	
# ::edge	person	ARG1-of	dress-01	p	d2	
# ::edge	dress-01	ARG2	and	d2	a	
# ::edge	jacket	mod	ski-01	j	s2	
# ::edge	and	op1	jacket	a	j	
# ::edge	jacket	ARG1-of	yellow-02	j	y	
# ::edge	jacket	mod	ski-01	j2	s2	
# ::edge	jacket	ARG1-of	black-04	j2	b	
# ::edge	and	op2	jacket	a	j2	
# ::edge	ski-01	ARG0	person	s3	p	
# ::edge	ski-01	direction	downhill	s3	d	
# ::edge	pole	poss	person	p2	p	
# ::edge	twist-01	ARG1	pole	t	p2	
# ::edge	ski-01	manner	twist-01	s3	t	
# ::edge	twist-01	direction	out	t	o	
(s3 / ski-01
    :ARG0 (p / person
        :ARG0-of (s / ski-01
            :ARG1 (s4 / snow))
        :ARG1-of (d2 / dress-01
            :ARG2 (a / and
                :op1 (j / jacket
                    :ARG1-of (y / yellow-02)
                    :mod (s2 / ski-01))
                :op2 (j2 / jacket
                    :ARG1-of (b / black-04)
                    :mod s2))))
    :direction (d / downhill)
    :manner (t / twist-01
        :ARG1 (p2 / pole
            :poss p)
        :direction (o / out)))
