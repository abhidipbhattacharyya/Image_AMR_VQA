# ::tok A dog looking up into an open uncovered window .
# ::node	d	dog	1-2
# ::node	l	look-01	2-3
# ::node	o	open-09	6-7
# ::node	u	uncover-01	7-8
# ::node	0	-	7-8
# ::node	w	window	8-9
# ::root	l	look-01
# ::edge	look-01	ARG0	dog	l	d	
# ::edge	uncover-01	polarity	-	u	0	
# ::edge	window	ARG1-of	uncover-01	w	u	
# ::edge	window	ARG1-of	open-09	w	o	
# ::edge	look-01	ARG2	window	l	w	
(l / look-01
    :ARG0 (d / dog)
    :ARG2 (w / window
        :ARG1-of (u / uncover-01
            :polarity -)
        :ARG1-of (o / open-09)))
