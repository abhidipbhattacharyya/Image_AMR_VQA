# ::tok A uniquely shaped yellow train that is going down the tracks .
# ::node	u	unique-01	1-2
# ::node	s	shape-01	2-3
# ::node	y	yellow-02	3-4
# ::node	t2	train	4-5
# ::node	g	go-01	7-8
# ::node	d	down	8-9
# ::node	t	track	10-11
# ::root	t2	train
# ::edge	shape-01	ARG1-of	unique-01	s	u	
# ::edge	train	ARG1-of	yellow-02	t2	y	
# ::edge	train	ARG1-of	shape-01	t2	s	
# ::edge	train	ARG1-of	go-01	t2	g	
# ::edge	go-01	direction	down	g	d	
# ::edge	go-01	path	track	g	t	
(t2 / train
    :ARG1-of (y / yellow-02)
    :ARG1-of (s / shape-01
        :ARG1-of (u / unique-01))
    :ARG1-of (g / go-01
        :direction (d / down)
        :path (t / track)))
