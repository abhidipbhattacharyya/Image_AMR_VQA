# ::tok A dining tray holding two slices of cake , a soda and a tea .
# ::node	d	dine-01	1-2
# ::node	t2	tray	2-3
# ::node	h	hold-01	3-4
# ::node	0	2	4-5
# ::node	s	slice	5-6
# ::node	c	cake	7-8
# ::node	s2	soda	10-11
# ::node	a	and	11-12
# ::node	t	tea	13-14
# ::root	h	hold-01
# ::edge	tray	purpose	dine-01	t2	d	
# ::edge	hold-01	ARG0	tray	h	t2	
# ::edge	slice	quant	2	s	0	
# ::edge	slice	consist-of	cake	s	c	
# ::edge	and	op2	soda	a	s2	
# ::edge	and	op1	slice	a	s	
# ::edge	hold-01	ARG1	and	h	a	
# ::edge	and	op3	tea	a	t	
(h / hold-01
    :ARG0 (t2 / tray
        :purpose (d / dine-01))
    :ARG1 (a / and
        :op1 (s / slice
            :quant 2
            :consist-of (c / cake))
        :op2 (s2 / soda)
        :op3 (t / tea)))
