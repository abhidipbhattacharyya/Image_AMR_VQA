# ::tok Three differest signs , including a Rite Aid sign , A stop sign , and a sign for Tony & Sam 's .
# ::node	0	3	0-1
# ::node	d	differ-02	1-2
# ::node	s	sign	2-3
# ::node	i	include-01	4-5
# ::node	s6	store	6-7
# ::node	n	name	6-7
# ::node	2	Rite	6-7
# ::node	1	Aid	7-8
# ::node	s2	sign	8-9
# ::node	s5	stop-01	11-12
# ::node	s3	sign	12-13
# ::node	s4	sign	12-13
# ::node	a	and	14-15
# ::node	p	person	18-19
# ::node	4	Tony	18-19
# ::node	n2	name	19-20
# ::node	h	have-org-role-91	19-20
# ::node	n3	name	19-20
# ::node	3	Sam	20-21
# ::root	s	sign
# ::edge	sign	ARG1-of	differ-02	s	d	
# ::edge	sign	quant	3	s	0	
# ::edge	sign	ARG2-of	include-01	s	i	
# ::edge	store	name	name	s6	n	
# ::edge	name	op1	Rite	n	2	
# ::edge	name	op2	Aid	n	1	
# ::edge	sign	mod	store	s2	s6	
# ::edge	sign	purpose	stop-01	s3	s5	
# ::edge	and	op3	sign	a	s4	
# ::edge	and	op2	sign	a	s3	
# ::edge	and	op1	sign	a	s2	
# ::edge	include-01	ARG1	and	i	a	
# ::edge	name	op1	Tony	n2	4	
# ::edge	person	name	name	p	n2	
# ::edge	have-org-role-91	ARG0	person	h	p	
# ::edge	sign	beneficiary	have-org-role-91	s4	h	
# ::edge	name	op1	Tony	n3	4	
# ::edge	sign	name	name	s4	n3	
# ::edge	name	op2	Sam	n3	3	
(s / sign
    :quant 3
    :ARG1-of (d / differ-02)
    :ARG2-of (i / include-01
        :ARG1 (a / and
            :op1 (s2 / sign
                :mod (s6 / store
                    :name (n / name
                        :op1 "Rite"
                        :op2 "Aid")))
            :op2 (s3 / sign
                :purpose (s5 / stop-01))
            :op3 (s4 / sign
                :name (n3 / name
                    :op1 "Tony"
                    :op2 "Sam")
                :beneficiary (h / have-org-role-91
                    :ARG0 (p / person
                        :name (n2 / name
                            :op1 "Tony")))))))
