# ::tok A Stop sign 's reflection gives one pause before the interssection
# ::node	s2	stop-01	1-2
# ::node	s	sign	2-3
# ::node	r	reflect-01	4-5
# ::node	g	give-01	5-6
# ::node	0	1	6-7
# ::node	p	pause-01	7-8
# ::node	b	before	8-9
# ::node	i	intersect-01	10-11
# ::root	g	give-01
# ::edge	sign	ARG0-of	stop-01	s	s2	
# ::edge	reflect-01	ARG1	sign	r	s	
# ::edge	give-01	ARG0	reflect-01	g	r	
# ::edge	pause-01	quant	1	p	0	
# ::edge	give-01	ARG1	pause-01	g	p	
# ::edge	pause-01	time	before	p	b	
# ::edge	before	op1	intersect-01	b	i	
(g / give-01
    :ARG0 (r / reflect-01
        :ARG1 (s / sign
            :ARG0-of (s2 / stop-01)))
    :ARG1 (p / pause-01
        :quant 1
        :time (b / before
            :op1 (i / intersect-01))))
