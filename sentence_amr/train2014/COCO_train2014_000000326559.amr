# ::tok Side of a train car with windows and Santa Fe and Vista Canyon on the side , against a very clear blue sky and a distant American flag atop a pole .
# ::node	s	side	0-1
# ::node	t	train	3-4
# ::node	c2	car	4-5
# ::node	h	have-03	5-6
# ::node	w	window	6-7
# ::node	n	name	6-7
# ::node	3	Santa	8-9
# ::node	2	Fe	9-10
# ::node	a2	and	10-11
# ::node	n2	name	11-12
# ::node	4	Vista	11-12
# ::node	c	canyon	12-13
# ::node	1	Canyon	12-13
# ::node	a	against	17-18
# ::node	v	very	19-20
# ::node	c3	clear-06	20-21
# ::node	b	blue	21-22
# ::node	s2	sky	22-23
# ::node	a3	and	23-24
# ::node	d	distant-02	25-26
# ::node	c4	country	26-27
# ::node	n3	name	26-27
# ::node	0	America	26-27
# ::node	f	flag	27-28
# ::node	a4	atop	28-29
# ::node	p	pole	30-31
# ::root	a	against
# ::edge	car	mod	train	c2	t	
# ::edge	side	part-of	car	s	c2	
# ::edge	car	ARG0-of	have-03	c2	h	
# ::edge	have-03	ARG1	window	h	w	
# ::edge	name	op1	Santa	n	3	
# ::edge	name	op2	Fe	n	2	
# ::edge	and	op2	side	a2	s	
# ::edge	name	op1	Vista	n2	4	
# ::edge	canyon	name	name	c	n	
# ::edge	and	op3	canyon	a2	c	
# ::edge	name	op2	Canyon	n2	1	
# ::edge	against	op1	side	a	s	
# ::edge	clear-06	degree	very	c3	v	
# ::edge	sky	mod	blue	s2	b	
# ::edge	sky	ARG1-of	clear-06	s2	c3	
# ::edge	and	op1	sky	a3	s2	
# ::edge	against	op1	and	a	a3	
# ::edge	country	name	name	c4	n3	
# ::edge	name	op1	America	n3	0	
# ::edge	flag	mod	country	f	c4	
# ::edge	flag	ARG1-of	distant-02	f	d	
# ::edge	and	op2	flag	a3	f	
# ::edge	flag	location	atop	f	a4	
# ::edge	atop	op1	pole	a4	p	
# ::edge	against	rel	and	a	a2	
# ::edge	against	rel	name	a	n2	
(a / against
    :op1 (s / side
        :part-of (c2 / car
            :ARG0-of (h / have-03
                :ARG1 (w / window))
            :mod (t / train)))
    :op1 (a3 / and
        :op1 (s2 / sky
            :ARG1-of (c3 / clear-06
                :degree (v / very))
            :mod (b / blue))
        :op2 (f / flag
            :ARG1-of (d / distant-02)
            :location (a4 / atop
                :op1 (p / pole))
            :mod (c4 / country
                :name (n3 / name
                    :op1 "America"))))
    :rel (a2 / and
        :op2 s
        :op3 (c / canyon
            :name (n / name
                :op1 "Santa"
                :op2 "Fe")))
    :rel (n2 / name
        :op1 "Vista"
        :op2 "Canyon"))
