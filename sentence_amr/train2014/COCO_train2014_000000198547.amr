# ::tok A red and white scooter with the union jack flag on the back tire stands next to a red double decker bus .
# ::node	r	red-02	1-2
# ::node	a	and	2-3
# ::node	w	white-03	3-4
# ::node	s	scooter	4-5
# ::node	s2	scooter	4-5
# ::node	h	have-03	5-6
# ::node	u	union	7-8
# ::node	j	jack	8-9
# ::node	f	flag	9-10
# ::node	b	back	12-13
# ::node	t	tire	13-14
# ::node	s3	stand-01	14-15
# ::node	n	next-to	15-16
# ::node	r2	red-02	18-19
# ::node	0	2	19-20
# ::node	d	deck	20-21
# ::node	b2	bus	21-22
# ::root	s3	stand-01
# ::edge	and	op1	scooter	a	s	
# ::edge	scooter	ARG1-of	red-02	s	r	
# ::edge	scooter	ARG1-of	white-03	s2	w	
# ::edge	and	op2	scooter	a	s2	
# ::edge	scooter	ARG0-of	have-03	s2	h	
# ::edge	flag	mod	jack	f	j	
# ::edge	flag	mod	union	f	u	
# ::edge	have-03	ARG1	flag	h	f	
# ::edge	tire	mod	back	t	b	
# ::edge	scooter	location	tire	s2	t	
# ::edge	stand-01	ARG1	and	s3	a	
# ::edge	stand-01	ARG2	next-to	s3	n	
# ::edge	deck	quant	2	d	0	
# ::edge	bus	mod	deck	b2	d	
# ::edge	bus	ARG1-of	red-02	b2	r2	
# ::edge	next-to	op1	bus	n	b2	
(s3 / stand-01
    :ARG1 (a / and
        :op1 (s / scooter
            :ARG1-of (r / red-02))
        :op2 (s2 / scooter
            :ARG0-of (h / have-03
                :ARG1 (f / flag
                    :mod (j / jack)
                    :mod (u / union)))
            :ARG1-of (w / white-03)
            :location (t / tire
                :mod (b / back))))
    :ARG2 (n / next-to
        :op1 (b2 / bus
            :ARG1-of (r2 / red-02)
            :mod (d / deck
                :quant 2))))
