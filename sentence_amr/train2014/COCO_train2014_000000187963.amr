# ::tok A stop sign , another sign with an arrow and a traffic light with a red arrow .
# ::node	s4	stop-01	1-2
# ::node	s3	signal-07	2-3
# ::node	a2	another	4-5
# ::node	s	sign	5-6
# ::node	s2	sign	5-6
# ::node	a3	arrow	8-9
# ::node	a	and	9-10
# ::node	t	traffic	11-12
# ::node	l	light	12-13
# ::node	r	red-02	15-16
# ::node	a4	arrow	16-17
# ::root	a	and
# ::edge	signal-07	ARG1	stop-01	s3	s4	
# ::edge	sign	mod	another	s	a2	
# ::edge	sign	mod	another	s2	a2	
# ::edge	sign	prep-with	arrow	s	a3	
# ::edge	and	op3	sign	a	s2	
# ::edge	and	op2	sign	a	s	
# ::edge	and	op1	signal-07	a	s3	
# ::edge	light	mod	traffic	l	t	
# ::edge	and	op4	light	a	l	
# ::edge	arrow	ARG1-of	red-02	a4	r	
# ::edge	sign	prep-with	arrow	s2	a4	
(a / and
    :op1 (s3 / signal-07
        :ARG1 (s4 / stop-01))
    :op2 (s / sign
        :mod (a2 / another)
        :prep-with (a3 / arrow))
    :op3 (s2 / sign
        :mod a2
        :prep-with (a4 / arrow
            :ARG1-of (r / red-02)))
    :op4 (l / light
        :mod (t / traffic)))
