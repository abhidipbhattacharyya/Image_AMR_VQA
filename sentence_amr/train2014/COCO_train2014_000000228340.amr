# ::tok A train on a bridge crossing a river with a town behind it .
# ::node	t2	train	1-2
# ::node	b2	bridge	4-5
# ::node	c	cross-02	5-6
# ::node	r	river	7-8
# ::node	t	town	10-11
# ::node	b	behind	11-12
# ::root	t2	train
# ::edge	train	location	bridge	t2	b2	
# ::edge	train	ARG0-of	cross-02	t2	c	
# ::edge	cross-02	ARG1	river	c	r	
# ::edge	behind	op1	town	b	t	
# ::edge	train	location	behind	t2	b	
(t2 / train
    :ARG0-of (c / cross-02
        :ARG1 (r / river))
    :location (b2 / bridge)
    :location (b / behind
        :op1 (t / town)))
