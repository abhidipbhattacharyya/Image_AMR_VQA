# ::tok A pair of zebra , one eating grass , the other looking alert .
# ::node	p	pair	1-2
# ::node	z	zebra	3-4
# ::node	e	eat-01	6-7
# ::node	g	grass	7-8
# ::node	o	other	10-11
# ::node	l	look-02	11-12
# ::node	a	alert-01	12-13
# ::root	z	zebra
# ::edge	zebra	quant	pair	z	p	
# ::edge	zebra	ARG0-of	eat-01	z	e	
# ::edge	eat-01	ARG1	grass	e	g	
# ::edge	zebra	part	other	z	o	
# ::edge	other	ARG0-of	look-02	o	l	
# ::edge	look-02	ARG1	alert-01	l	a	
# ::edge	alert-01	ARG1	other	a	o	
(z / zebra
    :quant (p / pair)
    :ARG0-of (e / eat-01
        :ARG1 (g / grass))
    :part (o / other
        :ARG0-of (l / look-02
            :ARG1 (a / alert-01
                :ARG1 o))))
