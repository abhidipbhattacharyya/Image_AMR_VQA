# ::tok Above view of fruits and vegetables in wooden box with cat looking upwards as if to say , " what I 'm I supposed to do with this ? "
# ::node	a	above	0-1
# ::node	v2	view-01	1-2
# ::node	f	fruit	3-4
# ::node	a3	and	4-5
# ::node	v	vegetable	5-6
# ::node	w	wood	7-8
# ::node	b	box	8-9
# ::node	c	cat	10-11
# ::node	l	look-01	11-12
# ::node	u	upwards	12-13
# ::node	r	resemble-01	13-14
# ::node	s	say-01	16-17
# ::node	a2	amr-unknown	19-20
# ::node	i	i	22-23
# ::node	s2	suppose-02	23-24
# ::node	d	do-02	25-26
# ::node	t	this	27-28
# ::root	r	resemble-01
# ::edge	view-01	location	above	v2	a	
# ::edge	and	op1	fruit	a3	f	
# ::edge	view-01	ARG1	and	v2	a3	
# ::edge	and	op2	vegetable	a3	v	
# ::edge	box	consist-of	wood	b	w	
# ::edge	and	location	box	a3	b	
# ::edge	look-01	ARG0	cat	l	c	
# ::edge	look-01	direction	upwards	l	u	
# ::edge	resemble-01	ARG1	look-01	r	l	
# ::edge	resemble-01	ARG2	view-01	r	v2	
# ::edge	look-01	manner	say-01	l	s	
# ::edge	say-01	ARG0	cat	s	c	
# ::edge	suppose-02	ARG1	i	s2	i	
# ::edge	say-01	ARG1	suppose-02	s	s2	
# ::edge	suppose-02	ARG2	do-02	s2	d	
# ::edge	do-02	ARG0	i	d	i	
# ::edge	do-02	ARG1	amr-unknown	d	a2	
# ::edge	do-02	ARG2	this	d	t	
(r / resemble-01
    :ARG1 (l / look-01
        :ARG0 (c / cat)
        :direction (u / upwards)
        :manner (s / say-01
            :ARG0 c
            :ARG1 (s2 / suppose-02
                :ARG1 (i / i)
                :ARG2 (d / do-02
                    :ARG0 i
                    :ARG1 (a2 / amr-unknown)
                    :ARG2 (t / this)))))
    :ARG2 (v2 / view-01
        :ARG1 (a3 / and
            :location (b / box
                :consist-of (w / wood))
            :op1 (f / fruit)
            :op2 (v / vegetable))
        :location (a / above)))
