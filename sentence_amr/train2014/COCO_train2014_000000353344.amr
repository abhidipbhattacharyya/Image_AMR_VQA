# ::tok Two trains are in a train yard .
# ::node	0	2	0-1
# ::node	t	train	1-2
# ::node	b	be-located-at-91	3-4
# ::node	t2	train	5-6
# ::node	y	yard	6-7
# ::root	b	be-located-at-91
# ::edge	train	quant	2	t	0	
# ::edge	be-located-at-91	ARG1	train	b	t	
# ::edge	yard	mod	train	y	t2	
# ::edge	be-located-at-91	ARG2	yard	b	y	
(b / be-located-at-91
    :ARG1 (t / train
        :quant 2)
    :ARG2 (y / yard
        :mod (t2 / train)))


# ::tok A dog and a man are in between the two trains .
# ::node	d	dog	1-2
# ::node	a	and	2-3
# ::node	m	man	4-5
# ::node	b	be-located-at-91	7-8
# ::node	b2	between	7-8
# ::node	0	2	9-10
# ::node	t	train	10-11
# ::root	b	be-located-at-91
# ::edge	and	op1	dog	a	d	
# ::edge	and	op2	man	a	m	
# ::edge	be-located-at-91	ARG1	and	b	a	
# ::edge	be-located-at-91	ARG2	between	b	b2	
# ::edge	train	quant	2	t	0	
# ::edge	between	op1	train	b2	t	
(b / be-located-at-91
    :ARG1 (a / and
        :op1 (d / dog)
        :op2 (m / man))
    :ARG2 (b2 / between
        :op1 (t / train
            :quant 2)))
