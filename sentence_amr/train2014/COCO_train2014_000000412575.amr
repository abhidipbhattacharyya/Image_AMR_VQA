# ::tok A long red and blue train coming around a corner on the tracks .
# ::node	l	long-03	1-2
# ::node	l2	long-03	1-2
# ::node	r	red-02	2-3
# ::node	a	and	3-4
# ::node	b	blue	4-5
# ::node	t2	train	5-6
# ::node	t3	train	5-6
# ::node	c	come-01	6-7
# ::node	a2	around	7-8
# ::node	c2	corner	9-10
# ::node	t	track	12-13
# ::root	c	come-01
# ::edge	and	op1	train	a	t2	
# ::edge	train	ARG1-of	red-02	t2	r	
# ::edge	train	ARG1-of	long-03	t2	l	
# ::edge	and	op2	train	a	t3	
# ::edge	train	ARG1-of	long-03	t3	l2	
# ::edge	come-01	ARG1	and	c	a	
# ::edge	come-01	direction	around	c	a2	
# ::edge	around	op1	corner	a2	c2	
# ::edge	around	location	track	a2	t	
# ::edge	come-01	rel	blue	c	b	
(c / come-01
    :ARG1 (a / and
        :op1 (t2 / train
            :ARG1-of (r / red-02)
            :ARG1-of (l / long-03))
        :op2 (t3 / train
            :ARG1-of (l2 / long-03)))
    :direction (a2 / around
        :location (t / track)
        :op1 (c2 / corner))
    :rel (b / blue))
