# ::tok Two plates of food a sandwich with French fries and sandwich with a salad .
# ::node	0	2	0-1
# ::node	p	plate	1-2
# ::node	f	food	3-4
# ::node	s2	sandwich	5-6
# ::node	c	country	7-8
# ::node	n	name	7-8
# ::node	1	France	7-8
# ::node	f2	fry-01	8-9
# ::node	a	and	9-10
# ::node	s3	sandwich	10-11
# ::node	s	salad	13-14
# ::root	a	and
# ::edge	plate	quant	2	p	0	
# ::edge	plate	consist-of	food	p	f	
# ::edge	country	name	name	c	n	
# ::edge	name	op1	France	n	1	
# ::edge	fry-01	mod	country	f2	c	
# ::edge	sandwich	accompanier	fry-01	s2	f2	
# ::edge	and	op1	sandwich	a	s2	
# ::edge	and	domain	plate	a	p	
# ::edge	and	op2	sandwich	a	s3	
# ::edge	sandwich	accompanier	salad	s3	s	
(a / and
    :domain (p / plate
        :quant 2
        :consist-of (f / food))
    :op1 (s2 / sandwich
        :accompanier (f2 / fry-01
            :mod (c / country
                :name (n / name
                    :op1 "France"))))
    :op2 (s3 / sandwich
        :accompanier (s / salad)))
