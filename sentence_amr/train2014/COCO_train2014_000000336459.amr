# ::tok A dog jumps up in the air to catch a Frisbee while another dog watches .
# ::node	d2	dog	1-2
# ::node	j	jump-03	2-3
# ::node	u	up	3-4
# ::node	a	air	6-7
# ::node	c	catch-01	8-9
# ::node	d	disc	10-11
# ::node	n	name	10-11
# ::node	0	Frisbee	10-11
# ::node	a2	another	12-13
# ::node	d3	dog	13-14
# ::node	w	watch-01	14-15
# ::root	j	jump-03
# ::edge	jump-03	ARG0	dog	j	d2	
# ::edge	jump-03	direction	up	j	u	
# ::edge	jump-03	destination	air	j	a	
# ::edge	jump-03	purpose	catch-01	j	c	
# ::edge	catch-01	ARG0	dog	c	d2	
# ::edge	catch-01	ARG1	disc	c	d	
# ::edge	disc	name	name	d	n	
# ::edge	name	op1	Frisbee	n	0	
# ::edge	dog	mod	another	d3	a2	
# ::edge	watch-01	ARG0	dog	w	d3	
# ::edge	jump-03	time	watch-01	j	w	
(j / jump-03
    :purpose (c / catch-01
        :ARG0 (d2 / dog)
        :ARG1 (d / disc
            :name (n / name
                :op1 "Frisbee")))
    :ARG0 d2
    :destination (a / air)
    :direction (u / up)
    :time (w / watch-01
        :ARG0 (d3 / dog
            :mod (a2 / another))))
