# ::tok Red double - decker buses and black taxis on a crowded street in London .
# ::node	r	red-02	0-1
# ::node	d	double-decker	3-4
# ::node	b2	bus	4-5
# ::node	a	and	5-6
# ::node	b	black-04	6-7
# ::node	t	taxi	7-8
# ::node	c2	crowd-01	10-11
# ::node	s	street	11-12
# ::node	c	city	13-14
# ::node	n	name	13-14
# ::node	0	London	13-14
# ::root	a	and
# ::edge	bus	mod	double-decker	b2	d	
# ::edge	bus	ARG1-of	red-02	b2	r	
# ::edge	and	op1	bus	a	b2	
# ::edge	taxi	ARG1-of	black-04	t	b	
# ::edge	and	op2	taxi	a	t	
# ::edge	street	ARG1-of	crowd-01	s	c2	
# ::edge	and	location	street	a	s	
# ::edge	street	location	city	s	c	
# ::edge	city	name	name	c	n	
# ::edge	name	op1	London	n	0	
(a / and
    :location (s / street
        :ARG1-of (c2 / crowd-01)
        :location (c / city
            :name (n / name
                :op1 "London")))
    :op1 (b2 / bus
        :ARG1-of (r / red-02)
        :mod (d / double-decker))
    :op2 (t / taxi
        :ARG1-of (b / black-04)))
