# ::tok A green train driving down train tracks next to a wooden fence .
# ::node	g	green-02	1-2
# ::node	t2	train	2-3
# ::node	d2	drive-01	3-4
# ::node	d	down	4-5
# ::node	t3	train	5-6
# ::node	t	track	6-7
# ::node	n	next-to	7-8
# ::node	w	wood	10-11
# ::node	f	fence	11-12
# ::root	d2	drive-01
# ::edge	train	ARG1-of	green-02	t2	g	
# ::edge	drive-01	ARG0	train	d2	t2	
# ::edge	drive-01	direction	down	d2	d	
# ::edge	track	mod	train	t	t3	
# ::edge	drive-01	path	track	d2	t	
# ::edge	drive-01	location	next-to	d2	n	
# ::edge	fence	consist-of	wood	f	w	
# ::edge	next-to	op1	fence	n	f	
(d2 / drive-01
    :ARG0 (t2 / train
        :ARG1-of (g / green-02))
    :direction (d / down)
    :location (n / next-to
        :op1 (f / fence
            :consist-of (w / wood)))
    :path (t / track
        :mod (t3 / train)))
