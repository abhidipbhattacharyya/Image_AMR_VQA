# ::tok An intersection shows a building on one side and two doubledecker buses and a third vehicle , pulling up to a crosswalk , before a side road .
# ::node	i	intersect-01	1-2
# ::node	s	show-01	2-3
# ::node	b2	building	4-5
# ::node	0	1	6-7
# ::node	s2	side	7-8
# ::node	1	2	9-10
# ::node	d	double-01	10-11
# ::node	b3	bus	11-12
# ::node	a	and	12-13
# ::node	o	ordinal-entity	14-15
# ::node	2	3	14-15
# ::node	v	vehicle	15-16
# ::node	p	pull-01	17-18
# ::node	w	walk-01	21-22
# ::node	b	before	23-24
# ::node	s3	side	25-26
# ::node	r	road	26-27
# ::root	s	show-01
# ::edge	show-01	ARG0	intersect-01	s	i	
# ::edge	side	quant	1	s2	0	
# ::edge	building	location	side	b2	s2	
# ::edge	bus	ARG1-of	double-01	b3	d	
# ::edge	bus	quant	2	b3	1	
# ::edge	and	op2	bus	a	b3	
# ::edge	and	op1	building	a	b2	
# ::edge	show-01	ARG1	and	s	a	
# ::edge	ordinal-entity	value	3	o	2	
# ::edge	vehicle	ord	ordinal-entity	v	o	
# ::edge	and	op3	vehicle	a	v	
# ::edge	and	ARG1-of	pull-01	a	p	
# ::edge	pull-01	ARG2	walk-01	p	w	
# ::edge	pull-01	location	before	p	b	
# ::edge	road	mod	side	r	s3	
# ::edge	before	op1	road	b	r	
(s / show-01
    :ARG0 (i / intersect-01)
    :ARG1 (a / and
        :ARG1-of (p / pull-01
            :ARG2 (w / walk-01)
            :location (b / before
                :op1 (r / road
                    :mod (s3 / side))))
        :op1 (b2 / building
            :location (s2 / side
                :quant 1))
        :op2 (b3 / bus
            :quant 2
            :ARG1-of (d / double-01))
        :op3 (v / vehicle
            :ord (o / ordinal-entity
                :value 3))))
