# ::tok A black bear is climbing a log and want to have fun .
# ::node	b2	black-04	1-2
# ::node	b	bear	2-3
# ::node	c	climb-01	4-5
# ::node	l	log	6-7
# ::node	a	and	7-8
# ::node	w	want-01	8-9
# ::node	f	fun-01	11-12
# ::root	a	and
# ::edge	bear	ARG1-of	black-04	b	b2	
# ::edge	climb-01	ARG0	bear	c	b	
# ::edge	climb-01	ARG1	log	c	l	
# ::edge	and	op1	climb-01	a	c	
# ::edge	and	op2	want-01	a	w	
# ::edge	want-01	ARG0	bear	w	b	
# ::edge	want-01	ARG1	fun-01	w	f	
# ::edge	fun-01	ARG0	bear	f	b	
(a / and
    :op1 (c / climb-01
        :ARG0 (b / bear
            :ARG1-of (b2 / black-04))
        :ARG1 (l / log))
    :op2 (w / want-01
        :ARG0 b
        :ARG1 (f / fun-01
            :ARG0 b)))
