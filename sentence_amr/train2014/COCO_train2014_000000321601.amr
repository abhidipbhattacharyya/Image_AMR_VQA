# ::tok two people one is riding a bicycle with a red jacket
# ::node	1	2	0-1
# ::node	p	person	1-2
# ::node	i	include-91	2-3
# ::node	0	1	2-3
# ::node	r2	ride-01	4-5
# ::node	b	bicycle	6-7
# ::node	r	red-02	9-10
# ::node	j	jacket	10-11
# ::root	r2	ride-01
# ::edge	person	quant	2	p	1	
# ::edge	person	ARG2-of	include-91	p	i	
# ::edge	person	quant	1	p	0	
# ::edge	ride-01	ARG0	person	r2	p	
# ::edge	ride-01	ARG1	bicycle	r2	b	
# ::edge	jacket	ARG1-of	red-02	j	r	
# ::edge	ride-01	accompanier	jacket	r2	j	
(r2 / ride-01
    :ARG0 (p / person
        :quant 2
        :quant 1
        :ARG2-of (i / include-91))
    :ARG1 (b / bicycle)
    :accompanier (j / jacket
        :ARG1-of (r / red-02)))
