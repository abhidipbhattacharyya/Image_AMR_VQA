# ::tok Two pieces of luggage sitting on the ground propped up against a pole .
# ::node	0	2	0-1
# ::node	p	piece	1-2
# ::node	l	luggage	3-4
# ::node	s	sit-01	4-5
# ::node	g	ground	7-8
# ::node	p3	prop-up-01	8-9
# ::node	a	against	10-11
# ::node	p2	pole	12-13
# ::root	s	sit-01
# ::edge	piece	quant	2	p	0	
# ::edge	piece	mod	luggage	p	l	
# ::edge	sit-01	ARG1	piece	s	p	
# ::edge	sit-01	ARG2	ground	s	g	
# ::edge	piece	ARG1-of	prop-up-01	p	p3	
# ::edge	prop-up-01	ARG2	against	p3	a	
# ::edge	against	op1	pole	a	p2	
(s / sit-01
    :ARG1 (p / piece
        :quant 2
        :ARG1-of (p3 / prop-up-01
            :ARG2 (a / against
                :op1 (p2 / pole)))
        :mod (l / luggage))
    :ARG2 (g / ground))
