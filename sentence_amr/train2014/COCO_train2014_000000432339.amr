# ::tok A lunch counter that serves pizza and drinks .
# ::node	l	lunch-01	1-2
# ::node	c	counter	2-3
# ::node	s	serve-02	4-5
# ::node	p	pizza	5-6
# ::node	a	and	6-7
# ::node	d	drink-01	7-8
# ::root	c	counter
# ::edge	counter	purpose	lunch-01	c	l	
# ::edge	counter	ARG0-of	serve-02	c	s	
# ::edge	and	op1	pizza	a	p	
# ::edge	serve-02	ARG1	and	s	a	
# ::edge	and	op2	drink-01	a	d	
(c / counter
    :purpose (l / lunch-01)
    :ARG0-of (s / serve-02
        :ARG1 (a / and
            :op1 (p / pizza)
            :op2 (d / drink-01))))
