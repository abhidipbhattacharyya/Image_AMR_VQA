# ::tok That pizza does not look for me cooked or delicious .
# ::node	t	that	0-1
# ::node	p	pizza	1-2
# ::node	0	-	3-4
# ::node	l	look-02	4-5
# ::node	i	i	6-7
# ::node	c	cook-01	7-8
# ::node	o	or	8-9
# ::node	d	delicious	9-10
# ::root	l	look-02
# ::edge	pizza	mod	that	p	t	
# ::edge	look-02	ARG0	pizza	l	p	
# ::edge	cook-01	ARG1	i	c	i	
# ::edge	or	op1	cook-01	o	c	
# ::edge	look-02	ARG1	or	l	o	
# ::edge	or	polarity	-	o	0	
# ::edge	or	op2	delicious	o	d	
# ::edge	delicious	domain	pizza	d	p	
(l / look-02
    :ARG0 (p / pizza
        :mod (t / that))
    :ARG1 (o / or
        :op1 (c / cook-01
            :ARG1 (i / i))
        :op2 (d / delicious
            :domain p)
        :polarity -))
