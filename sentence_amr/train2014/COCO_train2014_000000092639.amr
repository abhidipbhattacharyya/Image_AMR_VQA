# ::tok Man in a black suit and hat looking happy while checking his cell phone .
# ::node	m	man	0-1
# ::node	b	black-04	3-4
# ::node	s	suit	4-5
# ::node	a	and	5-6
# ::node	h2	hat	6-7
# ::node	l	look-02	7-8
# ::node	h	happy-01	8-9
# ::node	c2	check-01	10-11
# ::node	c	cell	12-13
# ::node	p	phone	13-14
# ::root	l	look-02
# ::edge	suit	ARG1-of	black-04	s	b	
# ::edge	and	op1	suit	a	s	
# ::edge	man	domain	and	m	a	
# ::edge	and	op2	hat	a	h2	
# ::edge	look-02	ARG0	man	l	m	
# ::edge	look-02	ARG1	happy-01	l	h	
# ::edge	happy-01	ARG1	man	h	m	
# ::edge	look-02	time	check-01	l	c2	
# ::edge	check-01	ARG0	man	c2	m	
# ::edge	phone	mod	cell	p	c	
# ::edge	check-01	ARG1	phone	c2	p	
# ::edge	phone	poss	man	p	m	
(l / look-02
    :ARG0 (m / man
        :domain (a / and
            :op1 (s / suit
                :ARG1-of (b / black-04))
            :op2 (h2 / hat)))
    :ARG1 (h / happy-01
        :ARG1 m)
    :time (c2 / check-01
        :ARG0 m
        :ARG1 (p / phone
            :mod (c / cell)
            :poss m)))
