# ::tok A room with several boxes , containers and loose objects .
# ::node	r	room	1-2
# ::node	h	have-03	2-3
# ::node	s	several	3-4
# ::node	b	box	4-5
# ::node	c	container	6-7
# ::node	a	and	7-8
# ::node	l	loose-04	8-9
# ::node	o	object	9-10
# ::root	r	room
# ::edge	room	ARG0-of	have-03	r	h	
# ::edge	box	quant	several	b	s	
# ::edge	container	quant	several	c	s	
# ::edge	and	op2	container	a	c	
# ::edge	and	op1	box	a	b	
# ::edge	have-03	ARG1	and	h	a	
# ::edge	object	ARG1-of	loose-04	o	l	
# ::edge	and	op3	object	a	o	
(r / room
    :ARG0-of (h / have-03
        :ARG1 (a / and
            :op1 (b / box
                :quant (s / several))
            :op2 (c / container
                :quant s)
            :op3 (o / object
                :ARG1-of (l / loose-04)))))
