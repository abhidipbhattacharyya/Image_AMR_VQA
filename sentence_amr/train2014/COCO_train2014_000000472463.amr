# ::tok The man uses a camera to take his picture in the reflection .
# ::node	m	man	1-2
# ::node	u	use-01	2-3
# ::node	c	camera	4-5
# ::node	t	take-01	6-7
# ::node	p	picture	8-9
# ::node	r	reflect-01	11-12
# ::root	u	use-01
# ::edge	use-01	ARG0	man	u	m	
# ::edge	use-01	ARG1	camera	u	c	
# ::edge	take-01	ARG0	camera	t	c	
# ::edge	use-01	ARG2	take-01	u	t	
# ::edge	take-01	ARG1	picture	t	p	
# ::edge	picture	poss	man	p	m	
# ::edge	picture	ARG1-of	reflect-01	p	r	
(u / use-01
    :ARG0 (m / man)
    :ARG1 (c / camera)
    :ARG2 (t / take-01
        :ARG0 c
        :ARG1 (p / picture
            :ARG1-of (r / reflect-01)
            :poss m)))
