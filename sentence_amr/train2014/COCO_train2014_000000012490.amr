# ::tok Two plates of food and a bowl of soup at a Panera Bread restaurant .
# ::node	0	2	0-1
# ::node	p	plate	1-2
# ::node	f	food	3-4
# ::node	a	and	4-5
# ::node	b	bowl	6-7
# ::node	s	soup	8-9
# ::node	n	name	11-12
# ::node	2	Panera	11-12
# ::node	1	Bread	12-13
# ::node	r	restaurant	13-14
# ::root	a	and
# ::edge	plate	quant	2	p	0	
# ::edge	plate	consist-of	food	p	f	
# ::edge	and	op1	plate	a	p	
# ::edge	soup	quant	bowl	s	b	
# ::edge	and	op2	soup	a	s	
# ::edge	name	op1	Panera	n	2	
# ::edge	name	op2	Bread	n	1	
# ::edge	restaurant	name	name	r	n	
# ::edge	and	location	restaurant	a	r	
(a / and
    :location (r / restaurant
        :name (n / name
            :op1 "Panera"
            :op2 "Bread"))
    :op1 (p / plate
        :quant 2
        :consist-of (f / food))
    :op2 (s / soup
        :quant (b / bowl)))
