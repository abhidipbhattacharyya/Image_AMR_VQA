# ::tok A sheep looking through a barbed wire fence to taller green grass
# ::node	s	sheep	1-2
# ::node	l	look-01	2-3
# ::node	t2	through	3-4
# ::node	b	barb-01	5-6
# ::node	w	wire	6-7
# ::node	f	fence	7-8
# ::node	h	have-degree-91	9-10
# ::node	t	tall	9-10
# ::node	m	more	9-10
# ::node	g2	green-02	10-11
# ::node	g	grass	11-12
# ::root	l	look-01
# ::edge	look-01	ARG0	sheep	l	s	
# ::edge	look-01	path	through	l	t2	
# ::edge	wire	ARG1-of	barb-01	w	b	
# ::edge	fence	consist-of	wire	f	w	
# ::edge	through	op1	fence	t2	f	
# ::edge	have-degree-91	ARG2	tall	h	t	
# ::edge	have-degree-91	ARG3	more	h	m	
# ::edge	grass	ARG1-of	green-02	g	g2	
# ::edge	grass	ARG1-of	have-degree-91	g	h	
# ::edge	look-01	ARG1	grass	l	g	
(l / look-01
    :ARG0 (s / sheep)
    :ARG1 (g / grass
        :ARG1-of (g2 / green-02)
        :ARG1-of (h / have-degree-91
            :ARG2 (t / tall)
            :ARG3 (m / more)))
    :path (t2 / through
        :op1 (f / fence
            :consist-of (w / wire
                :ARG1-of (b / barb-01)))))
