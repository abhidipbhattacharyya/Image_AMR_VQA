# ::tok A yellow and blue train on a track with a fence next to it .
# ::node	y	yellow-02	1-2
# ::node	a	and	2-3
# ::node	b	blue	3-4
# ::node	t2	train	4-5
# ::node	t3	train	4-5
# ::node	t	track	7-8
# ::node	h	have-03	8-9
# ::node	f	fence	10-11
# ::node	n	next-to	11-12
# ::root	a	and
# ::edge	and	op1	train	a	t2	
# ::edge	train	ARG1-of	yellow-02	t2	y	
# ::edge	train	mod	blue	t3	b	
# ::edge	and	op2	train	a	t3	
# ::edge	and	location	track	a	t	
# ::edge	track	ARG0-of	have-03	t	h	
# ::edge	have-03	ARG1	fence	h	f	
# ::edge	fence	location	next-to	f	n	
# ::edge	next-to	op1	track	n	t	
(a / and
    :location (t / track
        :ARG0-of (h / have-03
            :ARG1 (f / fence
                :location (n / next-to
                    :op1 t))))
    :op1 (t2 / train
        :ARG1-of (y / yellow-02))
    :op2 (t3 / train
        :mod (b / blue)))
