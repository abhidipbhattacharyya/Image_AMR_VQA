# ::tok The cat looks up from its position on top of the open suitcase .
# ::node	c	cat	1-2
# ::node	l	look-01	2-3
# ::node	u	up	3-4
# ::node	p	position-01	6-7
# ::node	t	top	8-9
# ::node	o	open-01	11-12
# ::node	s	suitcase	12-13
# ::root	l	look-01
# ::edge	look-01	ARG0	cat	l	c	
# ::edge	look-01	direction	up	l	u	
# ::edge	look-01	source	position-01	l	p	
# ::edge	position-01	ARG1	cat	p	c	
# ::edge	position-01	ARG2	top	p	t	
# ::edge	suitcase	ARG1-of	open-01	s	o	
# ::edge	top	part-of	suitcase	t	s	
(l / look-01
    :ARG0 (c / cat)
    :direction (u / up)
    :source (p / position-01
        :ARG1 c
        :ARG2 (t / top
            :part-of (s / suitcase
                :ARG1-of (o / open-01)))))
