# ::tok Two styrofoam carryout containers , one with a steak sub with jalapeno peppers , and the other with two hot dogs .
# ::node	1	2	0-1
# ::node	s2	styrofoam	1-2
# ::node	c	carry-01	2-3
# ::node	c2	carry-out-03	2-3
# ::node	c3	container	3-4
# ::node	c4	container	3-4
# ::node	i	include-91	5-6
# ::node	0	1	5-6
# ::node	s	steak	8-9
# ::node	s3	sub	9-10
# ::node	h	have-03	10-11
# ::node	h2	have-03	10-11
# ::node	j	jalapeno	11-12
# ::node	p	pepper-spray	12-13
# ::node	a	and	14-15
# ::node	o	other	16-17
# ::node	2	2	18-19
# ::node	h3	hot-dog	19-20
# ::root	a	and
# ::edge	container	mod	carry-01	c3	c	
# ::edge	container	consist-of	styrofoam	c3	s2	
# ::edge	container	quant	2	c3	1	
# ::edge	container	mod	carry-out-03	c4	c2	
# ::edge	container	ARG2-of	include-91	c3	i	
# ::edge	container	quant	1	c3	0	
# ::edge	sub	mod	steak	s3	s	
# ::edge	have-03	ARG1	sub	h	s3	
# ::edge	container	ARG0-of	have-03	c3	h	
# ::edge	sub	ARG0-of	have-03	s3	h2	
# ::edge	pepper-spray	mod	jalapeno	p	j	
# ::edge	have-03	ARG1	pepper-spray	h2	p	
# ::edge	and	op2	container	a	c4	
# ::edge	and	op1	container	a	c3	
# ::edge	container	mod	other	c4	o	
# ::edge	hot-dog	quant	2	h3	2	
# ::edge	have-03	ARG1	hot-dog	h2	h3	
(a / and
    :op1 (c3 / container
        :quant 2
        :quant 1
        :ARG0-of (h / have-03
            :ARG1 (s3 / sub
                :ARG0-of (h2 / have-03
                    :ARG1 (p / pepper-spray
                        :mod (j / jalapeno))
                    :ARG1 (h3 / hot-dog
                        :quant 2))
                :mod (s / steak)))
        :ARG2-of (i / include-91)
        :consist-of (s2 / styrofoam)
        :mod (c / carry-01))
    :op2 (c4 / container
        :mod (c2 / carry-out-03)
        :mod (o / other)))
