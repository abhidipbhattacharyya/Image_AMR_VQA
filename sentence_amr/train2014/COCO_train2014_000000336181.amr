# ::tok some bicycles a scooter a person some trees and buildings
# ::node	s2	some	0-1
# ::node	b	bicycle	1-2
# ::node	s	scooter	3-4
# ::node	p	person	5-6
# ::node	s3	some	6-7
# ::node	t	tree	7-8
# ::node	a	and	8-9
# ::node	b2	building	9-10
# ::root	a	and
# ::edge	bicycle	quant	some	b	s2	
# ::edge	tree	quant	some	t	s3	
# ::edge	and	op3	tree	a	t	
# ::edge	and	op2	scooter	a	s	
# ::edge	and	op1	bicycle	a	b	
# ::edge	and	op4	building	a	b2	
# ::edge	building	quant	some	b2	s3	
# ::edge	and	rel	person	a	p	
(a / and
    :op1 (b / bicycle
        :quant (s2 / some))
    :op2 (s / scooter)
    :op3 (t / tree
        :quant (s3 / some))
    :op4 (b2 / building
        :quant s3)
    :rel (p / person))
