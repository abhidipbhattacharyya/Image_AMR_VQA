# ::tok A red stoplight and a red car with everything else in the picture in black and white .
# ::node	r	red-02	1-2
# ::node	s	stop-01	2-3
# ::node	a	and	3-4
# ::node	r2	red-02	5-6
# ::node	c	car	6-7
# ::node	h	have-03	7-8
# ::node	e2	everything	8-9
# ::node	e	else	9-10
# ::node	p	picture	12-13
# ::node	b	black-and-white	14-15
# ::root	a	and
# ::edge	stop-01	ARG1-of	red-02	s	r	
# ::edge	and	op1	stop-01	a	s	
# ::edge	car	ARG1-of	red-02	c	r2	
# ::edge	and	op2	car	a	c	
# ::edge	car	ARG0-of	have-03	c	h	
# ::edge	have-03	ARG1	everything	h	e2	
# ::edge	everything	mod	else	e2	e	
# ::edge	everything	location	picture	e2	p	
# ::edge	everything	manner	black-and-white	e2	b	
(a / and
    :op1 (s / stop-01
        :ARG1-of (r / red-02))
    :op2 (c / car
        :ARG0-of (h / have-03
            :ARG1 (e2 / everything
                :location (p / picture)
                :manner (b / black-and-white)
                :mod (e / else)))
        :ARG1-of (r2 / red-02)))
