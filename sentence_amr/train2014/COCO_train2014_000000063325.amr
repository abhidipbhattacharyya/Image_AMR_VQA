# ::tok Man standing in front of counter looking out window
# ::node	m	man	0-1
# ::node	s	stand-01	1-2
# ::node	i	in-front-of	3-4
# ::node	c	counter	5-6
# ::node	l	look-01	6-7
# ::node	w	window	8-9
# ::root	s	stand-01
# ::edge	stand-01	ARG1	man	s	m	
# ::edge	stand-01	ARG2	in-front-of	s	i	
# ::edge	in-front-of	op1	counter	i	c	
# ::edge	man	ARG0-of	look-01	m	l	
# ::edge	look-01	ARG1	window	l	w	
(s / stand-01
    :ARG1 (m / man
        :ARG0-of (l / look-01
            :ARG1 (w / window)))
    :ARG2 (i / in-front-of
        :op1 (c / counter)))
