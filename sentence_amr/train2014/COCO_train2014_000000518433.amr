# ::tok Two train cars are beneath some trees on the top of an incline .
# ::node	0	2	0-1
# ::node	t2	train	1-2
# ::node	c	car	2-3
# ::node	b	be-located-at-91	4-5
# ::node	b2	beneath	4-5
# ::node	s	some	5-6
# ::node	t3	tree	6-7
# ::node	t	top	9-10
# ::node	i	incline	12-13
# ::root	b	be-located-at-91
# ::edge	car	mod	train	c	t2	
# ::edge	car	quant	2	c	0	
# ::edge	be-located-at-91	ARG1	car	b	c	
# ::edge	be-located-at-91	ARG2	beneath	b	b2	
# ::edge	tree	mod	some	t3	s	
# ::edge	beneath	op1	tree	b2	t3	
# ::edge	beneath	location	top	b2	t	
# ::edge	top	part-of	incline	t	i	
(b / be-located-at-91
    :ARG1 (c / car
        :quant 2
        :mod (t2 / train))
    :ARG2 (b2 / beneath
        :location (t / top
            :part-of (i / incline))
        :op1 (t3 / tree
            :mod (s / some))))
