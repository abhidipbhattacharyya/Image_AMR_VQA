# ::tok Lots of silver and black remotes sit stacked on top of each other .
# ::node	l	lot	0-1
# ::node	s	silver	2-3
# ::node	a	and	3-4
# ::node	b	black-04	4-5
# ::node	r	remote	5-6
# ::node	r2	remote	5-6
# ::node	s2	stack-01	7-8
# ::node	t	top	9-10
# ::node	e	each	11-12
# ::node	o	other	12-13
# ::root	s2	stack-01
# ::edge	and	quant	lot	a	l	
# ::edge	and	op1	remote	a	r	
# ::edge	remote	mod	silver	r	s	
# ::edge	remote	ARG1-of	black-04	r2	b	
# ::edge	and	op2	remote	a	r2	
# ::edge	stack-01	ARG1	and	s2	a	
# ::edge	stack-01	ARG2	top	s2	t	
# ::edge	other	mod	each	o	e	
# ::edge	top	op1	other	t	o	
(s2 / stack-01
    :ARG1 (a / and
        :quant (l / lot)
        :op1 (r / remote
            :mod (s / silver))
        :op2 (r2 / remote
            :ARG1-of (b / black-04)))
    :ARG2 (t / top
        :op1 (o / other
            :mod (e / each))))
